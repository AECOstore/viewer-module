{"version":3,"file":"index.js","mappings":"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","sources":["webpack://pr_viewer/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://pr_viewer/./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","webpack://pr_viewer/./node_modules/hoist-non-react-statics/node_modules/react-is/index.js","webpack://pr_viewer/./node_modules/object-assign/index.js","webpack://pr_viewer/./node_modules/prop-types/factoryWithThrowingShims.js","webpack://pr_viewer/./node_modules/prop-types/index.js","webpack://pr_viewer/./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://pr_viewer/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://pr_viewer/./node_modules/react/jsx-runtime.js","webpack://pr_viewer/./node_modules/systemjs-webpack-interop/auto-public-path/auto-public-path.js","webpack://pr_viewer/./node_modules/systemjs-webpack-interop/public-path.js","webpack://pr_viewer/external system \"react\"","webpack://pr_viewer/webpack/bootstrap","webpack://pr_viewer/webpack/runtime/__system_context__","webpack://pr_viewer/webpack/runtime/compat get default export","webpack://pr_viewer/webpack/runtime/define property getters","webpack://pr_viewer/webpack/runtime/hasOwnProperty shorthand","webpack://pr_viewer/webpack/runtime/make namespace object","webpack://pr_viewer/webpack/runtime/publicPath","webpack://pr_viewer/./node_modules/systemjs-webpack-interop/auto-public-path/1.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/utils/Map.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/stats.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/utils.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/core.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/utils/Queue.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/math/math.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/Component.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/canvas/Spinner.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webglInfo.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/canvas/Canvas.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/math/rtcCoords.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/FrameContext.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/libs/canvas2image.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/RenderBuffer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/PickResult.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/Shader.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/Sampler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/Attribute.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/Program.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/ArrayBuf.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/occlusion/OcclusionLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/occlusion/OcclusionTester.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/sao/SAOOcclusionRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/sao/SAODepthLimitedBlurRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/Renderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/input/Input.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/RenderState.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/viewport/Viewport.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/camera/Perspective.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/camera/Ortho.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/camera/Frustum.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/camera/CustomProjection.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/camera/Camera.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/lights/Light.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/lights/DirLight.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/lights/AmbientLight.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/geometry/Geometry.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/math/buildEdgeIndices.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/math/geometryCompressionUtils.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/geometry/ReadableGeometry.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/Material.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/PhongMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/EmphasisMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/EdgeMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/metriqs/Metriqs.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/postfx/SAO.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/PointsMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/LinesMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/scene/Scene.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/geometry/builders/buildBoxGeometry.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/camera/CameraFlightAnimation.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/controllers/PanController.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/controllers/PivotController.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/controllers/PickController.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/MousePanRotateDollyHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/KeyboardAxisViewHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/MousePickHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/KeyboardPanRotateDollyHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/CameraUpdater.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/MouseMiscHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/TouchPanRotateAndDollyHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/lib/handlers/TouchPickHandler.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/CameraControl/CameraControl.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/metadata/MetaModel.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/metadata/MetaObject.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/metadata/MetaScene.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/Viewer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/PerformanceMesh.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/ENTITY_FLAGS.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/PerformanceNode.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/ScratchMemory.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/RENDER_PASSES.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingSilhouetteRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingEdgesRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingEdgesColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingPickMeshRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingPickDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingPickNormalsRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingOcclusionRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingNormalsRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingShadowRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/renderers/TrianglesBatchingColorQualityRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/TrianglesBatchingRenderers.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/TrianglesBatchingBuffer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/compression.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesBatching/TrianglesBatchingLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingSilhouetteRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingEdgesRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingEdgesColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingPickMeshRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingPickDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingPickNormalsRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingOcclusionRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingNormalsRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingShadowRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/renderers/TrianglesInstancingColorQualityRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/TrianglesInstancingRenderers.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/trianglesInstancing/TrianglesInstancingLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesBatching/renderers/LinesBatchingColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesBatching/renderers/LinesBatchingSilhouetteRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesBatching/LinesBatchingRenderers.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesBatching/LinesBatchingBuffer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesBatching/LinesBatchingLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesInstancing/renderers/LinesInstancingColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesInstancing/renderers/LinesInstancingSilhouetteRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesInstancing/LinesInstancingRenderers.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/linesInstancing/LinesInstancingLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/renderers/PointsBatchingColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/renderers/PointsBatchingSilhouetteRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/renderers/PointsBatchingPickMeshRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/renderers/PointsBatchingPickDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/renderers/PointsBatchingOcclusionRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/PointsBatchingRenderers.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/PointsBatchingBuffer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsBatching/PointsBatchingLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingColorRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingSilhouetteRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingPickMeshRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingPickDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingOcclusionRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingDepthRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/renderers/PointsInstancingShadowRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/PointsInstancingRenderers.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/lib/layers/pointsInstancing/PointsInstancingLayer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/RenderFlags.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/PerformanceModel/PerformanceModel.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/nodes/Node.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/Plugin.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/draw/DrawShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/draw/DrawRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/emphasis/EmphasisFillShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/emphasis/EmphasisFillRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/emphasis/EmphasisEdgesShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/emphasis/EmphasisEdgesRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/pick/PickMeshShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/pick/PickMeshRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/pick/PickTriangleShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/pick/PickTriangleRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/occlusion/OcclusionShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/occlusion/OcclusionRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/shadow/ShadowShaderSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/shadow/ShadowRenderer.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/mesh/Mesh.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/geometry/VBOGeometry.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/MetallicMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/SpecularMaterial.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/webglEnums.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/webgl/Texture2D.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/materials/Texture.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/GLTFLoaderPlugin/GLTFSceneGraphLoader.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/GLTFLoaderPlugin/GLTFPerformanceModelLoader.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/metadata/IFCObjectDefaults.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/GLTFLoaderPlugin/GLTFDefaultDataSource.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/GLTFLoaderPlugin/GLTFLoaderPlugin.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/viewer/scene/geometry/builders/buildCylinderGeometry.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/NavCubePlugin/CubeTextureCanvas.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/NavCubePlugin/NavCubePlugin.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/SectionPlanesPlugin/Control.js","webpack://pr_viewer/./node_modules/@xeokit/xeokit-sdk/src/plugins/SectionPlanesPlugin/SectionPlanesPlugin.js","webpack://pr_viewer/./src/components/Viewer.js","webpack://pr_viewer/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://pr_viewer/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://pr_viewer/./node_modules/clsx/dist/clsx.m.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/resolveProps.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/composeClasses/composeClasses.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/formatMuiErrorMessage.js","webpack://pr_viewer/./node_modules/@mui/system/esm/colorManipulator.js","webpack://pr_viewer/./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","webpack://pr_viewer/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://pr_viewer/./node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js","webpack://pr_viewer/./node_modules/stylis/src/Utility.js","webpack://pr_viewer/./node_modules/stylis/src/Tokenizer.js","webpack://pr_viewer/./node_modules/stylis/src/Enum.js","webpack://pr_viewer/./node_modules/stylis/src/Serializer.js","webpack://pr_viewer/./node_modules/stylis/src/Parser.js","webpack://pr_viewer/./node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js","webpack://pr_viewer/./node_modules/stylis/src/Middleware.js","webpack://pr_viewer/./node_modules/@emotion/hash/dist/emotion-hash.esm.js","webpack://pr_viewer/./node_modules/@emotion/unitless/dist/emotion-unitless.esm.js","webpack://pr_viewer/./node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","webpack://pr_viewer/./node_modules/@emotion/use-insertion-effect-with-fallbacks/dist/emotion-use-insertion-effect-with-fallbacks.browser.esm.js","webpack://pr_viewer/./node_modules/@emotion/react/dist/emotion-element-6a883da9.browser.esm.js","webpack://pr_viewer/./node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","webpack://pr_viewer/./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js","webpack://pr_viewer/./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js","webpack://pr_viewer/./node_modules/@mui/styled-engine/index.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/deepmerge.js","webpack://pr_viewer/./node_modules/@mui/system/esm/createTheme/createBreakpoints.js","webpack://pr_viewer/./node_modules/@mui/system/esm/createTheme/shape.js","webpack://pr_viewer/./node_modules/@mui/system/esm/breakpoints.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/capitalize.js","webpack://pr_viewer/./node_modules/@mui/system/esm/style.js","webpack://pr_viewer/./node_modules/@mui/system/esm/merge.js","webpack://pr_viewer/./node_modules/@mui/system/esm/spacing.js","webpack://pr_viewer/./node_modules/@mui/system/esm/memoize.js","webpack://pr_viewer/./node_modules/@mui/system/esm/compose.js","webpack://pr_viewer/./node_modules/@mui/system/esm/borders.js","webpack://pr_viewer/./node_modules/@mui/system/esm/cssGrid.js","webpack://pr_viewer/./node_modules/@mui/system/esm/palette.js","webpack://pr_viewer/./node_modules/@mui/system/esm/sizing.js","webpack://pr_viewer/./node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js","webpack://pr_viewer/./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js","webpack://pr_viewer/./node_modules/@mui/system/esm/createTheme/createTheme.js","webpack://pr_viewer/./node_modules/@mui/system/esm/createTheme/createSpacing.js","webpack://pr_viewer/./node_modules/@mui/system/esm/propsToClassKey.js","webpack://pr_viewer/./node_modules/@mui/system/esm/createStyled.js","webpack://pr_viewer/./node_modules/@mui/material/styles/createMixins.js","webpack://pr_viewer/./node_modules/@mui/material/colors/common.js","webpack://pr_viewer/./node_modules/@mui/material/colors/grey.js","webpack://pr_viewer/./node_modules/@mui/material/colors/purple.js","webpack://pr_viewer/./node_modules/@mui/material/colors/red.js","webpack://pr_viewer/./node_modules/@mui/material/colors/orange.js","webpack://pr_viewer/./node_modules/@mui/material/colors/blue.js","webpack://pr_viewer/./node_modules/@mui/material/colors/lightBlue.js","webpack://pr_viewer/./node_modules/@mui/material/colors/green.js","webpack://pr_viewer/./node_modules/@mui/material/styles/createPalette.js","webpack://pr_viewer/./node_modules/@mui/material/styles/createTypography.js","webpack://pr_viewer/./node_modules/@mui/material/styles/shadows.js","webpack://pr_viewer/./node_modules/@mui/material/styles/createTransitions.js","webpack://pr_viewer/./node_modules/@mui/material/styles/zIndex.js","webpack://pr_viewer/./node_modules/@mui/material/styles/createTheme.js","webpack://pr_viewer/./node_modules/@mui/material/styles/defaultTheme.js","webpack://pr_viewer/./node_modules/@mui/material/styles/styled.js","webpack://pr_viewer/./node_modules/@mui/private-theming/useTheme/ThemeContext.js","webpack://pr_viewer/./node_modules/@mui/system/esm/useThemeWithoutDefault.js","webpack://pr_viewer/./node_modules/@mui/private-theming/useTheme/useTheme.js","webpack://pr_viewer/./node_modules/@mui/system/esm/useTheme.js","webpack://pr_viewer/./node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","webpack://pr_viewer/./node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","webpack://pr_viewer/./node_modules/@mui/material/styles/useThemeProps.js","webpack://pr_viewer/./node_modules/@mui/material/utils/useForkRef.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/useForkRef.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/setRef.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/useEnhancedEffect.js","webpack://pr_viewer/./node_modules/@mui/material/utils/useEventCallback.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/useEventCallback.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/useIsFocusVisible.js","webpack://pr_viewer/./node_modules/@mui/material/utils/useIsFocusVisible.js","webpack://pr_viewer/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://pr_viewer/./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack://pr_viewer/./node_modules/react-transition-group/esm/utils/ChildMapping.js","webpack://pr_viewer/./node_modules/react-transition-group/esm/TransitionGroup.js","webpack://pr_viewer/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://pr_viewer/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://pr_viewer/./node_modules/@emotion/react/dist/emotion-react.browser.esm.js","webpack://pr_viewer/./node_modules/@mui/material/ButtonBase/Ripple.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","webpack://pr_viewer/./node_modules/@mui/material/ButtonBase/touchRippleClasses.js","webpack://pr_viewer/./node_modules/@mui/material/ButtonBase/TouchRipple.js","webpack://pr_viewer/./node_modules/@mui/material/ButtonBase/buttonBaseClasses.js","webpack://pr_viewer/./node_modules/@mui/material/ButtonBase/ButtonBase.js","webpack://pr_viewer/./node_modules/@mui/material/utils/capitalize.js","webpack://pr_viewer/./node_modules/@mui/material/Button/buttonClasses.js","webpack://pr_viewer/./node_modules/@mui/material/ButtonGroup/ButtonGroupContext.js","webpack://pr_viewer/./node_modules/@mui/material/Button/Button.js","webpack://pr_viewer/./node_modules/@mui/material/FormGroup/formGroupClasses.js","webpack://pr_viewer/./node_modules/@mui/material/FormControl/FormControlContext.js","webpack://pr_viewer/./node_modules/@mui/material/FormControl/useFormControl.js","webpack://pr_viewer/./node_modules/@mui/material/FormControl/formControlState.js","webpack://pr_viewer/./node_modules/@mui/material/FormGroup/FormGroup.js","webpack://pr_viewer/./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","webpack://pr_viewer/./node_modules/@mui/material/Typography/typographyClasses.js","webpack://pr_viewer/./node_modules/@mui/material/Typography/Typography.js","webpack://pr_viewer/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://pr_viewer/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://pr_viewer/./node_modules/@mui/material/utils/useControlled.js","webpack://pr_viewer/./node_modules/@mui/utils/esm/useControlled.js","webpack://pr_viewer/./node_modules/@mui/material/internal/switchBaseClasses.js","webpack://pr_viewer/./node_modules/@mui/material/internal/SwitchBase.js","webpack://pr_viewer/./node_modules/@mui/material/SvgIcon/svgIconClasses.js","webpack://pr_viewer/./node_modules/@mui/material/SvgIcon/SvgIcon.js","webpack://pr_viewer/./node_modules/@mui/material/utils/createSvgIcon.js","webpack://pr_viewer/./node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://pr_viewer/./node_modules/@mui/material/internal/svg-icons/CheckBox.js","webpack://pr_viewer/./node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","webpack://pr_viewer/./node_modules/@mui/material/Checkbox/checkboxClasses.js","webpack://pr_viewer/./node_modules/@mui/material/Checkbox/Checkbox.js","webpack://pr_viewer/./src/components/index.js","webpack://pr_viewer/./src/App.tsx","webpack://pr_viewer/./src/index.tsx"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","const resolveDirectory = require(\"../public-path\").resolveDirectory;\n\nexports.autoPublicPath = function autoPublicPath(rootDirLevel) {\n  if (!rootDirLevel) {\n    rootDirLevel = 1;\n  }\n\n  if (typeof __webpack_public_path__ !== \"undefined\") {\n    if (typeof __system_context__ === \"undefined\") {\n      throw Error(\n        \"systemjs-webpack-interop requires webpack@>=5.0.0-beta.15 and output.libraryTarget set to 'system'\"\n      );\n    }\n\n    if (!__system_context__.meta || !__system_context__.meta.url) {\n      console.error(\"__system_context__\", __system_context__);\n      throw Error(\n        \"systemjs-webpack-interop was provided an unknown SystemJS context. Expected context.meta.url, but none was provided\"\n      );\n    }\n\n    __webpack_public_path__ = resolveDirectory(\n      __system_context__.meta.url,\n      rootDirLevel\n    );\n  }\n};\n","exports.setPublicPath = function setPublicPath(\n  systemjsModuleName,\n  rootDirectoryLevel\n) {\n  if (!rootDirectoryLevel) {\n    rootDirectoryLevel = 1;\n  }\n  if (\n    typeof systemjsModuleName !== \"string\" ||\n    systemjsModuleName.trim().length === 0\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName) must be called with a non-empty string 'systemjsModuleName'\"\n    );\n  }\n\n  if (\n    typeof rootDirectoryLevel !== \"number\" ||\n    rootDirectoryLevel <= 0 ||\n    isNaN(rootDirectoryLevel) ||\n    !isInteger(rootDirectoryLevel)\n  ) {\n    throw Error(\n      \"systemjs-webpack-interop: setPublicPath(systemjsModuleName, rootDirectoryLevel) must be called with a positive integer 'rootDirectoryLevel'\"\n    );\n  }\n\n  var moduleUrl;\n  try {\n    moduleUrl = window.System.resolve(systemjsModuleName);\n    if (!moduleUrl) {\n      throw Error();\n    }\n  } catch (err) {\n    throw Error(\n      \"systemjs-webpack-interop: There is no such module '\" +\n        systemjsModuleName +\n        \"' in the SystemJS registry. Did you misspell the name of your module?\"\n    );\n  }\n\n  __webpack_public_path__ = resolveDirectory(moduleUrl, rootDirectoryLevel);\n};\n\nfunction resolveDirectory(urlString, rootDirectoryLevel) {\n  // Our friend IE11 doesn't support new URL()\n  // https://github.com/single-spa/single-spa/issues/612\n  // https://gist.github.com/jlong/2428561\n\n  var a = document.createElement(\"a\");\n  a.href = urlString;\n\n  var pathname = a.pathname[0] === \"/\" ? a.pathname : \"/\" + a.pathname;\n  var numDirsProcessed = 0,\n    index = pathname.length;\n  while (numDirsProcessed !== rootDirectoryLevel && index >= 0) {\n    var char = pathname[--index];\n    if (char === \"/\") {\n      numDirsProcessed++;\n    }\n  }\n\n  if (numDirsProcessed !== rootDirectoryLevel) {\n    throw Error(\n      \"systemjs-webpack-interop: rootDirectoryLevel (\" +\n        rootDirectoryLevel +\n        \") is greater than the number of directories (\" +\n        numDirsProcessed +\n        \") in the URL path \" +\n        urlString\n    );\n  }\n\n  var finalPath = pathname.slice(0, index + 1);\n\n  return a.protocol + \"//\" + a.host + finalPath;\n}\n\nexports.resolveDirectory = resolveDirectory;\n\n// borrowed from https://github.com/parshap/js-is-integer/blob/master/index.js\nvar isInteger =\n  Number.isInteger ||\n  function isInteger(val) {\n    return typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n  };\n","module.exports = __WEBPACK_EXTERNAL_MODULE__954__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.y = __system_context__;","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"./\";","const autoPublicPath = require(\"./auto-public-path\").autoPublicPath;\n\nautoPublicPath(1);\n","/** @private */\nclass Map {\n\n    constructor(items, baseId) {\n        this.items = items || [];\n        this._lastUniqueId = (baseId || 0) + 1;\n    }\n\n    /**\n     * Usage:\n     *\n     * id = myMap.addItem(\"foo\") // ID internally generated\n     * id = myMap.addItem(\"foo\", \"bar\") // ID is \"foo\"\n     */\n    addItem() {\n        let item;\n        if (arguments.length === 2) {\n            const id = arguments[0];\n            item = arguments[1];\n            if (this.items[id]) { // Won't happen if given ID is string\n                throw \"ID clash: '\" + id + \"'\";\n            }\n            this.items[id] = item;\n            return id;\n\n        } else {\n            item = arguments[0] || {};\n            while (true) {\n                const findId = this._lastUniqueId++;\n                if (!this.items[findId]) {\n                    this.items[findId] = item;\n                    return findId;\n                }\n            }\n        }\n    }\n\n    removeItem(id) {\n        const item = this.items[id];\n        delete this.items[id];\n        return item;\n    }\n}\n\nexport {Map};\n","/**\n * xeokit runtime statistics.\n * @private\n * @type {{components: {models: number, objects: number, scenes: number, meshes: number}, memory: {indices: number, uvs: number, textures: number, materials: number, transforms: number, positions: number, programs: number, normals: number, meshes: number, colors: number}, build: {version: string}, client: {browser: string}, frame: {frameCount: number, useProgram: number, bindTexture: number, drawElements: number, bindArray: number, tasksRun: number, fps: number, drawArrays: number, tasksScheduled: number}}}\n */\nconst stats = {\n    build: {\n        version: \"0.8\"\n    },\n    client: {\n        browser: (navigator && navigator.userAgent) ? navigator.userAgent : \"n/a\"\n    },\n\n    components: {\n        scenes: 0,\n        models: 0,\n        meshes: 0,\n        objects: 0\n    },\n    memory: {\n        meshes: 0,\n        positions: 0,\n        colors: 0,\n        normals: 0,\n        uvs: 0,\n        indices: 0,\n        textures: 0,\n        transforms: 0,\n        materials: 0,\n        programs: 0\n    },\n    frame: {\n        frameCount: 0,\n        fps: 0,\n        useProgram: 0,\n        bindTexture: 0,\n        bindArray: 0,\n        drawElements: 0,\n        drawArrays: 0,\n        tasksRun: 0,\n        tasksScheduled: 0\n    }\n};\n\nexport {stats};","/**\n * @private\n */\nfunction xmlToJson(node, attributeRenamer) {\n    if (node.nodeType === node.TEXT_NODE) {\n        var v = node.nodeValue;\n        if (v.match(/^\\s+$/) === null) {\n            return v;\n        }\n    } else if (node.nodeType === node.ELEMENT_NODE ||\n        node.nodeType === node.DOCUMENT_NODE) {\n        var json = {type: node.nodeName, children: []};\n\n        if (node.nodeType === node.ELEMENT_NODE) {\n            for (var j = 0; j < node.attributes.length; j++) {\n                var attribute = node.attributes[j];\n                var nm = attributeRenamer[attribute.nodeName] || attribute.nodeName;\n                json[nm] = attribute.nodeValue;\n            }\n        }\n\n        for (var i = 0; i < node.childNodes.length; i++) {\n            var item = node.childNodes[i];\n            var j = xmlToJson(item, attributeRenamer);\n            if (j) json.children.push(j);\n        }\n\n        return json;\n    }\n}\n\n/**\n * @private\n */\nfunction clone(ob) {\n    return JSON.parse(JSON.stringify(ob));\n}\n\n/**\n * @private\n */\nvar guidChars = [[\"0\", 10], [\"A\", 26], [\"a\", 26], [\"_\", 1], [\"$\", 1]].map(function (a) {\n    var li = [];\n    var st = a[0].charCodeAt(0);\n    var en = st + a[1];\n    for (var i = st; i < en; ++i) {\n        li.push(i);\n    }\n    return String.fromCharCode.apply(null, li);\n}).join(\"\");\n\n/**\n * @private\n */\nfunction b64(v, len) {\n    var r = (!len || len === 4) ? [0, 6, 12, 18] : [0, 6];\n    return r.map(function (i) {\n        return guidChars.substr(parseInt(v / (1 << i)) % 64, 1)\n    }).reverse().join(\"\");\n}\n\n/**\n * @private\n */\nfunction compressGuid(g) {\n    var bs = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map(function (i) {\n        return parseInt(g.substr(i, 2), 16);\n    });\n    return b64(bs[0], 2) + [1, 4, 7, 10, 13].map(function (i) {\n        return b64((bs[i] << 16) + (bs[i + 1] << 8) + bs[i + 2]);\n    }).join(\"\");\n}\n\n/**\n * @private\n */\nfunction findNodeOfType(m, t) {\n    var li = [];\n    var _ = function (n) {\n        if (n.type === t) li.push(n);\n        (n.children || []).forEach(function (c) {\n            _(c);\n        });\n    };\n    _(m);\n    return li;\n}\n\n/**\n * @private\n */\nfunction timeout(dt) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(resolve, dt);\n    });\n}\n\n/**\n * @private\n */\nfunction httpRequest(args) {\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(args.method || \"GET\", args.url, true);\n        xhr.onload = function (e) {\n            console.log(args.url, xhr.readyState, xhr.status);\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    resolve(xhr.responseXML);\n                } else {\n                    reject(xhr.statusText);\n                }\n            }\n        };\n        xhr.send(null);\n    });\n}\n\n/**\n * @private\n */\nconst queryString = function () {\n    // This function is anonymous, is executed immediately and\n    // the return value is assigned to QueryString!\n    var query_string = {};\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n        var pair = vars[i].split(\"=\");\n        // If first entry with this name\n        if (typeof query_string[pair[0]] === \"undefined\") {\n            query_string[pair[0]] = decodeURIComponent(pair[1]);\n            // If second entry with this name\n        } else if (typeof query_string[pair[0]] === \"string\") {\n            var arr = [query_string[pair[0]], decodeURIComponent(pair[1])];\n            query_string[pair[0]] = arr;\n            // If third or later entry with this name\n        } else {\n            query_string[pair[0]].push(decodeURIComponent(pair[1]));\n        }\n    }\n    return query_string;\n}();\n\n/**\n * @private\n */\nfunction loadJSON(url, ok, err) {\n    // Avoid checking ok and err on each use.\n    var defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n\n    var request = new XMLHttpRequest();\n    request.overrideMimeType(\"application/json\");\n    request.open('GET', url, true);\n    request.addEventListener('load', function (event) {\n        var response = event.target.response;\n        if (this.status === 200) {\n            var json;\n            try {\n                json = JSON.parse(response);\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n            ok(json);\n        } else if (this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            console.warn('loadFile: HTTP Status 0 received.');\n            try {\n                ok(JSON.parse(response));\n            } catch (e) {\n                err(`utils.loadJSON(): Failed to parse JSON response - ${e}`);\n            }\n        } else {\n            err(event);\n        }\n    }, false);\n\n    request.addEventListener('error', function (event) {\n        err(event);\n    }, false);\n    request.send(null);\n}\n\n/**\n * @private\n */\nfunction loadArraybuffer(url, ok, err) {\n    // Check for data: URI\n    var defaultCallback = (_value) => undefined;\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n    const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const dataUriRegexResult = url.match(dataUriRegex);\n    if (dataUriRegexResult) { // Safari can't handle data URIs through XMLHttpRequest\n        const isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) {\n            data = window.atob(data);\n        }\n        try {\n            const buffer = new ArrayBuffer(data.length);\n            const view = new Uint8Array(buffer);\n            for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n            }\n            window.setTimeout(function () {\n                ok(buffer);\n            }, 0);\n        } catch (error) {\n            window.setTimeout(function () {\n                err(error);\n            }, 0);\n        }\n    } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    ok(request.response);\n                } else {\n                    err('loadArrayBuffer error : ' + request.response);\n                }\n            }\n        };\n        request.send(null);\n    }\n}\n\n/**\n Tests if the given object is an array\n @private\n */\nfunction isArray(value) {\n    return value && !(value.propertyIsEnumerable('length')) && typeof value === 'object' && typeof value.length === 'number';\n}\n\n/**\n Tests if the given value is a string\n @param value\n @returns {boolean}\n @private\n */\nfunction isString(value) {\n    return (typeof value === 'string' || value instanceof String);\n}\n\n/**\n Tests if the given value is a number\n @param value\n @returns {boolean}\n @private\n */\nfunction isNumeric(value) {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n/**\n Tests if the given value is an ID\n @param value\n @returns {boolean}\n @private\n */\nfunction isID(value) {\n    return utils.isString(value) || utils.isNumeric(value);\n}\n\n/**\n Tests if the given components are the same, where the components can be either IDs or instances.\n @param c1\n @param c2\n @returns {boolean}\n @private\n */\nfunction isSameComponent(c1, c2) {\n    if (!c1 || !c2) {\n        return false;\n    }\n    const id1 = (utils.isNumeric(c1) || utils.isString(c1)) ? `${c1}` : c1.id;\n    const id2 = (utils.isNumeric(c2) || utils.isString(c2)) ? `${c2}` : c2.id;\n    return id1 === id2;\n}\n\n/**\n Tests if the given value is a function\n @param value\n @returns {boolean}\n @private\n */\nfunction isFunction(value) {\n    return (typeof value === \"function\");\n}\n\n/**\n Tests if the given value is a JavaScript JSON object, eg, ````{ foo: \"bar\" }````.\n @param value\n @returns {boolean}\n @private\n */\nfunction isObject(value) {\n    const objectConstructor = {}.constructor;\n    return (!!value && value.constructor === objectConstructor);\n}\n\n/** Returns a shallow copy\n */\nfunction copy(o) {\n    return utils.apply(o, {});\n}\n\n/** Add properties of o to o2, overwriting them on o2 if already there\n */\nfunction apply(o, o2) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            o2[name] = o[name];\n        }\n    }\n    return o2;\n}\n\n/**\n Add non-null/defined properties of o to o2\n @private\n */\nfunction apply2(o, o2) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o[name] !== undefined && o[name] !== null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Add properties of o to o2 where undefined or null on o2\n @private\n */\nfunction applyIf(o, o2) {\n    for (const name in o) {\n        if (o.hasOwnProperty(name)) {\n            if (o2[name] === undefined || o2[name] === null) {\n                o2[name] = o[name];\n            }\n        }\n    }\n    return o2;\n}\n\n/**\n Returns true if the given map is empty.\n @param obj\n @returns {boolean}\n @private\n */\nfunction isEmptyObject(obj) {\n    for (const name in obj) {\n        if (obj.hasOwnProperty(name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n Returns the given ID as a string, in quotes if the ID was a string to begin with.\n\n This is useful for logging IDs.\n\n @param {Number| String} id The ID\n @returns {String}\n @private\n */\nfunction inQuotes(id) {\n    return utils.isNumeric(id) ? (`${id}`) : (`'${id}'`);\n}\n\n/**\n Returns the concatenation of two typed arrays.\n @param a\n @param b\n @returns {*|a}\n @private\n */\nfunction concat(a, b) {\n    const c = new a.constructor(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n}\n\nfunction flattenParentChildHierarchy(root) {\n    var list = [];\n\n    function visit(node) {\n        node.id = node.uuid;\n        delete node.oid;\n        list.push(node);\n        var children = node.children;\n\n        if (children) {\n            for (var i = 0, len = children.length; i < len; i++) {\n                const child = children[i];\n                child.parent = node.id;\n                visit(children[i]);\n            }\n        }\n        node.children = [];\n    }\n\n    visit(root);\n    return list;\n}\n\n/**\n * @private\n */\nconst utils = {\n    xmlToJson: xmlToJson,\n    clone: clone,\n    compressGuid: compressGuid,\n    findNodeOfType: findNodeOfType,\n    timeout: timeout,\n    httpRequest: httpRequest,\n    loadJSON: loadJSON,\n    loadArraybuffer: loadArraybuffer,\n    queryString: queryString,\n    isArray: isArray,\n    isString: isString,\n    isNumeric: isNumeric,\n    isID: isID,\n    isSameComponent: isSameComponent,\n    isFunction: isFunction,\n    isObject: isObject,\n    copy: copy,\n    apply: apply,\n    apply2: apply2,\n    applyIf: applyIf,\n    isEmptyObject: isEmptyObject,\n    inQuotes: inQuotes,\n    concat: concat,\n    flattenParentChildHierarchy: flattenParentChildHierarchy\n};\n\nexport {utils};\n","import {Queue} from './utils/Queue.js';\nimport {Map} from './utils/Map.js';\nimport {stats} from './stats.js';\nimport {utils} from './utils.js';\n\nconst scenesRenderInfo = {}; // Used for throttling FPS for each Scene\nconst sceneIDMap = new Map(); // Ensures unique scene IDs\nconst taskQueue = new Queue(); // Task queue, which is pumped on each frame; tasks are pushed to it with calls to xeokit.schedule\nconst tickEvent = {sceneId: null, time: null, startTime: null, prevTime: null, deltaTime: null};\nconst taskBudget = 10; // Millisecs we're allowed to spend on tasks in each frame\nconst fpsSamples = [];\nconst numFPSSamples = 30;\n\nlet defaultScene = null;// Default singleton Scene, lazy-initialized in getter\nlet lastTime = 0;\nlet elapsedTime;\nlet totalFPS = 0;\n\n/**\n * @private\n */\nfunction Core() {\n\n    /**\n     Semantic version number. The value for this is set by an expression that's concatenated to\n     the end of the built binary by the xeokit build script.\n     @property version\n     @namespace xeokit\n     @type {String}\n     */\n    this.version = \"1.0.0\";\n\n    /**\n     Existing {@link Scene}s , mapped to their IDs\n     @property scenes\n     @namespace xeokit\n     @type {{Scene}}\n     */\n    this.scenes = {};\n\n    this._superTypes = {}; // For each component type, a list of its supertypes, ordered upwards in the hierarchy.\n\n    /**\n     * Registers a scene on xeokit.\n     * This is called within the xeokit.Scene constructor.\n     * @private\n     */\n    this._addScene = function (scene) {\n        if (scene.id) { // User-supplied ID\n            if (core.scenes[scene.id]) {\n                console.error(`[ERROR] Scene ${utils.inQuotes(scene.id)} already exists`);\n                return;\n            }\n        } else { // Auto-generated ID\n            scene.id = sceneIDMap.addItem({});\n        }\n        core.scenes[scene.id] = scene;\n        const ticksPerOcclusionTest = scene.ticksPerOcclusionTest;\n        const ticksPerRender = scene.ticksPerRender;\n        scenesRenderInfo[scene.id] = {\n            ticksPerOcclusionTest: ticksPerOcclusionTest,\n            ticksPerRender: ticksPerRender,\n            renderCountdown: ticksPerRender\n        };\n        stats.components.scenes++;\n        scene.once(\"destroyed\", () => { // Unregister destroyed scenes\n            sceneIDMap.removeItem(scene.id);\n            delete core.scenes[scene.id];\n            delete scenesRenderInfo[scene.id];\n            stats.components.scenes--;\n        });\n    };\n\n    /**\n     * @private\n     */\n    this.clear = function () {\n        let scene;\n        for (const id in core.scenes) {\n            if (core.scenes.hasOwnProperty(id)) {\n                scene = core.scenes[id];\n                // Only clear the default Scene\n                // but destroy all the others\n                if (id === \"default.scene\") {\n                    scene.clear();\n                } else {\n                    scene.destroy();\n                    delete core.scenes[scene.id];\n                }\n            }\n        }\n    };\n\n    /**\n     * Schedule a task to run at the next frame.\n     *\n     * Internally, this pushes the task to a FIFO queue. Within each frame interval, xeokit processes the queue\n     * for a certain period of time, popping tasks and running them. After each frame interval, tasks that did not\n     * get a chance to run during the task are left in the queue to be run next time.\n     *\n     * @param {Function} callback Callback that runs the task.\n     * @param {Object} [scope] Scope for the callback.\n     */\n    this.scheduleTask = function (callback, scope) {\n        taskQueue.push(callback);\n        taskQueue.push(scope);\n    };\n\n    this.runTasks = function (until = -1) { // Pops and processes tasks in the queue, until the given number of milliseconds has elapsed.\n        let time = (new Date()).getTime();\n        let callback;\n        let scope;\n        let tasksRun = 0;\n        while (taskQueue.length > 0 && (until < 0 || time < until)) {\n            callback = taskQueue.shift();\n            scope = taskQueue.shift();\n            if (scope) {\n                callback.call(scope);\n            } else {\n                callback();\n            }\n            time = (new Date()).getTime();\n            tasksRun++;\n        }\n        return tasksRun;\n    };\n\n    this.getNumTasks = function () {\n        return taskQueue.length;\n    };\n}\n\n/**\n * @private\n * @type {Core}\n */\nconst core = new Core();\n\n\nconst frame = function () {\n    let time = Date.now();\n    if (lastTime > 0) { // Log FPS stats\n        elapsedTime = time - lastTime;\n        var newFPS = 1000 / elapsedTime; // Moving average of FPS\n        totalFPS += newFPS;\n        fpsSamples.push(newFPS);\n        if (fpsSamples.length >= numFPSSamples) {\n            totalFPS -= fpsSamples.shift();\n        }\n        stats.frame.fps = Math.round(totalFPS / fpsSamples.length);\n    }\n    runTasks(time);\n    fireTickEvents(time);\n    renderScenes();\n    lastTime = time;\n    window.requestAnimationFrame(frame);\n};\n\nfunction runTasks(time) { // Process as many enqueued tasks as we can within the per-frame task budget\n    const tasksRun = core.runTasks(time + taskBudget);\n    const tasksScheduled = core.getNumTasks();\n    stats.frame.tasksRun = tasksRun;\n    stats.frame.tasksScheduled = tasksScheduled;\n    stats.frame.tasksBudget = taskBudget;\n}\n\nfunction fireTickEvents(time) { // Fire tick event on each Scene\n    tickEvent.time = time;\n    for (var id in core.scenes) {\n        if (core.scenes.hasOwnProperty(id)) {\n            var scene = core.scenes[id];\n            tickEvent.sceneId = id;\n            tickEvent.startTime = scene.startTime;\n            tickEvent.deltaTime = tickEvent.prevTime != null ? tickEvent.time - tickEvent.prevTime : 0;\n            /**\n             * Fired on each game loop iteration.\n             *\n             * @event tick\n             * @param {String} sceneID The ID of this Scene.\n             * @param {Number} startTime The time in seconds since 1970 that this Scene was instantiated.\n             * @param {Number} time The time in seconds since 1970 of this \"tick\" event.\n             * @param {Number} prevTime The time of the previous \"tick\" event from this Scene.\n             * @param {Number} deltaTime The time in seconds since the previous \"tick\" event from this Scene.\n             */\n            scene.fire(\"tick\", tickEvent, true);\n        }\n    }\n    tickEvent.prevTime = time;\n}\n\nfunction renderScenes() {\n    const scenes = core.scenes;\n    const forceRender = false;\n    let scene;\n    let renderInfo;\n    let ticksPerOcclusionTest;\n    let ticksPerRender;\n    let id;\n    for (id in scenes) {\n        if (scenes.hasOwnProperty(id)) {\n\n            scene = scenes[id];\n            renderInfo = scenesRenderInfo[id];\n\n            if (!renderInfo) {\n                renderInfo = scenesRenderInfo[id] = {}; // FIXME\n            }\n\n            ticksPerOcclusionTest = scene.ticksPerOcclusionTest;\n            if (renderInfo.ticksPerOcclusionTest !== ticksPerOcclusionTest) {\n                renderInfo.ticksPerOcclusionTest = ticksPerOcclusionTest;\n                renderInfo.renderCountdown = ticksPerOcclusionTest;\n            }\n            if (--scene.occlusionTestCountdown <= 0) {\n                scene.doOcclusionTest();\n                scene.occlusionTestCountdown = ticksPerOcclusionTest;\n            }\n\n            ticksPerRender = scene.ticksPerRender;\n            if (renderInfo.ticksPerRender !== ticksPerRender) {\n                renderInfo.ticksPerRender = ticksPerRender;\n                renderInfo.renderCountdown = ticksPerRender;\n            }\n            if (--renderInfo.renderCountdown === 0) {\n                scene.render(forceRender);\n                renderInfo.renderCountdown = ticksPerRender;\n            }\n        }\n    }\n}\n\nwindow.requestAnimationFrame(frame);\n\nexport {core};","// Fast queue that avoids using potentially inefficient array .shift() calls\n// Based on https://github.com/creationix/fastqueue\n\n/** @private */\nclass Queue {\n\n    constructor() {\n\n        this._head = [];\n        this._headLength = 0;\n        this._tail = [];\n        this._index = 0;\n        this._length = 0;\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    shift() {\n        if (this._index >= this._headLength) {\n            const t = this._head;\n            t.length = 0;\n            this._head = this._tail;\n            this._tail = t;\n            this._index = 0;\n            this._headLength = this._head.length;\n            if (!this._headLength) {\n                return;\n            }\n        }\n        const value = this._head[this._index];\n        if (this._index < 0) {\n            delete this._head[this._index++];\n        }\n        else {\n            this._head[this._index++] = undefined;\n        }\n        this._length--;\n        return value;\n    }\n\n    push(item) {\n        this._length++;\n        this._tail.push(item);\n        return this;\n    };\n\n    unshift(item) {\n        this._head[--this._index] = item;\n        this._length++;\n        return this;\n    }\n}\n\nexport {Queue};","// Some temporary vars to help avoid garbage collection\n\nconst doublePrecision = true;\nconst FloatArrayType = doublePrecision ? Float64Array : Float32Array;\n\nconst tempMat1 = new FloatArrayType(16);\nconst tempMat2 = new FloatArrayType(16);\nconst tempVec4 = new FloatArrayType(4);\n\n\n/**\n * @private\n */\nconst math = {\n\n    MIN_DOUBLE: -Number.MAX_SAFE_INTEGER,\n    MAX_DOUBLE: Number.MAX_SAFE_INTEGER,\n\n    /**\n     * The number of radiians in a degree (0.0174532925).\n     * @property DEGTORAD\n     * @type {Number}\n     */\n    DEGTORAD: 0.0174532925,\n\n    /**\n     * The number of degrees in a radian.\n     * @property RADTODEG\n     * @type {Number}\n     */\n    RADTODEG: 57.295779513,\n\n    unglobalizeObjectId(modelId, globalId) {\n        const idx = globalId.indexOf(\"#\");\n        return (idx === modelId.length && globalId.startsWith(modelId)) ? globalId.substring(idx + 1) : globalId;\n    },\n\n    globalizeObjectId(modelId, objectId) {\n        return (modelId + \"#\" + objectId)\n    },\n\n    /**\n     * Returns a new, uninitialized two-element vector.\n     * @method vec2\n     * @param [values] Initial values.\n     * @static\n     * @returns {Number[]}\n     */\n    vec2(values) {\n        return new FloatArrayType(values || 2);\n    },\n\n    /**\n     * Returns a new, uninitialized three-element vector.\n     * @method vec3\n     * @param [values] Initial values.\n     * @static\n     * @returns {Number[]}\n     */\n    vec3(values) {\n        return new FloatArrayType(values || 3);\n    },\n\n    /**\n     * Returns a new, uninitialized four-element vector.\n     * @method vec4\n     * @param [values] Initial values.\n     * @static\n     * @returns {Number[]}\n     */\n    vec4(values) {\n        return new FloatArrayType(values || 4);\n    },\n\n    /**\n     * Returns a new, uninitialized 3x3 matrix.\n     * @method mat3\n     * @param [values] Initial values.\n     * @static\n     * @returns {Number[]}\n     */\n    mat3(values) {\n        return new FloatArrayType(values || 9);\n    },\n\n    /**\n     * Converts a 3x3 matrix to 4x4\n     * @method mat3ToMat4\n     * @param mat3 3x3 matrix.\n     * @param mat4 4x4 matrix\n     * @static\n     * @returns {Number[]}\n     */\n    mat3ToMat4(mat3, mat4 = new FloatArrayType(16)) {\n        mat4[0] = mat3[0];\n        mat4[1] = mat3[1];\n        mat4[2] = mat3[2];\n        mat4[3] = 0;\n        mat4[4] = mat3[3];\n        mat4[5] = mat3[4];\n        mat4[6] = mat3[5];\n        mat4[7] = 0;\n        mat4[8] = mat3[6];\n        mat4[9] = mat3[7];\n        mat4[10] = mat3[8];\n        mat4[11] = 0;\n        mat4[12] = 0;\n        mat4[13] = 0;\n        mat4[14] = 0;\n        mat4[15] = 1;\n        return mat4;\n    },\n\n    /**\n     * Returns a new, uninitialized 4x4 matrix.\n     * @method mat4\n     * @param [values] Initial values.\n     * @static\n     * @returns {Number[]}\n     */\n    mat4(values) {\n        return new FloatArrayType(values || 16);\n    },\n\n    /**\n     * Converts a 4x4 matrix to 3x3\n     * @method mat4ToMat3\n     * @param mat4 4x4 matrix.\n     * @param mat3 3x3 matrix\n     * @static\n     * @returns {Number[]}\n     */\n    mat4ToMat3(mat4, mat3) { // TODO\n        //return new FloatArrayType(values || 9);\n    },\n\n    /**\n     * Converts a list of double-precision values to a list of high-part floats and a list of low-part floats.\n     * @param doubleVals\n     * @param floatValsHigh\n     * @param floatValsLow\n     */\n    doublesToFloats(doubleVals, floatValsHigh, floatValsLow) {\n        const floatPair = new Float32Array(2);\n        for (let i = 0, len = doubleVals.length; i < len; i++) {\n            math.splitDouble(doubleVals[i], floatPair);\n            floatValsHigh[i] = floatPair[0];\n            floatValsLow[i] = floatPair[1];\n        }\n    },\n\n    /**\n     * Splits a double value into two floats.\n     * @param value\n     * @param floatPair\n     */\n    splitDouble(value, floatPair) {\n        const hi = Float32Array.from([value])[0];\n        const low = value - hi;\n        floatPair[0] = hi;\n        floatPair[1] = low;\n    },\n\n    /**\n     * Returns a new UUID.\n     * @method createUUID\n     * @static\n     * @return string The new UUID\n     */\n    createUUID: ((() => {\n        const self = {};\n        const lut = [];\n        for (let i = 0; i < 256; i++) {\n            lut[i] = (i < 16 ? '0' : '') + (i).toString(16);\n        }\n        return () => {\n            const d0 = Math.random() * 0xffffffff | 0;\n            const d1 = Math.random() * 0xffffffff | 0;\n            const d2 = Math.random() * 0xffffffff | 0;\n            const d3 = Math.random() * 0xffffffff | 0;\n            return `${lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff]}-${lut[d1 & 0xff]}${lut[d1 >> 8 & 0xff]}-${lut[d1 >> 16 & 0x0f | 0x40]}${lut[d1 >> 24 & 0xff]}-${lut[d2 & 0x3f | 0x80]}${lut[d2 >> 8 & 0xff]}-${lut[d2 >> 16 & 0xff]}${lut[d2 >> 24 & 0xff]}${lut[d3 & 0xff]}${lut[d3 >> 8 & 0xff]}${lut[d3 >> 16 & 0xff]}${lut[d3 >> 24 & 0xff]}`;\n        };\n    }))(),\n\n    /**\n     * Clamps a value to the given range.\n     * @param {Number} value Value to clamp.\n     * @param {Number} min Lower bound.\n     * @param {Number} max Upper bound.\n     * @returns {Number} Clamped result.\n     */\n    clamp(value, min, max) {\n        return Math.max(min, Math.min(max, value));\n    },\n\n    /**\n     * Floating-point modulus\n     * @method fmod\n     * @static\n     * @param {Number} a\n     * @param {Number} b\n     * @returns {*}\n     */\n    fmod(a, b) {\n        if (a < b) {\n            console.error(\"math.fmod : Attempting to find modulus within negative range - would be infinite loop - ignoring\");\n            return a;\n        }\n        while (b <= a) {\n            a -= b;\n        }\n        return a;\n    },\n\n    /**\n     * Returns true if the two 3-element vectors are the same.\n     * @param v1\n     * @param v2\n     * @returns {boolean}\n     */\n    compareVec3(v1, v2) {\n        return (v1[0] === v2[0] && v1[1] === v2[1] && v1[2] === v2[2]);\n    },\n\n    /**\n     * Negates a three-element vector.\n     * @method negateVec3\n     * @static\n     * @param {Array(Number)} v Vector to negate\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    negateVec3(v, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = -v[0];\n        dest[1] = -v[1];\n        dest[2] = -v[2];\n        return dest;\n    },\n\n    /**\n     * Negates a four-element vector.\n     * @method negateVec4\n     * @static\n     * @param {Array(Number)} v Vector to negate\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    negateVec4(v, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = -v[0];\n        dest[1] = -v[1];\n        dest[2] = -v[2];\n        dest[3] = -v[3];\n        return dest;\n    },\n\n    /**\n     * Adds one four-element vector to another.\n     * @method addVec4\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    addVec4(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] + v[0];\n        dest[1] = u[1] + v[1];\n        dest[2] = u[2] + v[2];\n        dest[3] = u[3] + v[3];\n        return dest;\n    },\n\n    /**\n     * Adds a scalar value to each element of a four-element vector.\n     * @method addVec4Scalar\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    addVec4Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] + s;\n        dest[1] = v[1] + s;\n        dest[2] = v[2] + s;\n        dest[3] = v[3] + s;\n        return dest;\n    },\n\n    /**\n     * Adds one three-element vector to another.\n     * @method addVec3\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    addVec3(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] + v[0];\n        dest[1] = u[1] + v[1];\n        dest[2] = u[2] + v[2];\n        return dest;\n    },\n\n    /**\n     * Adds a scalar value to each element of a three-element vector.\n     * @method addVec4Scalar\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    addVec3Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] + s;\n        dest[1] = v[1] + s;\n        dest[2] = v[2] + s;\n        return dest;\n    },\n\n    /**\n     * Subtracts one four-element vector from another.\n     * @method subVec4\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Vector to subtract\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    subVec4(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] - v[0];\n        dest[1] = u[1] - v[1];\n        dest[2] = u[2] - v[2];\n        dest[3] = u[3] - v[3];\n        return dest;\n    },\n\n    /**\n     * Subtracts one three-element vector from another.\n     * @method subVec3\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Vector to subtract\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    subVec3(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] - v[0];\n        dest[1] = u[1] - v[1];\n        dest[2] = u[2] - v[2];\n        return dest;\n    },\n\n    /**\n     * Subtracts one two-element vector from another.\n     * @method subVec2\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Vector to subtract\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    subVec2(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] - v[0];\n        dest[1] = u[1] - v[1];\n        return dest;\n    },\n\n    /**\n     * Get the geometric mean of the vectors.\n     * @method geometricMeanVec2\n     * @static\n     * @param {...Array(Number)} vectors Vec2 to mean\n     * @return {Array(Number)} The geometric mean vec2\n     */\n    geometricMeanVec2(...vectors) {\n        const geometricMean = new FloatArrayType(vectors[0]);\n        for (let i = 1; i < vectors.length; i++) {\n            geometricMean[0] += vectors[i][0];\n            geometricMean[1] += vectors[i][1];\n        }\n        geometricMean[0] /= vectors.length;\n        geometricMean[1] /= vectors.length;\n        return geometricMean;\n    },\n\n    /**\n     * Subtracts a scalar value from each element of a four-element vector.\n     * @method subVec4Scalar\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    subVec4Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] - s;\n        dest[1] = v[1] - s;\n        dest[2] = v[2] - s;\n        dest[3] = v[3] - s;\n        return dest;\n    },\n\n    /**\n     * Sets each element of a 4-element vector to a scalar value minus the value of that element.\n     * @method subScalarVec4\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    subScalarVec4(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = s - v[0];\n        dest[1] = s - v[1];\n        dest[2] = s - v[2];\n        dest[3] = s - v[3];\n        return dest;\n    },\n\n    /**\n     * Multiplies one three-element vector by another.\n     * @method mulVec3\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    mulVec4(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] * v[0];\n        dest[1] = u[1] * v[1];\n        dest[2] = u[2] * v[2];\n        dest[3] = u[3] * v[3];\n        return dest;\n    },\n\n    /**\n     * Multiplies each element of a four-element vector by a scalar.\n     * @method mulVec34calar\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    mulVec4Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] * s;\n        dest[1] = v[1] * s;\n        dest[2] = v[2] * s;\n        dest[3] = v[3] * s;\n        return dest;\n    },\n\n    /**\n     * Multiplies each element of a three-element vector by a scalar.\n     * @method mulVec3Scalar\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    mulVec3Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] * s;\n        dest[1] = v[1] * s;\n        dest[2] = v[2] * s;\n        return dest;\n    },\n\n    /**\n     * Multiplies each element of a two-element vector by a scalar.\n     * @method mulVec2Scalar\n     * @static\n     * @param {Array(Number)} v The vector\n     * @param {Number} s The scalar\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, v otherwise\n     */\n    mulVec2Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] * s;\n        dest[1] = v[1] * s;\n        return dest;\n    },\n\n    /**\n     * Divides one three-element vector by another.\n     * @method divVec3\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    divVec3(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] / v[0];\n        dest[1] = u[1] / v[1];\n        dest[2] = u[2] / v[2];\n        return dest;\n    },\n\n    /**\n     * Divides one four-element vector by another.\n     * @method divVec4\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @param  {Array(Number)} [dest] Destination vector\n     * @return {Array(Number)} dest if specified, u otherwise\n     */\n    divVec4(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        dest[0] = u[0] / v[0];\n        dest[1] = u[1] / v[1];\n        dest[2] = u[2] / v[2];\n        dest[3] = u[3] / v[3];\n        return dest;\n    },\n\n    /**\n     * Divides a scalar by a three-element vector, returning a new vector.\n     * @method divScalarVec3\n     * @static\n     * @param v vec3\n     * @param s scalar\n     * @param dest vec3 - optional destination\n     * @return [] dest if specified, v otherwise\n     */\n    divScalarVec3(s, v, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = s / v[0];\n        dest[1] = s / v[1];\n        dest[2] = s / v[2];\n        return dest;\n    },\n\n    /**\n     * Divides a three-element vector by a scalar.\n     * @method divVec3Scalar\n     * @static\n     * @param v vec3\n     * @param s scalar\n     * @param dest vec3 - optional destination\n     * @return [] dest if specified, v otherwise\n     */\n    divVec3Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] / s;\n        dest[1] = v[1] / s;\n        dest[2] = v[2] / s;\n        return dest;\n    },\n\n    /**\n     * Divides a four-element vector by a scalar.\n     * @method divVec4Scalar\n     * @static\n     * @param v vec4\n     * @param s scalar\n     * @param dest vec4 - optional destination\n     * @return [] dest if specified, v otherwise\n     */\n    divVec4Scalar(v, s, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = v[0] / s;\n        dest[1] = v[1] / s;\n        dest[2] = v[2] / s;\n        dest[3] = v[3] / s;\n        return dest;\n    },\n\n\n    /**\n     * Divides a scalar by a four-element vector, returning a new vector.\n     * @method divScalarVec4\n     * @static\n     * @param s scalar\n     * @param v vec4\n     * @param dest vec4 - optional destination\n     * @return [] dest if specified, v otherwise\n     */\n    divScalarVec4(s, v, dest) {\n        if (!dest) {\n            dest = v;\n        }\n        dest[0] = s / v[0];\n        dest[1] = s / v[1];\n        dest[2] = s / v[2];\n        dest[3] = s / v[3];\n        return dest;\n    },\n\n    /**\n     * Returns the dot product of two four-element vectors.\n     * @method dotVec4\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @return The dot product\n     */\n    dotVec4(u, v) {\n        return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2] + u[3] * v[3]);\n    },\n\n    /**\n     * Returns the cross product of two four-element vectors.\n     * @method cross3Vec4\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @return The cross product\n     */\n    cross3Vec4(u, v) {\n        const u0 = u[0];\n        const u1 = u[1];\n        const u2 = u[2];\n        const v0 = v[0];\n        const v1 = v[1];\n        const v2 = v[2];\n        return [\n            u1 * v2 - u2 * v1,\n            u2 * v0 - u0 * v2,\n            u0 * v1 - u1 * v0,\n            0.0];\n    },\n\n    /**\n     * Returns the cross product of two three-element vectors.\n     * @method cross3Vec3\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @return The cross product\n     */\n    cross3Vec3(u, v, dest) {\n        if (!dest) {\n            dest = u;\n        }\n        const x = u[0];\n        const y = u[1];\n        const z = u[2];\n        const x2 = v[0];\n        const y2 = v[1];\n        const z2 = v[2];\n        dest[0] = y * z2 - z * y2;\n        dest[1] = z * x2 - x * z2;\n        dest[2] = x * y2 - y * x2;\n        return dest;\n    },\n\n\n    sqLenVec4(v) { // TODO\n        return math.dotVec4(v, v);\n    },\n\n    /**\n     * Returns the length of a four-element vector.\n     * @method lenVec4\n     * @static\n     * @param {Array(Number)} v The vector\n     * @return The length\n     */\n    lenVec4(v) {\n        return Math.sqrt(math.sqLenVec4(v));\n    },\n\n    /**\n     * Returns the dot product of two three-element vectors.\n     * @method dotVec3\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @return The dot product\n     */\n    dotVec3(u, v) {\n        return (u[0] * v[0] + u[1] * v[1] + u[2] * v[2]);\n    },\n\n    /**\n     * Returns the dot product of two two-element vectors.\n     * @method dotVec4\n     * @static\n     * @param {Array(Number)} u First vector\n     * @param {Array(Number)} v Second vector\n     * @return The dot product\n     */\n    dotVec2(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]);\n    },\n\n\n    sqLenVec3(v) {\n        return math.dotVec3(v, v);\n    },\n\n\n    sqLenVec2(v) {\n        return math.dotVec2(v, v);\n    },\n\n    /**\n     * Returns the length of a three-element vector.\n     * @method lenVec3\n     * @static\n     * @param {Array(Number)} v The vector\n     * @return The length\n     */\n    lenVec3(v) {\n        return Math.sqrt(math.sqLenVec3(v));\n    },\n\n    distVec3: ((() => {\n        const vec = new FloatArrayType(3);\n        return (v, w) => math.lenVec3(math.subVec3(v, w, vec));\n    }))(),\n\n    /**\n     * Returns the length of a two-element vector.\n     * @method lenVec2\n     * @static\n     * @param {Array(Number)} v The vector\n     * @return The length\n     */\n    lenVec2(v) {\n        return Math.sqrt(math.sqLenVec2(v));\n    },\n\n    distVec2: ((() => {\n        const vec = new FloatArrayType(2);\n        return (v, w) => math.lenVec2(math.subVec2(v, w, vec));\n    }))(),\n\n    /**\n     * @method rcpVec3\n     * @static\n     * @param v vec3\n     * @param dest vec3 - optional destination\n     * @return [] dest if specified, v otherwise\n     *\n     */\n    rcpVec3(v, dest) {\n        return math.divScalarVec3(1.0, v, dest);\n    },\n\n    /**\n     * Normalizes a four-element vector\n     * @method normalizeVec4\n     * @static\n     * @param v vec4\n     * @param dest vec4 - optional destination\n     * @return [] dest if specified, v otherwise\n     *\n     */\n    normalizeVec4(v, dest) {\n        const f = 1.0 / math.lenVec4(v);\n        return math.mulVec4Scalar(v, f, dest);\n    },\n\n    /**\n     * Normalizes a three-element vector\n     * @method normalizeVec4\n     * @static\n     */\n    normalizeVec3(v, dest) {\n        const f = 1.0 / math.lenVec3(v);\n        return math.mulVec3Scalar(v, f, dest);\n    },\n\n    /**\n     * Normalizes a two-element vector\n     * @method normalizeVec2\n     * @static\n     */\n    normalizeVec2(v, dest) {\n        const f = 1.0 / math.lenVec2(v);\n        return math.mulVec2Scalar(v, f, dest);\n    },\n\n    /**\n     * Gets the angle between two vectors\n     * @method angleVec3\n     * @param v\n     * @param w\n     * @returns {number}\n     */\n    angleVec3(v, w) {\n        let theta = math.dotVec3(v, w) / (Math.sqrt(math.sqLenVec3(v) * math.sqLenVec3(w)));\n        theta = theta < -1 ? -1 : (theta > 1 ? 1 : theta);  // Clamp to handle numerical problems\n        return Math.acos(theta);\n    },\n\n    /**\n     * Creates a three-element vector from the rotation part of a sixteen-element matrix.\n     * @param m\n     * @param dest\n     */\n    vec3FromMat4Scale: ((() => {\n\n        const tempVec3 = new FloatArrayType(3);\n\n        return (m, dest) => {\n\n            tempVec3[0] = m[0];\n            tempVec3[1] = m[1];\n            tempVec3[2] = m[2];\n\n            dest[0] = math.lenVec3(tempVec3);\n\n            tempVec3[0] = m[4];\n            tempVec3[1] = m[5];\n            tempVec3[2] = m[6];\n\n            dest[1] = math.lenVec3(tempVec3);\n\n            tempVec3[0] = m[8];\n            tempVec3[1] = m[9];\n            tempVec3[2] = m[10];\n\n            dest[2] = math.lenVec3(tempVec3);\n\n            return dest;\n        };\n    }))(),\n\n    /**\n     * Converts an n-element vector to a JSON-serializable\n     * array with values rounded to two decimal places.\n     */\n    vecToArray: ((() => {\n        function trunc(v) {\n            return Math.round(v * 100000) / 100000\n        }\n\n        return v => {\n            v = Array.prototype.slice.call(v);\n            for (let i = 0, len = v.length; i < len; i++) {\n                v[i] = trunc(v[i]);\n            }\n            return v;\n        };\n    }))(),\n\n    /**\n     * Converts a 3-element vector from an array to an object of the form ````{x:999, y:999, z:999}````.\n     * @param arr\n     * @returns {{x: *, y: *, z: *}}\n     */\n    xyzArrayToObject(arr) {\n        return {\"x\": arr[0], \"y\": arr[1], \"z\": arr[2]};\n    },\n\n    /**\n     * Converts a 3-element vector object of the form ````{x:999, y:999, z:999}```` to an array.\n     * @param xyz\n     * @param  [arry]\n     * @returns {*[]}\n     */\n    xyzObjectToArray(xyz, arry) {\n        arry = arry || new FloatArrayType(3);\n        arry[0] = xyz.x;\n        arry[1] = xyz.y;\n        arry[2] = xyz.z;\n        return arry;\n    },\n\n    /**\n     * Duplicates a 4x4 identity matrix.\n     * @method dupMat4\n     * @static\n     */\n    dupMat4(m) {\n        return m.slice(0, 16);\n    },\n\n    /**\n     * Extracts a 3x3 matrix from a 4x4 matrix.\n     * @method mat4To3\n     * @static\n     */\n    mat4To3(m) {\n        return [\n            m[0], m[1], m[2],\n            m[4], m[5], m[6],\n            m[8], m[9], m[10]\n        ];\n    },\n\n    /**\n     * Returns a 4x4 matrix with each element set to the given scalar value.\n     * @method m4s\n     * @static\n     */\n    m4s(s) {\n        return [\n            s, s, s, s,\n            s, s, s, s,\n            s, s, s, s,\n            s, s, s, s\n        ];\n    },\n\n    /**\n     * Returns a 4x4 matrix with each element set to zero.\n     * @method setMat4ToZeroes\n     * @static\n     */\n    setMat4ToZeroes() {\n        return math.m4s(0.0);\n    },\n\n    /**\n     * Returns a 4x4 matrix with each element set to 1.0.\n     * @method setMat4ToOnes\n     * @static\n     */\n    setMat4ToOnes() {\n        return math.m4s(1.0);\n    },\n\n    /**\n     * Returns a 4x4 matrix with each element set to 1.0.\n     * @method setMat4ToOnes\n     * @static\n     */\n    diagonalMat4v(v) {\n        return new FloatArrayType([\n            v[0], 0.0, 0.0, 0.0,\n            0.0, v[1], 0.0, 0.0,\n            0.0, 0.0, v[2], 0.0,\n            0.0, 0.0, 0.0, v[3]\n        ]);\n    },\n\n    /**\n     * Returns a 4x4 matrix with diagonal elements set to the given vector.\n     * @method diagonalMat4c\n     * @static\n     */\n    diagonalMat4c(x, y, z, w) {\n        return math.diagonalMat4v([x, y, z, w]);\n    },\n\n    /**\n     * Returns a 4x4 matrix with diagonal elements set to the given scalar.\n     * @method diagonalMat4s\n     * @static\n     */\n    diagonalMat4s(s) {\n        return math.diagonalMat4c(s, s, s, s);\n    },\n\n    /**\n     * Returns a 4x4 identity matrix.\n     * @method identityMat4\n     * @static\n     */\n    identityMat4(mat = new FloatArrayType(16)) {\n        mat[0] = 1.0;\n        mat[1] = 0.0;\n        mat[2] = 0.0;\n        mat[3] = 0.0;\n\n        mat[4] = 0.0;\n        mat[5] = 1.0;\n        mat[6] = 0.0;\n        mat[7] = 0.0;\n\n        mat[8] = 0.0;\n        mat[9] = 0.0;\n        mat[10] = 1.0;\n        mat[11] = 0.0;\n\n        mat[12] = 0.0;\n        mat[13] = 0.0;\n        mat[14] = 0.0;\n        mat[15] = 1.0;\n\n        return mat;\n    },\n\n    /**\n     * Returns a 3x3 identity matrix.\n     * @method identityMat3\n     * @static\n     */\n    identityMat3(mat = new FloatArrayType(9)) {\n        mat[0] = 1.0;\n        mat[1] = 0.0;\n        mat[2] = 0.0;\n\n        mat[3] = 0.0;\n        mat[4] = 1.0;\n        mat[5] = 0.0;\n\n        mat[6] = 0.0;\n        mat[7] = 0.0;\n        mat[8] = 1.0;\n\n        return mat;\n    },\n\n    /**\n     * Tests if the given 4x4 matrix is the identity matrix.\n     * @method isIdentityMat4\n     * @static\n     */\n    isIdentityMat4(m) {\n        if (m[0] !== 1.0 || m[1] !== 0.0 || m[2] !== 0.0 || m[3] !== 0.0 ||\n            m[4] !== 0.0 || m[5] !== 1.0 || m[6] !== 0.0 || m[7] !== 0.0 ||\n            m[8] !== 0.0 || m[9] !== 0.0 || m[10] !== 1.0 || m[11] !== 0.0 ||\n            m[12] !== 0.0 || m[13] !== 0.0 || m[14] !== 0.0 || m[15] !== 1.0) {\n            return false;\n        }\n        return true;\n    },\n\n    /**\n     * Negates the given 4x4 matrix.\n     * @method negateMat4\n     * @static\n     */\n    negateMat4(m, dest) {\n        if (!dest) {\n            dest = m;\n        }\n        dest[0] = -m[0];\n        dest[1] = -m[1];\n        dest[2] = -m[2];\n        dest[3] = -m[3];\n        dest[4] = -m[4];\n        dest[5] = -m[5];\n        dest[6] = -m[6];\n        dest[7] = -m[7];\n        dest[8] = -m[8];\n        dest[9] = -m[9];\n        dest[10] = -m[10];\n        dest[11] = -m[11];\n        dest[12] = -m[12];\n        dest[13] = -m[13];\n        dest[14] = -m[14];\n        dest[15] = -m[15];\n        return dest;\n    },\n\n    /**\n     * Adds the given 4x4 matrices together.\n     * @method addMat4\n     * @static\n     */\n    addMat4(a, b, dest) {\n        if (!dest) {\n            dest = a;\n        }\n        dest[0] = a[0] + b[0];\n        dest[1] = a[1] + b[1];\n        dest[2] = a[2] + b[2];\n        dest[3] = a[3] + b[3];\n        dest[4] = a[4] + b[4];\n        dest[5] = a[5] + b[5];\n        dest[6] = a[6] + b[6];\n        dest[7] = a[7] + b[7];\n        dest[8] = a[8] + b[8];\n        dest[9] = a[9] + b[9];\n        dest[10] = a[10] + b[10];\n        dest[11] = a[11] + b[11];\n        dest[12] = a[12] + b[12];\n        dest[13] = a[13] + b[13];\n        dest[14] = a[14] + b[14];\n        dest[15] = a[15] + b[15];\n        return dest;\n    },\n\n    /**\n     * Adds the given scalar to each element of the given 4x4 matrix.\n     * @method addMat4Scalar\n     * @static\n     */\n    addMat4Scalar(m, s, dest) {\n        if (!dest) {\n            dest = m;\n        }\n        dest[0] = m[0] + s;\n        dest[1] = m[1] + s;\n        dest[2] = m[2] + s;\n        dest[3] = m[3] + s;\n        dest[4] = m[4] + s;\n        dest[5] = m[5] + s;\n        dest[6] = m[6] + s;\n        dest[7] = m[7] + s;\n        dest[8] = m[8] + s;\n        dest[9] = m[9] + s;\n        dest[10] = m[10] + s;\n        dest[11] = m[11] + s;\n        dest[12] = m[12] + s;\n        dest[13] = m[13] + s;\n        dest[14] = m[14] + s;\n        dest[15] = m[15] + s;\n        return dest;\n    },\n\n    /**\n     * Adds the given scalar to each element of the given 4x4 matrix.\n     * @method addScalarMat4\n     * @static\n     */\n    addScalarMat4(s, m, dest) {\n        return math.addMat4Scalar(m, s, dest);\n    },\n\n    /**\n     * Subtracts the second 4x4 matrix from the first.\n     * @method subMat4\n     * @static\n     */\n    subMat4(a, b, dest) {\n        if (!dest) {\n            dest = a;\n        }\n        dest[0] = a[0] - b[0];\n        dest[1] = a[1] - b[1];\n        dest[2] = a[2] - b[2];\n        dest[3] = a[3] - b[3];\n        dest[4] = a[4] - b[4];\n        dest[5] = a[5] - b[5];\n        dest[6] = a[6] - b[6];\n        dest[7] = a[7] - b[7];\n        dest[8] = a[8] - b[8];\n        dest[9] = a[9] - b[9];\n        dest[10] = a[10] - b[10];\n        dest[11] = a[11] - b[11];\n        dest[12] = a[12] - b[12];\n        dest[13] = a[13] - b[13];\n        dest[14] = a[14] - b[14];\n        dest[15] = a[15] - b[15];\n        return dest;\n    },\n\n    /**\n     * Subtracts the given scalar from each element of the given 4x4 matrix.\n     * @method subMat4Scalar\n     * @static\n     */\n    subMat4Scalar(m, s, dest) {\n        if (!dest) {\n            dest = m;\n        }\n        dest[0] = m[0] - s;\n        dest[1] = m[1] - s;\n        dest[2] = m[2] - s;\n        dest[3] = m[3] - s;\n        dest[4] = m[4] - s;\n        dest[5] = m[5] - s;\n        dest[6] = m[6] - s;\n        dest[7] = m[7] - s;\n        dest[8] = m[8] - s;\n        dest[9] = m[9] - s;\n        dest[10] = m[10] - s;\n        dest[11] = m[11] - s;\n        dest[12] = m[12] - s;\n        dest[13] = m[13] - s;\n        dest[14] = m[14] - s;\n        dest[15] = m[15] - s;\n        return dest;\n    },\n\n    /**\n     * Subtracts the given scalar from each element of the given 4x4 matrix.\n     * @method subScalarMat4\n     * @static\n     */\n    subScalarMat4(s, m, dest) {\n        if (!dest) {\n            dest = m;\n        }\n        dest[0] = s - m[0];\n        dest[1] = s - m[1];\n        dest[2] = s - m[2];\n        dest[3] = s - m[3];\n        dest[4] = s - m[4];\n        dest[5] = s - m[5];\n        dest[6] = s - m[6];\n        dest[7] = s - m[7];\n        dest[8] = s - m[8];\n        dest[9] = s - m[9];\n        dest[10] = s - m[10];\n        dest[11] = s - m[11];\n        dest[12] = s - m[12];\n        dest[13] = s - m[13];\n        dest[14] = s - m[14];\n        dest[15] = s - m[15];\n        return dest;\n    },\n\n    /**\n     * Multiplies the two given 4x4 matrix by each other.\n     * @method mulMat4\n     * @static\n     */\n    mulMat4(a, b, dest) {\n        if (!dest) {\n            dest = a;\n        }\n\n        // Cache the matrix values (makes for huge speed increases!)\n        const a00 = a[0];\n\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        const a30 = a[12];\n        const a31 = a[13];\n        const a32 = a[14];\n        const a33 = a[15];\n        const b00 = b[0];\n        const b01 = b[1];\n        const b02 = b[2];\n        const b03 = b[3];\n        const b10 = b[4];\n        const b11 = b[5];\n        const b12 = b[6];\n        const b13 = b[7];\n        const b20 = b[8];\n        const b21 = b[9];\n        const b22 = b[10];\n        const b23 = b[11];\n        const b30 = b[12];\n        const b31 = b[13];\n        const b32 = b[14];\n        const b33 = b[15];\n\n        dest[0] = b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30;\n        dest[1] = b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31;\n        dest[2] = b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32;\n        dest[3] = b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33;\n        dest[4] = b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30;\n        dest[5] = b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31;\n        dest[6] = b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32;\n        dest[7] = b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33;\n        dest[8] = b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30;\n        dest[9] = b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31;\n        dest[10] = b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32;\n        dest[11] = b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33;\n        dest[12] = b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30;\n        dest[13] = b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31;\n        dest[14] = b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32;\n        dest[15] = b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33;\n\n        return dest;\n    },\n\n    /**\n     * Multiplies the two given 3x3 matrices by each other.\n     * @method mulMat4\n     * @static\n     */\n    mulMat3(a, b, dest) {\n        if (!dest) {\n            dest = new FloatArrayType(9);\n        }\n\n        const a11 = a[0];\n        const a12 = a[3];\n        const a13 = a[6];\n        const a21 = a[1];\n        const a22 = a[4];\n        const a23 = a[7];\n        const a31 = a[2];\n        const a32 = a[5];\n        const a33 = a[8];\n        const b11 = b[0];\n        const b12 = b[3];\n        const b13 = b[6];\n        const b21 = b[1];\n        const b22 = b[4];\n        const b23 = b[7];\n        const b31 = b[2];\n        const b32 = b[5];\n        const b33 = b[8];\n\n        dest[0] = a11 * b11 + a12 * b21 + a13 * b31;\n        dest[3] = a11 * b12 + a12 * b22 + a13 * b32;\n        dest[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\n        dest[1] = a21 * b11 + a22 * b21 + a23 * b31;\n        dest[4] = a21 * b12 + a22 * b22 + a23 * b32;\n        dest[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\n        dest[2] = a31 * b11 + a32 * b21 + a33 * b31;\n        dest[5] = a31 * b12 + a32 * b22 + a33 * b32;\n        dest[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\n        return dest;\n    },\n\n    /**\n     * Multiplies each element of the given 4x4 matrix by the given scalar.\n     * @method mulMat4Scalar\n     * @static\n     */\n    mulMat4Scalar(m, s, dest) {\n        if (!dest) {\n            dest = m;\n        }\n        dest[0] = m[0] * s;\n        dest[1] = m[1] * s;\n        dest[2] = m[2] * s;\n        dest[3] = m[3] * s;\n        dest[4] = m[4] * s;\n        dest[5] = m[5] * s;\n        dest[6] = m[6] * s;\n        dest[7] = m[7] * s;\n        dest[8] = m[8] * s;\n        dest[9] = m[9] * s;\n        dest[10] = m[10] * s;\n        dest[11] = m[11] * s;\n        dest[12] = m[12] * s;\n        dest[13] = m[13] * s;\n        dest[14] = m[14] * s;\n        dest[15] = m[15] * s;\n        return dest;\n    },\n\n    /**\n     * Multiplies the given 4x4 matrix by the given four-element vector.\n     * @method mulMat4v4\n     * @static\n     */\n    mulMat4v4(m, v, dest = math.vec4()) {\n        const v0 = v[0];\n        const v1 = v[1];\n        const v2 = v[2];\n        const v3 = v[3];\n        dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n        dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n        dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n        dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n        return dest;\n    },\n\n    /**\n     * Transposes the given 4x4 matrix.\n     * @method transposeMat4\n     * @static\n     */\n    transposeMat4(mat, dest) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        const m4 = mat[4];\n\n        const m14 = mat[14];\n        const m8 = mat[8];\n        const m13 = mat[13];\n        const m12 = mat[12];\n        const m9 = mat[9];\n        if (!dest || mat === dest) {\n            const a01 = mat[1];\n            const a02 = mat[2];\n            const a03 = mat[3];\n            const a12 = mat[6];\n            const a13 = mat[7];\n            const a23 = mat[11];\n            mat[1] = m4;\n            mat[2] = m8;\n            mat[3] = m12;\n            mat[4] = a01;\n            mat[6] = m9;\n            mat[7] = m13;\n            mat[8] = a02;\n            mat[9] = a12;\n            mat[11] = m14;\n            mat[12] = a03;\n            mat[13] = a13;\n            mat[14] = a23;\n            return mat;\n        }\n        dest[0] = mat[0];\n        dest[1] = m4;\n        dest[2] = m8;\n        dest[3] = m12;\n        dest[4] = mat[1];\n        dest[5] = mat[5];\n        dest[6] = m9;\n        dest[7] = m13;\n        dest[8] = mat[2];\n        dest[9] = mat[6];\n        dest[10] = mat[10];\n        dest[11] = m14;\n        dest[12] = mat[3];\n        dest[13] = mat[7];\n        dest[14] = mat[11];\n        dest[15] = mat[15];\n        return dest;\n    },\n\n    /**\n     * Transposes the given 3x3 matrix.\n     *\n     * @method transposeMat3\n     * @static\n     */\n    transposeMat3(mat, dest) {\n        if (dest === mat) {\n            const a01 = mat[1];\n            const a02 = mat[2];\n            const a12 = mat[5];\n            dest[1] = mat[3];\n            dest[2] = mat[6];\n            dest[3] = a01;\n            dest[5] = mat[7];\n            dest[6] = a02;\n            dest[7] = a12;\n        } else {\n            dest[0] = mat[0];\n            dest[1] = mat[3];\n            dest[2] = mat[6];\n            dest[3] = mat[1];\n            dest[4] = mat[4];\n            dest[5] = mat[7];\n            dest[6] = mat[2];\n            dest[7] = mat[5];\n            dest[8] = mat[8];\n        }\n        return dest;\n    },\n\n    /**\n     * Returns the determinant of the given 4x4 matrix.\n     * @method determinantMat4\n     * @static\n     */\n    determinantMat4(mat) {\n        // Cache the matrix values (makes for huge speed increases!)\n        const a00 = mat[0];\n\n        const a01 = mat[1];\n        const a02 = mat[2];\n        const a03 = mat[3];\n        const a10 = mat[4];\n        const a11 = mat[5];\n        const a12 = mat[6];\n        const a13 = mat[7];\n        const a20 = mat[8];\n        const a21 = mat[9];\n        const a22 = mat[10];\n        const a23 = mat[11];\n        const a30 = mat[12];\n        const a31 = mat[13];\n        const a32 = mat[14];\n        const a33 = mat[15];\n        return a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +\n            a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +\n            a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +\n            a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +\n            a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +\n            a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33;\n    },\n\n    /**\n     * Returns the inverse of the given 4x4 matrix.\n     * @method inverseMat4\n     * @static\n     */\n    inverseMat4(mat, dest) {\n        if (!dest) {\n            dest = mat;\n        }\n\n        // Cache the matrix values (makes for huge speed increases!)\n        const a00 = mat[0];\n\n        const a01 = mat[1];\n        const a02 = mat[2];\n        const a03 = mat[3];\n        const a10 = mat[4];\n        const a11 = mat[5];\n        const a12 = mat[6];\n        const a13 = mat[7];\n        const a20 = mat[8];\n        const a21 = mat[9];\n        const a22 = mat[10];\n        const a23 = mat[11];\n        const a30 = mat[12];\n        const a31 = mat[13];\n        const a32 = mat[14];\n        const a33 = mat[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n\n        // Calculate the determinant (inlined to avoid double-caching)\n        const invDet = 1 / (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\n\n        dest[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n        dest[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n        dest[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n        dest[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n        dest[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n        dest[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n        dest[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n        dest[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n        dest[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n        dest[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n        dest[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n        dest[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n        dest[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n        dest[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n        dest[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n        dest[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n\n        return dest;\n    },\n\n    /**\n     * Returns the trace of the given 4x4 matrix.\n     * @method traceMat4\n     * @static\n     */\n    traceMat4(m) {\n        return (m[0] + m[5] + m[10] + m[15]);\n    },\n\n    /**\n     * Returns 4x4 translation matrix.\n     * @method translationMat4\n     * @static\n     */\n    translationMat4v(v, dest) {\n        const m = dest || math.identityMat4();\n        m[12] = v[0];\n        m[13] = v[1];\n        m[14] = v[2];\n        return m;\n    },\n\n    /**\n     * Returns 3x3 translation matrix.\n     * @method translationMat3\n     * @static\n     */\n    translationMat3v(v, dest) {\n        const m = dest || math.identityMat3();\n        m[6] = v[0];\n        m[7] = v[1];\n        return m;\n    },\n\n    /**\n     * Returns 4x4 translation matrix.\n     * @method translationMat4c\n     * @static\n     */\n    translationMat4c: ((() => {\n        const xyz = new FloatArrayType(3);\n        return (x, y, z, dest) => {\n            xyz[0] = x;\n            xyz[1] = y;\n            xyz[2] = z;\n            return math.translationMat4v(xyz, dest);\n        };\n    }))(),\n\n    /**\n     * Returns 4x4 translation matrix.\n     * @method translationMat4s\n     * @static\n     */\n    translationMat4s(s, dest) {\n        return math.translationMat4c(s, s, s, dest);\n    },\n\n    /**\n     * Efficiently post-concatenates a translation to the given matrix.\n     * @param v\n     * @param m\n     */\n    translateMat4v(xyz, m) {\n        return math.translateMat4c(xyz[0], xyz[1], xyz[2], m);\n    },\n\n    /**\n     * Efficiently post-concatenates a translation to the given matrix.\n     * @param x\n     * @param y\n     * @param z\n     * @param m\n     */\n    OLDtranslateMat4c(x, y, z, m) {\n\n        const m12 = m[12];\n        m[0] += m12 * x;\n        m[4] += m12 * y;\n        m[8] += m12 * z;\n\n        const m13 = m[13];\n        m[1] += m13 * x;\n        m[5] += m13 * y;\n        m[9] += m13 * z;\n\n        const m14 = m[14];\n        m[2] += m14 * x;\n        m[6] += m14 * y;\n        m[10] += m14 * z;\n\n        const m15 = m[15];\n        m[3] += m15 * x;\n        m[7] += m15 * y;\n        m[11] += m15 * z;\n\n        return m;\n    },\n\n    translateMat4c(x, y, z, m) {\n\n        const m3 = m[3];\n        m[0] += m3 * x;\n        m[1] += m3 * y;\n        m[2] += m3 * z;\n\n        const m7 = m[7];\n        m[4] += m7 * x;\n        m[5] += m7 * y;\n        m[6] += m7 * z;\n\n        const m11 = m[11];\n        m[8] += m11 * x;\n        m[9] += m11 * y;\n        m[10] += m11 * z;\n\n        const m15 = m[15];\n        m[12] += m15 * x;\n        m[13] += m15 * y;\n        m[14] += m15 * z;\n\n        return m;\n    },\n\n    /**\n     * Creates a new matrix that replaces the translation in the rightmost column of the given\n     * affine matrix with the given translation.\n     * @param m\n     * @param translation\n     * @param dest\n     * @returns {*}\n     */\n    setMat4Translation(m, translation, dest) {\n\n        dest[0] = m[0];\n        dest[1] = m[1];\n        dest[2] = m[2];\n        dest[3] = m[3];\n\n        dest[4] = m[4];\n        dest[5] = m[5];\n        dest[6] = m[6];\n        dest[7] = m[7];\n\n        dest[8] = m[8];\n        dest[9] = m[9];\n        dest[10] = m[10];\n        dest[11] = m[11];\n\n        dest[12] = translation[0];\n        dest[13] = translation[1];\n        dest[14] = translation[2];\n        dest[15] = m[15];\n\n        return dest;\n    },\n\n    /**\n     * Returns 4x4 rotation matrix.\n     * @method rotationMat4v\n     * @static\n     */\n    rotationMat4v(anglerad, axis, m) {\n        const ax = math.normalizeVec4([axis[0], axis[1], axis[2], 0.0], []);\n        const s = Math.sin(anglerad);\n        const c = Math.cos(anglerad);\n        const q = 1.0 - c;\n\n        const x = ax[0];\n        const y = ax[1];\n        const z = ax[2];\n\n        let xy;\n        let yz;\n        let zx;\n        let xs;\n        let ys;\n        let zs;\n\n        //xx = x * x; used once\n        //yy = y * y; used once\n        //zz = z * z; used once\n        xy = x * y;\n        yz = y * z;\n        zx = z * x;\n        xs = x * s;\n        ys = y * s;\n        zs = z * s;\n\n        m = m || math.mat4();\n\n        m[0] = (q * x * x) + c;\n        m[1] = (q * xy) + zs;\n        m[2] = (q * zx) - ys;\n        m[3] = 0.0;\n\n        m[4] = (q * xy) - zs;\n        m[5] = (q * y * y) + c;\n        m[6] = (q * yz) + xs;\n        m[7] = 0.0;\n\n        m[8] = (q * zx) + ys;\n        m[9] = (q * yz) - xs;\n        m[10] = (q * z * z) + c;\n        m[11] = 0.0;\n\n        m[12] = 0.0;\n        m[13] = 0.0;\n        m[14] = 0.0;\n        m[15] = 1.0;\n\n        return m;\n    },\n\n    /**\n     * Returns 4x4 rotation matrix.\n     * @method rotationMat4c\n     * @static\n     */\n    rotationMat4c(anglerad, x, y, z, mat) {\n        return math.rotationMat4v(anglerad, [x, y, z], mat);\n    },\n\n    /**\n     * Returns 4x4 scale matrix.\n     * @method scalingMat4v\n     * @static\n     */\n    scalingMat4v(v, m = math.identityMat4()) {\n        m[0] = v[0];\n        m[5] = v[1];\n        m[10] = v[2];\n        return m;\n    },\n\n    /**\n     * Returns 3x3 scale matrix.\n     * @method scalingMat3v\n     * @static\n     */\n    scalingMat3v(v, m = math.identityMat3()) {\n        m[0] = v[0];\n        m[4] = v[1];\n        return m;\n    },\n\n    /**\n     * Returns 4x4 scale matrix.\n     * @method scalingMat4c\n     * @static\n     */\n    scalingMat4c: ((() => {\n        const xyz = new FloatArrayType(3);\n        return (x, y, z, dest) => {\n            xyz[0] = x;\n            xyz[1] = y;\n            xyz[2] = z;\n            return math.scalingMat4v(xyz, dest);\n        };\n    }))(),\n\n    /**\n     * Efficiently post-concatenates a scaling to the given matrix.\n     * @method scaleMat4c\n     * @param x\n     * @param y\n     * @param z\n     * @param m\n     */\n    scaleMat4c(x, y, z, m) {\n\n        m[0] *= x;\n        m[4] *= y;\n        m[8] *= z;\n\n        m[1] *= x;\n        m[5] *= y;\n        m[9] *= z;\n\n        m[2] *= x;\n        m[6] *= y;\n        m[10] *= z;\n\n        m[3] *= x;\n        m[7] *= y;\n        m[11] *= z;\n        return m;\n    },\n\n    /**\n     * Efficiently post-concatenates a scaling to the given matrix.\n     * @method scaleMat4c\n     * @param xyz\n     * @param m\n     */\n    scaleMat4v(xyz, m) {\n\n        const x = xyz[0];\n        const y = xyz[1];\n        const z = xyz[2];\n\n        m[0] *= x;\n        m[4] *= y;\n        m[8] *= z;\n        m[1] *= x;\n        m[5] *= y;\n        m[9] *= z;\n        m[2] *= x;\n        m[6] *= y;\n        m[10] *= z;\n        m[3] *= x;\n        m[7] *= y;\n        m[11] *= z;\n\n        return m;\n    },\n\n    /**\n     * Returns 4x4 scale matrix.\n     * @method scalingMat4s\n     * @static\n     */\n    scalingMat4s(s) {\n        return math.scalingMat4c(s, s, s);\n    },\n\n    /**\n     * Creates a matrix from a quaternion rotation and vector translation\n     *\n     * @param {Number[]} q Rotation quaternion\n     * @param {Number[]} v Translation vector\n     * @param {Number[]} dest Destination matrix\n     * @returns {Number[]} dest\n     */\n    rotationTranslationMat4(q, v, dest = math.mat4()) {\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n\n        dest[0] = 1 - (yy + zz);\n        dest[1] = xy + wz;\n        dest[2] = xz - wy;\n        dest[3] = 0;\n        dest[4] = xy - wz;\n        dest[5] = 1 - (xx + zz);\n        dest[6] = yz + wx;\n        dest[7] = 0;\n        dest[8] = xz + wy;\n        dest[9] = yz - wx;\n        dest[10] = 1 - (xx + yy);\n        dest[11] = 0;\n        dest[12] = v[0];\n        dest[13] = v[1];\n        dest[14] = v[2];\n        dest[15] = 1;\n\n        return dest;\n    },\n\n    /**\n     * Gets Euler angles from a 4x4 matrix.\n     *\n     * @param {Number[]} mat The 4x4 matrix.\n     * @param {String} order Desired Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n     * @param {Number[]} [dest] Destination Euler angles, created by default.\n     * @returns {Number[]} The Euler angles.\n     */\n    mat4ToEuler(mat, order, dest = math.vec4()) {\n        const clamp = math.clamp;\n\n        // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        const m11 = mat[0];\n\n        const m12 = mat[4];\n        const m13 = mat[8];\n        const m21 = mat[1];\n        const m22 = mat[5];\n        const m23 = mat[9];\n        const m31 = mat[2];\n        const m32 = mat[6];\n        const m33 = mat[10];\n\n        if (order === 'XYZ') {\n\n            dest[1] = Math.asin(clamp(m13, -1, 1));\n\n            if (Math.abs(m13) < 0.99999) {\n                dest[0] = Math.atan2(-m23, m33);\n                dest[2] = Math.atan2(-m12, m11);\n            } else {\n                dest[0] = Math.atan2(m32, m22);\n                dest[2] = 0;\n\n            }\n\n        } else if (order === 'YXZ') {\n\n            dest[0] = Math.asin(-clamp(m23, -1, 1));\n\n            if (Math.abs(m23) < 0.99999) {\n                dest[1] = Math.atan2(m13, m33);\n                dest[2] = Math.atan2(m21, m22);\n            } else {\n                dest[1] = Math.atan2(-m31, m11);\n                dest[2] = 0;\n            }\n\n        } else if (order === 'ZXY') {\n\n            dest[0] = Math.asin(clamp(m32, -1, 1));\n\n            if (Math.abs(m32) < 0.99999) {\n                dest[1] = Math.atan2(-m31, m33);\n                dest[2] = Math.atan2(-m12, m22);\n            } else {\n                dest[1] = 0;\n                dest[2] = Math.atan2(m21, m11);\n            }\n\n        } else if (order === 'ZYX') {\n\n            dest[1] = Math.asin(-clamp(m31, -1, 1));\n\n            if (Math.abs(m31) < 0.99999) {\n                dest[0] = Math.atan2(m32, m33);\n                dest[2] = Math.atan2(m21, m11);\n            } else {\n                dest[0] = 0;\n                dest[2] = Math.atan2(-m12, m22);\n            }\n\n        } else if (order === 'YZX') {\n\n            dest[2] = Math.asin(clamp(m21, -1, 1));\n\n            if (Math.abs(m21) < 0.99999) {\n                dest[0] = Math.atan2(-m23, m22);\n                dest[1] = Math.atan2(-m31, m11);\n            } else {\n                dest[0] = 0;\n                dest[1] = Math.atan2(m13, m33);\n            }\n\n        } else if (order === 'XZY') {\n\n            dest[2] = Math.asin(-clamp(m12, -1, 1));\n\n            if (Math.abs(m12) < 0.99999) {\n                dest[0] = Math.atan2(m32, m22);\n                dest[1] = Math.atan2(m13, m11);\n            } else {\n                dest[0] = Math.atan2(-m23, m33);\n                dest[1] = 0;\n            }\n        }\n\n        return dest;\n    },\n\n    composeMat4(position, quaternion, scale, mat = math.mat4()) {\n        math.quaternionToRotationMat4(quaternion, mat);\n        math.scaleMat4v(scale, mat);\n        math.translateMat4v(position, mat);\n\n        return mat;\n    },\n\n    decomposeMat4: (() => {\n\n        const vec = new FloatArrayType(3);\n        const matrix = new FloatArrayType(16);\n\n        return function decompose(mat, position, quaternion, scale) {\n\n            vec[0] = mat[0];\n            vec[1] = mat[1];\n            vec[2] = mat[2];\n\n            let sx = math.lenVec3(vec);\n\n            vec[0] = mat[4];\n            vec[1] = mat[5];\n            vec[2] = mat[6];\n\n            const sy = math.lenVec3(vec);\n\n            vec[8] = mat[8];\n            vec[9] = mat[9];\n            vec[10] = mat[10];\n\n            const sz = math.lenVec3(vec);\n\n            // if determine is negative, we need to invert one scale\n            const det = math.determinantMat4(mat);\n\n            if (det < 0) {\n                sx = -sx;\n            }\n\n            position[0] = mat[12];\n            position[1] = mat[13];\n            position[2] = mat[14];\n\n            // scale the rotation part\n            matrix.set(mat);\n\n            const invSX = 1 / sx;\n            const invSY = 1 / sy;\n            const invSZ = 1 / sz;\n\n            matrix[0] *= invSX;\n            matrix[1] *= invSX;\n            matrix[2] *= invSX;\n\n            matrix[4] *= invSY;\n            matrix[5] *= invSY;\n            matrix[6] *= invSY;\n\n            matrix[8] *= invSZ;\n            matrix[9] *= invSZ;\n            matrix[10] *= invSZ;\n\n            math.mat4ToQuaternion(matrix, quaternion);\n\n            scale[0] = sx;\n            scale[1] = sy;\n            scale[2] = sz;\n\n            return this;\n\n        };\n\n    })(),\n\n    /** @private */\n    getColMat4(mat, c) {\n        const i = c * 4;\n        return [mat[i], mat[i + 1], mat[i + 2], mat[i + 3]];\n    },\n\n    /** @private */\n    setRowMat4(mat, r, v) {\n        mat[r] = v[0];\n        mat[r + 4] = v[1];\n        mat[r + 8] = v[2];\n        mat[r + 12] = v[3];\n    },\n\n    /**\n     * Returns a 4x4 'lookat' viewing transform matrix.\n     * @method lookAtMat4v\n     * @param pos vec3 position of the viewer\n     * @param target vec3 point the viewer is looking at\n     * @param up vec3 pointing \"up\"\n     * @param dest mat4 Optional, mat4 matrix will be written into\n     *\n     * @return {mat4} dest if specified, a new mat4 otherwise\n     */\n    lookAtMat4v(pos, target, up, dest) {\n        if (!dest) {\n            dest = math.mat4();\n        }\n\n        const posx = pos[0];\n        const posy = pos[1];\n        const posz = pos[2];\n        const upx = up[0];\n        const upy = up[1];\n        const upz = up[2];\n        const targetx = target[0];\n        const targety = target[1];\n        const targetz = target[2];\n\n        if (posx === targetx && posy === targety && posz === targetz) {\n            return math.identityMat4();\n        }\n\n        let z0;\n        let z1;\n        let z2;\n        let x0;\n        let x1;\n        let x2;\n        let y0;\n        let y1;\n        let y2;\n        let len;\n\n        //vec3.direction(eye, center, z);\n        z0 = posx - targetx;\n        z1 = posy - targety;\n        z2 = posz - targetz;\n\n        // normalize (no check needed for 0 because of early return)\n        len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n\n        //vec3.normalize(vec3.cross(up, z, x));\n        x0 = upy * z2 - upz * z1;\n        x1 = upz * z0 - upx * z2;\n        x2 = upx * z1 - upy * z0;\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n        if (!len) {\n            x0 = 0;\n            x1 = 0;\n            x2 = 0;\n        } else {\n            len = 1 / len;\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n\n        //vec3.normalize(vec3.cross(z, x, y));\n        y0 = z1 * x2 - z2 * x1;\n        y1 = z2 * x0 - z0 * x2;\n        y2 = z0 * x1 - z1 * x0;\n\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n        if (!len) {\n            y0 = 0;\n            y1 = 0;\n            y2 = 0;\n        } else {\n            len = 1 / len;\n            y0 *= len;\n            y1 *= len;\n            y2 *= len;\n        }\n\n        dest[0] = x0;\n        dest[1] = y0;\n        dest[2] = z0;\n        dest[3] = 0;\n        dest[4] = x1;\n        dest[5] = y1;\n        dest[6] = z1;\n        dest[7] = 0;\n        dest[8] = x2;\n        dest[9] = y2;\n        dest[10] = z2;\n        dest[11] = 0;\n        dest[12] = -(x0 * posx + x1 * posy + x2 * posz);\n        dest[13] = -(y0 * posx + y1 * posy + y2 * posz);\n        dest[14] = -(z0 * posx + z1 * posy + z2 * posz);\n        dest[15] = 1;\n\n        return dest;\n    },\n\n    /**\n     * Returns a 4x4 'lookat' viewing transform matrix.\n     * @method lookAtMat4c\n     * @static\n     */\n    lookAtMat4c(posx, posy, posz, targetx, targety, targetz, upx, upy, upz) {\n        return math.lookAtMat4v([posx, posy, posz], [targetx, targety, targetz], [upx, upy, upz], []);\n    },\n\n    /**\n     * Returns a 4x4 orthographic projection matrix.\n     * @method orthoMat4c\n     * @static\n     */\n    orthoMat4c(left, right, bottom, top, near, far, dest) {\n        if (!dest) {\n            dest = math.mat4();\n        }\n        const rl = (right - left);\n        const tb = (top - bottom);\n        const fn = (far - near);\n\n        dest[0] = 2.0 / rl;\n        dest[1] = 0.0;\n        dest[2] = 0.0;\n        dest[3] = 0.0;\n\n        dest[4] = 0.0;\n        dest[5] = 2.0 / tb;\n        dest[6] = 0.0;\n        dest[7] = 0.0;\n\n        dest[8] = 0.0;\n        dest[9] = 0.0;\n        dest[10] = -2.0 / fn;\n        dest[11] = 0.0;\n\n        dest[12] = -(left + right) / rl;\n        dest[13] = -(top + bottom) / tb;\n        dest[14] = -(far + near) / fn;\n        dest[15] = 1.0;\n\n        return dest;\n    },\n\n    /**\n     * Returns a 4x4 perspective projection matrix.\n     * @method frustumMat4v\n     * @static\n     */\n    frustumMat4v(fmin, fmax, m) {\n        if (!m) {\n            m = math.mat4();\n        }\n\n        const fmin4 = [fmin[0], fmin[1], fmin[2], 0.0];\n        const fmax4 = [fmax[0], fmax[1], fmax[2], 0.0];\n\n        math.addVec4(fmax4, fmin4, tempMat1);\n        math.subVec4(fmax4, fmin4, tempMat2);\n\n        const t = 2.0 * fmin4[2];\n\n        const tempMat20 = tempMat2[0];\n        const tempMat21 = tempMat2[1];\n        const tempMat22 = tempMat2[2];\n\n        m[0] = t / tempMat20;\n        m[1] = 0.0;\n        m[2] = 0.0;\n        m[3] = 0.0;\n\n        m[4] = 0.0;\n        m[5] = t / tempMat21;\n        m[6] = 0.0;\n        m[7] = 0.0;\n\n        m[8] = tempMat1[0] / tempMat20;\n        m[9] = tempMat1[1] / tempMat21;\n        m[10] = -tempMat1[2] / tempMat22;\n        m[11] = -1.0;\n\n        m[12] = 0.0;\n        m[13] = 0.0;\n        m[14] = -t * fmax4[2] / tempMat22;\n        m[15] = 0.0;\n\n        return m;\n    },\n\n    /**\n     * Returns a 4x4 perspective projection matrix.\n     * @method frustumMat4v\n     * @static\n     */\n    frustumMat4(left, right, bottom, top, near, far, dest) {\n        if (!dest) {\n            dest = math.mat4();\n        }\n        const rl = (right - left);\n        const tb = (top - bottom);\n        const fn = (far - near);\n        dest[0] = (near * 2) / rl;\n        dest[1] = 0;\n        dest[2] = 0;\n        dest[3] = 0;\n        dest[4] = 0;\n        dest[5] = (near * 2) / tb;\n        dest[6] = 0;\n        dest[7] = 0;\n        dest[8] = (right + left) / rl;\n        dest[9] = (top + bottom) / tb;\n        dest[10] = -(far + near) / fn;\n        dest[11] = -1;\n        dest[12] = 0;\n        dest[13] = 0;\n        dest[14] = -(far * near * 2) / fn;\n        dest[15] = 0;\n        return dest;\n    },\n\n    /**\n     * Returns a 4x4 perspective projection matrix.\n     * @method perspectiveMat4v\n     * @static\n     */\n    perspectiveMat4(fovyrad, aspectratio, znear, zfar, m) {\n        const pmin = [];\n        const pmax = [];\n\n        pmin[2] = znear;\n        pmax[2] = zfar;\n\n        pmax[1] = pmin[2] * Math.tan(fovyrad / 2.0);\n        pmin[1] = -pmax[1];\n\n        pmax[0] = pmax[1] * aspectratio;\n        pmin[0] = -pmax[0];\n\n        return math.frustumMat4v(pmin, pmax, m);\n    },\n\n    /**\n     * Returns true if the two 4x4 matrices are the same.\n     * @param m1\n     * @param m2\n     * @returns {boolean}\n     */\n    compareMat4(m1, m2) {\n        return m1[0] === m2[0] &&\n            m1[1] === m2[1] &&\n            m1[2] === m2[2] &&\n            m1[3] === m2[3] &&\n            m1[4] === m2[4] &&\n            m1[5] === m2[5] &&\n            m1[6] === m2[6] &&\n            m1[7] === m2[7] &&\n            m1[8] === m2[8] &&\n            m1[9] === m2[9] &&\n            m1[10] === m2[10] &&\n            m1[11] === m2[11] &&\n            m1[12] === m2[12] &&\n            m1[13] === m2[13] &&\n            m1[14] === m2[14] &&\n            m1[15] === m2[15];\n    },\n\n    /**\n     * Transforms a three-element position by a 4x4 matrix.\n     * @method transformPoint3\n     * @static\n     */\n    transformPoint3(m, p, dest = math.vec3()) {\n\n        const x = p[0];\n        const y = p[1];\n        const z = p[2];\n\n        dest[0] = (m[0] * x) + (m[4] * y) + (m[8] * z) + m[12];\n        dest[1] = (m[1] * x) + (m[5] * y) + (m[9] * z) + m[13];\n        dest[2] = (m[2] * x) + (m[6] * y) + (m[10] * z) + m[14];\n\n        return dest;\n    },\n\n    /**\n     * Transforms a homogeneous coordinate by a 4x4 matrix.\n     * @method transformPoint3\n     * @static\n     */\n    transformPoint4(m, v, dest = math.vec4()) {\n        dest[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\n        dest[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\n        dest[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\n        dest[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\n\n        return dest;\n    },\n\n\n    /**\n     * Transforms an array of three-element positions by a 4x4 matrix.\n     * @method transformPoints3\n     * @static\n     */\n    transformPoints3(m, points, points2) {\n        const result = points2 || [];\n        const len = points.length;\n        let p0;\n        let p1;\n        let p2;\n        let pi;\n\n        // cache values\n        const m0 = m[0];\n\n        const m1 = m[1];\n        const m2 = m[2];\n        const m3 = m[3];\n        const m4 = m[4];\n        const m5 = m[5];\n        const m6 = m[6];\n        const m7 = m[7];\n        const m8 = m[8];\n        const m9 = m[9];\n        const m10 = m[10];\n        const m11 = m[11];\n        const m12 = m[12];\n        const m13 = m[13];\n        const m14 = m[14];\n        const m15 = m[15];\n\n        let r;\n\n        for (let i = 0; i < len; ++i) {\n\n            // cache values\n            pi = points[i];\n\n            p0 = pi[0];\n            p1 = pi[1];\n            p2 = pi[2];\n\n            r = result[i] || (result[i] = [0, 0, 0]);\n\n            r[0] = (m0 * p0) + (m4 * p1) + (m8 * p2) + m12;\n            r[1] = (m1 * p0) + (m5 * p1) + (m9 * p2) + m13;\n            r[2] = (m2 * p0) + (m6 * p1) + (m10 * p2) + m14;\n            r[3] = (m3 * p0) + (m7 * p1) + (m11 * p2) + m15;\n        }\n\n        result.length = len;\n\n        return result;\n    },\n\n    /**\n     * Transforms an array of positions by a 4x4 matrix.\n     * @method transformPositions3\n     * @static\n     */\n    transformPositions3(m, p, p2 = p) {\n        let i;\n        const len = p.length;\n\n        let x;\n        let y;\n        let z;\n\n        const m0 = m[0];\n        const m1 = m[1];\n        const m2 = m[2];\n        const m3 = m[3];\n        const m4 = m[4];\n        const m5 = m[5];\n        const m6 = m[6];\n        const m7 = m[7];\n        const m8 = m[8];\n        const m9 = m[9];\n        const m10 = m[10];\n        const m11 = m[11];\n        const m12 = m[12];\n        const m13 = m[13];\n        const m14 = m[14];\n        const m15 = m[15];\n\n        for (i = 0; i < len; i += 3) {\n\n            x = p[i + 0];\n            y = p[i + 1];\n            z = p[i + 2];\n\n            p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n            p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n            p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n            p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n        }\n\n        return p2;\n    },\n\n    /**\n     * Transforms an array of positions by a 4x4 matrix.\n     * @method transformPositions4\n     * @static\n     */\n    transformPositions4(m, p, p2 = p) {\n        let i;\n        const len = p.length;\n\n        let x;\n        let y;\n        let z;\n\n        const m0 = m[0];\n        const m1 = m[1];\n        const m2 = m[2];\n        const m3 = m[3];\n        const m4 = m[4];\n        const m5 = m[5];\n        const m6 = m[6];\n        const m7 = m[7];\n        const m8 = m[8];\n        const m9 = m[9];\n        const m10 = m[10];\n        const m11 = m[11];\n        const m12 = m[12];\n        const m13 = m[13];\n        const m14 = m[14];\n        const m15 = m[15];\n\n        for (i = 0; i < len; i += 4) {\n\n            x = p[i + 0];\n            y = p[i + 1];\n            z = p[i + 2];\n\n            p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n            p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n            p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n            p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n        }\n\n        return p2;\n    },\n\n    /**\n     * Transforms a three-element vector by a 4x4 matrix.\n     * @method transformVec3\n     * @static\n     */\n    transformVec3(m, v, dest) {\n        const v0 = v[0];\n        const v1 = v[1];\n        const v2 = v[2];\n        dest = dest || this.vec3();\n        dest[0] = (m[0] * v0) + (m[4] * v1) + (m[8] * v2);\n        dest[1] = (m[1] * v0) + (m[5] * v1) + (m[9] * v2);\n        dest[2] = (m[2] * v0) + (m[6] * v1) + (m[10] * v2);\n        return dest;\n    },\n\n    /**\n     * Transforms a four-element vector by a 4x4 matrix.\n     * @method transformVec4\n     * @static\n     */\n    transformVec4(m, v, dest) {\n        const v0 = v[0];\n        const v1 = v[1];\n        const v2 = v[2];\n        const v3 = v[3];\n        dest = dest || math.vec4();\n        dest[0] = m[0] * v0 + m[4] * v1 + m[8] * v2 + m[12] * v3;\n        dest[1] = m[1] * v0 + m[5] * v1 + m[9] * v2 + m[13] * v3;\n        dest[2] = m[2] * v0 + m[6] * v1 + m[10] * v2 + m[14] * v3;\n        dest[3] = m[3] * v0 + m[7] * v1 + m[11] * v2 + m[15] * v3;\n        return dest;\n    },\n\n    /**\n     * Rotate a 3D vector around the x-axis\n     *\n     * @method rotateVec3X\n     * @param {Number[]} a The vec3 point to rotate\n     * @param {Number[]} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @param {Number[]} dest The receiving vec3\n     * @returns {Number[]} dest\n     * @static\n     */\n    rotateVec3X(a, b, c, dest) {\n        const p = [];\n        const r = [];\n\n        //Translate point to the origin\n        p[0] = a[0] - b[0];\n        p[1] = a[1] - b[1];\n        p[2] = a[2] - b[2];\n\n        //perform rotation\n        r[0] = p[0];\n        r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n        r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\n        //translate to correct position\n        dest[0] = r[0] + b[0];\n        dest[1] = r[1] + b[1];\n        dest[2] = r[2] + b[2];\n\n        return dest;\n    },\n\n    /**\n     * Rotate a 3D vector around the y-axis\n     *\n     * @method rotateVec3Y\n     * @param {Number[]} a The vec3 point to rotate\n     * @param {Number[]} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @param {Number[]} dest The receiving vec3\n     * @returns {Number[]} dest\n     * @static\n     */\n    rotateVec3Y(a, b, c, dest) {\n        const p = [];\n        const r = [];\n\n        //Translate point to the origin\n        p[0] = a[0] - b[0];\n        p[1] = a[1] - b[1];\n        p[2] = a[2] - b[2];\n\n        //perform rotation\n        r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n        r[1] = p[1];\n        r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\n        //translate to correct position\n        dest[0] = r[0] + b[0];\n        dest[1] = r[1] + b[1];\n        dest[2] = r[2] + b[2];\n\n        return dest;\n    },\n\n    /**\n     * Rotate a 3D vector around the z-axis\n     *\n     * @method rotateVec3Z\n     * @param {Number[]} a The vec3 point to rotate\n     * @param {Number[]} b The origin of the rotation\n     * @param {Number} c The angle of rotation\n     * @param {Number[]} dest The receiving vec3\n     * @returns {Number[]} dest\n     * @static\n     */\n    rotateVec3Z(a, b, c, dest) {\n        const p = [];\n        const r = [];\n\n        //Translate point to the origin\n        p[0] = a[0] - b[0];\n        p[1] = a[1] - b[1];\n        p[2] = a[2] - b[2];\n\n        //perform rotation\n        r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n        r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n        r[2] = p[2];\n\n        //translate to correct position\n        dest[0] = r[0] + b[0];\n        dest[1] = r[1] + b[1];\n        dest[2] = r[2] + b[2];\n\n        return dest;\n    },\n\n    /**\n     * Transforms a four-element vector by a 4x4 projection matrix.\n     *\n     * @method projectVec4\n     * @param {Number[]} p 3D View-space coordinate\n     * @param {Number[]} q 2D Projected coordinate\n     * @returns {Number[]} 2D Projected coordinate\n     * @static\n     */\n    projectVec4(p, q) {\n        const f = 1.0 / p[3];\n        q = q || math.vec2();\n        q[0] = p[0] * f;\n        q[1] = p[1] * f;\n        return q;\n    },\n\n    /**\n     * Unprojects a three-element vector.\n     *\n     * @method unprojectVec3\n     * @param {Number[]} p 3D Projected coordinate\n     * @param {Number[]} viewMat View matrix\n     * @returns {Number[]} projMat Projection matrix\n     * @static\n     */\n    unprojectVec3: ((() => {\n        const mat = new FloatArrayType(16);\n        const mat2 = new FloatArrayType(16);\n        const mat3 = new FloatArrayType(16);\n        return function (p, viewMat, projMat, q) {\n            return this.transformVec3(this.mulMat4(this.inverseMat4(viewMat, mat), this.inverseMat4(projMat, mat2), mat3), p, q)\n        };\n    }))(),\n\n    /**\n     * Linearly interpolates between two 3D vectors.\n     * @method lerpVec3\n     * @static\n     */\n    lerpVec3(t, t1, t2, p1, p2, dest) {\n        const result = dest || math.vec3();\n        const f = (t - t1) / (t2 - t1);\n        result[0] = p1[0] + (f * (p2[0] - p1[0]));\n        result[1] = p1[1] + (f * (p2[1] - p1[1]));\n        result[2] = p1[2] + (f * (p2[2] - p1[2]));\n        return result;\n    },\n\n    /**\n     * Linearly interpolates between two 4x4 matrices.\n     * @method lerpMat4\n     * @static\n     */\n    lerpMat4(t, t1, t2, m1, m2, dest) {\n        const result = dest || math.mat4();\n        const f = (t - t1) / (t2 - t1);\n        result[0] = m1[0] + (f * (m2[0] - m1[0]));\n        result[1] = m1[1] + (f * (m2[1] - m1[1]));\n        result[2] = m1[2] + (f * (m2[2] - m1[2]));\n        result[3] = m1[3] + (f * (m2[3] - m1[3]));\n        result[4] = m1[4] + (f * (m2[4] - m1[4]));\n        result[5] = m1[5] + (f * (m2[5] - m1[5]));\n        result[6] = m1[6] + (f * (m2[6] - m1[6]));\n        result[7] = m1[7] + (f * (m2[7] - m1[7]));\n        result[8] = m1[8] + (f * (m2[8] - m1[8]));\n        result[9] = m1[9] + (f * (m2[9] - m1[9]));\n        result[10] = m1[10] + (f * (m2[10] - m1[10]));\n        result[11] = m1[11] + (f * (m2[11] - m1[11]));\n        result[12] = m1[12] + (f * (m2[12] - m1[12]));\n        result[13] = m1[13] + (f * (m2[13] - m1[13]));\n        result[14] = m1[14] + (f * (m2[14] - m1[14]));\n        result[15] = m1[15] + (f * (m2[15] - m1[15]));\n        return result;\n    },\n\n\n    /**\n     * Flattens a two-dimensional array into a one-dimensional array.\n     *\n     * @method flatten\n     * @static\n     * @param {Array of Arrays} a A 2D array\n     * @returns Flattened 1D array\n     */\n    flatten(a) {\n\n        const result = [];\n\n        let i;\n        let leni;\n        let j;\n        let lenj;\n        let item;\n\n        for (i = 0, leni = a.length; i < leni; i++) {\n            item = a[i];\n            for (j = 0, lenj = item.length; j < lenj; j++) {\n                result.push(item[j]);\n            }\n        }\n\n        return result;\n    },\n\n\n    identityQuaternion(dest = math.vec4()) {\n        dest[0] = 0.0;\n        dest[1] = 0.0;\n        dest[2] = 0.0;\n        dest[3] = 1.0;\n        return dest;\n    },\n\n    /**\n     * Initializes a quaternion from Euler angles.\n     *\n     * @param {Number[]} euler The Euler angles.\n     * @param {String} order Euler angle order: \"XYZ\", \"YXZ\", \"ZXY\" etc.\n     * @param {Number[]} [dest] Destination quaternion, created by default.\n     * @returns {Number[]} The quaternion.\n     */\n    eulerToQuaternion(euler, order, dest = math.vec4()) {\n        // http://www.mathworks.com/matlabcentral/fileexchange/\n        // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n        //\tcontent/SpinCalc.m\n\n        const a = (euler[0] * math.DEGTORAD) / 2;\n        const b = (euler[1] * math.DEGTORAD) / 2;\n        const c = (euler[2] * math.DEGTORAD) / 2;\n\n        const c1 = Math.cos(a);\n        const c2 = Math.cos(b);\n        const c3 = Math.cos(c);\n        const s1 = Math.sin(a);\n        const s2 = Math.sin(b);\n        const s3 = Math.sin(c);\n\n        if (order === 'XYZ') {\n\n            dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n\n        } else if (order === 'YXZ') {\n\n            dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n\n        } else if (order === 'ZXY') {\n\n            dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n\n        } else if (order === 'ZYX') {\n\n            dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n\n        } else if (order === 'YZX') {\n\n            dest[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            dest[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            dest[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            dest[3] = c1 * c2 * c3 - s1 * s2 * s3;\n\n        } else if (order === 'XZY') {\n\n            dest[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            dest[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            dest[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            dest[3] = c1 * c2 * c3 + s1 * s2 * s3;\n        }\n\n        return dest;\n    },\n\n    mat4ToQuaternion(m, dest = math.vec4()) {\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n        // Assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n        const m11 = m[0];\n        const m12 = m[4];\n        const m13 = m[8];\n        const m21 = m[1];\n        const m22 = m[5];\n        const m23 = m[9];\n        const m31 = m[2];\n        const m32 = m[6];\n        const m33 = m[10];\n        let s;\n\n        const trace = m11 + m22 + m33;\n\n        if (trace > 0) {\n\n            s = 0.5 / Math.sqrt(trace + 1.0);\n\n            dest[3] = 0.25 / s;\n            dest[0] = (m32 - m23) * s;\n            dest[1] = (m13 - m31) * s;\n            dest[2] = (m21 - m12) * s;\n\n        } else if (m11 > m22 && m11 > m33) {\n\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\n            dest[3] = (m32 - m23) / s;\n            dest[0] = 0.25 * s;\n            dest[1] = (m12 + m21) / s;\n            dest[2] = (m13 + m31) / s;\n\n        } else if (m22 > m33) {\n\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\n            dest[3] = (m13 - m31) / s;\n            dest[0] = (m12 + m21) / s;\n            dest[1] = 0.25 * s;\n            dest[2] = (m23 + m32) / s;\n\n        } else {\n\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\n            dest[3] = (m21 - m12) / s;\n            dest[0] = (m13 + m31) / s;\n            dest[1] = (m23 + m32) / s;\n            dest[2] = 0.25 * s;\n        }\n\n        return dest;\n    },\n\n    vec3PairToQuaternion(u, v, dest = math.vec4()) {\n        const norm_u_norm_v = Math.sqrt(math.dotVec3(u, u) * math.dotVec3(v, v));\n        let real_part = norm_u_norm_v + math.dotVec3(u, v);\n\n        if (real_part < 0.00000001 * norm_u_norm_v) {\n\n            // If u and v are exactly opposite, rotate 180 degrees\n            // around an arbitrary orthogonal axis. Axis normalisation\n            // can happen later, when we normalise the quaternion.\n\n            real_part = 0.0;\n\n            if (Math.abs(u[0]) > Math.abs(u[2])) {\n\n                dest[0] = -u[1];\n                dest[1] = u[0];\n                dest[2] = 0;\n\n            } else {\n                dest[0] = 0;\n                dest[1] = -u[2];\n                dest[2] = u[1]\n            }\n\n        } else {\n\n            // Otherwise, build quaternion the standard way.\n            math.cross3Vec3(u, v, dest);\n        }\n\n        dest[3] = real_part;\n\n        return math.normalizeQuaternion(dest);\n    },\n\n    angleAxisToQuaternion(angleAxis, dest = math.vec4()) {\n        const halfAngle = angleAxis[3] / 2.0;\n        const fsin = Math.sin(halfAngle);\n        dest[0] = fsin * angleAxis[0];\n        dest[1] = fsin * angleAxis[1];\n        dest[2] = fsin * angleAxis[2];\n        dest[3] = Math.cos(halfAngle);\n        return dest;\n    },\n\n    quaternionToEuler: ((() => {\n        const mat = new FloatArrayType(16);\n        return (q, order, dest) => {\n            dest = dest || math.vec3();\n            math.quaternionToRotationMat4(q, mat);\n            math.mat4ToEuler(mat, order, dest);\n            return dest;\n        };\n    }))(),\n\n    mulQuaternions(p, q, dest = math.vec4()) {\n        const p0 = p[0];\n        const p1 = p[1];\n        const p2 = p[2];\n        const p3 = p[3];\n        const q0 = q[0];\n        const q1 = q[1];\n        const q2 = q[2];\n        const q3 = q[3];\n        dest[0] = p3 * q0 + p0 * q3 + p1 * q2 - p2 * q1;\n        dest[1] = p3 * q1 + p1 * q3 + p2 * q0 - p0 * q2;\n        dest[2] = p3 * q2 + p2 * q3 + p0 * q1 - p1 * q0;\n        dest[3] = p3 * q3 - p0 * q0 - p1 * q1 - p2 * q2;\n        return dest;\n    },\n\n    vec3ApplyQuaternion(q, vec, dest = math.vec3()) {\n        const x = vec[0];\n        const y = vec[1];\n        const z = vec[2];\n\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n\n        // calculate quat * vector\n\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n\n        // calculate result * inverse quat\n\n        dest[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        dest[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        dest[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n        return dest;\n    },\n\n    quaternionToMat4(q, dest) {\n\n        dest = math.identityMat4(dest);\n\n        const q0 = q[0];  //x\n        const q1 = q[1];  //y\n        const q2 = q[2];  //z\n        const q3 = q[3];  //w\n\n        const tx = 2.0 * q0;\n        const ty = 2.0 * q1;\n        const tz = 2.0 * q2;\n\n        const twx = tx * q3;\n        const twy = ty * q3;\n        const twz = tz * q3;\n\n        const txx = tx * q0;\n        const txy = ty * q0;\n        const txz = tz * q0;\n\n        const tyy = ty * q1;\n        const tyz = tz * q1;\n        const tzz = tz * q2;\n\n        dest[0] = 1.0 - (tyy + tzz);\n        dest[1] = txy + twz;\n        dest[2] = txz - twy;\n\n        dest[4] = txy - twz;\n        dest[5] = 1.0 - (txx + tzz);\n        dest[6] = tyz + twx;\n\n        dest[8] = txz + twy;\n        dest[9] = tyz - twx;\n\n        dest[10] = 1.0 - (txx + tyy);\n\n        return dest;\n    },\n\n    quaternionToRotationMat4(q, m) {\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n\n        m[0] = 1 - (yy + zz);\n        m[4] = xy - wz;\n        m[8] = xz + wy;\n\n        m[1] = xy + wz;\n        m[5] = 1 - (xx + zz);\n        m[9] = yz - wx;\n\n        m[2] = xz - wy;\n        m[6] = yz + wx;\n        m[10] = 1 - (xx + yy);\n\n        // last column\n        m[3] = 0;\n        m[7] = 0;\n        m[11] = 0;\n\n        // bottom row\n        m[12] = 0;\n        m[13] = 0;\n        m[14] = 0;\n        m[15] = 1;\n\n        return m;\n    },\n\n    normalizeQuaternion(q, dest = q) {\n        const len = math.lenVec4([q[0], q[1], q[2], q[3]]);\n        dest[0] = q[0] / len;\n        dest[1] = q[1] / len;\n        dest[2] = q[2] / len;\n        dest[3] = q[3] / len;\n        return dest;\n    },\n\n    conjugateQuaternion(q, dest = q) {\n        dest[0] = -q[0];\n        dest[1] = -q[1];\n        dest[2] = -q[2];\n        dest[3] = q[3];\n        return dest;\n    },\n\n    inverseQuaternion(q, dest) {\n        return math.normalizeQuaternion(math.conjugateQuaternion(q, dest));\n    },\n\n    quaternionToAngleAxis(q, angleAxis = math.vec4()) {\n        q = math.normalizeQuaternion(q, tempVec4);\n        const q3 = q[3];\n        const angle = 2 * Math.acos(q3);\n        const s = Math.sqrt(1 - q3 * q3);\n        if (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\n            angleAxis[0] = q[0];\n            angleAxis[1] = q[1];\n            angleAxis[2] = q[2];\n        } else {\n            angleAxis[0] = q[0] / s;\n            angleAxis[1] = q[1] / s;\n            angleAxis[2] = q[2] / s;\n        }\n        angleAxis[3] = angle; // * 57.295779579;\n        return angleAxis;\n    },\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Boundaries\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns a new, uninitialized 3D axis-aligned bounding box.\n     *\n     * @private\n     */\n    AABB3(values) {\n        return new FloatArrayType(values || 6);\n    },\n\n    /**\n     * Returns a new, uninitialized 2D axis-aligned bounding box.\n     *\n     * @private\n     */\n    AABB2(values) {\n        return new FloatArrayType(values || 4);\n    },\n\n    /**\n     * Returns a new, uninitialized 3D oriented bounding box (OBB).\n     *\n     * @private\n     */\n    OBB3(values) {\n        return new FloatArrayType(values || 32);\n    },\n\n    /**\n     * Returns a new, uninitialized 2D oriented bounding box (OBB).\n     *\n     * @private\n     */\n    OBB2(values) {\n        return new FloatArrayType(values || 16);\n    },\n\n    /** Returns a new 3D bounding sphere */\n    Sphere3(x, y, z, r) {\n        return new FloatArrayType([x, y, z, r]);\n    },\n\n    /**\n     * Transforms an OBB3 by a 4x4 matrix.\n     *\n     * @private\n     */\n    transformOBB3(m, p, p2 = p) {\n        let i;\n        const len = p.length;\n\n        let x;\n        let y;\n        let z;\n\n        const m0 = m[0];\n        const m1 = m[1];\n        const m2 = m[2];\n        const m3 = m[3];\n        const m4 = m[4];\n        const m5 = m[5];\n        const m6 = m[6];\n        const m7 = m[7];\n        const m8 = m[8];\n        const m9 = m[9];\n        const m10 = m[10];\n        const m11 = m[11];\n        const m12 = m[12];\n        const m13 = m[13];\n        const m14 = m[14];\n        const m15 = m[15];\n\n        for (i = 0; i < len; i += 4) {\n\n            x = p[i + 0];\n            y = p[i + 1];\n            z = p[i + 2];\n\n            p2[i + 0] = (m0 * x) + (m4 * y) + (m8 * z) + m12;\n            p2[i + 1] = (m1 * x) + (m5 * y) + (m9 * z) + m13;\n            p2[i + 2] = (m2 * x) + (m6 * y) + (m10 * z) + m14;\n            p2[i + 3] = (m3 * x) + (m7 * y) + (m11 * z) + m15;\n        }\n\n        return p2;\n    },\n\n    /** Returns true if the first AABB contains the second AABB.\n     * @param aabb1\n     * @param aabb2\n     * @returns {boolean}\n     */\n    containsAABB3: function (aabb1, aabb2) {\n        const result = (\n            aabb1[0] <= aabb2[0] && aabb2[3] <= aabb1[3] &&\n            aabb1[1] <= aabb2[1] && aabb2[4] <= aabb1[4] &&\n            aabb1[2] <= aabb2[2] && aabb2[5] <= aabb1[5]);\n        return result;\n    },\n\n\n    /**\n     * Gets the diagonal size of an AABB3 given as minima and maxima.\n     *\n     * @private\n     */\n    getAABB3Diag: ((() => {\n\n        const min = new FloatArrayType(3);\n        const max = new FloatArrayType(3);\n        const tempVec3 = new FloatArrayType(3);\n\n        return aabb => {\n\n            min[0] = aabb[0];\n            min[1] = aabb[1];\n            min[2] = aabb[2];\n\n            max[0] = aabb[3];\n            max[1] = aabb[4];\n            max[2] = aabb[5];\n\n            math.subVec3(max, min, tempVec3);\n\n            return Math.abs(math.lenVec3(tempVec3));\n        };\n    }))(),\n\n    /**\n     * Get a diagonal boundary size that is symmetrical about the given point.\n     *\n     * @private\n     */\n    getAABB3DiagPoint: ((() => {\n\n        const min = new FloatArrayType(3);\n        const max = new FloatArrayType(3);\n        const tempVec3 = new FloatArrayType(3);\n\n        return (aabb, p) => {\n\n            min[0] = aabb[0];\n            min[1] = aabb[1];\n            min[2] = aabb[2];\n\n            max[0] = aabb[3];\n            max[1] = aabb[4];\n            max[2] = aabb[5];\n\n            const diagVec = math.subVec3(max, min, tempVec3);\n\n            const xneg = p[0] - aabb[0];\n            const xpos = aabb[3] - p[0];\n            const yneg = p[1] - aabb[1];\n            const ypos = aabb[4] - p[1];\n            const zneg = p[2] - aabb[2];\n            const zpos = aabb[5] - p[2];\n\n            diagVec[0] += (xneg > xpos) ? xneg : xpos;\n            diagVec[1] += (yneg > ypos) ? yneg : ypos;\n            diagVec[2] += (zneg > zpos) ? zneg : zpos;\n\n            return Math.abs(math.lenVec3(diagVec));\n        };\n    }))(),\n\n    /**\n     * Gets the area of an AABB.\n     *\n     * @private\n     */\n    getAABB3Area(aabb) {\n        const width = (aabb[3] - aabb[0]);\n        const height = (aabb[4] - aabb[1]);\n        const depth = (aabb[5] - aabb[2]);\n        return (width * height * depth);\n    },\n\n    /**\n     * Gets the center of an AABB.\n     *\n     * @private\n     */\n    getAABB3Center(aabb, dest) {\n        const r = dest || math.vec3();\n\n        r[0] = (aabb[0] + aabb[3]) / 2;\n        r[1] = (aabb[1] + aabb[4]) / 2;\n        r[2] = (aabb[2] + aabb[5]) / 2;\n\n        return r;\n    },\n\n    /**\n     * Gets the center of a 2D AABB.\n     *\n     * @private\n     */\n    getAABB2Center(aabb, dest) {\n        const r = dest || math.vec2();\n\n        r[0] = (aabb[2] + aabb[0]) / 2;\n        r[1] = (aabb[3] + aabb[1]) / 2;\n\n        return r;\n    },\n\n    /**\n     * Collapses a 3D axis-aligned boundary, ready to expand to fit 3D points.\n     * Creates new AABB if none supplied.\n     *\n     * @private\n     */\n    collapseAABB3(aabb = math.AABB3()) {\n        aabb[0] = math.MAX_DOUBLE;\n        aabb[1] = math.MAX_DOUBLE;\n        aabb[2] = math.MAX_DOUBLE;\n        aabb[3] = math.MIN_DOUBLE;\n        aabb[4] = math.MIN_DOUBLE;\n        aabb[5] = math.MIN_DOUBLE;\n\n        return aabb;\n    },\n\n    /**\n     * Converts an axis-aligned 3D boundary into an oriented boundary consisting of\n     * an array of eight 3D positions, one for each corner of the boundary.\n     *\n     * @private\n     */\n    AABB3ToOBB3(aabb, obb = math.OBB3()) {\n        obb[0] = aabb[0];\n        obb[1] = aabb[1];\n        obb[2] = aabb[2];\n        obb[3] = 1;\n\n        obb[4] = aabb[3];\n        obb[5] = aabb[1];\n        obb[6] = aabb[2];\n        obb[7] = 1;\n\n        obb[8] = aabb[3];\n        obb[9] = aabb[4];\n        obb[10] = aabb[2];\n        obb[11] = 1;\n\n        obb[12] = aabb[0];\n        obb[13] = aabb[4];\n        obb[14] = aabb[2];\n        obb[15] = 1;\n\n        obb[16] = aabb[0];\n        obb[17] = aabb[1];\n        obb[18] = aabb[5];\n        obb[19] = 1;\n\n        obb[20] = aabb[3];\n        obb[21] = aabb[1];\n        obb[22] = aabb[5];\n        obb[23] = 1;\n\n        obb[24] = aabb[3];\n        obb[25] = aabb[4];\n        obb[26] = aabb[5];\n        obb[27] = 1;\n\n        obb[28] = aabb[0];\n        obb[29] = aabb[4];\n        obb[30] = aabb[5];\n        obb[31] = 1;\n\n        return obb;\n    },\n\n    /**\n     * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n     *\n     * @private\n     */\n    positions3ToAABB3: ((() => {\n\n        const p = new Float32Array(3);\n\n        return (positions, aabb, positionsDecodeMatrix) => {\n            aabb = aabb || math.AABB3();\n\n            let xmin = math.MAX_DOUBLE;\n            let ymin = math.MAX_DOUBLE;\n            let zmin = math.MAX_DOUBLE;\n            let xmax = math.MIN_DOUBLE;\n            let ymax = math.MIN_DOUBLE;\n            let zmax = math.MIN_DOUBLE;\n\n            let x;\n            let y;\n            let z;\n\n            for (let i = 0, len = positions.length; i < len; i += 3) {\n\n                if (positionsDecodeMatrix) {\n\n                    p[0] = positions[i + 0];\n                    p[1] = positions[i + 1];\n                    p[2] = positions[i + 2];\n\n                    math.decompressPosition(p, positionsDecodeMatrix, p);\n\n                    x = p[0];\n                    y = p[1];\n                    z = p[2];\n\n                } else {\n                    x = positions[i + 0];\n                    y = positions[i + 1];\n                    z = positions[i + 2];\n                }\n\n                if (x < xmin) {\n                    xmin = x;\n                }\n\n                if (y < ymin) {\n                    ymin = y;\n                }\n\n                if (z < zmin) {\n                    zmin = z;\n                }\n\n                if (x > xmax) {\n                    xmax = x;\n                }\n\n                if (y > ymax) {\n                    ymax = y;\n                }\n\n                if (z > zmax) {\n                    zmax = z;\n                }\n            }\n\n            aabb[0] = xmin;\n            aabb[1] = ymin;\n            aabb[2] = zmin;\n            aabb[3] = xmax;\n            aabb[4] = ymax;\n            aabb[5] = zmax;\n\n            return aabb;\n        };\n    }))(),\n\n    /**\n     * Finds the minimum axis-aligned 3D boundary enclosing the homogeneous 3D points (x,y,z,w) given in a flattened array.\n     *\n     * @private\n     */\n    OBB3ToAABB3(obb, aabb = math.AABB3()) {\n        let xmin = math.MAX_DOUBLE;\n        let ymin = math.MAX_DOUBLE;\n        let zmin = math.MAX_DOUBLE;\n        let xmax = math.MIN_DOUBLE;\n        let ymax = math.MIN_DOUBLE;\n        let zmax = math.MIN_DOUBLE;\n\n        let x;\n        let y;\n        let z;\n\n        for (let i = 0, len = obb.length; i < len; i += 4) {\n\n            x = obb[i + 0];\n            y = obb[i + 1];\n            z = obb[i + 2];\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (z < zmin) {\n                zmin = z;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n\n            if (z > zmax) {\n                zmax = z;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = zmin;\n        aabb[3] = xmax;\n        aabb[4] = ymax;\n        aabb[5] = zmax;\n\n        return aabb;\n    },\n\n    /**\n     * Finds the minimum axis-aligned 3D boundary enclosing the given 3D points.\n     *\n     * @private\n     */\n    points3ToAABB3(points, aabb = math.AABB3()) {\n        let xmin = math.MAX_DOUBLE;\n        let ymin = math.MAX_DOUBLE;\n        let zmin = math.MAX_DOUBLE;\n        let xmax = math.MIN_DOUBLE;\n        let ymax = math.MIN_DOUBLE;\n        let zmax = math.MIN_DOUBLE;\n\n        let x;\n        let y;\n        let z;\n\n        for (let i = 0, len = points.length; i < len; i++) {\n\n            x = points[i][0];\n            y = points[i][1];\n            z = points[i][2];\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (z < zmin) {\n                zmin = z;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n\n            if (z > zmax) {\n                zmax = z;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = zmin;\n        aabb[3] = xmax;\n        aabb[4] = ymax;\n        aabb[5] = zmax;\n\n        return aabb;\n    },\n\n    /**\n     * Finds the minimum boundary sphere enclosing the given 3D points.\n     *\n     * @private\n     */\n    points3ToSphere3: ((() => {\n\n        const tempVec3 = new Float32Array(3);\n\n        return (points, sphere) => {\n\n            sphere = sphere || math.vec4();\n\n            let x = 0;\n            let y = 0;\n            let z = 0;\n\n            let i;\n            const numPoints = points.length;\n\n            for (i = 0; i < numPoints; i++) {\n                x += points[i][0];\n                y += points[i][1];\n                z += points[i][2];\n            }\n\n            sphere[0] = x / numPoints;\n            sphere[1] = y / numPoints;\n            sphere[2] = z / numPoints;\n\n            let radius = 0;\n            let dist;\n\n            for (i = 0; i < numPoints; i++) {\n\n                dist = Math.abs(math.lenVec3(math.subVec3(points[i], sphere, tempVec3)));\n\n                if (dist > radius) {\n                    radius = dist;\n                }\n            }\n\n            sphere[3] = radius;\n\n            return sphere;\n        };\n    }))(),\n\n    /**\n     * Finds the minimum boundary sphere enclosing the given 3D positions.\n     *\n     * @private\n     */\n    positions3ToSphere3: ((() => {\n\n        const tempVec3a = new Float32Array(3);\n        const tempVec3b = new Float32Array(3);\n\n        return (positions, sphere) => {\n\n            sphere = sphere || math.vec4();\n\n            let x = 0;\n            let y = 0;\n            let z = 0;\n\n            let i;\n            const lenPositions = positions.length;\n            let radius = 0;\n\n            for (i = 0; i < lenPositions; i += 3) {\n                x += positions[i];\n                y += positions[i + 1];\n                z += positions[i + 2];\n            }\n\n            const numPositions = lenPositions / 3;\n\n            sphere[0] = x / numPositions;\n            sphere[1] = y / numPositions;\n            sphere[2] = z / numPositions;\n\n            let dist;\n\n            for (i = 0; i < lenPositions; i += 3) {\n\n                tempVec3a[0] = positions[i];\n                tempVec3a[1] = positions[i + 1];\n                tempVec3a[2] = positions[i + 2];\n\n                dist = Math.abs(math.lenVec3(math.subVec3(tempVec3a, sphere, tempVec3b)));\n\n                if (dist > radius) {\n                    radius = dist;\n                }\n            }\n\n            sphere[3] = radius;\n\n            return sphere;\n        };\n    }))(),\n\n    /**\n     * Finds the minimum boundary sphere enclosing the given 3D points.\n     *\n     * @private\n     */\n    OBB3ToSphere3: ((() => {\n\n        const point = new Float32Array(3);\n        const tempVec3 = new Float32Array(3);\n\n        return (points, sphere) => {\n\n            sphere = sphere || math.vec4();\n\n            let x = 0;\n            let y = 0;\n            let z = 0;\n\n            let i;\n            const lenPoints = points.length;\n            const numPoints = lenPoints / 4;\n\n            for (i = 0; i < lenPoints; i += 4) {\n                x += points[i + 0];\n                y += points[i + 1];\n                z += points[i + 2];\n            }\n\n            sphere[0] = x / numPoints;\n            sphere[1] = y / numPoints;\n            sphere[2] = z / numPoints;\n\n            let radius = 0;\n            let dist;\n\n            for (i = 0; i < lenPoints; i += 4) {\n\n                point[0] = points[i + 0];\n                point[1] = points[i + 1];\n                point[2] = points[i + 2];\n\n                dist = Math.abs(math.lenVec3(math.subVec3(point, sphere, tempVec3)));\n\n                if (dist > radius) {\n                    radius = dist;\n                }\n            }\n\n            sphere[3] = radius;\n\n            return sphere;\n        };\n    }))(),\n\n    /**\n     * Gets the center of a bounding sphere.\n     *\n     * @private\n     */\n    getSphere3Center(sphere, dest = math.vec3()) {\n        dest[0] = sphere[0];\n        dest[1] = sphere[1];\n        dest[2] = sphere[2];\n\n        return dest;\n    },\n\n    /**\n     * Gets the 3D center of the given flat array of 3D positions.\n     *\n     * @private\n     */\n    getPositionsCenter(positions, center = math.vec3()) {\n        let xCenter = 0;\n        let yCenter = 0;\n        let zCenter = 0;\n        for (var i = 0, len = positions.length; i < len; i += 3) {\n            xCenter += positions[i + 0];\n            yCenter += positions[i + 1];\n            zCenter += positions[i + 2];\n        }\n        const numPositions = positions.length / 3;\n        center[0] = xCenter / numPositions;\n        center[1] = yCenter / numPositions;\n        center[2] = zCenter / numPositions;\n        return center;\n    },\n\n    /**\n     * Expands the first axis-aligned 3D boundary to enclose the second, if required.\n     *\n     * @private\n     */\n    expandAABB3(aabb1, aabb2) {\n\n        if (aabb1[0] > aabb2[0]) {\n            aabb1[0] = aabb2[0];\n        }\n\n        if (aabb1[1] > aabb2[1]) {\n            aabb1[1] = aabb2[1];\n        }\n\n        if (aabb1[2] > aabb2[2]) {\n            aabb1[2] = aabb2[2];\n        }\n\n        if (aabb1[3] < aabb2[3]) {\n            aabb1[3] = aabb2[3];\n        }\n\n        if (aabb1[4] < aabb2[4]) {\n            aabb1[4] = aabb2[4];\n        }\n\n        if (aabb1[5] < aabb2[5]) {\n            aabb1[5] = aabb2[5];\n        }\n\n        return aabb1;\n    },\n\n    /**\n     * Expands an axis-aligned 3D boundary to enclose the given point, if needed.\n     *\n     * @private\n     */\n    expandAABB3Point3(aabb, p) {\n\n        if (aabb[0] > p[0]) {\n            aabb[0] = p[0];\n        }\n\n        if (aabb[1] > p[1]) {\n            aabb[1] = p[1];\n        }\n\n        if (aabb[2] > p[2]) {\n            aabb[2] = p[2];\n        }\n\n        if (aabb[3] < p[0]) {\n            aabb[3] = p[0];\n        }\n\n        if (aabb[4] < p[1]) {\n            aabb[4] = p[1];\n        }\n\n        if (aabb[5] < p[2]) {\n            aabb[5] = p[2];\n        }\n\n        return aabb;\n    },\n\n    /**\n     * Expands an axis-aligned 3D boundary to enclose the given points, if needed.\n     *\n     * @private\n     */\n    expandAABB3Points3(aabb, positions) {\n        var x;\n        var y;\n        var z;\n        for (var i = 0, len = positions.length; i < len; i += 3) {\n            x = positions[i];\n            y = positions[i + 1];\n            z = positions[i + 2];\n            if (aabb[0] > x) {\n                aabb[0] = x;\n            }\n            if (aabb[1] > y) {\n                aabb[1] = y;\n            }\n            if (aabb[2] > z) {\n                aabb[2] = z;\n            }\n            if (aabb[3] < x) {\n                aabb[3] = x;\n            }\n            if (aabb[4] < y) {\n                aabb[4] = y;\n            }\n            if (aabb[5] < z) {\n                aabb[5] = z;\n            }\n        }\n        return aabb;\n    },\n\n    /**\n     * Collapses a 2D axis-aligned boundary, ready to expand to fit 2D points.\n     * Creates new AABB if none supplied.\n     *\n     * @private\n     */\n    collapseAABB2(aabb = math.AABB2()) {\n        aabb[0] = math.MAX_DOUBLE;\n        aabb[1] = math.MAX_DOUBLE;\n        aabb[2] = math.MIN_DOUBLE;\n        aabb[3] = math.MIN_DOUBLE;\n\n        return aabb;\n    },\n\n    point3AABB3Intersect(aabb, p) {\n        return aabb[0] > p[0] || aabb[3] < p[0] || aabb[1] > p[1] || aabb[4] < p[1] || aabb[2] > p[2] || aabb[5] < p[2];\n    },\n\n    /**\n     *\n     * @param dir\n     * @param constant\n     * @param aabb\n     * @returns {number}\n     */\n    planeAABB3Intersect(dir, constant, aabb) {\n        let min, max;\n        if (dir[0] > 0) {\n            min = dir[0] * aabb[0];\n            max = dir[0] * aabb[3];\n        } else {\n            min = dir[0] * aabb[3];\n            max = dir[0] * aabb[0];\n        }\n        if (dir[1] > 0) {\n            min += dir[1] * aabb[1];\n            max += dir[1] * aabb[4];\n        } else {\n            min += dir[1] * aabb[4];\n            max += dir[1] * aabb[1];\n        }\n        if (dir[2] > 0) {\n            min += dir[2] * aabb[2];\n            max += dir[2] * aabb[5];\n        } else {\n            min += dir[2] * aabb[5];\n            max += dir[2] * aabb[2];\n        }\n        const outside = (min <= -constant) && (max <= -constant);\n        if (outside) {\n            return -1;\n        }\n\n        const inside = (min >= -constant) && (max >= -constant);\n        if (inside) {\n            return 1;\n        }\n\n        return 0;\n    },\n\n    /**\n     * Finds the minimum 2D projected axis-aligned boundary enclosing the given 3D points.\n     *\n     * @private\n     */\n    OBB3ToAABB2(points, aabb = math.AABB2()) {\n        let xmin = math.MAX_DOUBLE;\n        let ymin = math.MAX_DOUBLE;\n        let xmax = math.MIN_DOUBLE;\n        let ymax = math.MIN_DOUBLE;\n\n        let x;\n        let y;\n        let w;\n        let f;\n\n        for (let i = 0, len = points.length; i < len; i += 4) {\n\n            x = points[i + 0];\n            y = points[i + 1];\n            w = points[i + 3] || 1.0;\n\n            f = 1.0 / w;\n\n            x *= f;\n            y *= f;\n\n            if (x < xmin) {\n                xmin = x;\n            }\n\n            if (y < ymin) {\n                ymin = y;\n            }\n\n            if (x > xmax) {\n                xmax = x;\n            }\n\n            if (y > ymax) {\n                ymax = y;\n            }\n        }\n\n        aabb[0] = xmin;\n        aabb[1] = ymin;\n        aabb[2] = xmax;\n        aabb[3] = ymax;\n\n        return aabb;\n    },\n\n    /**\n     * Expands the first axis-aligned 2D boundary to enclose the second, if required.\n     *\n     * @private\n     */\n    expandAABB2(aabb1, aabb2) {\n\n        if (aabb1[0] > aabb2[0]) {\n            aabb1[0] = aabb2[0];\n        }\n\n        if (aabb1[1] > aabb2[1]) {\n            aabb1[1] = aabb2[1];\n        }\n\n        if (aabb1[2] < aabb2[2]) {\n            aabb1[2] = aabb2[2];\n        }\n\n        if (aabb1[3] < aabb2[3]) {\n            aabb1[3] = aabb2[3];\n        }\n\n        return aabb1;\n    },\n\n    /**\n     * Expands an axis-aligned 2D boundary to enclose the given point, if required.\n     *\n     * @private\n     */\n    expandAABB2Point2(aabb, p) {\n\n        if (aabb[0] > p[0]) {\n            aabb[0] = p[0];\n        }\n\n        if (aabb[1] > p[1]) {\n            aabb[1] = p[1];\n        }\n\n        if (aabb[2] < p[0]) {\n            aabb[2] = p[0];\n        }\n\n        if (aabb[3] < p[1]) {\n            aabb[3] = p[1];\n        }\n\n        return aabb;\n    },\n\n    AABB2ToCanvas(aabb, canvasWidth, canvasHeight, aabb2 = aabb) {\n        const xmin = (aabb[0] + 1.0) * 0.5;\n        const ymin = (aabb[1] + 1.0) * 0.5;\n        const xmax = (aabb[2] + 1.0) * 0.5;\n        const ymax = (aabb[3] + 1.0) * 0.5;\n\n        aabb2[0] = Math.floor(xmin * canvasWidth);\n        aabb2[1] = canvasHeight - Math.floor(ymax * canvasHeight);\n        aabb2[2] = Math.floor(xmax * canvasWidth);\n        aabb2[3] = canvasHeight - Math.floor(ymin * canvasHeight);\n\n        return aabb2;\n    },\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Curves\n    //------------------------------------------------------------------------------------------------------------------\n\n    tangentQuadraticBezier(t, p0, p1, p2) {\n        return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\n    },\n\n    tangentQuadraticBezier3(t, p0, p1, p2, p3) {\n        return -3 * p0 * (1 - t) * (1 - t) +\n            3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) +\n            6 * t * p2 * (1 - t) - 3 * t * t * p2 +\n            3 * t * t * p3;\n    },\n\n    tangentSpline(t) {\n        const h00 = 6 * t * t - 6 * t;\n        const h10 = 3 * t * t - 4 * t + 1;\n        const h01 = -6 * t * t + 6 * t;\n        const h11 = 3 * t * t - 2 * t;\n        return h00 + h10 + h01 + h11;\n    },\n\n    catmullRomInterpolate(p0, p1, p2, p3, t) {\n        const v0 = (p2 - p0) * 0.5;\n        const v1 = (p3 - p1) * 0.5;\n        const t2 = t * t;\n        const t3 = t * t2;\n        return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n    },\n\n// Bezier Curve formulii from http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n// Quad Bezier Functions\n\n    b2p0(t, p) {\n        const k = 1 - t;\n        return k * k * p;\n\n    },\n\n    b2p1(t, p) {\n        return 2 * (1 - t) * t * p;\n    },\n\n    b2p2(t, p) {\n        return t * t * p;\n    },\n\n    b2(t, p0, p1, p2) {\n        return this.b2p0(t, p0) + this.b2p1(t, p1) + this.b2p2(t, p2);\n    },\n\n// Cubic Bezier Functions\n\n    b3p0(t, p) {\n        const k = 1 - t;\n        return k * k * k * p;\n    },\n\n    b3p1(t, p) {\n        const k = 1 - t;\n        return 3 * k * k * t * p;\n    },\n\n    b3p2(t, p) {\n        const k = 1 - t;\n        return 3 * k * t * t * p;\n    },\n\n    b3p3(t, p) {\n        return t * t * t * p;\n    },\n\n    b3(t, p0, p1, p2, p3) {\n        return this.b3p0(t, p0) + this.b3p1(t, p1) + this.b3p2(t, p2) + this.b3p3(t, p3);\n    },\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Geometry\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Calculates the normal vector of a triangle.\n     *\n     * @private\n     */\n    triangleNormal(a, b, c, normal = math.vec3()) {\n        const p1x = b[0] - a[0];\n        const p1y = b[1] - a[1];\n        const p1z = b[2] - a[2];\n\n        const p2x = c[0] - a[0];\n        const p2y = c[1] - a[1];\n        const p2z = c[2] - a[2];\n\n        const p3x = p1y * p2z - p1z * p2y;\n        const p3y = p1z * p2x - p1x * p2z;\n        const p3z = p1x * p2y - p1y * p2x;\n\n        const mag = Math.sqrt(p3x * p3x + p3y * p3y + p3z * p3z);\n        if (mag === 0) {\n            normal[0] = 0;\n            normal[1] = 0;\n            normal[2] = 0;\n        } else {\n            normal[0] = p3x / mag;\n            normal[1] = p3y / mag;\n            normal[2] = p3z / mag;\n        }\n\n        return normal\n    },\n\n    /**\n     * Finds the intersection of a 3D ray with a 3D triangle.\n     *\n     * @private\n     */\n    rayTriangleIntersect: ((() => {\n\n        const tempVec3 = new Float32Array(3);\n        const tempVec3b = new Float32Array(3);\n        const tempVec3c = new Float32Array(3);\n        const tempVec3d = new Float32Array(3);\n        const tempVec3e = new Float32Array(3);\n\n        return (origin, dir, a, b, c, isect) => {\n\n            isect = isect || math.vec3();\n\n            const EPSILON = 0.000001;\n\n            const edge1 = math.subVec3(b, a, tempVec3);\n            const edge2 = math.subVec3(c, a, tempVec3b);\n\n            const pvec = math.cross3Vec3(dir, edge2, tempVec3c);\n            const det = math.dotVec3(edge1, pvec);\n            if (det < EPSILON) {\n                return null;\n            }\n\n            const tvec = math.subVec3(origin, a, tempVec3d);\n            const u = math.dotVec3(tvec, pvec);\n            if (u < 0 || u > det) {\n                return null;\n            }\n\n            const qvec = math.cross3Vec3(tvec, edge1, tempVec3e);\n            const v = math.dotVec3(dir, qvec);\n            if (v < 0 || u + v > det) {\n                return null;\n            }\n\n            const t = math.dotVec3(edge2, qvec) / det;\n            isect[0] = origin[0] + t * dir[0];\n            isect[1] = origin[1] + t * dir[1];\n            isect[2] = origin[2] + t * dir[2];\n\n            return isect;\n        };\n    }))(),\n\n    /**\n     * Finds the intersection of a 3D ray with a plane defined by 3 points.\n     *\n     * @private\n     */\n    rayPlaneIntersect: ((() => {\n\n        const tempVec3 = new Float32Array(3);\n        const tempVec3b = new Float32Array(3);\n        const tempVec3c = new Float32Array(3);\n        const tempVec3d = new Float32Array(3);\n\n        return (origin, dir, a, b, c, isect) => {\n\n            isect = isect || math.vec3();\n\n            dir = math.normalizeVec3(dir, tempVec3);\n\n            const edge1 = math.subVec3(b, a, tempVec3b);\n            const edge2 = math.subVec3(c, a, tempVec3c);\n\n            const n = math.cross3Vec3(edge1, edge2, tempVec3d);\n            math.normalizeVec3(n, n);\n\n            const d = -math.dotVec3(a, n);\n\n            const t = -(math.dotVec3(origin, n) + d) / math.dotVec3(dir, n);\n\n            isect[0] = origin[0] + t * dir[0];\n            isect[1] = origin[1] + t * dir[1];\n            isect[2] = origin[2] + t * dir[2];\n\n            return isect;\n        };\n    }))(),\n\n    /**\n     * Gets barycentric coordinates from cartesian coordinates within a triangle.\n     * Gets barycentric coordinates from cartesian coordinates within a triangle.\n     *\n     * @private\n     */\n    cartesianToBarycentric: ((() => {\n\n        const tempVec3 = new Float32Array(3);\n        const tempVec3b = new Float32Array(3);\n        const tempVec3c = new Float32Array(3);\n\n        return (cartesian, a, b, c, dest) => {\n\n            const v0 = math.subVec3(c, a, tempVec3);\n            const v1 = math.subVec3(b, a, tempVec3b);\n            const v2 = math.subVec3(cartesian, a, tempVec3c);\n\n            const dot00 = math.dotVec3(v0, v0);\n            const dot01 = math.dotVec3(v0, v1);\n            const dot02 = math.dotVec3(v0, v2);\n            const dot11 = math.dotVec3(v1, v1);\n            const dot12 = math.dotVec3(v1, v2);\n\n            const denom = (dot00 * dot11 - dot01 * dot01);\n\n            // Colinear or singular triangle\n\n            if (denom === 0) {\n\n                // Arbitrary location outside of triangle\n\n                return null;\n            }\n\n            const invDenom = 1 / denom;\n\n            const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n            const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n\n            dest[0] = 1 - u - v;\n            dest[1] = v;\n            dest[2] = u;\n\n            return dest;\n        };\n    }))(),\n\n    /**\n     * Returns true if the given barycentric coordinates are within their triangle.\n     *\n     * @private\n     */\n    barycentricInsideTriangle(bary) {\n\n        const v = bary[1];\n        const u = bary[2];\n\n        return (u >= 0) && (v >= 0) && (u + v < 1);\n    },\n\n    /**\n     * Gets cartesian coordinates from barycentric coordinates within a triangle.\n     *\n     * @private\n     */\n    barycentricToCartesian(bary, a, b, c, cartesian = math.vec3()) {\n        const u = bary[0];\n        const v = bary[1];\n        const w = bary[2];\n\n        cartesian[0] = a[0] * u + b[0] * v + c[0] * w;\n        cartesian[1] = a[1] * u + b[1] * v + c[1] * w;\n        cartesian[2] = a[2] * u + b[2] * v + c[2] * w;\n\n        return cartesian;\n    },\n\n\n    /**\n     * Given geometry defined as an array of positions, optional normals, option uv and an array of indices, returns\n     * modified arrays that have duplicate vertices removed.\n     *\n     * Note: does not work well when co-incident vertices have same positions but different normals and UVs.\n     *\n     * @param positions\n     * @param normals\n     * @param uv\n     * @param indices\n     * @returns {{positions: Array, indices: Array}}\n     * @private\n     */\n    mergeVertices(positions, normals, uv, indices) {\n        const positionsMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n        const indicesLookup = [];\n        const uniquePositions = [];\n        const uniqueNormals = normals ? [] : null;\n        const uniqueUV = uv ? [] : null;\n        const indices2 = [];\n        let vx;\n        let vy;\n        let vz;\n        let key;\n        const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n        const precision = 10 ** precisionPoints;\n        let i;\n        let len;\n        let uvi = 0;\n        for (i = 0, len = positions.length; i < len; i += 3) {\n            vx = positions[i];\n            vy = positions[i + 1];\n            vz = positions[i + 2];\n            key = `${Math.round(vx * precision)}_${Math.round(vy * precision)}_${Math.round(vz * precision)}`;\n            if (positionsMap[key] === undefined) {\n                positionsMap[key] = uniquePositions.length / 3;\n                uniquePositions.push(vx);\n                uniquePositions.push(vy);\n                uniquePositions.push(vz);\n                if (normals) {\n                    uniqueNormals.push(normals[i]);\n                    uniqueNormals.push(normals[i + 1]);\n                    uniqueNormals.push(normals[i + 2]);\n                }\n                if (uv) {\n                    uniqueUV.push(uv[uvi]);\n                    uniqueUV.push(uv[uvi + 1]);\n                }\n            }\n            indicesLookup[i / 3] = positionsMap[key];\n            uvi += 2;\n        }\n        for (i = 0, len = indices.length; i < len; i++) {\n            indices2[i] = indicesLookup[indices[i]];\n        }\n        const result = {\n            positions: uniquePositions,\n            indices: indices2\n        };\n        if (uniqueNormals) {\n            result.normals = uniqueNormals;\n        }\n        if (uniqueUV) {\n            result.uv = uniqueUV;\n\n        }\n        return result;\n    },\n\n    /**\n     * Builds normal vectors from positions and indices.\n     *\n     * @private\n     */\n    buildNormals: ((() => {\n\n        const a = new Float32Array(3);\n        const b = new Float32Array(3);\n        const c = new Float32Array(3);\n        const ab = new Float32Array(3);\n        const ac = new Float32Array(3);\n        const crossVec = new Float32Array(3);\n\n        return (positions, indices, normals) => {\n\n            let i;\n            let len;\n            const nvecs = new Array(positions.length / 3);\n            let j0;\n            let j1;\n            let j2;\n\n            for (i = 0, len = indices.length; i < len; i += 3) {\n\n                j0 = indices[i];\n                j1 = indices[i + 1];\n                j2 = indices[i + 2];\n\n                a[0] = positions[j0 * 3];\n                a[1] = positions[j0 * 3 + 1];\n                a[2] = positions[j0 * 3 + 2];\n\n                b[0] = positions[j1 * 3];\n                b[1] = positions[j1 * 3 + 1];\n                b[2] = positions[j1 * 3 + 2];\n\n                c[0] = positions[j2 * 3];\n                c[1] = positions[j2 * 3 + 1];\n                c[2] = positions[j2 * 3 + 2];\n\n                math.subVec3(b, a, ab);\n                math.subVec3(c, a, ac);\n\n                const normVec = new Float32Array(3);\n\n                math.normalizeVec3(math.cross3Vec3(ab, ac, crossVec), normVec);\n\n                if (!nvecs[j0]) {\n                    nvecs[j0] = [];\n                }\n                if (!nvecs[j1]) {\n                    nvecs[j1] = [];\n                }\n                if (!nvecs[j2]) {\n                    nvecs[j2] = [];\n                }\n\n                nvecs[j0].push(normVec);\n                nvecs[j1].push(normVec);\n                nvecs[j2].push(normVec);\n            }\n\n            normals = (normals && normals.length === positions.length) ? normals : new Float32Array(positions.length);\n\n            let count;\n            let x;\n            let y;\n            let z;\n\n            for (i = 0, len = nvecs.length; i < len; i++) {  // Now go through and average out everything\n\n                count = nvecs[i].length;\n\n                x = 0;\n                y = 0;\n                z = 0;\n\n                for (let j = 0; j < count; j++) {\n                    x += nvecs[i][j][0];\n                    y += nvecs[i][j][1];\n                    z += nvecs[i][j][2];\n                }\n\n                normals[i * 3] = (x / count);\n                normals[i * 3 + 1] = (y / count);\n                normals[i * 3 + 2] = (z / count);\n            }\n\n            return normals;\n        };\n    }))(),\n\n    /**\n     * Builds vertex tangent vectors from positions, UVs and indices.\n     *\n     * @private\n     */\n    buildTangents: ((() => {\n\n        const tempVec3 = new Float32Array(3);\n        const tempVec3b = new Float32Array(3);\n        const tempVec3c = new Float32Array(3);\n        const tempVec3d = new Float32Array(3);\n        const tempVec3e = new Float32Array(3);\n        const tempVec3f = new Float32Array(3);\n        const tempVec3g = new Float32Array(3);\n\n        return (positions, indices, uv) => {\n\n            const tangents = new Float32Array(positions.length);\n\n            // The vertex arrays needs to be calculated\n            // before the calculation of the tangents\n\n            for (let location = 0; location < indices.length; location += 3) {\n\n                // Recontructing each vertex and UV coordinate into the respective vectors\n\n                let index = indices[location];\n\n                const v0 = positions.subarray(index * 3, index * 3 + 3);\n                const uv0 = uv.subarray(index * 2, index * 2 + 2);\n\n                index = indices[location + 1];\n\n                const v1 = positions.subarray(index * 3, index * 3 + 3);\n                const uv1 = uv.subarray(index * 2, index * 2 + 2);\n\n                index = indices[location + 2];\n\n                const v2 = positions.subarray(index * 3, index * 3 + 3);\n                const uv2 = uv.subarray(index * 2, index * 2 + 2);\n\n                const deltaPos1 = math.subVec3(v1, v0, tempVec3);\n                const deltaPos2 = math.subVec3(v2, v0, tempVec3b);\n\n                const deltaUV1 = math.subVec2(uv1, uv0, tempVec3c);\n                const deltaUV2 = math.subVec2(uv2, uv0, tempVec3d);\n\n                const r = 1 / ((deltaUV1[0] * deltaUV2[1]) - (deltaUV1[1] * deltaUV2[0]));\n\n                const tangent = math.mulVec3Scalar(\n                    math.subVec3(\n                        math.mulVec3Scalar(deltaPos1, deltaUV2[1], tempVec3e),\n                        math.mulVec3Scalar(deltaPos2, deltaUV1[1], tempVec3f),\n                        tempVec3g\n                    ),\n                    r,\n                    tempVec3f\n                );\n\n                // Average the value of the vectors\n\n                let addTo;\n\n                for (let v = 0; v < 3; v++) {\n                    addTo = indices[location + v] * 3;\n                    tangents[addTo] += tangent[0];\n                    tangents[addTo + 1] += tangent[1];\n                    tangents[addTo + 2] += tangent[2];\n                }\n            }\n\n            return tangents;\n        };\n    }))(),\n\n    /**\n     * Builds vertex and index arrays needed by color-indexed triangle picking.\n     *\n     * @private\n     */\n    buildPickTriangles(positions, indices, compressGeometry) {\n\n        const numIndices = indices.length;\n        const pickPositions = compressGeometry ? new Uint16Array(numIndices * 9) : new Float32Array(numIndices * 9);\n        const pickColors = new Uint8Array(numIndices * 12);\n        let primIndex = 0;\n        let vi;// Positions array index\n        let pvi = 0;// Picking positions array index\n        let pci = 0; // Picking color array index\n\n        // Triangle indices\n        let i;\n        let r;\n        let g;\n        let b;\n        let a;\n\n        for (let location = 0; location < numIndices; location += 3) {\n\n            // Primitive-indexed triangle pick color\n\n            a = (primIndex >> 24 & 0xFF);\n            b = (primIndex >> 16 & 0xFF);\n            g = (primIndex >> 8 & 0xFF);\n            r = (primIndex & 0xFF);\n\n            // A\n\n            i = indices[location];\n            vi = i * 3;\n\n            pickPositions[pvi++] = positions[vi];\n            pickPositions[pvi++] = positions[vi + 1];\n            pickPositions[pvi++] = positions[vi + 2];\n\n            pickColors[pci++] = r;\n            pickColors[pci++] = g;\n            pickColors[pci++] = b;\n            pickColors[pci++] = a;\n\n            // B\n\n            i = indices[location + 1];\n            vi = i * 3;\n\n            pickPositions[pvi++] = positions[vi];\n            pickPositions[pvi++] = positions[vi + 1];\n            pickPositions[pvi++] = positions[vi + 2];\n\n            pickColors[pci++] = r;\n            pickColors[pci++] = g;\n            pickColors[pci++] = b;\n            pickColors[pci++] = a;\n\n            // C\n\n            i = indices[location + 2];\n            vi = i * 3;\n\n            pickPositions[pvi++] = positions[vi];\n            pickPositions[pvi++] = positions[vi + 1];\n            pickPositions[pvi++] = positions[vi + 2];\n\n            pickColors[pci++] = r;\n            pickColors[pci++] = g;\n            pickColors[pci++] = b;\n            pickColors[pci++] = a;\n\n            primIndex++;\n        }\n\n        return {\n            positions: pickPositions,\n            colors: pickColors\n        };\n    },\n\n    /**\n     * Converts surface-perpendicular face normals to vertex normals. Assumes that the mesh contains disjoint triangles\n     * that don't share vertex array elements. Works by finding groups of vertices that have the same location and\n     * averaging their normal vectors.\n     *\n     * @returns {{positions: Array, normals: *}}\n     */\n    faceToVertexNormals(positions, normals, options = {}) {\n        const smoothNormalsAngleThreshold = options.smoothNormalsAngleThreshold || 20;\n        const vertexMap = {};\n        const vertexNormals = [];\n        const vertexNormalAccum = {};\n        let acc;\n        let vx;\n        let vy;\n        let vz;\n        let key;\n        const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n        const precision = 10 ** precisionPoints;\n        let posi;\n        let i;\n        let j;\n        let len;\n        let a;\n        let b;\n        let c;\n\n        for (i = 0, len = positions.length; i < len; i += 3) {\n\n            posi = i / 3;\n\n            vx = positions[i];\n            vy = positions[i + 1];\n            vz = positions[i + 2];\n\n            key = `${Math.round(vx * precision)}_${Math.round(vy * precision)}_${Math.round(vz * precision)}`;\n\n            if (vertexMap[key] === undefined) {\n                vertexMap[key] = [posi];\n            } else {\n                vertexMap[key].push(posi);\n            }\n\n            const normal = math.normalizeVec3([normals[i], normals[i + 1], normals[i + 2]]);\n\n            vertexNormals[posi] = normal;\n\n            acc = math.vec4([normal[0], normal[1], normal[2], 1]);\n\n            vertexNormalAccum[posi] = acc;\n        }\n\n        for (key in vertexMap) {\n\n            if (vertexMap.hasOwnProperty(key)) {\n\n                const vertices = vertexMap[key];\n                const numVerts = vertices.length;\n\n                for (i = 0; i < numVerts; i++) {\n\n                    const ii = vertices[i];\n\n                    acc = vertexNormalAccum[ii];\n\n                    for (j = 0; j < numVerts; j++) {\n\n                        if (i === j) {\n                            continue;\n                        }\n\n                        const jj = vertices[j];\n\n                        a = vertexNormals[ii];\n                        b = vertexNormals[jj];\n\n                        const angle = Math.abs(math.angleVec3(a, b) / math.DEGTORAD);\n\n                        if (angle < smoothNormalsAngleThreshold) {\n\n                            acc[0] += b[0];\n                            acc[1] += b[1];\n                            acc[2] += b[2];\n                            acc[3] += 1.0;\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0, len = normals.length; i < len; i += 3) {\n\n            acc = vertexNormalAccum[i / 3];\n\n            normals[i + 0] = acc[0] / acc[3];\n            normals[i + 1] = acc[1] / acc[3];\n            normals[i + 2] = acc[2] / acc[3];\n\n        }\n    },\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Ray casting\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     Transforms a Canvas-space position into a World-space ray, in the context of a Camera.\n     @method canvasPosToWorldRay\n     @static\n     @param {Number[]} viewMatrix View matrix\n     @param {Number[]} projMatrix Projection matrix\n     @param {Number[]} canvasPos The Canvas-space position.\n     @param {Number[]} worldRayOrigin The World-space ray origin.\n     @param {Number[]} worldRayDir The World-space ray direction.\n     */\n    canvasPosToWorldRay: ((() => {\n\n        const tempMat4b = new Float32Array(16);\n        const tempMat4c = new Float32Array(16);\n        const tempVec4a = new Float32Array(4);\n        const tempVec4b = new Float32Array(4);\n        const tempVec4c = new Float32Array(4);\n        const tempVec4d = new Float32Array(4);\n\n        return (canvas, viewMatrix, projMatrix, canvasPos, worldRayOrigin, worldRayDir) => {\n\n            const pvMat = math.mulMat4(projMatrix, viewMatrix, tempMat4b);\n            const pvMatInverse = math.inverseMat4(pvMat, tempMat4c);\n\n            // Calculate clip space coordinates, which will be in range\n            // of x=[-1..1] and y=[-1..1], with y=(+1) at top\n\n            const canvasWidth = canvas.width;\n            const canvasHeight = canvas.height;\n\n            const clipX = (canvasPos[0] - canvasWidth / 2) / (canvasWidth / 2);  // Calculate clip space coordinates\n            const clipY = -(canvasPos[1] - canvasHeight / 2) / (canvasHeight / 2);\n\n            tempVec4a[0] = clipX;\n            tempVec4a[1] = clipY;\n            tempVec4a[2] = -1;\n            tempVec4a[3] = 1;\n\n            math.transformVec4(pvMatInverse, tempVec4a, tempVec4b);\n            math.mulVec4Scalar(tempVec4b, 1 / tempVec4b[3]);\n\n            tempVec4c[0] = clipX;\n            tempVec4c[1] = clipY;\n            tempVec4c[2] = 1;\n            tempVec4c[3] = 1;\n\n            math.transformVec4(pvMatInverse, tempVec4c, tempVec4d);\n            math.mulVec4Scalar(tempVec4d, 1 / tempVec4d[3]);\n\n            worldRayOrigin[0] = tempVec4d[0];\n            worldRayOrigin[1] = tempVec4d[1];\n            worldRayOrigin[2] = tempVec4d[2];\n\n            math.subVec3(tempVec4d, tempVec4b, worldRayDir);\n\n            math.normalizeVec3(worldRayDir);\n        };\n    }))(),\n\n    /**\n     Transforms a Canvas-space position to a Mesh's Local-space coordinate system, in the context of a Camera.\n     @method canvasPosToLocalRay\n     @static\n     @param {Camera} camera The Camera.\n     @param {Mesh} mesh The Mesh.\n     @param {Number[]} viewMatrix View matrix\n     @param {Number[]} projMatrix Projection matrix\n     @param {Number[]} worldMatrix Modeling matrix\n     @param {Number[]} canvasPos The Canvas-space position.\n     @param {Number[]} localRayOrigin The Local-space ray origin.\n     @param {Number[]} localRayDir The Local-space ray direction.\n     */\n    canvasPosToLocalRay: ((() => {\n\n        const worldRayOrigin = new Float32Array(3);\n        const worldRayDir = new Float32Array(3);\n\n        return (canvas, viewMatrix, projMatrix, worldMatrix, canvasPos, localRayOrigin, localRayDir) => {\n            math.canvasPosToWorldRay(canvas, viewMatrix, projMatrix, canvasPos, worldRayOrigin, worldRayDir);\n            math.worldRayToLocalRay(worldMatrix, worldRayOrigin, worldRayDir, localRayOrigin, localRayDir);\n        };\n    }))(),\n\n    /**\n     Transforms a ray from World-space to a Mesh's Local-space coordinate system.\n     @method worldRayToLocalRay\n     @static\n     @param {Number[]} worldMatrix The World transform matrix\n     @param {Number[]} worldRayOrigin The World-space ray origin.\n     @param {Number[]} worldRayDir The World-space ray direction.\n     @param {Number[]} localRayOrigin The Local-space ray origin.\n     @param {Number[]} localRayDir The Local-space ray direction.\n     */\n    worldRayToLocalRay: ((() => {\n\n        const tempMat4 = new Float32Array(16);\n        const tempVec4a = new Float32Array(4);\n        const tempVec4b = new Float32Array(4);\n\n        return (worldMatrix, worldRayOrigin, worldRayDir, localRayOrigin, localRayDir) => {\n\n            const modelMatInverse = math.inverseMat4(worldMatrix, tempMat4);\n\n            tempVec4a[0] = worldRayOrigin[0];\n            tempVec4a[1] = worldRayOrigin[1];\n            tempVec4a[2] = worldRayOrigin[2];\n            tempVec4a[3] = 1;\n\n            math.transformVec4(modelMatInverse, tempVec4a, tempVec4b);\n\n            localRayOrigin[0] = tempVec4b[0];\n            localRayOrigin[1] = tempVec4b[1];\n            localRayOrigin[2] = tempVec4b[2];\n\n            math.transformVec3(modelMatInverse, worldRayDir, localRayDir);\n        };\n    }))(),\n\n    buildKDTree: ((() => {\n\n        const KD_TREE_MAX_DEPTH = 10;\n        const KD_TREE_MIN_TRIANGLES = 20;\n\n        const dimLength = new Float32Array();\n\n        function buildNode(triangles, indices, positions, depth) {\n            const aabb = new Float32Array(6);\n\n            const node = {\n                triangles: null,\n                left: null,\n                right: null,\n                leaf: false,\n                splitDim: 0,\n                aabb\n            };\n\n            aabb[0] = aabb[1] = aabb[2] = Number.POSITIVE_INFINITY;\n            aabb[3] = aabb[4] = aabb[5] = Number.NEGATIVE_INFINITY;\n\n            let t;\n            let i;\n            let len;\n\n            for (t = 0, len = triangles.length; t < len; ++t) {\n                var ii = triangles[t] * 3;\n                for (let j = 0; j < 3; ++j) {\n                    const pi = indices[ii + j] * 3;\n                    if (positions[pi] < aabb[0]) {\n                        aabb[0] = positions[pi]\n                    }\n                    if (positions[pi] > aabb[3]) {\n                        aabb[3] = positions[pi]\n                    }\n                    if (positions[pi + 1] < aabb[1]) {\n                        aabb[1] = positions[pi + 1]\n                    }\n                    if (positions[pi + 1] > aabb[4]) {\n                        aabb[4] = positions[pi + 1]\n                    }\n                    if (positions[pi + 2] < aabb[2]) {\n                        aabb[2] = positions[pi + 2]\n                    }\n                    if (positions[pi + 2] > aabb[5]) {\n                        aabb[5] = positions[pi + 2]\n                    }\n                }\n            }\n\n            if (triangles.length < KD_TREE_MIN_TRIANGLES || depth > KD_TREE_MAX_DEPTH) {\n                node.triangles = triangles;\n                node.leaf = true;\n                return node;\n            }\n\n            dimLength[0] = aabb[3] - aabb[0];\n            dimLength[1] = aabb[4] - aabb[1];\n            dimLength[2] = aabb[5] - aabb[2];\n\n            let dim = 0;\n\n            if (dimLength[1] > dimLength[dim]) {\n                dim = 1;\n            }\n\n            if (dimLength[2] > dimLength[dim]) {\n                dim = 2;\n            }\n\n            node.splitDim = dim;\n\n            const mid = (aabb[dim] + aabb[dim + 3]) / 2;\n            const left = new Array(triangles.length);\n            let numLeft = 0;\n            const right = new Array(triangles.length);\n            let numRight = 0;\n\n            for (t = 0, len = triangles.length; t < len; ++t) {\n\n                var ii = triangles[t] * 3;\n                const i0 = indices[ii];\n                const i1 = indices[ii + 1];\n                const i2 = indices[ii + 2];\n\n                const pi0 = i0 * 3;\n                const pi1 = i1 * 3;\n                const pi2 = i2 * 3;\n\n                if (positions[pi0 + dim] <= mid || positions[pi1 + dim] <= mid || positions[pi2 + dim] <= mid) {\n                    left[numLeft++] = triangles[t];\n                } else {\n                    right[numRight++] = triangles[t];\n                }\n            }\n\n            left.length = numLeft;\n            right.length = numRight;\n\n            node.left = buildNode(left, indices, positions, depth + 1);\n            node.right = buildNode(right, indices, positions, depth + 1);\n\n            return node;\n        }\n\n        return (indices, positions) => {\n            const numTris = indices.length / 3;\n            const triangles = new Array(numTris);\n            for (let i = 0; i < numTris; ++i) {\n                triangles[i] = i;\n            }\n            return buildNode(triangles, indices, positions, 0);\n        };\n    }))(),\n\n\n    decompressPosition(position, decodeMatrix, dest) {\n        dest[0] = position[0] * decodeMatrix[0] + decodeMatrix[12];\n        dest[1] = position[1] * decodeMatrix[5] + decodeMatrix[13];\n        dest[2] = position[2] * decodeMatrix[10] + decodeMatrix[14];\n    },\n\n    decompressPositions(positions, decodeMatrix, dest = new Float32Array(positions.length)) {\n        for (let i = 0, len = positions.length; i < len; i += 3) {\n            dest[i + 0] = positions[i + 0] * decodeMatrix[0] + decodeMatrix[12];\n            dest[i + 1] = positions[i + 1] * decodeMatrix[5] + decodeMatrix[13];\n            dest[i + 2] = positions[i + 2] * decodeMatrix[10] + decodeMatrix[14];\n        }\n        return dest;\n    },\n\n    decompressUV(uv, decodeMatrix, dest) {\n        dest[0] = uv[0] * decodeMatrix[0] + decodeMatrix[6];\n        dest[1] = uv[1] * decodeMatrix[4] + decodeMatrix[7];\n    },\n\n    decompressUVs(uvs, decodeMatrix, dest = new Float32Array(uvs.length)) {\n        for (let i = 0, len = uvs.length; i < len; i += 3) {\n            dest[i + 0] = uvs[i + 0] * decodeMatrix[0] + decodeMatrix[6];\n            dest[i + 1] = uvs[i + 1] * decodeMatrix[4] + decodeMatrix[7];\n        }\n        return dest;\n    },\n\n    octDecodeVec2(oct, result) {\n        let x = oct[0];\n        let y = oct[1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[0] = x / length;\n        result[1] = y / length;\n        result[2] = z / length;\n        return result;\n    },\n\n    octDecodeVec2s(octs, result) {\n        for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n            let x = octs[i + 0];\n            let y = octs[i + 1];\n            x = (2 * x + 1) / 255;\n            y = (2 * y + 1) / 255;\n            const z = 1 - Math.abs(x) - Math.abs(y);\n            if (z < 0) {\n                x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n                y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n            }\n            const length = Math.sqrt(x * x + y * y + z * z);\n            result[j + 0] = x / length;\n            result[j + 1] = y / length;\n            result[j + 2] = z / length;\n            j += 3;\n        }\n        return result;\n    }\n};\n\nmath.buildEdgeIndices = (function () {\n\n    const uniquePositions = [];\n    const indicesLookup = [];\n    const indicesReverseLookup = [];\n    const weldedIndices = [];\n\n    // TODO: Optimize with caching, but need to cater to both compressed and uncompressed positions\n\n    const faces = [];\n    let numFaces = 0;\n    const compa = new Uint16Array(3);\n    const compb = new Uint16Array(3);\n    const compc = new Uint16Array(3);\n    const a = math.vec3();\n    const b = math.vec3();\n    const c = math.vec3();\n    const cb = math.vec3();\n    const ab = math.vec3();\n    const cross = math.vec3();\n    const normal = math.vec3();\n\n    function weldVertices(positions, indices) {\n        const positionsMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n        let vx;\n        let vy;\n        let vz;\n        let key;\n        const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n        const precision = Math.pow(10, precisionPoints);\n        let i;\n        let len;\n        let lenUniquePositions = 0;\n        for (i = 0, len = positions.length; i < len; i += 3) {\n            vx = positions[i];\n            vy = positions[i + 1];\n            vz = positions[i + 2];\n            key = Math.round(vx * precision) + '_' + Math.round(vy * precision) + '_' + Math.round(vz * precision);\n            if (positionsMap[key] === undefined) {\n                positionsMap[key] = lenUniquePositions / 3;\n                uniquePositions[lenUniquePositions++] = vx;\n                uniquePositions[lenUniquePositions++] = vy;\n                uniquePositions[lenUniquePositions++] = vz;\n            }\n            indicesLookup[i / 3] = positionsMap[key];\n        }\n        for (i = 0, len = indices.length; i < len; i++) {\n            weldedIndices[i] = indicesLookup[indices[i]];\n            indicesReverseLookup[weldedIndices[i]] = indices[i];\n        }\n    }\n\n    function buildFaces(numIndices, positionsDecodeMatrix) {\n        numFaces = 0;\n        for (let i = 0, len = numIndices; i < len; i += 3) {\n            const ia = ((weldedIndices[i]) * 3);\n            const ib = ((weldedIndices[i + 1]) * 3);\n            const ic = ((weldedIndices[i + 2]) * 3);\n            if (positionsDecodeMatrix) {\n                compa[0] = uniquePositions[ia];\n                compa[1] = uniquePositions[ia + 1];\n                compa[2] = uniquePositions[ia + 2];\n                compb[0] = uniquePositions[ib];\n                compb[1] = uniquePositions[ib + 1];\n                compb[2] = uniquePositions[ib + 2];\n                compc[0] = uniquePositions[ic];\n                compc[1] = uniquePositions[ic + 1];\n                compc[2] = uniquePositions[ic + 2];\n                // Decode\n                math.decompressPosition(compa, positionsDecodeMatrix, a);\n                math.decompressPosition(compb, positionsDecodeMatrix, b);\n                math.decompressPosition(compc, positionsDecodeMatrix, c);\n            } else {\n                a[0] = uniquePositions[ia];\n                a[1] = uniquePositions[ia + 1];\n                a[2] = uniquePositions[ia + 2];\n                b[0] = uniquePositions[ib];\n                b[1] = uniquePositions[ib + 1];\n                b[2] = uniquePositions[ib + 2];\n                c[0] = uniquePositions[ic];\n                c[1] = uniquePositions[ic + 1];\n                c[2] = uniquePositions[ic + 2];\n            }\n            math.subVec3(c, b, cb);\n            math.subVec3(a, b, ab);\n            math.cross3Vec3(cb, ab, cross);\n            math.normalizeVec3(cross, normal);\n            const face = faces[numFaces] || (faces[numFaces] = {normal: math.vec3()});\n            face.normal[0] = normal[0];\n            face.normal[1] = normal[1];\n            face.normal[2] = normal[2];\n            numFaces++;\n        }\n    }\n\n    return function (positions, indices, positionsDecodeMatrix, edgeThreshold) {\n        weldVertices(positions, indices);\n        buildFaces(indices.length, positionsDecodeMatrix);\n        const edgeIndices = [];\n        const thresholdDot = Math.cos(math.DEGTORAD * edgeThreshold);\n        const edges = {};\n        let edge1;\n        let edge2;\n        let index1;\n        let index2;\n        let key;\n        let largeIndex = false;\n        let edge;\n        let normal1;\n        let normal2;\n        let dot;\n        let ia;\n        let ib;\n        for (let i = 0, len = indices.length; i < len; i += 3) {\n            const faceIndex = i / 3;\n            for (let j = 0; j < 3; j++) {\n                edge1 = weldedIndices[i + j];\n                edge2 = weldedIndices[i + ((j + 1) % 3)];\n                index1 = Math.min(edge1, edge2);\n                index2 = Math.max(edge1, edge2);\n                key = index1 + \",\" + index2;\n                if (edges[key] === undefined) {\n                    edges[key] = {\n                        index1: index1,\n                        index2: index2,\n                        face1: faceIndex,\n                        face2: undefined\n                    };\n                } else {\n                    edges[key].face2 = faceIndex;\n                }\n            }\n        }\n        for (key in edges) {\n            edge = edges[key];\n            // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n            if (edge.face2 !== undefined) {\n                normal1 = faces[edge.face1].normal;\n                normal2 = faces[edge.face2].normal;\n                dot = math.dotVec3(normal1, normal2);\n                if (dot > thresholdDot) {\n                    continue;\n                }\n            }\n            ia = indicesReverseLookup[edge.index1];\n            ib = indicesReverseLookup[edge.index2];\n            if (!largeIndex && ia > 65535 || ib > 65535) {\n                largeIndex = true;\n            }\n            edgeIndices.push(ia);\n            edgeIndices.push(ib);\n        }\n        return (largeIndex) ? new Uint32Array(edgeIndices) : new Uint16Array(edgeIndices);\n    };\n})();\n\n\nexport {math};\n","import {core} from \"./core.js\";\nimport {utils} from './utils.js';\nimport {Map} from \"./utils/Map.js\";\n\n/**\n * @desc Base class for all xeokit components.\n *\n * ## Component IDs\n *\n * Every Component has an ID that's unique within the parent {@link Scene}. xeokit generates\n * the IDs automatically by default, however you can also specify them yourself. In the example below, we're creating a\n * scene comprised of {@link Scene}, {@link Material}, {@link ReadableGeometry} and\n * {@link Mesh} components, while letting xeokit generate its own ID for\n * the {@link ReadableGeometry}:\n *\n *````JavaScript\n * import {Viewer, Mesh, buildTorusGeometry, ReadableGeometry, PhongMaterial, Texture, Fresnel} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *        canvasId: \"myCanvas\"\n *    });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildTorusGeometry({\n *          center: [0, 0, 0],\n *          radius: 1.5,\n *          tube: 0.5,\n *          radialSegments: 32,\n *          tubeSegments: 24,\n *          arc: Math.PI * 2.0\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          id: \"myMaterial\",\n *          ambient: [0.9, 0.3, 0.9],\n *          shininess: 30,\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          }),\n *          specularFresnel: new Fresnel(viewer.scene, {\n *              leftColor: [1.0, 1.0, 1.0],\n *              rightColor: [0.0, 0.0, 0.0],\n *              power: 4\n *          })\n *     })\n * });\n *````\n *\n * We can then find those components like this:\n *\n * ````javascript\n * // Find the Material\n * var material = viewer.scene.components[\"myMaterial\"];\n *\n * // Find all PhongMaterials in the Scene\n * var phongMaterials = viewer.scene.types[\"PhongMaterial\"];\n *\n * // Find our Material within the PhongMaterials\n * var materialAgain = phongMaterials[\"myMaterial\"];\n * ````\n *\n * ## Restriction on IDs\n *\n * Auto-generated IDs are of the form ````\"__0\"````, ````\"__1\"````, ````\"__2\"```` ... and so on.\n *\n * Scene maintains a map of these IDs, along with a counter that it increments each time it generates a new ID.\n *\n * If Scene has created the IDs listed above, and we then destroy the ````Component```` with ID ````\"__1\"````,\n * Scene will mark that ID as available, and will reuse it for the next default ID.\n *\n * Therefore, two restrictions your on IDs:\n *\n * * don't use IDs that begin with two underscores, and\n * * don't reuse auto-generated IDs of destroyed Components.\n *\n * ## Logging\n *\n * Components have methods to log ID-prefixed messages to the JavaScript console:\n *\n * ````javascript\n * material.log(\"Everything is fine, situation normal.\");\n * material.warn(\"Wait, whats that red light?\");\n * material.error(\"Aw, snap!\");\n * ````\n *\n * The logged messages will look like this in the console:\n *\n * ````text\n * [LOG]   myMaterial: Everything is fine, situation normal.\n * [WARN]  myMaterial: Wait, whats that red light..\n * [ERROR] myMaterial: Aw, snap!\n * ````\n *\n * ## Destruction\n *\n * Get notification of destruction of Components:\n *\n * ````javascript\n * material.once(\"destroyed\", function() {\n *     this.log(\"Component was destroyed: \" + this.id);\n * });\n * ````\n *\n * Or get notification of destruction of any Component within its {@link Scene}:\n *\n * ````javascript\n * scene.on(\"componentDestroyed\", function(component) {\n *     this.log(\"Component was destroyed: \" + component.id);\n * });\n * ````\n *\n * Then destroy a component like this:\n *\n * ````javascript\n * material.destroy();\n * ````\n */\nclass Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Component\";\n    }\n\n    /**\n     * @private\n     */\n    get isComponent() {\n        return true;\n    }\n\n    constructor(owner = null, cfg = {}) {\n\n        /**\n         * The parent {@link Scene} that contains this Component.\n         *\n         * @property scene\n         * @type {Scene}\n         * @final\n         */\n        this.scene = null;\n\n        if (this.type === \"Scene\") {\n            this.scene = this;\n            /**\n             * The viewer that contains this Scene.\n             * @property viewer\n             * @type {Viewer}\n             */\n            this.viewer = cfg.viewer;\n        } else {\n            if (owner.type === \"Scene\") {\n                this.scene = owner;\n            } else if (owner instanceof Component) {\n                this.scene = owner.scene;\n            } else {\n                throw \"Invalid param: owner must be a Component\"\n            }\n            this._owner = owner;\n            this._renderer = this.scene._renderer;\n        }\n\n        this._dontClear = !!cfg.dontClear; // Prevent Scene#clear from destroying this component\n\n        this._renderer = this.scene._renderer;\n\n        /**\n         Arbitrary, user-defined metadata on this component.\n\n         @property metadata\n         @type Object\n         */\n        this.meta = cfg.meta || {};\n\n\n        /**\n         * ID of this Component, unique within the {@link Scene}.\n         *\n         * Components are mapped by this ID in {@link Scene#components}.\n         *\n         * @property id\n         * @type {String|Number}\n         */\n        this.id = cfg.id; // Auto-generated by Scene by default\n\n        /**\n         True as soon as this Component has been destroyed\n\n         @property destroyed\n         @type {Boolean}\n         */\n        this.destroyed = false;\n\n        this._attached = {}; // Attached components with names.\n        this._attachments = null; // Attached components keyed to IDs - lazy-instantiated\n        this._subIdMap = null; // Subscription subId pool\n        this._subIdEvents = null; // Subscription subIds mapped to event names\n        this._eventSubs = null; // Event names mapped to subscribers\n        this._eventSubsNum = null;\n        this._events = null; // Maps names to events\n        this._eventCallDepth = 0; // Helps us catch stack overflows from recursive events\n        this._ownedComponents = null; // // Components created with #create - lazy-instantiated\n\n        if (this !== this.scene) { // Don't add scene to itself\n            this.scene._addComponent(this); // Assigns this component an automatic ID if not yet assigned\n        }\n\n        this._updateScheduled = false; // True when #_update will be called on next tick\n\n        if (owner) {\n            owner._own(this);\n        }\n    }\n\n    // /**\n    //  * Unique ID for this Component within its {@link Scene}.\n    //  *\n    //  * @property\n    //  * @type {String}\n    //  */\n    // get id() {\n    //     return this._id;\n    // }\n\n    /**\n     Indicates that we need to redraw the scene.\n\n     This is called by certain subclasses after they have made some sort of state update that requires the\n     renderer to perform a redraw.\n\n     For example: a {@link Mesh} calls this on itself whenever you update its\n     {@link Mesh#layer} property, which manually controls its render order in\n     relation to other Meshes.\n\n     If this component has a ````castsShadow```` property that's set ````true````, then this will also indicate\n     that the renderer needs to redraw shadow map associated with this component. Components like\n     {@link DirLight} have that property set when they produce light that creates shadows, while\n     components like {@link Mesh\"}}layer{{/crossLink}} have that property set when they cast shadows.\n\n     @protected\n     */\n    glRedraw() {\n        if (!this._renderer) { // Called from a constructor\n            return;\n        }\n        this._renderer.imageDirty();\n        if (this.castsShadow) { // Light source or object\n            this._renderer.shadowsDirty();\n        }\n    }\n\n    /**\n     Indicates that we need to re-sort the renderer's state-ordered drawables list.\n\n     For efficiency, the renderer keeps its list of drawables ordered so that runs of the same state updates can be\n     combined.  This method is called by certain subclasses after they have made some sort of state update that would\n     require re-ordering of the drawables list.\n\n     For example: a {@link DirLight} calls this on itself whenever you update {@link DirLight#dir}.\n\n     @protected\n     */\n    glResort() {\n        if (!this._renderer) { // Called from a constructor\n            return;\n        }\n        this._renderer.needStateSort();\n    }\n\n    /**\n     * The {@link Component} that owns the lifecycle of this Component, if any.\n     *\n     * When that component is destroyed, this component will be automatically destroyed also.\n     *\n     * Will be null if this Component has no owner.\n     *\n     * @property owner\n     * @type {Component}\n     */\n    get owner() {\n        return this._owner;\n    }\n\n    /**\n     * Tests if this component is of the given type, or is a subclass of the given type.\n     * @type {Boolean}\n     */\n    isType(type) {\n        return this.type === type;\n    }\n\n    /**\n     * Fires an event on this component.\n     *\n     * Notifies existing subscribers to the event, optionally retains the event to give to\n     * any subsequent notifications on the event as they are made.\n     *\n     * @param {String} event The event type name\n     * @param {Object} value The event parameters\n     * @param {Boolean} [forget=false] When true, does not retain for subsequent subscribers\n     */\n    fire(event, value, forget) {\n        if (!this._events) {\n            this._events = {};\n        }\n        if (!this._eventSubs) {\n            this._eventSubs = {};\n            this._eventSubsNum = {};\n        }\n        if (forget !== true) {\n            this._events[event] = value || true; // Save notification\n        }\n        const subs = this._eventSubs[event];\n        let sub;\n        if (subs) { // Notify subscriptions\n            for (const subId in subs) {\n                if (subs.hasOwnProperty(subId)) {\n                    sub = subs[subId];\n                    this._eventCallDepth++;\n                    if (this._eventCallDepth < 300) {\n                        sub.callback.call(sub.scope, value);\n                    } else {\n                        this.error(\"fire: potential stack overflow from recursive event '\" + event + \"' - dropping this event\");\n                    }\n                    this._eventCallDepth--;\n                }\n            }\n        }\n    }\n\n    /**\n     * Subscribes to an event on this component.\n     *\n     * The callback is be called with this component as scope.\n     *\n     * @param {String} event The event\n     * @param {Function} callback Called fired on the event\n     * @param {Object} [scope=this] Scope for the callback\n     * @return {String} Handle to the subscription, which may be used to unsubscribe with {@link #off}.\n     */\n    on(event, callback, scope) {\n        if (!this._events) {\n            this._events = {};\n        }\n        if (!this._subIdMap) {\n            this._subIdMap = new Map(); // Subscription subId pool\n        }\n        if (!this._subIdEvents) {\n            this._subIdEvents = {};\n        }\n        if (!this._eventSubs) {\n            this._eventSubs = {};\n        }\n        if (!this._eventSubsNum) {\n            this._eventSubsNum = {};\n        }\n        let subs = this._eventSubs[event];\n        if (!subs) {\n            subs = {};\n            this._eventSubs[event] = subs;\n            this._eventSubsNum[event] = 1;\n        } else {\n            this._eventSubsNum[event]++;\n        }\n        const subId = this._subIdMap.addItem(); // Create unique subId\n        subs[subId] = {\n            callback: callback,\n            scope: scope || this\n        };\n        this._subIdEvents[subId] = event;\n        const value = this._events[event];\n        if (value !== undefined) { // A publication exists, notify callback immediately\n            callback.call(scope || this, value);\n        }\n        return subId;\n    }\n\n    /**\n     * Cancels an event subscription that was previously made with {@link Component#on} or {@link Component#once}.\n     *\n     * @param {String} subId Subscription ID\n     */\n    off(subId) {\n        if (subId === undefined || subId === null) {\n            return;\n        }\n        if (!this._subIdEvents) {\n            return;\n        }\n        const event = this._subIdEvents[subId];\n        if (event) {\n            delete this._subIdEvents[subId];\n            const subs = this._eventSubs[event];\n            if (subs) {\n                delete subs[subId];\n                this._eventSubsNum[event]--;\n            }\n            this._subIdMap.removeItem(subId); // Release subId\n        }\n    }\n\n    /**\n     * Subscribes to the next occurrence of the given event, then un-subscribes as soon as the event is subIdd.\n     *\n     * This is equivalent to calling {@link Component#on}, and then calling {@link Component#off} inside the callback function.\n     *\n     * @param {String} event Data event to listen to\n     * @param {Function} callback Called when fresh data is available at the event\n     * @param {Object} [scope=this] Scope for the callback\n     */\n    once(event, callback, scope) {\n        const self = this;\n        const subId = this.on(event,\n            function (value) {\n                self.off(subId);\n                callback.call(scope || this, value);\n            },\n            scope);\n    }\n\n    /**\n     * Returns true if there are any subscribers to the given event on this component.\n     *\n     * @param {String} event The event\n     * @return {Boolean} True if there are any subscribers to the given event on this component.\n     */\n    hasSubs(event) {\n        return (this._eventSubsNum && (this._eventSubsNum[event] > 0));\n    }\n\n    /**\n     * Logs a console debugging message for this component.\n     *\n     * The console message will have this format: *````[LOG] [<component type> <component id>: <message>````*\n     *\n     * Also fires the message as a \"log\" event on the parent {@link Scene}.\n     *\n     * @param {String} message The message to log\n     */\n    log(message) {\n        message = \"[LOG]\" + this._message(message);\n        window.console.log(message);\n        this.scene.fire(\"log\", message);\n    }\n\n    _message(message) {\n        return \" [\" + this.type + \" \" + utils.inQuotes(this.id) + \"]: \" + message;\n    }\n\n    /**\n     * Logs a warning for this component to the JavaScript console.\n     *\n     * The console message will have this format: *````[WARN] [<component type> =<component id>: <message>````*\n     *\n     * Also fires the message as a \"warn\" event on the parent {@link Scene}.\n     *\n     * @param {String} message The message to log\n     */\n    warn(message) {\n        message = \"[WARN]\" + this._message(message);\n        window.console.warn(message);\n        this.scene.fire(\"warn\", message);\n    }\n\n    /**\n     * Logs an error for this component to the JavaScript console.\n     *\n     * The console message will have this format: *````[ERROR] [<component type> =<component id>: <message>````*\n     *\n     * Also fires the message as an \"error\" event on the parent {@link Scene}.\n     *\n     * @param {String} message The message to log\n     */\n    error(message) {\n        message = \"[ERROR]\" + this._message(message);\n        window.console.error(message);\n        this.scene.fire(\"error\", message);\n    }\n\n    /**\n     * Adds a child component to this.\n     *\n     * When component not given, attaches the scene's default instance for the given name (if any).\n     * Publishes the new child component on this component, keyed to the given name.\n     *\n     * @param {*} params\n     * @param {String} params.name component name\n     * @param {Component} [params.component] The component\n     * @param {String} [params.type] Optional expected type of base type of the child; when supplied, will\n     * cause an exception if the given child is not the same type or a subtype of this.\n     * @param {Boolean} [params.sceneDefault=false]\n     * @param {Boolean} [params.sceneSingleton=false]\n     * @param {Function} [params.onAttached] Optional callback called when component attached\n     * @param {Function} [params.onAttached.callback] Callback function\n     * @param {Function} [params.onAttached.scope] Optional scope for callback\n     * @param {Function} [params.onDetached] Optional callback called when component is detached\n     * @param {Function} [params.onDetached.callback] Callback function\n     * @param {Function} [params.onDetached.scope] Optional scope for callback\n     * @param {{String:Function}} [params.on] Callbacks to subscribe to properties on component\n     * @param {Boolean} [params.recompiles=true] When true, fires \"dirty\" events on this component\n     * @private\n     */\n    _attach(params) {\n\n        const name = params.name;\n\n        if (!name) {\n            this.error(\"Component 'name' expected\");\n            return;\n        }\n\n        let component = params.component;\n        const sceneDefault = params.sceneDefault;\n        const sceneSingleton = params.sceneSingleton;\n        const type = params.type;\n        const on = params.on;\n        const recompiles = params.recompiles !== false;\n\n        // True when child given as config object, where parent manages its instantiation and destruction\n        let managingLifecycle = false;\n\n        if (component) {\n\n            if (utils.isNumeric(component) || utils.isString(component)) {\n\n                // Component ID given\n                // Both numeric and string IDs are supported\n\n                const id = component;\n\n                component = this.scene.components[id];\n\n                if (!component) {\n\n                    // Quote string IDs in errors\n\n                    this.error(\"Component not found: \" + utils.inQuotes(id));\n                    return;\n                }\n            }\n        }\n\n        if (!component) {\n\n            if (sceneSingleton === true) {\n\n                // Using the first instance of the component type we find\n\n                const instances = this.scene.types[type];\n                for (const id2 in instances) {\n                    if (instances.hasOwnProperty) {\n                        component = instances[id2];\n                        break;\n                    }\n                }\n\n                if (!component) {\n                    this.error(\"Scene has no default component for '\" + name + \"'\");\n                    return null;\n                }\n\n            } else if (sceneDefault === true) {\n\n                // Using a default scene component\n\n                component = this.scene[name];\n\n                if (!component) {\n                    this.error(\"Scene has no default component for '\" + name + \"'\");\n                    return null;\n                }\n            }\n        }\n\n        if (component) {\n\n            if (component.scene.id !== this.scene.id) {\n                this.error(\"Not in same scene: \" + component.type + \" \" + utils.inQuotes(component.id));\n                return;\n            }\n\n            if (type) {\n\n                if (!component.isType(type)) {\n                    this.error(\"Expected a \" + type + \" type or subtype: \" + component.type + \" \" + utils.inQuotes(component.id));\n                    return;\n                }\n            }\n        }\n\n        if (!this._attachments) {\n            this._attachments = {};\n        }\n\n        const oldComponent = this._attached[name];\n        let subs;\n        let i;\n        let len;\n\n        if (oldComponent) {\n\n            if (component && oldComponent.id === component.id) {\n\n                // Reject attempt to reattach same component\n                return;\n            }\n\n            const oldAttachment = this._attachments[oldComponent.id];\n\n            // Unsubscribe from events on old component\n\n            subs = oldAttachment.subs;\n\n            for (i = 0, len = subs.length; i < len; i++) {\n                oldComponent.off(subs[i]);\n            }\n\n            delete this._attached[name];\n            delete this._attachments[oldComponent.id];\n\n            const onDetached = oldAttachment.params.onDetached;\n            if (onDetached) {\n                if (utils.isFunction(onDetached)) {\n                    onDetached(oldComponent);\n                } else {\n                    onDetached.scope ? onDetached.callback.call(onDetached.scope, oldComponent) : onDetached.callback(oldComponent);\n                }\n            }\n\n            if (oldAttachment.managingLifecycle) {\n\n                // Note that we just unsubscribed from all events fired by the child\n                // component, so destroying it won't fire events back at us now.\n\n                oldComponent.destroy();\n            }\n        }\n\n        if (component) {\n\n            // Set and publish the new component on this component\n\n            const attachment = {\n                params: params,\n                component: component,\n                subs: [],\n                managingLifecycle: managingLifecycle\n            };\n\n            attachment.subs.push(\n                component.once(\"destroyed\",\n                    function () {\n                        attachment.params.component = null;\n                        this._attach(attachment.params);\n                    },\n                    this));\n\n            if (recompiles) {\n                attachment.subs.push(\n                    component.on(\"dirty\",\n                        function () {\n                            this.fire(\"dirty\", this);\n                        },\n                        this));\n            }\n\n            this._attached[name] = component;\n            this._attachments[component.id] = attachment;\n\n            // Bind destruct listener to new component to remove it\n            // from this component when destroyed\n\n            const onAttached = params.onAttached;\n            if (onAttached) {\n                if (utils.isFunction(onAttached)) {\n                    onAttached(component);\n                } else {\n                    onAttached.scope ? onAttached.callback.call(onAttached.scope, component) : onAttached.callback(component);\n                }\n            }\n\n            if (on) {\n\n                let event;\n                let subIdr;\n                let callback;\n                let scope;\n\n                for (event in on) {\n                    if (on.hasOwnProperty(event)) {\n\n                        subIdr = on[event];\n\n                        if (utils.isFunction(subIdr)) {\n                            callback = subIdr;\n                            scope = null;\n                        } else {\n                            callback = subIdr.callback;\n                            scope = subIdr.scope;\n                        }\n\n                        if (!callback) {\n                            continue;\n                        }\n\n                        attachment.subs.push(component.on(event, callback, scope));\n                    }\n                }\n            }\n        }\n\n        if (recompiles) {\n            this.fire(\"dirty\", this); // FIXME: May trigger spurous mesh recompilations unless able to limit with param?\n        }\n\n        this.fire(name, component); // Component can be null\n\n        return component;\n    }\n\n    _checkComponent(expectedType, component) {\n        if (!component.isComponent) {\n            if (utils.isID(component)) {\n                const id = component;\n                component = this.scene.components[id];\n                if (!component) {\n                    this.error(\"Component not found: \" + id);\n                    return;\n                }\n            } else {\n                this.error(\"Expected a Component or ID\");\n                return;\n            }\n        }\n        if (expectedType !== component.type) {\n            this.error(\"Expected a \" + expectedType + \" Component\");\n            return;\n        }\n        if (component.scene.id !== this.scene.id) {\n            this.error(\"Not in same scene: \" + component.type);\n            return;\n        }\n        return component;\n    }\n\n    _checkComponent2(expectedTypes, component) {\n        if (!component.isComponent) {\n            if (utils.isID(component)) {\n                const id = component;\n                component = this.scene.components[id];\n                if (!component) {\n                    this.error(\"Component not found: \" + id);\n                    return;\n                }\n            } else {\n                this.error(\"Expected a Component or ID\");\n                return;\n            }\n        }\n        if (component.scene.id !== this.scene.id) {\n            this.error(\"Not in same scene: \" + component.type);\n            return;\n        }\n        for (var i = 0, len = expectedTypes.length; i < len; i++) {\n            if (expectedTypes[i] === component.type) {\n                return component;\n            }\n        }\n        this.error(\"Expected component types: \" + expectedTypes);\n        return null;\n    }\n\n    _own(component) {\n        if (!this._ownedComponents) {\n            this._ownedComponents = {};\n        }\n        if (!this._ownedComponents[component.id]) {\n            this._ownedComponents[component.id] = component;\n        }\n        component.once(\"destroyed\", () => {\n            delete this._ownedComponents[component.id];\n        }, this);\n    }\n\n    /**\n     * Protected method, called by sub-classes to queue a call to _update().\n     * @protected\n     * @param {Number} [priority=1]\n     */\n    _needUpdate(priority) {\n        if (!this._updateScheduled) {\n            this._updateScheduled = true;\n            if (priority === 0) {\n                this._doUpdate();\n            } else {\n                core.scheduleTask(this._doUpdate, this);\n            }\n        }\n    }\n\n    /**\n     * @private\n     */\n    _doUpdate() {\n        if (this._updateScheduled) {\n            this._updateScheduled = false;\n            if (this._update) {\n                this._update();\n            }\n        }\n    }\n\n    /**\n     * Protected virtual template method, optionally implemented\n     * by sub-classes to perform a scheduled task.\n     *\n     * @protected\n     */\n    _update() {\n    }\n\n    /**\n     * Destroys all {@link Component}s that are owned by this. These are Components that were instantiated with\n     * this Component as their first constructor argument.\n     */\n    clear() {\n        if (this._ownedComponents) {\n            for (var id in this._ownedComponents) {\n                if (this._ownedComponents.hasOwnProperty(id)) {\n                    const component = this._ownedComponents[id];\n                    component.destroy();\n                    delete this._ownedComponents[id];\n                }\n            }\n        }\n    }\n\n    /**\n     * Destroys this component.\n     */\n    destroy() {\n\n        if (this.destroyed) {\n            return;\n        }\n\n        /**\n         * Fired when this Component is destroyed.\n         * @event destroyed\n         */\n        this.fire(\"destroyed\", this.destroyed = true); // Must fire before we blow away subscription maps, below\n\n        // Unsubscribe from child components and destroy then\n\n        let id;\n        let attachment;\n        let component;\n        let subs;\n        let i;\n        let len;\n\n        if (this._attachments) {\n            for (id in this._attachments) {\n                if (this._attachments.hasOwnProperty(id)) {\n                    attachment = this._attachments[id];\n                    component = attachment.component;\n                    subs = attachment.subs;\n                    for (i = 0, len = subs.length; i < len; i++) {\n                        component.off(subs[i]);\n                    }\n                    if (attachment.managingLifecycle) {\n                        component.destroy();\n                    }\n                }\n            }\n        }\n\n        if (this._ownedComponents) {\n            for (id in this._ownedComponents) {\n                if (this._ownedComponents.hasOwnProperty(id)) {\n                    component = this._ownedComponents[id];\n                    component.destroy();\n                    delete this._ownedComponents[id];\n                }\n            }\n        }\n\n        this.scene._removeComponent(this);\n\n        // Memory leak avoidance\n        this._attached = {};\n        this._attachments = null;\n        this._subIdMap = null;\n        this._subIdEvents = null;\n        this._eventSubs = null;\n        this._events = null;\n        this._eventCallDepth = 0;\n        this._ownedComponents = null;\n        this._updateScheduled = false;\n    }\n}\n\nexport {Component};\n","import {Component} from '../Component.js';\n\nconst defaultCSS = \".sk-fading-circle {\\\n        background: transparent;\\\n        margin: 20px auto;\\\n        width: 50px;\\\n        height:50px;\\\n        position: relative;\\\n        }\\\n        .sk-fading-circle .sk-circle {\\\n        width: 120%;\\\n        height: 120%;\\\n        position: absolute;\\\n        left: 0;\\\n        top: 0;\\\n        }\\\n        .sk-fading-circle .sk-circle:before {\\\n        content: '';\\\n        display: block;\\\n        margin: 0 auto;\\\n        width: 15%;\\\n        height: 15%;\\\n        background-color: #ff8800;\\\n        border-radius: 100%;\\\n        -webkit-animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\\\n        animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;\\\n        }\\\n        .sk-fading-circle .sk-circle2 {\\\n        -webkit-transform: rotate(30deg);\\\n        -ms-transform: rotate(30deg);\\\n        transform: rotate(30deg);\\\n    }\\\n    .sk-fading-circle .sk-circle3 {\\\n        -webkit-transform: rotate(60deg);\\\n        -ms-transform: rotate(60deg);\\\n        transform: rotate(60deg);\\\n    }\\\n    .sk-fading-circle .sk-circle4 {\\\n        -webkit-transform: rotate(90deg);\\\n        -ms-transform: rotate(90deg);\\\n        transform: rotate(90deg);\\\n    }\\\n    .sk-fading-circle .sk-circle5 {\\\n        -webkit-transform: rotate(120deg);\\\n        -ms-transform: rotate(120deg);\\\n        transform: rotate(120deg);\\\n    }\\\n    .sk-fading-circle .sk-circle6 {\\\n        -webkit-transform: rotate(150deg);\\\n        -ms-transform: rotate(150deg);\\\n        transform: rotate(150deg);\\\n    }\\\n    .sk-fading-circle .sk-circle7 {\\\n        -webkit-transform: rotate(180deg);\\\n        -ms-transform: rotate(180deg);\\\n        transform: rotate(180deg);\\\n    }\\\n    .sk-fading-circle .sk-circle8 {\\\n        -webkit-transform: rotate(210deg);\\\n        -ms-transform: rotate(210deg);\\\n        transform: rotate(210deg);\\\n    }\\\n    .sk-fading-circle .sk-circle9 {\\\n        -webkit-transform: rotate(240deg);\\\n        -ms-transform: rotate(240deg);\\\n        transform: rotate(240deg);\\\n    }\\\n    .sk-fading-circle .sk-circle10 {\\\n        -webkit-transform: rotate(270deg);\\\n        -ms-transform: rotate(270deg);\\\n        transform: rotate(270deg);\\\n    }\\\n    .sk-fading-circle .sk-circle11 {\\\n        -webkit-transform: rotate(300deg);\\\n        -ms-transform: rotate(300deg);\\\n        transform: rotate(300deg);\\\n    }\\\n    .sk-fading-circle .sk-circle12 {\\\n        -webkit-transform: rotate(330deg);\\\n        -ms-transform: rotate(330deg);\\\n        transform: rotate(330deg);\\\n    }\\\n    .sk-fading-circle .sk-circle2:before {\\\n        -webkit-animation-delay: -1.1s;\\\n        animation-delay: -1.1s;\\\n    }\\\n    .sk-fading-circle .sk-circle3:before {\\\n        -webkit-animation-delay: -1s;\\\n        animation-delay: -1s;\\\n    }\\\n    .sk-fading-circle .sk-circle4:before {\\\n        -webkit-animation-delay: -0.9s;\\\n        animation-delay: -0.9s;\\\n    }\\\n    .sk-fading-circle .sk-circle5:before {\\\n        -webkit-animation-delay: -0.8s;\\\n        animation-delay: -0.8s;\\\n    }\\\n    .sk-fading-circle .sk-circle6:before {\\\n        -webkit-animation-delay: -0.7s;\\\n        animation-delay: -0.7s;\\\n    }\\\n    .sk-fading-circle .sk-circle7:before {\\\n        -webkit-animation-delay: -0.6s;\\\n        animation-delay: -0.6s;\\\n    }\\\n    .sk-fading-circle .sk-circle8:before {\\\n        -webkit-animation-delay: -0.5s;\\\n        animation-delay: -0.5s;\\\n    }\\\n    .sk-fading-circle .sk-circle9:before {\\\n        -webkit-animation-delay: -0.4s;\\\n        animation-delay: -0.4s;\\\n    }\\\n    .sk-fading-circle .sk-circle10:before {\\\n        -webkit-animation-delay: -0.3s;\\\n        animation-delay: -0.3s;\\\n    }\\\n    .sk-fading-circle .sk-circle11:before {\\\n        -webkit-animation-delay: -0.2s;\\\n        animation-delay: -0.2s;\\\n    }\\\n    .sk-fading-circle .sk-circle12:before {\\\n        -webkit-animation-delay: -0.1s;\\\n        animation-delay: -0.1s;\\\n    }\\\n    @-webkit-keyframes sk-circleFadeDelay {\\\n        0%, 39%, 100% { opacity: 0; }\\\n        40% { opacity: 1; }\\\n    }\\\n    @keyframes sk-circleFadeDelay {\\\n        0%, 39%, 100% { opacity: 0; }\\\n        40% { opacity: 1; }\\\n    }\";\n\n/**\n * @desc Displays a progress animation at the center of its {@link Canvas} while things are loading or otherwise busy.\n *\n *\n * * Located at {@link Canvas#spinner}.\n * * Automatically shown while things are loading, however may also be shown by application code wanting to indicate busyness.\n * * {@link Spinner#processes} holds the count of active processes. As a process starts, it increments {@link Spinner#processes}, then decrements it on completion or failure.\n * * A Spinner is only visible while {@link Spinner#processes} is greater than zero.\n *\n * ````javascript\n * var spinner = viewer.scene.canvas.spinner;\n *\n * // Increment count of busy processes represented by the spinner;\n * // assuming the count was zero, this now shows the spinner\n * spinner.processes++;\n *\n * // Increment the count again, by some other process; spinner already visible, now requires two decrements\n * // before it becomes invisible again\n * spinner.processes++;\n *\n * // Decrement the count; count still greater than zero, so spinner remains visible\n * spinner.process--;\n *\n * // Decrement the count; count now zero, so spinner becomes invisible\n * spinner.process--;\n * ````\n */\nclass Spinner extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Spinner\";\n    }\n\n    /**\n     @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._canvas = cfg.canvas;\n        this._element = null;\n        this._isCustom = false; // True when the element is custom HTML\n\n        if (cfg.elementId) { // Custom spinner element supplied\n            this._element = document.getElementById(cfg.elementId);\n            if (!this._element) {\n                this.error(\"Can't find given Spinner HTML element: '\" + cfg.elementId + \"' - will automatically create default element\");\n            } else {\n                this._adjustPosition();\n            }\n        }\n\n        if (!this._element) {\n            this._createDefaultSpinner();\n        }\n\n        this.processes = 0;\n    }\n\n    /** @private */\n    _createDefaultSpinner() {\n        this._injectDefaultCSS();\n        const element = document.createElement('div');\n        const style = element.style;\n        style[\"z-index\"] = \"9000\";\n        style.position = \"absolute\";\n        element.innerHTML = '<div class=\"sk-fading-circle\">\\\n                <div class=\"sk-circle1 sk-circle\"></div>\\\n                <div class=\"sk-circle2 sk-circle\"></div>\\\n                <div class=\"sk-circle3 sk-circle\"></div>\\\n                <div class=\"sk-circle4 sk-circle\"></div>\\\n                <div class=\"sk-circle5 sk-circle\"></div>\\\n                <div class=\"sk-circle6 sk-circle\"></div>\\\n                <div class=\"sk-circle7 sk-circle\"></div>\\\n                <div class=\"sk-circle8 sk-circle\"></div>\\\n                <div class=\"sk-circle9 sk-circle\"></div>\\\n                <div class=\"sk-circle10 sk-circle\"></div>\\\n                <div class=\"sk-circle11 sk-circle\"></div>\\\n                <div class=\"sk-circle12 sk-circle\"></div>\\\n                </div>';\n        this._canvas.parentElement.appendChild(element);\n        this._element = element;\n        this._isCustom = false;\n        this._adjustPosition();\n    }\n\n    /**\n     * @private\n     */\n    _injectDefaultCSS() {\n        const elementId = \"xeokit-spinner-css\";\n        if (document.getElementById(elementId)) {\n            return;\n        }\n        const defaultCSSNode = document.createElement('style');\n        defaultCSSNode.innerHTML = defaultCSS;\n        defaultCSSNode.id = elementId;\n        document.body.appendChild(defaultCSSNode);\n    }\n\n    /**\n     * @private\n     */\n    _adjustPosition() { // (Re)positions spinner DIV over the center of the canvas - called by Canvas\n        if (this._isCustom) {\n            return;\n        }\n        const canvas = this._canvas;\n        const element = this._element;\n        const style = element.style;\n        style[\"left\"] = (canvas.offsetLeft + (canvas.clientWidth * 0.5) - (element.clientWidth * 0.5)) + \"px\";\n        style[\"top\"] = (canvas.offsetTop + (canvas.clientHeight * 0.5) - (element.clientHeight * 0.5)) + \"px\";\n    }\n\n    /**\n     * Sets the number of processes this Spinner represents.\n     *\n     * The Spinner is visible while this property is greater than zero.\n     *\n     * Increment this property whenever you commence some process during which you want the Spinner to be visible, then decrement it again when the process is complete.\n     *\n     * Clamps to zero if you attempt to set to to a negative value.\n     *\n     * Fires a {@link Spinner#processes:event} event on change.\n\n     * Default value is ````0````.\n     *\n     * @param {Number} value New processes count.\n     */\n    set processes(value) {\n        value = value || 0;\n        if (this._processes === value) {\n            return;\n        }\n        if (value < 0) {\n            return;\n        }\n        const prevValue = this._processes;\n        this._processes = value;\n        const element = this._element;\n        if (element) {\n            element.style[\"visibility\"] = (this._processes > 0) ? \"visible\" : \"hidden\";\n        }\n        /**\n         Fired whenever this Spinner's {@link Spinner#visible} property changes.\n\n         @event processes\n         @param value The property's new value\n         */\n        this.fire(\"processes\", this._processes);\n        if (this._processes === 0 && this._processes !== prevValue) {\n            /**\n             Fired whenever this Spinner's {@link Spinner#visible} property becomes zero.\n\n             @event zeroProcesses\n             */\n            this.fire(\"zeroProcesses\", this._processes);\n        }\n    }\n\n    /**\n     * Gets the number of processes this Spinner represents.\n     *\n     * The Spinner is visible while this property is greater than zero.\n     *\n     * @returns {Number} Current processes count.\n     */\n    get processes() {\n        return this._processes;\n    }\n\n    _destroy() {\n        if (this._element && (!this._isCustom)) {\n            this._element.parentNode.removeChild(this._element);\n            this._element = null;\n        }\n    }\n}\n\nexport {Spinner};","/**\n * @private\n * @type {{WEBGL: boolean, SUPPORTED_EXTENSIONS: {}}}\n */\nconst WEBGL_INFO = {\n    WEBGL: false,\n    SUPPORTED_EXTENSIONS: {}\n};\n\nconst canvas = document.createElement(\"canvas\");\n\nif (canvas) {\n\n    const gl = canvas.getContext(\"webgl\", {antialias: true}) || canvas.getContext(\"experimental-webgl\", {antialias: true});\n\n    WEBGL_INFO.WEBGL = !!gl;\n\n    if (WEBGL_INFO.WEBGL) {\n        WEBGL_INFO.ANTIALIAS = gl.getContextAttributes().antialias;\n        if (gl.getShaderPrecisionFormat) {\n            if (gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"highp\";\n            } else if (gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"mediump\";\n            } else {\n                WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"lowp\";\n            }\n        } else {\n            WEBGL_INFO.FS_MAX_FLOAT_PRECISION = \"mediump\";\n        }\n        WEBGL_INFO.DEPTH_BUFFER_BITS = gl.getParameter(gl.DEPTH_BITS);\n        WEBGL_INFO.MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n        WEBGL_INFO.MAX_CUBE_MAP_SIZE = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n        WEBGL_INFO.MAX_RENDERBUFFER_SIZE = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\n        WEBGL_INFO.MAX_TEXTURE_UNITS = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        WEBGL_INFO.MAX_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n        WEBGL_INFO.MAX_VERTEX_ATTRIBS = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n        WEBGL_INFO.MAX_VERTEX_UNIFORM_VECTORS = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n        WEBGL_INFO.MAX_FRAGMENT_UNIFORM_VECTORS = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n        WEBGL_INFO.MAX_VARYING_VECTORS = gl.getParameter(gl.MAX_VARYING_VECTORS);\n        gl.getSupportedExtensions().forEach(function (ext) {\n            WEBGL_INFO.SUPPORTED_EXTENSIONS[ext] = true;\n        });\n        WEBGL_INFO.depthTexturesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"];\n    }\n}\n\nexport {WEBGL_INFO};","import {core} from \"../core.js\";\nimport {math} from '../math/math.js';\nimport {stats} from '../stats.js';\nimport {Component} from '../Component.js';\nimport {Spinner} from './Spinner.js';\nimport {WEBGL_INFO} from '../webglInfo.js';\n\nconst WEBGL_CONTEXT_NAMES = [\n    \"webgl\",\n    \"experimental-webgl\",\n    \"webkit-3d\",\n    \"moz-webgl\",\n    \"moz-glweb20\"\n];\n\n/**\n * @desc Manages its {@link Scene}'s HTML canvas.\n *\n * * Provides the HTML canvas element in {@link Canvas#canvas}.\n * * Has a {@link Spinner}, provided at {@link Canvas#spinner}, which manages the loading progress indicator.\n */\nclass Canvas extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Canvas\";\n    }\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._backgroundColor = math.vec3([\n            cfg.backgroundColor ? cfg.backgroundColor[0] : 1,\n            cfg.backgroundColor ? cfg.backgroundColor[1] : 1,\n            cfg.backgroundColor ? cfg.backgroundColor[2] : 1]);\n        this._backgroundColorFromAmbientLight = !!cfg.backgroundColorFromAmbientLight;\n\n        /**\n         * The HTML canvas.\n         *\n         * @property canvas\n         * @type {HTMLCanvasElement}\n         * @final\n         */\n        this.canvas = cfg.canvas;\n\n        /**\n         * The WebGL rendering context.\n         *\n         * @property gl\n         * @type {WebGLRenderingContext}\n         * @final\n         */\n        this.gl = null;\n\n        /**\n         * True when WebGL 2 support is enabled.\n         *\n         * @property webgl2\n         * @type {Boolean}\n         * @final\n         */\n        this.webgl2 = false; // Will set true in _initWebGL if WebGL is requested and we succeed in getting it.\n\n        /**\n         * Indicates if this Canvas is transparent.\n         *\n         * @property transparent\n         * @type {Boolean}\n         * @default {false}\n         * @final\n         */\n        this.transparent = !!cfg.transparent;\n\n        /**\n         * Attributes for the WebGL context\n         *\n         * @type {{}|*}\n         */\n        this.contextAttr = cfg.contextAttr || {};\n        this.contextAttr.alpha = this.transparent;\n\n        this.contextAttr.preserveDrawingBuffer = !!this.contextAttr.preserveDrawingBuffer;\n        this.contextAttr.stencil = false;\n        this.contextAttr.premultipliedAlpha = (!!this.contextAttr.premultipliedAlpha);  // False by default: https://github.com/xeokit/xeokit-sdk/issues/251\n        this.contextAttr.antialias = (this.contextAttr.antialias !== false);\n\n        // If the canvas uses css styles to specify the sizes make sure the basic\n        // width and height attributes match or the WebGL context will use 300 x 150\n\n        this.canvas.width = this.canvas.clientWidth;\n        this.canvas.height = this.canvas.clientHeight;\n\n        /**\n         * Boundary of the Canvas in absolute browser window coordinates.\n         *\n         * ### Usage:\n         *\n         * ````javascript\n         * var boundary = myScene.canvas.boundary;\n         *\n         * var xmin = boundary[0];\n         * var ymin = boundary[1];\n         * var width = boundary[2];\n         * var height = boundary[3];\n         * ````\n         *\n         * @property boundary\n         * @type {{Number[]}}\n         * @final\n         */\n        this.boundary = [\n            this.canvas.offsetLeft, this.canvas.offsetTop,\n            this.canvas.clientWidth, this.canvas.clientHeight\n        ];\n\n        // Get WebGL context\n\n        this._initWebGL(cfg);\n\n        // Bind context loss and recovery handlers\n\n        const self = this;\n\n        this.canvas.addEventListener(\"webglcontextlost\", this._webglcontextlostListener = function (event) {\n                console.time(\"webglcontextrestored\");\n                self.scene._webglContextLost();\n                /**\n                 * Fired whenever the WebGL context has been lost\n                 * @event webglcontextlost\n                 */\n                self.fire(\"webglcontextlost\");\n                event.preventDefault();\n            },\n            false);\n\n        this.canvas.addEventListener(\"webglcontextrestored\", this._webglcontextrestoredListener = function (event) {\n                self._initWebGL();\n                if (self.gl) {\n                    self.scene._webglContextRestored(self.gl);\n                    /**\n                     * Fired whenever the WebGL context has been restored again after having previously being lost\n                     * @event webglContextRestored\n                     * @param value The WebGL context object\n                     */\n                    self.fire(\"webglcontextrestored\", self.gl);\n                    event.preventDefault();\n                }\n                console.timeEnd(\"webglcontextrestored\");\n            },\n            false);\n\n        // Publish canvas size and position changes on each scene tick\n\n        let lastWindowWidth = null;\n        let lastWindowHeight = null;\n\n        let lastCanvasWidth = null;\n        let lastCanvasHeight = null;\n\n        let lastCanvasOffsetLeft = null;\n        let lastCanvasOffsetTop = null;\n\n        let lastParent = null;\n\n        this._tick = this.scene.on(\"tick\", function () {\n\n            const canvas = self.canvas;\n\n            const newWindowSize = (window.innerWidth !== lastWindowWidth || window.innerHeight !== lastWindowHeight);\n            const newCanvasSize = (canvas.clientWidth !== lastCanvasWidth || canvas.clientHeight !== lastCanvasHeight);\n            const newCanvasPos = (canvas.offsetLeft !== lastCanvasOffsetLeft || canvas.offsetTop !== lastCanvasOffsetTop);\n\n            const parent = canvas.parentElement;\n            const newParent = (parent !== lastParent);\n\n            if (newWindowSize || newCanvasSize || newCanvasPos || newParent) {\n\n                self._spinner._adjustPosition();\n\n                if (newCanvasSize || newCanvasPos) {\n\n                    const newWidth = canvas.clientWidth;\n                    const newHeight = canvas.clientHeight;\n\n                    // TODO: Wasteful to re-count pixel size of each canvas on each canvas' resize\n                    if (newCanvasSize) {\n                        let countPixels = 0;\n                        let scene;\n                        for (const sceneId in core.scenes) {\n                            if (core.scenes.hasOwnProperty(sceneId)) {\n                                scene = core.scenes[sceneId];\n                                countPixels += scene.canvas.canvas.clientWidth * scene.canvas.canvas.clientHeight;\n                            }\n                        }\n                        stats.memory.pixels = countPixels;\n\n                        canvas.width = canvas.clientWidth;\n                        canvas.height = canvas.clientHeight;\n                    }\n\n                    const boundary = self.boundary;\n\n                    boundary[0] = canvas.offsetLeft;\n                    boundary[1] = canvas.offsetTop;\n                    boundary[2] = newWidth;\n                    boundary[3] = newHeight;\n\n                    /**\n                     * Fired whenever this Canvas's {@link Canvas/boundary} property changes.\n                     *\n                     * @event boundary\n                     * @param value The property's new value\n                     */\n                    self.fire(\"boundary\", boundary);\n\n                    lastCanvasWidth = newWidth;\n                    lastCanvasHeight = newHeight;\n                }\n\n                if (newWindowSize) {\n                    lastWindowWidth = window.innerWidth;\n                    lastWindowHeight = window.innerHeight;\n                }\n\n                if (newCanvasPos) {\n                    lastCanvasOffsetLeft = canvas.offsetLeft;\n                    lastCanvasOffsetTop = canvas.offsetTop;\n                }\n\n                lastParent = parent;\n            }\n        });\n\n        this._spinner = new Spinner(this.scene, {\n            canvas: this.canvas,\n            elementId: cfg.spinnerElementId\n        });\n    }\n\n    /**\n     * Creates a default canvas in the DOM.\n     * @private\n     */\n    _createCanvas() {\n\n        const canvasId = \"xeokit-canvas-\" + math.createUUID();\n        const body = document.getElementsByTagName(\"body\")[0];\n        const div = document.createElement('div');\n\n        const style = div.style;\n        style.height = \"100%\";\n        style.width = \"100%\";\n        style.padding = \"0\";\n        style.margin = \"0\";\n        style.background = \"rgba(0,0,0,0);\";\n        style.float = \"left\";\n        style.left = \"0\";\n        style.top = \"0\";\n        style.position = \"absolute\";\n        style.opacity = \"1.0\";\n        style[\"z-index\"] = \"-10000\";\n\n        div.innerHTML += '<canvas id=\"' + canvasId + '\" style=\"width: 100%; height: 100%; float: left; margin: 0; padding: 0;\"></canvas>';\n\n        body.appendChild(div);\n\n        this.canvas = document.getElementById(canvasId);\n    }\n\n    _getElementXY(e) {\n        let x = 0, y = 0;\n        while (e) {\n            x += (e.offsetLeft - e.scrollLeft);\n            y += (e.offsetTop - e.scrollTop);\n            e = e.offsetParent;\n        }\n        return {x: x, y: y};\n    }\n\n    /**\n     * Initialises the WebGL context\n     * @private\n     */\n    _initWebGL() {\n\n        // Default context attribute values\n\n        if (!this.gl) {\n            for (let i = 0; !this.gl && i < WEBGL_CONTEXT_NAMES.length; i++) {\n                try {\n                    this.gl = this.canvas.getContext(WEBGL_CONTEXT_NAMES[i], this.contextAttr);\n                } catch (e) { // Try with next context name\n                }\n            }\n        }\n\n        if (!this.gl) {\n\n            this.error('Failed to get a WebGL context');\n\n            /**\n             * Fired whenever the canvas failed to get a WebGL context, which probably means that WebGL\n             * is either unsupported or has been disabled.\n             * @event webglContextFailed\n             */\n            this.fire(\"webglContextFailed\", true, true);\n        }\n\n        if (this.gl) {\n            // Setup extension (if necessary) and hints for fragment shader derivative functions\n            if (this.webgl2) {\n                this.gl.hint(this.gl.FRAGMENT_SHADER_DERIVATIVE_HINT, this.gl.FASTEST);\n            } else {\n                if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_standard_derivatives\"]) {\n                    const ext = this.gl.getExtension(\"OES_standard_derivatives\");\n                    this.gl.hint(ext.FRAGMENT_SHADER_DERIVATIVE_HINT_OES, this.gl.FASTEST);\n                }\n                if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                    this.gl.getExtension('EXT_frag_depth');\n                }\n                if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n                    this.gl.getExtension('WEBGL_depth_texture');\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets if the canvas background color is derived from an {@link AmbientLight}.\n     *\n     * This only has effect when the canvas is not transparent. When not enabled, the background color\n     * will be the canvas element's HTML/CSS background color.\n     *\n     * Default value is ````true````.\n     *\n     * @type {Boolean}\n     */\n    set backgroundColorFromAmbientLight(backgroundColorFromAmbientLight) {\n        this._backgroundColorFromAmbientLight = (backgroundColorFromAmbientLight !== false);\n    }\n\n    /**\n     * Gets whether the canvas clear color will be derived from {@link AmbientLight} or {@link Canvas#backgroundColor}\n     * when {@link Canvas#transparent} is ```true```.\n     *\n     * When {@link Canvas#transparent} is ```true``` and this is ````true````, then the canvas clear color will\n     * be taken from the {@link Scene}'s ambient light color.\n     *\n     * When {@link Canvas#transparent} is ```true``` and this is ````false````, then the canvas clear color will\n     * be taken from {@link Canvas#backgroundColor}.\n     *\n     * Default value is ````true````.\n     *\n     * @type {Boolean}\n     */\n    get backgroundColorFromAmbientLight() {\n        return this._backgroundColorFromAmbientLight;\n    }\n\n    /**\n     * Sets the canvas clear color.\n     *\n     * Default value is ````[1, 1, 1]````.\n     *\n     * @type {Number[]}\n     */\n    set backgroundColor(value) {\n        if (value) {\n            this._backgroundColor[0] = value[0];\n            this._backgroundColor[1] = value[1];\n            this._backgroundColor[2] = value[2];\n        } else {\n            this._backgroundColor[0] = 1.0;\n            this._backgroundColor[1] = 1.0;\n            this._backgroundColor[2] = 1.0;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the canvas clear color.\n     *\n     * Default value is ````[1, 1, 1]````.\n     *\n     * @type {Number[]}\n     */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n\n    /**\n     * @private\n     * @deprecated\n     */\n    getSnapshot(params) {\n        throw \"Canvas#getSnapshot() has been replaced by Viewer#getSnapshot() - use that method instead.\";\n    }\n\n    /**\n     * Reads colors of pixels from the last rendered frame.\n     *\n     * Call this method like this:\n     *\n     * ````JavaScript\n     *\n     * // Ignore transparent pixels (default is false)\n     * var opaqueOnly = true;\n     *\n     * var colors = new Float32Array(8);\n     *\n     * viewer.scene.canvas.readPixels([ 100, 22, 12, 33 ], colors, 2, opaqueOnly);\n     * ````\n     *\n     * Then the r,g,b components of the colors will be set to the colors at those pixels.\n     *\n     * @param {Number[]} pixels\n     * @param {Number[]} colors\n     * @param {Number} size\n     * @param {Boolean} opaqueOnly\n     */\n    readPixels(pixels, colors, size, opaqueOnly) {\n        return this.scene._renderer.readPixels(pixels, colors, size, opaqueOnly);\n    }\n\n    /**\n     * Simulates lost WebGL context.\n     */\n    loseWebGLContext() {\n        if (this.canvas.loseContext) {\n            this.canvas.loseContext();\n        }\n    }\n\n    /**\n     * The busy {@link Spinner} for this Canvas.\n     *\n     * @property spinner\n     * @type Spinner\n     * @final\n     */\n    get spinner() {\n        return this._spinner;\n    }\n\n    destroy() {\n        this.scene.off(this._tick);\n        this._spinner._destroy();\n        // Memory leak avoidance\n        this.canvas.removeEventListener(\"webglcontextlost\", this._webglcontextlostListener);\n        this.canvas.removeEventListener(\"webglcontextrestored\", this._webglcontextrestoredListener);\n        this.gl = null;\n        super.destroy();\n    }\n}\n\nexport {Canvas};","import {math} from './math.js';\n\nconst tempVec3a = math.vec3();\nconst tempAABB3 = math.AABB3();\n\n/**\n * Given a view matrix and a relative-to-center (RTC) coordinate origin, returns a view matrix\n * to transform RTC coordinates to View-space.\n *\n * The returned view matrix is\n *\n * @private\n */\nconst createRTCViewMat = (function () {\n\n    const tempMat = new Float32Array(16);\n    const rtcCenterWorld = new Float64Array(4);\n    const rtcCenterView = new Float64Array(4);\n\n    return function (viewMat, rtcCenter, rtcViewMat = tempMat) {\n        rtcCenterWorld[0] = rtcCenter[0];\n        rtcCenterWorld[1] = rtcCenter[1];\n        rtcCenterWorld[2] = rtcCenter[2];\n        rtcCenterWorld[3] = 1;\n        math.transformVec4(viewMat, rtcCenterWorld, rtcCenterView);\n        math.setMat4Translation(viewMat, rtcCenterView, rtcViewMat);\n        return rtcViewMat;\n    }\n}());\n\n/**\n * Converts a World-space 3D position to RTC.\n *\n * Given a double-precision World-space position, returns a double-precision relative-to-center (RTC) center pos\n * and a single-precision offset fom that center.\n *\n * @param {Float64Array} worldPos The World-space position.\n * @param {Float64Array} rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param {Float32Array} rtcPos Single-precision offset fom that center.\n */\nfunction worldToRTCPos(worldPos, rtcCenter, rtcPos) {\n\n    const xHigh = Float32Array.from([worldPos[0]])[0];\n    const xLow = worldPos[0] - xHigh;\n\n    const yHigh = Float32Array.from([worldPos[1]])[0];\n    const yLow = worldPos[1] - yHigh;\n\n    const zHigh = Float32Array.from([worldPos[2]])[0];\n    const zLow = worldPos[2] - zHigh;\n\n    rtcCenter[0] = xHigh;\n    rtcCenter[1] = yHigh;\n    rtcCenter[2] = zHigh;\n\n    rtcPos[0] = xLow;\n    rtcPos[1] = yLow;\n    rtcPos[2] = zLow;\n}\n\n\n/**\n * Converts a flat array of double-precision positions to RTC positions.\n *\n * Returns the RTC positions, along with a computed RTC center for those positions.\n *\n * When computing the RTC position, this function uses a modulus operation to ensure that, whenever possible,\n * identical RTC positions are reused for different positions arrays.\n *\n * @param {Float64Array} worldPositions Flat array of World-space 3D positions.\n * @param {Float64Array} rtcPositions Outputs the computed flat array of 3D RTC positions.\n * @param {Float64Array} rtcCenter Outputs the computed double-precision relative-to-center (RTC) center pos.\n * @param {Number} [cellSize=10000000] The size of each coordinate cell within the RTC coordinate system.\n * @returns {Boolean} ````True```` if the positions actually needed conversion to RTC, else ````false````. When\n * ````false````, we can safely ignore the data returned in ````rtcPositions```` and ````rtcCenter````,\n * since ````rtcCenter```` will equal ````[0,0,0]````, and ````rtcPositions```` will contain identical values to ````positions````.\n */\nfunction worldToRTCPositions(worldPositions, rtcPositions, rtcCenter, cellSize = 10000000) {\n\n    const center = math.getPositionsCenter(worldPositions, tempVec3a);\n\n    const rtcCenterX = Math.round(center[0] / cellSize) * cellSize;\n    const rtcCenterY = Math.round(center[1] / cellSize) * cellSize;\n    const rtcCenterZ = Math.round(center[2] / cellSize) * cellSize;\n\n    for (let i = 0, len = worldPositions.length; i < len; i += 3) {\n        rtcPositions[i + 0] = worldPositions[i + 0] - rtcCenterX;\n        rtcPositions[i + 1] = worldPositions[i + 1] - rtcCenterY;\n        rtcPositions[i + 2] = worldPositions[i + 2] - rtcCenterZ;\n    }\n\n    rtcCenter[0] = rtcCenterX;\n    rtcCenter[1] = rtcCenterY;\n    rtcCenter[2] = rtcCenterZ;\n\n    const rtcNeeded = (rtcCenter[0] !== 0 || rtcCenter[1] !== 0 || rtcCenter[2] !== 0);\n\n    return rtcNeeded;\n}\n\n/**\n * Converts an RTC 3D position to World-space.\n *\n * @param {Float64Array} rtcCenter Double-precision relative-to-center (RTC) center pos.\n * @param {Float32Array} rtcPos Single-precision offset fom that center.\n * @param {Float64Array} worldPos The World-space position.\n */\nfunction rtcToWorldPos(rtcCenter, rtcPos, worldPos) {\n    worldPos[0] = rtcCenter[0] + rtcPos[0];\n    worldPos[1] = rtcCenter[1] + rtcPos[1];\n    worldPos[2] = rtcCenter[2] + rtcPos[2];\n    return worldPos;\n}\n\n/**\n * Given a 3D plane defined by distance from origin and direction, and an RTC center position,\n * return a plane position that is relative to the RTC center.\n *\n * @param dist\n * @param dir\n * @param rtcCenter\n * @param rtcPlanePos\n * @returns {*}\n */\nfunction getPlaneRTCPos(dist, dir, rtcCenter, rtcPlanePos) {\n    const rtcCenterToPlaneDist = math.dotVec3(dir, rtcCenter) + dist;\n    const dirNormalized = math.normalizeVec3(dir, tempVec3a);\n    math.mulVec3Scalar(dirNormalized, -rtcCenterToPlaneDist, rtcPlanePos);\n    return rtcPlanePos;\n}\n\nexport {createRTCViewMat, worldToRTCPos, worldToRTCPositions, rtcToWorldPos, getPlaneRTCPos};","import {math} from \"../math/math.js\";\nimport {createRTCViewMat} from \"../math/rtcCoords.js\";\n\n/**\n * @desc Provides rendering context to {@link Drawable\"}s as xeokit renders them for a frame.\n *\n * Also creates RTC viewing and picking matrices, caching and reusing matrices within each frame.\n *\n * @private\n */\nclass FrameContext {\n\n    constructor(scene) {\n\n        this._scene = scene;\n\n        this._matPool = [];\n        this._matPoolNextFreeIndex = 0;\n\n        this._rtcViewMats = {};\n        this._rtcPickViewMats = {};\n\n        this.reset();\n    }\n\n    /**\n     * Called by the renderer before each frame.\n     * @private\n     */\n    reset() {\n\n        this._matPoolNextFreeIndex = 0;\n        this._rtcViewMats = {};\n        this._rtcPickViewMats = {};\n\n        /**\n         * The WebGL rendering context.\n         * @type {WebGLRenderingContext}\n         */\n        this.gl = this._scene.canvas.gl;\n\n        /**\n         * ID of the last {@link WebGLProgram} that was bound during the current frame.\n         * @property lastProgramId\n         * @type {Number}\n         */\n        this.lastProgramId = null;\n\n        /**\n         * Whether to render a quality representation for triangle surfaces.\n         *\n         * When ````false````, we'll render them with a fast vertex-shaded Gouraud-shaded representation, which\n         * is great for zillions of objects.\n         *\n         * When ````true````, we'll render them at a better visual quality, using smooth, per-fragment shading\n         * and a more realistic lighting model.\n         *\n         * @property quality\n         * @default false\n         * @type {Boolean}\n         */\n        this.pbrEnabled = false;\n\n        /**\n         * Whether SAO is currently enabled during the current frame.\n         * @property withSAO\n         * @default false\n         * @type {Boolean}\n         */\n        this.withSAO = false;\n\n        /**\n         * Whether backfaces are currently enabled during the current frame.\n         * @property backfaces\n         * @default false\n         * @type {Boolean}\n         */\n        this.backfaces = false;\n\n        /**\n         * The vertex winding order for what we currently consider to be a backface during current\n         * frame: true == \"cw\", false == \"ccw\".\n         * @property frontFace\n         * @default true\n         * @type {Boolean}\n         */\n        this.frontface = true;\n\n        /**\n         * The next available texture unit to bind a {@link Texture} to.\n         * @defauilt 0\n         * @property textureUnit\n         * @type {number}\n         */\n        this.textureUnit = 0;\n\n        /**\n         * Performance statistic that counts how many times the renderer has called ````gl.drawElements()```` has been\n         * called so far within the current frame.\n         * @default 0\n         * @property drawElements\n         * @type {number}\n         */\n        this.drawElements = 0;\n\n        /**\n         * Performance statistic that counts how many times ````gl.drawArrays()```` has been called so far within\n         * the current frame.\n         * @default 0\n         * @property drawArrays\n         * @type {number}\n         */\n        this.drawArrays = 0;\n\n        /**\n         * Performance statistic that counts how many times ````gl.useProgram()```` has been called so far within\n         * the current frame.\n         * @default 0\n         * @property useProgram\n         * @type {number}\n         */\n        this.useProgram = 0;\n\n        /**\n         * Statistic that counts how many times ````gl.bindTexture()```` has been called so far within the current frame.\n         * @default 0\n         * @property bindTexture\n         * @type {number}\n         */\n        this.bindTexture = 0;\n\n        /**\n         * Counts how many times the renderer has called ````gl.bindArray()```` so far within the current frame.\n         * @defaulr 0\n         * @property bindArray\n         * @type {number}\n         */\n        this.bindArray = 0;\n\n        /**\n         * Indicates which pass the renderer is currently rendering.\n         *\n         * See {@link Scene/passes:property\"}}Scene#passes{{/crossLink}}, which configures how many passes we render\n         * per frame, which typically set to ````2```` when rendering a stereo view.\n         *\n         * @property pass\n         * @type {number}\n         */\n        this.pass = 0;\n\n        /**\n         * The 4x4 viewing transform matrix the renderer is currently using when rendering castsShadows.\n         *\n         * This sets the viewpoint to look from the point of view of each {@link DirLight}\n         * or {@link PointLight} that casts a shadow.\n         *\n         * @property shadowViewMatrix\n         * @type {Number[]}\n         */\n        this.shadowViewMatrix = null;\n\n        /**\n         * The 4x4 viewing projection matrix the renderer is currently using when rendering shadows.\n         *\n         * @property shadowProjMatrix\n         * @type {Number[]}\n         */\n        this.shadowProjMatrix = null;\n\n        /**\n         * The 4x4 viewing transform matrix the renderer is currently using when rendering a ray-pick.\n         *\n         * This sets the viewpoint to look along the ray given to {@link Scene/pick:method\"}}Scene#pick(){{/crossLink}}\n         * when picking with a ray.\n         *\n         * @property pickViewMatrix\n         * @type {Number[]}\n         */\n        this.pickViewMatrix = null;\n\n        /**\n         * The 4x4 orthographic projection transform matrix the renderer is currently using when rendering a ray-pick.\n         *\n         * @property pickProjMatrix\n         * @type {Number[]}\n         */\n        this.pickProjMatrix = null;\n\n        /**\n         * Distance to the near clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n         *\n         * @property pickZNear\n         * @type {Number|*}\n         */\n        this.pickZNear = 0.01;\n\n        /**\n         * Distance to the far clipping plane when rendering depth fragments for GPU-accelerated 3D picking.\n         *\n         * @property pickZFar\n         * @type {Number|*}\n         */\n        this.pickZFar = 5000;\n\n        /**\n         * Whether or not the renderer is currently picking invisible objects.\n         *\n         * @property pickInvisible\n         * @type {Number}\n         */\n        this.pickInvisible = false;\n\n        /** The current line width.\n         *\n         * @property lineWidth\n         * @type Number\n         */\n        this.lineWidth = 1;\n    }\n\n    /**\n     * Get View matrix for the given RTC center.\n     */\n    getRTCViewMatrix(rtcCenterHash, rtcCenter) {\n        let rtcViewMat = this._rtcViewMats[rtcCenterHash];\n        if (!rtcViewMat) {\n            rtcViewMat = this._getNewMat();\n            createRTCViewMat(this._scene.camera.viewMatrix, rtcCenter, rtcViewMat);\n            this._rtcViewMats[rtcCenterHash] = rtcViewMat;\n        }\n        return rtcViewMat;\n    }\n\n    /**\n     * Get picking View RTC matrix for the given RTC center.\n     */\n    getRTCPickViewMatrix(rtcCenterHash, rtcCenter) {\n        let rtcPickViewMat = this._rtcPickViewMats[rtcCenterHash];\n        if (!rtcPickViewMat) {\n            rtcPickViewMat = this._getNewMat();\n            const pickViewMat = this.pickViewMatrix || this._scene.camera.viewMatrix;\n            createRTCViewMat(pickViewMat, rtcCenter, rtcPickViewMat);\n            this._rtcPickViewMats[rtcCenterHash] = rtcPickViewMat;\n        }\n        return rtcPickViewMat;\n    }\n\n    _getNewMat() {\n        let mat = this._matPool[this._matPoolNextFreeIndex];\n        if (!mat) {\n            mat = math.mat4();\n            this._matPool[this._matPoolNextFreeIndex] = mat;\n        }\n        this._matPoolNextFreeIndex++;\n        return mat;\n    }\n}\n\nexport {FrameContext};","/*\n * Canvas2Image v0.1\n * Copyright (c) 2008 Jacob Seidelin, cupboy@gmail.com\n * MIT License [http://www.opensource.org/licenses/mit-license.php]\n *\n * Modified by @xeolabs to permit vertical flipping, so that snapshot can be taken from WebGL frame buffers,\n * which vertically flip image data as part of the way that WebGL renders textures.\n */\n\n/**\n * @private\n */\nconst Canvas2Image = (function () {\n    // check if we have canvas support\n    const oCanvas = document.createElement(\"canvas\"), sc = String.fromCharCode, strDownloadMime = \"image/octet-stream\",\n        bReplaceDownloadMime = false;\n\n    // no canvas, bail out.\n    if (!oCanvas.getContext) {\n        return {\n            saveAsBMP: function () {\n            },\n            saveAsPNG: function () {\n            },\n            saveAsJPEG: function () {\n            }\n        }\n    }\n\n    const bHasImageData = !!(oCanvas.getContext(\"2d\").getImageData), bHasDataURL = !!(oCanvas.toDataURL),\n        bHasBase64 = !!(window.btoa);\n\n    // ok, we're good\n    const readCanvasData = function (oCanvas) {\n        const iWidth = parseInt(oCanvas.width), iHeight = parseInt(oCanvas.height);\n        return oCanvas.getContext(\"2d\").getImageData(0, 0, iWidth, iHeight);\n    };\n\n    // base64 encodes either a string or an array of charcodes\n    const encodeData = function (data) {\n        let i, aData, strData = \"\";\n\n        if (typeof data == \"string\") {\n            strData = data;\n        } else {\n            aData = data;\n            for (i = 0; i < aData.length; i++) {\n                strData += sc(aData[i]);\n            }\n        }\n        return btoa(strData);\n    };\n\n    // creates a base64 encoded string containing BMP data takes an imagedata object as argument\n    const createBMP = function (oData) {\n        let strHeader = '';\n        const iWidth = oData.width;\n        const iHeight = oData.height;\n\n        strHeader += 'BM';\n\n        let iFileSize = iWidth * iHeight * 4 + 54; // total header size = 54 bytes\n        strHeader += sc(iFileSize % 256);\n        iFileSize = Math.floor(iFileSize / 256);\n        strHeader += sc(iFileSize % 256);\n        iFileSize = Math.floor(iFileSize / 256);\n        strHeader += sc(iFileSize % 256);\n        iFileSize = Math.floor(iFileSize / 256);\n        strHeader += sc(iFileSize % 256);\n\n        strHeader += sc(0, 0, 0, 0, 54, 0, 0, 0); // data offset\n        strHeader += sc(40, 0, 0, 0); // info header size\n\n        let iImageWidth = iWidth;\n        strHeader += sc(iImageWidth % 256);\n        iImageWidth = Math.floor(iImageWidth / 256);\n        strHeader += sc(iImageWidth % 256);\n        iImageWidth = Math.floor(iImageWidth / 256);\n        strHeader += sc(iImageWidth % 256);\n        iImageWidth = Math.floor(iImageWidth / 256);\n        strHeader += sc(iImageWidth % 256);\n\n        let iImageHeight = iHeight;\n        strHeader += sc(iImageHeight % 256);\n        iImageHeight = Math.floor(iImageHeight / 256);\n        strHeader += sc(iImageHeight % 256);\n        iImageHeight = Math.floor(iImageHeight / 256);\n        strHeader += sc(iImageHeight % 256);\n        iImageHeight = Math.floor(iImageHeight / 256);\n        strHeader += sc(iImageHeight % 256);\n\n        strHeader += sc(1, 0, 32, 0); // num of planes & num of bits per pixel\n        strHeader += sc(0, 0, 0, 0); // compression = none\n\n        let iDataSize = iWidth * iHeight * 4;\n        strHeader += sc(iDataSize % 256);\n        iDataSize = Math.floor(iDataSize / 256);\n        strHeader += sc(iDataSize % 256);\n        iDataSize = Math.floor(iDataSize / 256);\n        strHeader += sc(iDataSize % 256);\n        iDataSize = Math.floor(iDataSize / 256);\n        strHeader += sc(iDataSize % 256);\n\n        strHeader += sc(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0); // these bytes are not used\n\n        const aImgData = oData.data;\n        let strPixelData = \"\";\n        let c;\n        let x;\n        let y = iHeight;\n        let iOffsetX;\n        let iOffsetY;\n        let strPixelRow;\n\n        do {\n            iOffsetY = iWidth * (y - 1) * 4;\n            strPixelRow = \"\";\n            for (x = 0; x < iWidth; x++) {\n                iOffsetX = 4 * x;\n                strPixelRow += sc(\n                    aImgData[iOffsetY + iOffsetX + 2], // B\n                    aImgData[iOffsetY + iOffsetX + 1], // G\n                    aImgData[iOffsetY + iOffsetX],     // R\n                    aImgData[iOffsetY + iOffsetX + 3]  // A\n                );\n            }\n            strPixelData += strPixelRow;\n        } while (--y);\n\n        return encodeData(strHeader + strPixelData);\n    };\n\n    // sends the generated file to the client\n    const saveFile = function (strData) {\n        if (!window.open(strData)) {\n            document.location.href = strData;\n        }\n    };\n\n    const makeDataURI = function (strData, strMime) {\n        return \"data:\" + strMime + \";base64,\" + strData;\n    };\n\n    // generates a <img> object containing the imagedata\n    const makeImageObject = function (strSource) {\n        const oImgElement = document.createElement(\"img\");\n        oImgElement.src = strSource;\n        return oImgElement;\n    };\n\n    const scaleCanvas = function (oCanvas, iWidth, iHeight, flipy) {\n        if (iWidth && iHeight) {\n            const oSaveCanvas = document.createElement(\"canvas\");\n            oSaveCanvas.width = iWidth;\n            oSaveCanvas.height = iHeight;\n            oSaveCanvas.style.width = iWidth + \"px\";\n            oSaveCanvas.style.height = iHeight + \"px\";\n            const oSaveCtx = oSaveCanvas.getContext(\"2d\");\n            if (flipy) {\n                oSaveCtx.save();\n                oSaveCtx.scale(1.0, -1.0);\n                oSaveCtx.imageSmoothingEnabled = true;\n                oSaveCtx.drawImage(oCanvas, 0, 0, oCanvas.width, oCanvas.height, 0, 0, iWidth, -iHeight);\n                oSaveCtx.restore();\n            } else {\n                oSaveCtx.imageSmoothingEnabled = true;\n                oSaveCtx.drawImage(oCanvas, 0, 0, oCanvas.width, oCanvas.height, 0, 0, iWidth, iHeight);\n            }\n            return oSaveCanvas;\n        }\n        return oCanvas;\n    };\n\n    return {\n        saveAsPNG: function (oCanvas, bReturnImg, iWidth, iHeight, flipy) {\n            if (!bHasDataURL) return false;\n            const oScaledCanvas = scaleCanvas(oCanvas, iWidth, iHeight, flipy);\n            const strMime = \"image/png\";\n            const strData = oScaledCanvas.toDataURL(strMime);\n            if (bReturnImg) {\n                return makeImageObject(strData);\n            } else {\n                saveFile(bReplaceDownloadMime ? strData.replace(strMime, strDownloadMime) : strData);\n            }\n            return true;\n        },\n\n        saveAsJPEG: function (oCanvas, bReturnImg, iWidth, iHeight, flipy) {\n            if (!bHasDataURL) return false;\n            const oScaledCanvas = scaleCanvas(oCanvas, iWidth, iHeight, flipy);\n            const strMime = \"image/jpeg\";\n            const strData = oScaledCanvas.toDataURL(strMime);\n            // check if browser actually supports jpeg by looking for the mime type in the data uri. if not, return false\n            if (strData.indexOf(strMime) != 5) return false;\n            if (bReturnImg) {\n                return makeImageObject(strData);\n            } else {\n                saveFile(bReplaceDownloadMime ? strData.replace(strMime, strDownloadMime) : strData);\n            }\n            return true;\n        },\n\n        saveAsBMP: function (oCanvas, bReturnImg, iWidth, iHeight, flipy) {\n            if (!(bHasDataURL && bHasImageData && bHasBase64)) return false;\n            const oScaledCanvas = scaleCanvas(oCanvas, iWidth, iHeight, flipy);\n            const strMime = \"image/bmp\";\n            const oData = readCanvasData(oScaledCanvas), strImgData = createBMP(oData);\n            if (bReturnImg) {\n                return makeImageObject(makeDataURI(strImgData, strMime));\n            } else {\n                saveFile(makeDataURI(strImgData, strMime));\n            }\n            return true;\n        }\n    };\n})();\n\nexport {Canvas2Image};","import {Canvas2Image} from \"../libs/canvas2image.js\";\n\n/**\n * @desc Represents a WebGL render buffer.\n * @private\n */\nclass RenderBuffer {\n\n    constructor(canvas, gl, options) {\n        options = options || {};\n        this.gl = gl;\n        this.allocated = false;\n        this.canvas = canvas;\n        this.buffer = null;\n        this.bound = false;\n        this.size = options.size;\n        this._hasDepthTexture = !!options.depthTexture;\n    }\n\n    setSize(size) {\n        this.size = size;\n    }\n\n    webglContextRestored(gl) {\n        this.gl = gl;\n        this.buffer = null;\n        this.allocated = false;\n        this.bound = false;\n    }\n\n    bind() {\n        this._touch();\n        if (this.bound) {\n            return;\n        }\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.buffer.framebuf);\n        this.bound = true;\n    }\n\n    _touch() {\n\n        let width;\n        let height;\n        const gl = this.gl;\n\n        if (this.size) {\n            width = this.size[0];\n            height = this.size[1];\n\n        } else {\n            width = gl.drawingBufferWidth;\n            height = gl.drawingBufferHeight;\n        }\n\n        if (this.buffer) {\n\n            if (this.buffer.width === width && this.buffer.height === height) {\n                return;\n\n            } else {\n                gl.deleteTexture(this.buffer.texture);\n                gl.deleteFramebuffer(this.buffer.framebuf);\n                gl.deleteRenderbuffer(this.buffer.renderbuf);\n            }\n        }\n\n        const colorTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, colorTexture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        let depthTexture;\n\n        if (this._hasDepthTexture) {\n            depthTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, depthTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.DEPTH_COMPONENT, width, height, 0, gl.DEPTH_COMPONENT, gl.UNSIGNED_INT, null)\n        }\n\n        const renderbuf = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuf);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\n        const framebuf = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuf);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, colorTexture, 0);\n\n        if (this._hasDepthTexture) {\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, depthTexture, 0);\n        } else {\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, renderbuf);\n        }\n\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        // Verify framebuffer is OK\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuf);\n        if (!gl.isFramebuffer(framebuf)) {\n            throw \"Invalid framebuffer\";\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n        switch (status) {\n\n            case gl.FRAMEBUFFER_COMPLETE:\n                break;\n\n            case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n                throw \"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";\n\n            case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n                throw \"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";\n\n            case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n                throw \"Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";\n\n            case gl.FRAMEBUFFER_UNSUPPORTED:\n                throw \"Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED\";\n\n            default:\n                throw \"Incomplete framebuffer: \" + status;\n        }\n\n        this.buffer = {\n            framebuf: framebuf,\n            renderbuf: renderbuf,\n            texture: colorTexture,\n            depthTexture: depthTexture,\n            width: width,\n            height: height\n        };\n\n        this.bound = false;\n    }\n\n    clear() {\n        if (!this.bound) {\n            throw \"Render buffer not bound\";\n        }\n        const gl = this.gl;\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    read(pickX, pickY) {\n        const x = pickX;\n        const y = this.gl.drawingBufferHeight - pickY;\n        const pix = new Uint8Array(4);\n        const gl = this.gl;\n        gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pix);\n        return pix;\n    }\n\n    readImage(params) {\n\n        const gl = this.gl;\n        const imageDataCache = this._getImageDataCache();\n        const pixelData = imageDataCache.pixelData;\n        const canvas = imageDataCache.canvas;\n        const imageData = imageDataCache.imageData;\n        const context = imageDataCache.context;\n\n        gl.readPixels(0, 0, this.buffer.width, this.buffer.height, gl.RGBA, gl.UNSIGNED_BYTE, pixelData);\n\n        imageData.data.set(pixelData);\n        context.putImageData(imageData, 0, 0);\n\n        const imageWidth = params.width || canvas.width;\n        const imageHeight = params.height || canvas.height;\n        const format = params.format || \"jpeg\";\n        const flipy = true; // Account for WebGL texture flipping\n\n        let image;\n\n        switch (format) {\n            case \"jpeg\":\n                image = Canvas2Image.saveAsJPEG(canvas, true, imageWidth, imageHeight, flipy);\n                break;\n            case \"png\":\n                image = Canvas2Image.saveAsPNG(canvas, true, imageWidth, imageHeight, flipy);\n                break;\n            case \"bmp\":\n                image = Canvas2Image.saveAsBMP(canvas, true, imageWidth, imageHeight, flipy);\n                break;\n            default:\n                console.error(\"Unsupported image format: '\" + format + \"' - supported types are 'jpeg', 'bmp' and 'png' - defaulting to 'jpeg'\");\n                image = Canvas2Image.saveAsJPEG(canvas, true, imageWidth, imageHeight, flipy);\n        }\n\n        return image.src;\n    }\n\n    _getImageDataCache() {\n\n        const bufferWidth = this.buffer.width;\n        const bufferHeight = this.buffer.height;\n\n        let imageDataCache = this._imageDataCache;\n\n        if (imageDataCache) {\n            if (imageDataCache.width !== bufferWidth || imageDataCache.height !== bufferHeight) {\n                this._imageDataCache = null;\n                imageDataCache = null;\n            }\n        }\n\n        if (!imageDataCache) {\n\n            const canvas = document.createElement('canvas');\n            canvas.width = bufferWidth;\n            canvas.height = bufferHeight;\n\n            const context = canvas.getContext('2d');\n            const imageData = context.createImageData(bufferWidth, bufferHeight);\n\n            imageDataCache = {\n                pixelData: new Uint8Array(bufferWidth * bufferHeight * 4),\n                canvas: canvas,\n                context: context,\n                imageData: imageData,\n                width: bufferWidth,\n                height: bufferHeight\n            };\n\n            this._imageDataCache = imageDataCache;\n        }\n\n        return imageDataCache;\n    }\n\n    unbind() {\n        const gl = this.gl;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        this.bound = false;\n    }\n\n    getTexture() {\n        const self = this;\n        return this._texture || (this._texture = {\n            renderBuffer: this,\n            bind: function (unit) {\n                if (self.buffer && self.buffer.texture) {\n                    self.gl.activeTexture(self.gl[\"TEXTURE\" + unit]);\n                    self.gl.bindTexture(self.gl.TEXTURE_2D, self.buffer.texture);\n                    return true;\n                }\n                return false;\n            },\n            unbind: function (unit) {\n                if (self.buffer && self.buffer.texture) {\n                    self.gl.activeTexture(self.gl[\"TEXTURE\" + unit]);\n                    self.gl.bindTexture(self.gl.TEXTURE_2D, null);\n                }\n            }\n        });\n    }\n\n    hasDepthTexture() {\n        return this._hasDepthTexture;\n    }\n\n    getDepthTexture() {\n        if (!this._hasDepthTexture) {\n            return null;\n        }\n        const self = this;\n        return this._depthTexture || (this._dethTexture = {\n            renderBuffer: this,\n            bind: function (unit) {\n                if (self.buffer && self.buffer.depthTexture) {\n                    self.gl.activeTexture(self.gl[\"TEXTURE\" + unit]);\n                    self.gl.bindTexture(self.gl.TEXTURE_2D, self.buffer.depthTexture);\n                    return true;\n                }\n                return false;\n            },\n            unbind: function (unit) {\n                if (self.buffer && self.buffer.depthTexture) {\n                    self.gl.activeTexture(self.gl[\"TEXTURE\" + unit]);\n                    self.gl.bindTexture(self.gl.TEXTURE_2D, null);\n                }\n            }\n        });\n    }\n\n    destroy() {\n        if (this.allocated) {\n            const gl = this.gl;\n            gl.deleteTexture(this.buffer.texture);\n            gl.deleteTexture(this.buffer.depthTexture);\n            gl.deleteFramebuffer(this.buffer.framebuf);\n            gl.deleteRenderbuffer(this.buffer.renderbuf);\n            this.allocated = false;\n            this.buffer = null;\n            this.bound = false;\n        }\n        this._imageDataCache = null;\n        this._texture = null;\n        this._depthTexture = null;\n    }\n}\n\nexport {RenderBuffer};","/**\n * @desc Pick result returned by {@link Scene#pick}.\n *\n */\nclass PickResult {\n\n    /**\n     * @private\n     * @param value\n     */\n    constructor() {\n\n        /**\n         * Picked entity.\n         * Null when no entity was picked.\n         * @property entity\n         * @type {Entity|*}\n         */\n        this.entity = null;\n\n        /**\n         * Type of primitive that was picked - usually \"triangle\".\n         * Null when no primitive was picked.\n         * @property primitive\n         * @type {String}\n         */\n        this.primitive = null;\n\n        /**\n         * Index of primitive that was picked.\n         * -1 when no entity was picked.\n         * @property primIndex\n         * @type {number}\n         */\n        this.primIndex = -1;\n\n        this._canvasPos = new Int16Array([0, 0]);\n        this._origin = new Float64Array([0, 0, 0]);\n        this._direction = new Float64Array([0, 0, 0]);\n        this._indices = new Int32Array(3);\n        this._localPos = new Float64Array([0, 0, 0]);\n        this._worldPos = new Float64Array([0, 0, 0]);\n        this._viewPos = new Float64Array([0, 0, 0]);\n        this._bary = new Float64Array([0, 0, 0]);\n        this._worldNormal = new Float64Array([0, 0, 0]);\n        this._uv = new Float64Array([0, 0]);\n\n        this.reset();\n    }\n\n    /**\n     * Canvas coordinates when picking with a 2D pointer.\n     * @property canvasPos\n     * @type {Number[]}\n     */\n    get canvasPos() {\n        return this._gotCanvasPos ? this._canvasPos : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set canvasPos(value) {\n        if (value) {\n            this._canvasPos[0] = value[0];\n            this._canvasPos[1] = value[1];\n            this._gotCanvasPos = true;\n        } else {\n            this._gotCanvasPos = false;\n        }\n    }\n\n    /**\n     * World-space 3D ray origin when raypicked.\n     * @property origin\n     * @type {Number[]}\n     */\n    get origin() {\n        return this._gotOrigin ? this._origin : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set origin(value) {\n        if (value) {\n            this._origin[0] = value[0];\n            this._origin[1] = value[1];\n            this._origin[2] = value[2];\n            this._gotOrigin = true;\n        } else {\n            this._gotOrigin = false;\n        }\n    }\n\n    /**\n     * World-space 3D ray direction when raypicked.\n     * @property direction\n     * @type {Number[]}\n     */\n    get direction() {\n        return this._gotDirection ? this._direction : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set direction(value) {\n        if (value) {\n            this._direction[0] = value[0];\n            this._direction[1] = value[1];\n            this._direction[2] = value[2];\n            this._gotDirection = true;\n        } else {\n            this._gotDirection = false;\n        }\n    }\n    \n    /**\n     * Picked triangle's vertex indices.\n     * Only defined when an entity and triangle was picked.\n     * @property indices\n     * @type {Int32Array}\n     */\n    get indices() {\n        return this.entity && this._gotIndices ? this._indices : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set indices(value) {\n        if (value) {\n            this._indices[0] = value[0];\n            this._indices[1] = value[1];\n            this._indices[2] = value[2];\n            this._gotIndices = true;\n        } else {\n            this._gotIndices = false;\n        }\n    }\n\n    /**\n     * Picked Local-space point on surface.\n     * Only defined when an entity and a point on its surface was picked.\n     * @property localPos\n     * @type {Number[]}\n     */\n    get localPos() {\n        return this.entity && this._gotLocalPos ? this._localPos : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set localPos(value) {\n        if (value) {\n            this._localPos[0] = value[0];\n            this._localPos[1] = value[1];\n            this._localPos[2] = value[2];\n            this._gotLocalPos = true;\n        } else {\n            this._gotLocalPos = false;\n        }\n    }\n\n    /**\n     * Picked World-space point on surface.\n     * Only defined when an entity and a point on its surface was picked.\n     * @property worldPos\n     * @type {Number[]}\n     */\n    get worldPos() {\n        return this.entity && this._gotWorldPos ? this._worldPos : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set worldPos(value) {\n        if (value) {\n            this._worldPos[0] = value[0];\n            this._worldPos[1] = value[1];\n            this._worldPos[2] = value[2];\n            this._gotWorldPos = true;\n        } else {\n            this._gotWorldPos = false;\n        }\n    }\n\n    /**\n     * Picked View-space point on surface.\n     * Only defined when an entity and a point on its surface was picked.\n     * @property viewPos\n     * @type {Number[]}\n     */\n    get viewPos() {\n        return this.entity && this._gotViewPos ? this._viewPos : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set viewPos(value) {\n        if (value) {\n            this._viewPos[0] = value[0];\n            this._viewPos[1] = value[1];\n            this._viewPos[2] = value[2];\n            this._gotViewPos = true;\n        } else {\n            this._gotViewPos = false;\n        }\n    }\n\n    /**\n     * Barycentric coordinate within picked triangle.\n     * Only defined when an entity and a point on its surface was picked.\n     * @property bary\n     * @type {Number[]}\n     */\n    get bary() {\n        return this.entity && this._gotBary ? this._bary : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set bary(value) {\n        if (value) {\n            this._bary[0] = value[0];\n            this._bary[1] = value[1];\n            this._bary[2] = value[2];\n            this._gotBary = true;\n        } else {\n            this._gotBary = false;\n        }\n    }\n\n    /**\n     * Normal vector at picked position on surface.\n     * Only defined when an entity and a point on its surface was picked.\n     * @property worldNormal\n     * @type {Number[]}\n     */\n    get worldNormal() {\n        return this.entity && this._gotWorldNormal ? this._worldNormal : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set worldNormal(value) {\n        if (value) {\n            this._worldNormal[0] = value[0];\n            this._worldNormal[1] = value[1];\n            this._worldNormal[2] = value[2];\n            this._gotWorldNormal = true;\n        } else {\n            this._gotWorldNormal = false;\n        }\n    }\n\n    /**\n     * UV coordinates at picked position on surface.\n     * Only defined when an entity and a point on its surface was picked.\n     * @property uv\n     * @type {Number[]}\n     */\n    get uv() {\n        return this.entity && this._gotUV ? this._uv : null;\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    set uv(value) {\n        if (value) {\n            this._uv[0] = value[0];\n            this._uv[1] = value[1];\n            this._gotUV = true;\n        } else {\n            this._gotUV = false;\n        }\n    }\n\n    /**\n     * @private\n     * @param value\n     */\n    reset() {\n        this.entity = null;\n        this.primIndex = -1;\n        this.primitive = null;\n        this._gotCanvasPos = false;\n        this._gotOrigin = false;\n        this._gotDirection = false;\n        this._gotIndices = false;\n        this._gotLocalPos = false;\n        this._gotWorldPos = false;\n        this._gotViewPos = false;\n        this._gotBary = false;\n        this._gotWorldNormal = false;\n        this._gotUV = false;\n    }\n}\n\nexport {PickResult};","/**\n * @desc Represents a vertex or fragment stage within a {@link Program}.\n * @private\n */\nclass Shader {\n\n    constructor(gl, type, source) {\n\n        this.allocated = false;\n        this.compiled = false;\n        this.handle = gl.createShader(type);\n\n        if (!this.handle) {\n            this.errors = [\n                \"Failed to allocate\"\n            ];\n            return;\n        }\n\n        this.allocated = true;\n\n        gl.shaderSource(this.handle, source);\n        gl.compileShader(this.handle);\n\n        this.compiled = gl.getShaderParameter(this.handle, gl.COMPILE_STATUS);\n\n        if (!this.compiled) {\n\n            if (!gl.isContextLost()) { // Handled explicitly elsewhere, so won't re-handle here\n\n                const lines = source.split(\"\\n\");\n                const numberedLines = [];\n                for (let i = 0; i < lines.length; i++) {\n                    numberedLines.push((i + 1) + \": \" + lines[i] + \"\\n\");\n                }\n                this.errors = [];\n                this.errors.push(\"\");\n                this.errors.push(gl.getShaderInfoLog(this.handle));\n                this.errors = this.errors.concat(numberedLines.join(\"\"));\n            }\n        }\n    }\n\n    destroy() {\n\n    }\n}\n\nexport {Shader};","/**\n * @desc A low-level component that represents a WebGL Sampler.\n * @private\n */\nclass Sampler {\n\n    constructor(gl, location) {\n        this.bindTexture = function (texture, unit) {\n            if (texture.bind(unit)) {\n                gl.uniform1i(location, unit);\n                return true;\n            }\n            return false;\n        };\n    }\n}\n\nexport {Sampler};","/**\n * @desc Represents a WebGL vertex attribute buffer (VBO).\n * @private\n * @param gl {WebGLRenderingContext} The WebGL rendering context.\n */\nclass Attribute {\n\n    constructor(gl, location) {\n        this._gl = gl;\n        this.location = location;\n    }\n\n    bindArrayBuffer(arrayBuf) {\n        if (!arrayBuf) {\n            return;\n        }\n        arrayBuf.bind();\n        this._gl.enableVertexAttribArray(this.location);\n        this._gl.vertexAttribPointer(this.location, arrayBuf.itemSize, arrayBuf.itemType, arrayBuf.normalized, arrayBuf.stride, arrayBuf.offset);\n    }\n}\n\nexport {Attribute};\n","import {Map} from \"../utils/Map.js\";\nimport {Shader} from \"./Shader.js\";\nimport {Sampler} from \"./Sampler.js\";\nimport {Attribute} from \"./Attribute.js\";\n\nconst ids = new Map({});\n\nfunction joinSansComments(srcLines) {\n    const src = [];\n    let line;\n    let n;\n    for (let i = 0, len = srcLines.length; i < len; i++) {\n        line = srcLines[i];\n        n = line.indexOf(\"/\");\n        if (n > 0) {\n            if (line.charAt(n + 1) === \"/\") {\n                line = line.substring(0, n);\n            }\n        }\n        src.push(line);\n    }\n    return src.join(\"\\n\");\n}\n\nfunction logErrors(errors) {\n    console.error(errors.join(\"\\n\"));\n}\n\n/**\n * @desc Represents a WebGL program.\n * @private\n */\nclass Program {\n\n    constructor(gl, shaderSource) {\n        this.id = ids.addItem({});\n        this.source = shaderSource;\n        this.init(gl);\n    }\n\n    init(gl) {\n        this.gl = gl;\n        this.allocated = false;\n        this.compiled = false;\n        this.linked = false;\n        this.validated = false;\n        this.errors = null;\n        this.uniforms = {};\n        this.samplers = {};\n        this.attributes = {};\n        this._vertexShader = new Shader(gl, gl.VERTEX_SHADER, joinSansComments(this.source.vertex));\n        this._fragmentShader = new Shader(gl, gl.FRAGMENT_SHADER, joinSansComments(this.source.fragment));\n        if (!this._vertexShader.allocated) {\n            this.errors = [\"Vertex shader failed to allocate\"].concat(this._vertexShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n        if (!this._fragmentShader.allocated) {\n            this.errors = [\"Fragment shader failed to allocate\"].concat(this._fragmentShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n        this.allocated = true;\n        if (!this._vertexShader.compiled) {\n            this.errors = [\"Vertex shader failed to compile\"].concat(this._vertexShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n        if (!this._fragmentShader.compiled) {\n            this.errors = [\"Fragment shader failed to compile\"].concat(this._fragmentShader.errors);\n            logErrors(this.errors);\n            return;\n        }\n        this.compiled = true;\n        let a;\n        let i;\n        let u;\n        let uName;\n        let location;\n        this.handle = gl.createProgram();\n        if (!this.handle) {\n            this.errors = [\"Failed to allocate program\"];\n            return;\n        }\n        gl.attachShader(this.handle, this._vertexShader.handle);\n        gl.attachShader(this.handle, this._fragmentShader.handle);\n        gl.linkProgram(this.handle);\n        this.linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);\n        // HACK: Disable validation temporarily: https://github.com/xeolabs/xeokit/issues/5\n        // Perhaps we should defer validation until render-time, when the program has values set for all inputs?\n        this.validated = true;\n        if (!this.linked || !this.validated) {\n            this.errors = [];\n            this.errors.push(\"\");\n            this.errors.push(gl.getProgramInfoLog(this.handle));\n            this.errors.push(\"\\nVertex shader:\\n\");\n            this.errors = this.errors.concat(this.source.vertex);\n            this.errors.push(\"\\nFragment shader:\\n\");\n            this.errors = this.errors.concat(this.source.fragment);\n            logErrors(this.errors);\n            return;\n        }\n        const numUniforms = gl.getProgramParameter(this.handle, gl.ACTIVE_UNIFORMS);\n        for (i = 0; i < numUniforms; ++i) {\n            u = gl.getActiveUniform(this.handle, i);\n            if (u) {\n                uName = u.name;\n                if (uName[uName.length - 1] === \"\\u0000\") {\n                    uName = uName.substr(0, uName.length - 1);\n                }\n                location = gl.getUniformLocation(this.handle, uName);\n                if ((u.type === gl.SAMPLER_2D) || (u.type === gl.SAMPLER_CUBE) || (u.type === 35682)) {\n                    this.samplers[uName] = new Sampler(gl, location);\n                } else {\n                    this.uniforms[uName] = location;\n                }\n            }\n        }\n        const numAttribs = gl.getProgramParameter(this.handle, gl.ACTIVE_ATTRIBUTES);\n        for (i = 0; i < numAttribs; i++) {\n            a = gl.getActiveAttrib(this.handle, i);\n            if (a) {\n                location = gl.getAttribLocation(this.handle, a.name);\n                this.attributes[a.name] = new Attribute(gl, location);\n            }\n        }\n        this.allocated = true;\n    }\n\n    bind() {\n        if (!this.allocated) {\n            return;\n        }\n        this.gl.useProgram(this.handle);\n    }\n\n    getLocation(name) {\n        if (!this.allocated) {\n            return;\n        }\n        return this.uniforms[name];\n    }\n\n    getAttribute(name) {\n        if (!this.allocated) {\n            return;\n        }\n        return this.attributes[name];\n    }\n\n    bindTexture(name, texture, unit) {\n        if (!this.allocated) {\n            return false;\n        }\n        const sampler = this.samplers[name];\n        if (sampler) {\n            return sampler.bindTexture(texture, unit);\n        } else {\n            return false;\n        }\n    }\n\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        ids.removeItem(this.id);\n        this.gl.deleteProgram(this.handle);\n        this.gl.deleteShader(this._vertexShader.handle);\n        this.gl.deleteShader(this._fragmentShader.handle);\n        this.handle = null;\n        this.attributes = null;\n        this.uniforms = null;\n        this.samplers = null;\n        this.allocated = false;\n    }\n}\n\nexport {Program};","/**\n * @desc Represents a WebGL ArrayBuffer.\n *\n * @private\n */\nclass ArrayBuf {\n\n    constructor(gl, type, data, numItems, itemSize, usage, normalized, stride, offset) {\n\n        this._gl = gl;\n        this.type = type;\n        this.allocated = false;\n\n        switch (data.constructor) {\n\n            case Uint8Array:\n                this.itemType = gl.UNSIGNED_BYTE;\n                this.itemByteSize = 1;\n                break;\n\n            case Int8Array:\n                this.itemType = gl.BYTE;\n                this.itemByteSize = 1;\n                break;\n\n            case  Uint16Array:\n                this.itemType = gl.UNSIGNED_SHORT;\n                this.itemByteSize = 2;\n                break;\n\n            case  Int16Array:\n                this.itemType = gl.SHORT;\n                this.itemByteSize = 2;\n                break;\n\n            case Uint32Array:\n                this.itemType = gl.UNSIGNED_INT;\n                this.itemByteSize = 4;\n                break;\n\n            case Int32Array:\n                this.itemType = gl.INT;\n                this.itemByteSize = 4;\n                break;\n\n            default:\n                this.itemType = gl.FLOAT;\n                this.itemByteSize = 4;\n        }\n\n        this.usage = usage;\n        this.length = 0;\n        this.dataLength = numItems;\n        this.numItems = 0;\n        this.itemSize = itemSize;\n        this.normalized = !!normalized;\n        this.stride = stride || 0;\n        this.offset = offset || 0;\n\n        this._allocate(data);\n    }\n\n    _allocate(data) {\n        this.allocated = false;\n        this._handle = this._gl.createBuffer();\n        if (!this._handle) {\n            throw \"Failed to allocate WebGL ArrayBuffer\";\n        }\n        if (this._handle) {\n            this._gl.bindBuffer(this.type, this._handle);\n            this._gl.bufferData(this.type, data.length > this.dataLength ? data.slice(0, this.dataLength) : data, this.usage);\n            this._gl.bindBuffer(this.type, null);\n            this.length = data.length;\n            this.numItems = this.length / this.itemSize;\n            this.allocated = true;\n        }\n    }\n\n    setData(data, offset) {\n        if (!this.allocated) {\n            return;\n        }\n        if (data.length + (offset || 0) > this.length) {            // Needs reallocation\n            this.destroy();\n            this._allocate(data);\n        } else {            // No reallocation needed\n            this._gl.bindBuffer(this.type, this._handle);\n            if (offset || offset === 0) {\n                this._gl.bufferSubData(this.type, offset * this.itemByteSize, data);\n            } else {\n                this._gl.bufferData(this.type, data, this.usage);\n            }\n            this._gl.bindBuffer(this.type, null);\n        }\n    }\n\n    bind() {\n        if (!this.allocated) {\n            return;\n        }\n        this._gl.bindBuffer(this.type, this._handle);\n    }\n\n    unbind() {\n        if (!this.allocated) {\n            return;\n        }\n        this._gl.bindBuffer(this.type, null);\n    }\n\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        this._gl.deleteBuffer(this._handle);\n        this._handle = null;\n        this.allocated = false;\n    }\n}\n\nexport {ArrayBuf};\n","import {math} from \"../../math/math.js\";\nimport {ArrayBuf} from \"../ArrayBuf.js\";\n\nclass OcclusionLayer {\n\n    constructor(scene, rtcCenter) {\n\n        this.scene = scene;\n        this.aabb = math.AABB3();\n        this.rtcCenter = math.vec3(rtcCenter);\n        this.rtcCenterHash = this.rtcCenter.join();\n        this.numMarkers = 0;\n        this.markers = {};\n        this.markerList = [];                  // Ordered array of Markers\n        this.markerIndices = {};               // ID map of Marker indices in _markerList\n        this.positions = [];                   // Packed array of World-space marker positions\n        this.indices = [];                     // Indices corresponding to array above\n        this.positionsBuf = null;\n        this.lenPositionsBuf = 0;\n        this.indicesBuf = null;\n        this.sectionPlanesActive = [];\n        this.culledBySectionPlanes = false;\n        this.occlusionTestList = [];           // List of\n        this.lenOcclusionTestList = 0;\n        this.pixels = [];\n        this.aabbDirty = false;\n        this.markerListDirty = false;\n        this.positionsDirty = true;\n        this.occlusionTestListDirty = false;\n    }\n\n    addMarker(marker) {\n        this.markers[marker.id] = marker;\n        this.markerListDirty = true;\n        this.numMarkers++;\n    }\n\n    markerWorldPosUpdated(marker) {\n        if (!this.markers[marker.id]) { // Not added\n            return;\n        }\n        const i = this.markerIndices[marker.id];\n        this.positions[i * 3 + 0] = marker.worldPos[0];\n        this.positions[i * 3 + 1] = marker.worldPos[1];\n        this.positions[i * 3 + 2] = marker.worldPos[2];\n        this.positionsDirty = true; // TODO: avoid reallocating VBO each time\n    }\n\n    removeMarker(marker) {\n        delete this.markers[marker.id];\n        this.markerListDirty = true;\n        this.numMarkers--;\n    }\n\n    update() {\n        if (this.markerListDirty) {\n            this._buildMarkerList();\n            this.markerListDirty = false;\n            this.positionsDirty = true;\n            this.occlusionTestListDirty = true;\n        }\n        if (this.positionsDirty) { //////////////  TODO: Don't rebuild this when positions change, very wasteful\n            this._buildPositions();\n            this.positionsDirty = false;\n            this.aabbDirty = true;\n            this.vbosDirty = true;\n        }\n        if (this.aabbDirty) {\n            this._buildAABB();\n            this.aabbDirty = false;\n        }\n        if (this.vbosDirty) {\n            this._buildVBOs();\n            this.vbosDirty = false;\n        }\n        if (this.occlusionTestListDirty) {\n            this._buildOcclusionTestList();\n        }\n        this._updateActiveSectionPlanes();\n    }\n\n    _buildMarkerList() {\n        this.numMarkers = 0;\n        for (var id in this.markers) {\n            if (this.markers.hasOwnProperty(id)) {\n                this.markerList[this.numMarkers] = this.markers[id];\n                this.markerIndices[id] = this.numMarkers;\n                this.numMarkers++;\n            }\n        }\n        this.markerList.length = this.numMarkers;\n    }\n\n    _buildPositions() {\n        let j = 0;\n        for (let i = 0; i < this.numMarkers; i++) {\n            if (this.markerList[i]) {\n                const marker = this.markerList[i];\n                const worldPos = marker.worldPos;\n                this.positions[j++] = worldPos[0];\n                this.positions[j++] = worldPos[1];\n                this.positions[j++] = worldPos[2];\n                this.indices[i] = i;\n            }\n        }\n        this.positions.length = this.numMarkers * 3;\n        this.indices.length = this.numMarkers;\n    }\n\n    _buildAABB() {\n        const aabb = this.aabb;\n        math.collapseAABB3(aabb);\n        math.expandAABB3Points3(aabb, this.positions);\n        const rtcCenter = this.rtcCenter;\n        aabb[0] += rtcCenter[0];\n        aabb[1] += rtcCenter[1];\n        aabb[2] += rtcCenter[2];\n        aabb[3] += rtcCenter[0];\n        aabb[4] += rtcCenter[1];\n        aabb[5] += rtcCenter[2];\n    }\n\n    _buildVBOs() {\n        if (this.positionsBuf) {\n            if (this.lenPositionsBuf === this.positions.length) { // Just updating buffer elements, don't need to reallocate\n                this.positionsBuf.setData(this.positions); // Indices don't need updating\n                return;\n            }\n            this.positionsBuf.destroy();\n            this.positionsBuf = null;\n            this.indicesBuf.destroy();\n            this.indicesBuf = null;\n        }\n        const gl = this.scene.canvas.gl;\n        const lenPositions = this.numMarkers * 3;\n        const lenIndices = this.numMarkers;\n        this.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this.positions), lenPositions, 3, gl.STATIC_DRAW);\n        this.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(this.indices), lenIndices, 1, gl.STATIC_DRAW);\n        this.lenPositionsBuf = this.positions.length;\n    }\n\n    _buildOcclusionTestList() {\n        const canvas = this.scene.canvas;\n        const near = this.scene.camera.perspective.near; // Assume near enough to ortho near\n        const boundary = canvas.boundary;\n        const canvasWidth = boundary[2];\n        const canvasHeight = boundary[3];\n        let lenPixels = 0;\n        this.lenOcclusionTestList = 0;\n        for (let i = 0; i < this.numMarkers; i++) {\n            const marker = this.markerList[i];\n            const viewPos = marker.viewPos;\n            if (viewPos[2] > -near) { // Clipped by near plane\n                marker._setVisible(false);\n                continue;\n            }\n            const canvasPos = marker.canvasPos;\n            const canvasX = canvasPos[0];\n            const canvasY = canvasPos[1];\n            if ((canvasX + 10) < 0 || (canvasY + 10) < 0 || (canvasX - 10) > canvasWidth || (canvasY - 10) > canvasHeight) {\n                marker._setVisible(false);\n                continue;\n            }\n            if (marker.entity && !marker.entity.visible) {\n                marker._setVisible(false);\n                continue;\n            }\n            if (marker.occludable) {\n                this.occlusionTestList[this.lenOcclusionTestList++] = marker;\n                this.pixels[lenPixels++] = canvasX;\n                this.pixels[lenPixels++] = canvasY;\n                continue;\n            }\n            marker._setVisible(true);\n        }\n    }\n\n    _updateActiveSectionPlanes() {\n        const sectionPlanes = this.scene._sectionPlanesState.sectionPlanes;\n        const numSectionPlanes = sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            for (let i = 0; i < numSectionPlanes; i++) {\n                const sectionPlane = sectionPlanes[i];\n                if (!sectionPlane.active) {\n                    this.sectionPlanesActive[i] = false;\n                } else {\n                    const intersect = math.planeAABB3Intersect(sectionPlane.dir, sectionPlane.dist, this.aabb);\n                    const outside = (intersect === -1);\n                    if (outside) {\n                        this.culledBySectionPlanes = true;\n                        return;\n                    }\n                    const intersecting = (intersect === 0);\n                    this.sectionPlanesActive[i] = intersecting;\n                }\n            }\n        }\n        this.culledBySectionPlanes = false;\n    }\n\n    destroy() {\n        this.markers = {};\n        this.markerList.length = 0;\n        if (this.positionsBuf) {\n            this.positionsBuf.destroy();\n        }\n        if (this.indicesBuf) {\n            this.indicesBuf.destroy();\n        }\n    }\n}\n\n\nexport {OcclusionLayer};","import {math} from '../../math/math.js';\nimport {Program} from \"./../Program.js\";\nimport {RenderBuffer} from \"./../RenderBuffer.js\";\nimport {OcclusionLayer} from \"./OcclusionLayer.js\";\nimport {createRTCViewMat, getPlaneRTCPos, worldToRTCPos} from \"../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\nconst TEST_MODE = false;\nconst MARKER_COLOR = math.vec3([1.0, 0.0, 0.0]);\nconst POINT_SIZE = 20;\n\nconst tempVec3a = math.vec3();\n\n/**\n * Manages occlusion testing. Private member of a Renderer.\n */\nclass OcclusionTester {\n\n    constructor(scene) {\n\n        this._scene = scene;\n\n        this._occlusionLayers = {};\n        this._occlusionLayersList = [];\n        this._occlusionLayersListDirty = false;\n\n        this._shaderSource = null;\n        this._program = null;\n\n        this._shaderSourceHash = null;\n\n        this._shaderSourceDirty = true;         // Need to build shader source code ?\n        this._programDirty = false;             // Need to build shader program ?\n\n        this._markersToOcclusionLayersMap = {};\n\n        this._onCameraViewMatrix = scene.camera.on(\"viewMatrix\", () => {\n            this._occlusionTestListDirty = true;\n        });\n\n        this._onCameraProjMatrix = scene.camera.on(\"projMatrix\", () => {\n            this._occlusionTestListDirty = true;\n        });\n\n        this._onCanvasBoundary = scene.canvas.on(\"boundary\", () => {\n            this._occlusionTestListDirty = true;\n        });\n    }\n\n    /**\n     * Adds a Marker for occlusion testing.\n     * @param marker\n     */\n    addMarker(marker) {\n        const rtcCenterHash = marker.rtcCenter.join();\n        let occlusionLayer = this._occlusionLayers[rtcCenterHash];\n        if (!occlusionLayer) {\n            occlusionLayer = new OcclusionLayer(this._scene, marker.rtcCenter);\n            this._occlusionLayers[occlusionLayer.rtcCenterHash] = occlusionLayer;\n            this._occlusionLayersListDirty = true;\n        }\n        occlusionLayer.addMarker(marker);\n        this._markersToOcclusionLayersMap[marker.id] = occlusionLayer;\n        this._occlusionTestListDirty = true;\n    }\n\n    /**\n     * Notifies OcclusionTester that a Marker has updated its World-space position.\n     * @param marker\n     */\n    markerWorldPosUpdated(marker) {\n        const occlusionLayer = this._markersToOcclusionLayersMap[marker.id];\n        if (!occlusionLayer) {\n            marker.error(\"Marker has not been added to OcclusionTester\");\n            return;\n        }\n        const rtcCenterHash = marker.rtcCenter.join();\n        if (rtcCenterHash !== occlusionLayer.rtcCenterHash) {\n            if (occlusionLayer.numMarkers === 1) {\n                occlusionLayer.destroy();\n                delete this._occlusionLayers[occlusionLayer.rtcCenterHash];\n                this._occlusionLayersListDirty = true;\n            } else {\n                occlusionLayer.removeMarker(marker);\n            }\n            let newOcclusionLayer = this._occlusionLayers[rtcCenterHash];\n            if (!newOcclusionLayer) {\n                newOcclusionLayer = new OcclusionLayer(this._scene, marker.rtcCenter);\n                this._occlusionLayers[rtcCenterHash] = occlusionLayer;\n                this._occlusionLayersListDirty = true;\n            }\n            newOcclusionLayer.addMarker(marker);\n            this._markersToOcclusionLayersMap[marker.id] = newOcclusionLayer;\n        } else {\n            occlusionLayer.markerWorldPosUpdated(marker);\n        }\n    }\n\n    /**\n     * Removes a Marker from occlusion testing.\n     * @param marker\n     */\n    removeMarker(marker) {\n        const rtcCenterHash = marker.rtcCenter.join();\n        let occlusionLayer = this._occlusionLayers[rtcCenterHash];\n        if (!occlusionLayer) {\n            return;\n        }\n        if (occlusionLayer.numMarkers === 1) {\n            occlusionLayer.destroy();\n            delete this._occlusionLayers[occlusionLayer.rtcCenterHash];\n            this._occlusionLayersListDirty = true;\n        } else {\n            occlusionLayer.removeMarker(marker);\n        }\n        delete this._markersToOcclusionLayersMap[marker.id];\n    }\n\n    /**\n     * Returns true if an occlusion test is needed.\n     *\n     * @returns {boolean}\n     */\n    get needOcclusionTest() {\n        return this._occlusionTestListDirty;\n    }\n\n    /**\n     * Binds the render buffer. After calling this, the caller then renders object silhouettes to the render buffer,\n     * then calls drawMarkers() and doOcclusionTest().\n     */\n    bindRenderBuf() {\n\n        const shaderSourceHash = [this._scene.canvas.canvas.id, this._scene._sectionPlanesState.getHash()].join(\";\");\n\n        if (shaderSourceHash !== this._shaderSourceHash) {\n            this._shaderSourceHash = shaderSourceHash;\n            this._shaderSourceDirty = true;\n        }\n\n        if (this._shaderSourceDirty) {\n            this._buildShaderSource();\n            this._shaderSourceDirty = false;\n            this._programDirty = true;\n        }\n\n        if (this._programDirty) {\n            this._buildProgram();\n            this._programDirty = false;\n            this._occlusionTestListDirty = true;\n        }\n\n        if (this._occlusionLayersListDirty) {\n            this._buildOcclusionLayersList();\n            this._occlusionLayersListDirty = false;\n        }\n\n        if (this._occlusionTestListDirty) {\n            for (let i = 0, len = this._occlusionLayersList.length; i < len; i++) {\n                const occlusionLayer = this._occlusionLayersList[i];\n                occlusionLayer.occlusionTestListDirty = true;\n            }\n            this._occlusionTestListDirty = false;\n        }\n\n        if (!TEST_MODE) {\n            this._readPixelBuf = this._readPixelBuf || (this._readPixelBuf = new RenderBuffer(this._scene.canvas.canvas, this._scene.canvas.gl));\n            this._readPixelBuf.bind();\n            this._readPixelBuf.clear();\n        }\n    }\n\n    _buildOcclusionLayersList() {\n        let numOcclusionLayers = 0;\n        for (let rtcCenterHash in this._occlusionLayers) {\n            if (this._occlusionLayers.hasOwnProperty(rtcCenterHash)) {\n                this._occlusionLayersList[numOcclusionLayers++] = this._occlusionLayers[rtcCenterHash];\n            }\n        }\n        this._occlusionLayersList.length = numOcclusionLayers;\n    }\n\n    _buildShaderSource() {\n        this._shaderSource = {\n            vertex: this._buildVertexShaderSource(),\n            fragment: this._buildFragmentShaderSource()\n        };\n    }\n\n    _buildVertexShaderSource() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// OcclusionTester vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"attribute vec3 position;\");\n        src.push(\"uniform mat4 modelMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n        }\n        src.push(\"void main(void) {\");\n        src.push(\"vec4 worldPosition = vec4(position, 1.0); \");\n        src.push(\"   vec4 viewPosition = viewMatrix * worldPosition;\");\n        if (clipping) {\n            src.push(\"   vWorldPosition = worldPosition;\");\n        }\n        src.push(\"   vec4 clipPos = projMatrix * viewPosition;\");\n        src.push(\"   gl_Position = clipPos;\");\n        src.push(\"   gl_PointSize = \" + POINT_SIZE + \".0;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShaderSource() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// OcclusionTester fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"   gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0); \");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildProgram() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n        this._program = new Program(gl, this._shaderSource);\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n        const program = this._program;\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n        const sectionPlanes = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n        this._aPosition = program.getAttribute(\"position\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    /**\n     * Draws {@link Marker}s to the render buffer.\n     */\n    drawMarkers() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const camera = scene.camera;\n        const project = scene.camera.project;\n\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"] && scene.logarithmicDepthBufferEnabled) {\n            gl.getExtension('EXT_frag_depth');\n        }\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, camera._project._state.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        for (let i = 0, len = this._occlusionLayersList.length; i < len; i++) {\n\n            const occlusionLayer = this._occlusionLayersList[i];\n\n            occlusionLayer.update();\n\n            if (occlusionLayer.culledBySectionPlanes) {\n                continue;\n            }\n\n            const rtcCenter = occlusionLayer.rtcCenter;\n\n            gl.uniformMatrix4fv(this._uViewMatrix, false, createRTCViewMat(camera.viewMatrix, rtcCenter));\n\n            const numSectionPlanes = sectionPlanesState.sectionPlanes.length;\n            if (numSectionPlanes > 0) {\n                const sectionPlanes = sectionPlanesState.sectionPlanes;\n                for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                    const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                    const active = occlusionLayer.sectionPlanesActive[sectionPlaneIndex];\n                    gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                    if (active) {\n                        const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                        gl.uniform3fv(sectionPlaneUniforms.pos, getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a));\n                        gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                    }\n                }\n            }\n\n            this._aPosition.bindArrayBuffer(occlusionLayer.positionsBuf);\n\n            const indicesBuf = occlusionLayer.indicesBuf;\n            indicesBuf.bind();\n            gl.drawElements(gl.POINTS, indicesBuf.numItems, indicesBuf.itemType, 0);\n        }\n    }\n\n    /**\n     * Sets visibilities of {@link Marker}s according to whether or not they are obscured by anything in the render buffer.\n     */\n    doOcclusionTest() {\n\n        if (!TEST_MODE) {\n\n            const markerR = MARKER_COLOR[0] * 255;\n            const markerG = MARKER_COLOR[1] * 255;\n            const markerB = MARKER_COLOR[2] * 255;\n\n            for (let i = 0, len = this._occlusionLayersList.length; i < len; i++) {\n\n                const occlusionLayer = this._occlusionLayersList[i];\n\n                for (let i = 0; i < occlusionLayer.lenOcclusionTestList; i++) {\n\n                    const marker = occlusionLayer.occlusionTestList[i];\n                    const j = i * 2;\n                    const color = this._readPixelBuf.read(occlusionLayer.pixels[j], occlusionLayer.pixels[j + 1]);\n                    const visible = (color[0] === markerR) && (color[1] === markerG) && (color[2] === markerB);\n\n                    marker._setVisible(visible);\n                }\n            }\n        }\n    }\n\n    /**\n     * Unbinds render buffer.\n     */\n    unbindRenderBuf() {\n        if (!TEST_MODE) {\n            this._readPixelBuf.unbind();\n        }\n    }\n\n    /**\n     * Destroys this OcclusionTester.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        for (let i = 0, len = this._occlusionLayersList.length; i < len; i++) {\n            const occlusionLayer = this._occlusionLayersList[i];\n            occlusionLayer.destroy();\n        }\n\n        if (this._program) {\n            this._program.destroy();\n        }\n\n        this._scene.camera.off(this._onCameraViewMatrix);\n        this._scene.camera.off(this._onCameraProjMatrix);\n        this._scene.canvas.off(this._onCanvasBoundary);\n        this.destroyed = true;\n    }\n}\n\nexport {OcclusionTester};","import {Program} from \"./../Program.js\";\nimport {ArrayBuf} from \"./../ArrayBuf.js\";\nimport {math} from \"../../math/math.js\";\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\nconst tempVec2 = math.vec2();\n\n/**\n * SAO implementation inspired from previous SAO work in THREE.js by ludobaka / ludobaka.github.io and bhouston\n * @private\n */\nclass SAOOcclusionRenderer {\n\n    constructor(scene) {\n\n        this._scene = scene;\n\n        this._numSamples = null;\n\n        // The program\n\n        this._program = null;\n        this._programError = false;\n\n        // Variable locations\n\n        this._aPosition = null;\n        this._aUV = null;\n\n        this._uDepthTexture = \"uDepthTexture\";\n\n        this._uCameraNear = null;\n        this._uCameraFar = null;\n        this._uCameraProjectionMatrix = null;\n        this._uCameraInverseProjectionMatrix = null;\n\n        this._uScale = null;\n        this._uIntensity = null;\n        this._uBias = null;\n        this._uKernelRadius = null;\n        this._uMinResolution = null;\n        this._uRandomSeed = null;\n\n        // VBOs\n\n        this._uvBuf = null;\n        this._positionsBuf = null;\n        this._indicesBuf = null;\n    }\n\n    render(depthRenderBuffer) {\n\n        this._build();\n\n        if (this._programError) {\n            return;\n        }\n\n        if (!this._getInverseProjectMat) { // HACK: scene.camera not defined until render time\n            this._getInverseProjectMat = (() => {\n                let projMatDirty = true;\n                this._scene.camera.on(\"projMatrix\", function () {\n                    projMatDirty = true;\n                });\n                const inverseProjectMat = math.mat4();\n                return () => {\n                    if (projMatDirty) {\n                        math.inverseMat4(scene.camera.projMatrix, inverseProjectMat);\n                    }\n                    return inverseProjectMat;\n                }\n            })();\n        }\n\n        const gl = this._scene.canvas.gl;\n        const program = this._program;\n        const scene = this._scene;\n        const sao = scene.sao;\n        const viewportWidth = gl.drawingBufferWidth;\n        const viewportHeight = gl.drawingBufferHeight;\n        const projectState = scene.camera.project._state;\n        const near = projectState.near;\n        const far = projectState.far;\n        const projectionMatrix = projectState.matrix;\n        const inverseProjectionMatrix = this._getInverseProjectMat();\n        const randomSeed = Math.random();\n        const perspective = (scene.camera.projection === \"perspective\");\n\n        tempVec2[0] = viewportWidth;\n        tempVec2[1] = viewportHeight;\n\n        gl.getExtension(\"OES_standard_derivatives\");\n\n        gl.viewport(0, 0, viewportWidth, viewportHeight);\n        gl.clearColor(0, 0, 0, 1);\n        gl.disable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n        gl.frontFace(gl.CCW);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        program.bind();\n\n        gl.uniform1f(this._uCameraNear, near);\n        gl.uniform1f(this._uCameraFar, far);\n\n        gl.uniformMatrix4fv(this._uCameraProjectionMatrix, false, projectionMatrix);\n        gl.uniformMatrix4fv(this._uCameraInverseProjectionMatrix, false, inverseProjectionMatrix);\n\n        gl.uniform1i(this._uPerspective, perspective);\n\n        gl.uniform1f(this._uScale, sao.scale * (far / 5));\n        gl.uniform1f(this._uIntensity, sao.intensity);\n        gl.uniform1f(this._uBias, sao.bias);\n        gl.uniform1f(this._uKernelRadius, sao.kernelRadius);\n        gl.uniform1f(this._uMinResolution, sao.minResolution);\n        gl.uniform2fv(this._uViewport, tempVec2);\n        gl.uniform1f(this._uRandomSeed, randomSeed);\n\n        const depthTexture = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]\n            ? depthRenderBuffer.getDepthTexture()\n            : depthRenderBuffer.getTexture();\n\n        program.bindTexture(this._uDepthTexture, depthTexture, 0);\n\n        this._aUV.bindArrayBuffer(this._uvBuf);\n        this._aPosition.bindArrayBuffer(this._positionsBuf);\n        this._indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, this._indicesBuf.numItems, this._indicesBuf.itemType, 0);\n    }\n\n    _build() {\n\n        let dirty = false;\n\n        const sao = this._scene.sao;\n\n        if (sao.numSamples !== this._numSamples) {\n            this._numSamples = Math.floor(sao.numSamples);\n            dirty = true;\n        }\n\n        if (!dirty) {\n            return;\n        }\n\n        const gl = this._scene.canvas.gl;\n\n        if (this._program) {\n            this._program.destroy();\n            this._program = null;\n        }\n\n        this._program = new Program(gl, {\n\n            vertex: [`precision highp float;\n                    precision highp int;\n                    \n                    attribute vec3 aPosition;\n                    attribute vec2 aUV;            \n                    \n                    varying vec2 vUV;\n                    \n                    void main () {\n                        gl_Position = vec4(aPosition, 1.0);\n                        vUV = aUV;\n                    }`],\n\n            fragment: [\n                `#extension GL_OES_standard_derivatives : require              \n                precision highp float;\n                precision highp int;           \n                \n                #define NORMAL_TEXTURE 0\n                #define PI 3.14159265359\n                #define PI2 6.28318530718\n                #define EPSILON 1e-6\n                #define NUM_SAMPLES ${this._numSamples}\n                #define NUM_RINGS 4              \n            \n                varying vec2        vUV;\n            \n                uniform sampler2D   uDepthTexture;\n               \n                uniform float       uCameraNear;\n                uniform float       uCameraFar;\n                uniform mat4        uProjectMatrix;\n                uniform mat4        uInverseProjectMatrix;\n                \n                uniform bool        uPerspective;\n\n                uniform float       uScale;\n                uniform float       uIntensity;\n                uniform float       uBias;\n                uniform float       uKernelRadius;\n                uniform float       uMinResolution;\n                uniform vec2        uViewport;\n                uniform float       uRandomSeed;\n\n                float pow2( const in float x ) { return x*x; }\n                \n                highp float rand( const in vec2 uv ) {\n                    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n                    highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n                    return fract(sin(sn) * c);\n                }\n\n                vec3 packNormalToRGB( const in vec3 normal ) {\n                    return normalize( normal ) * 0.5 + 0.5;\n                }\n\n                vec3 unpackRGBToNormal( const in vec3 rgb ) {\n                    return 2.0 * rgb.xyz - 1.0;\n                }\n\n                const float packUpscale = 256. / 255.;\n                const float unpackDownScale = 255. / 256.; \n\n                const vec3 packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\n                const vec4 unPackFactors = unpackDownScale / vec4( packFactors, 1. );   \n\n                const float shiftRights = 1. / 256.;\n\n                vec4 packFloatToRGBA( const in float v ) {\n                    vec4 r = vec4( fract( v * packFactors ), v );\n                    r.yzw -= r.xyz * shiftRights; \n                    return r * packUpscale;\n                }\n\n                float unpackRGBAToFloat( const in vec4 v ) {                   \n                    return dot( floor( v * 255.0 + 0.5 ) / 255.0, unPackFactors );\n                }\n                \n                float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n                    return ( near * far ) / ( ( far - near ) * invClipZ - far );\n                }\n\n                float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n                    return linearClipZ * ( near - far ) - near;\n                }\n                \n                float getDepth( const in vec2 screenPosition ) {`\n                + (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"] ? `return texture2D(uDepthTexture, screenPosition).r;` : `return unpackRGBAToFloat(texture2D( uDepthTexture, screenPosition));`) +\n                `}\n\n                float getViewZ( const in float depth ) {\n                     if (uPerspective) {\n                         return perspectiveDepthToViewZ( depth, uCameraNear, uCameraFar );\n                     } else {\n                        return orthographicDepthToViewZ( depth, uCameraNear, uCameraFar );\n                     }\n                }\n\n                vec3 getViewPos( const in vec2 screenPos, const in float depth, const in float viewZ ) {\n                \tfloat clipW = uProjectMatrix[2][3] * viewZ + uProjectMatrix[3][3];\n                \tvec4 clipPosition = vec4( ( vec3( screenPos, depth ) - 0.5 ) * 2.0, 1.0 );\n                \tclipPosition *= clipW; \n                \treturn ( uInverseProjectMatrix * clipPosition ).xyz;\n                }\n\n                vec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPos ) {               \n                    return normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );\n                }\n\n                float scaleDividedByCameraFar;\n                float minResolutionMultipliedByCameraFar;\n\n                float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\n                \tvec3 viewDelta = sampleViewPosition - centerViewPosition;\n                \tfloat viewDistance = length( viewDelta );\n                \tfloat scaledScreenDistance = scaleDividedByCameraFar * viewDistance;\n                \treturn max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - uBias) / (1.0 + pow2( scaledScreenDistance ) );\n                }\n\n                const float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( NUM_SAMPLES );\n                const float INV_NUM_SAMPLES = 1.0 / float( NUM_SAMPLES );\n\n                float getAmbientOcclusion( const in vec3 centerViewPosition ) {\n            \n                \tscaleDividedByCameraFar = uScale / uCameraFar;\n                \tminResolutionMultipliedByCameraFar = uMinResolution * uCameraFar;\n                \tvec3 centerViewNormal = getViewNormal( centerViewPosition, vUV );\n\n                \tfloat angle = rand( vUV + uRandomSeed ) * PI2;\n                \tvec2 radius = vec2( uKernelRadius * INV_NUM_SAMPLES ) / uViewport;\n                \tvec2 radiusStep = radius;\n\n                \tfloat occlusionSum = 0.0;\n                \tfloat weightSum = 0.0;\n\n                \tfor( int i = 0; i < NUM_SAMPLES; i ++ ) {\n                \t\tvec2 sampleUv = vUV + vec2( cos( angle ), sin( angle ) ) * radius;\n                \t\tradius += radiusStep;\n                \t\tangle += ANGLE_STEP;\n\n                \t\tfloat sampleDepth = getDepth( sampleUv );\n                \t\tif( sampleDepth >= ( 1.0 - EPSILON ) ) {\n                \t\t\tcontinue;\n                \t\t}\n\n                \t\tfloat sampleViewZ = getViewZ( sampleDepth );\n                \t\tvec3 sampleViewPosition = getViewPos( sampleUv, sampleDepth, sampleViewZ );\n                \t\tocclusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );\n                \t\tweightSum += 1.0;\n                \t}\n\n                \tif( weightSum == 0.0 ) discard;\n\n                \treturn occlusionSum * ( uIntensity / weightSum );\n                }\n\n                void main() {\n                \n                \tfloat centerDepth = getDepth( vUV );\n                \t\n                \tif( centerDepth >= ( 1.0 - EPSILON ) ) {\n                \t\tdiscard;\n                \t}\n\n                \tfloat centerViewZ = getViewZ( centerDepth );\n                \tvec3 viewPosition = getViewPos( vUV, centerDepth, centerViewZ );\n\n                \tfloat ambientOcclusion = getAmbientOcclusion( viewPosition );\n                \n                \tgl_FragColor = packFloatToRGBA(  1.0- ambientOcclusion );\n                }`]\n        });\n\n        if (this._program.errors) {\n            console.error(this._program.errors.join(\"\\n\"));\n            this._programError = true;\n            return;\n        }\n\n        const uv = new Float32Array([1, 1, 0, 1, 0, 0, 1, 0]);\n        const positions = new Float32Array([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0]);\n        const indices = new Uint8Array([0, 1, 2, 0, 2, 3]);\n\n        this._positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, positions.length, 3, gl.STATIC_DRAW);\n        this._uvBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, uv, uv.length, 2, gl.STATIC_DRAW);\n        this._indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, indices, indices.length, 1, gl.STATIC_DRAW);\n\n        this._program.bind();\n\n        this._uCameraNear = this._program.getLocation(\"uCameraNear\");\n        this._uCameraFar = this._program.getLocation(\"uCameraFar\");\n\n        this._uCameraProjectionMatrix = this._program.getLocation(\"uProjectMatrix\");\n        this._uCameraInverseProjectionMatrix = this._program.getLocation(\"uInverseProjectMatrix\");\n\n        this._uPerspective = this._program.getLocation(\"uPerspective\");\n\n        this._uScale = this._program.getLocation(\"uScale\");\n        this._uIntensity = this._program.getLocation(\"uIntensity\");\n        this._uBias = this._program.getLocation(\"uBias\");\n        this._uKernelRadius = this._program.getLocation(\"uKernelRadius\");\n        this._uMinResolution = this._program.getLocation(\"uMinResolution\");\n        this._uViewport = this._program.getLocation(\"uViewport\");\n        this._uRandomSeed = this._program.getLocation(\"uRandomSeed\");\n\n        this._aPosition = this._program.getAttribute(\"aPosition\");\n        this._aUV = this._program.getAttribute(\"aUV\");\n\n        this._dirty = false;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n            this._program = null;\n        }\n    }\n}\n\nexport {SAOOcclusionRenderer};","import {Program} from \"./../Program.js\";\nimport {ArrayBuf} from \"./../ArrayBuf.js\";\nimport {math} from \"../../math/math.js\";\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\nconst blurStdDev = 4;\nconst blurDepthCutoff = 0.01;\nconst KERNEL_RADIUS = 16;\n\nconst sampleOffsetsVert = new Float32Array(createSampleOffsets(KERNEL_RADIUS + 1, [0, 1]));\nconst sampleOffsetsHor = new Float32Array(createSampleOffsets(KERNEL_RADIUS + 1, [1, 0]));\nconst sampleWeights = new Float32Array(createSampleWeights(KERNEL_RADIUS + 1, blurStdDev));\n\nconst tempVec2a = new Float32Array(2);\n\n/**\n * SAO implementation inspired from previous SAO work in THREE.js by ludobaka / ludobaka.github.io and bhouston\n * @private\n */\nclass SAODepthLimitedBlurRenderer {\n\n    constructor(scene) {\n\n        this._scene = scene;\n\n        // The program\n\n        this._program = null;\n        this._programError = false;\n\n        // Variable locations\n\n        this._aPosition = null;\n        this._aUV = null;\n\n        this._uDepthTexture = \"uDepthTexture\";\n        this._uOcclusionTexture = \"uOcclusionTexture\";\n\n        this._uViewport = null;\n        this._uCameraNear = null;\n        this._uCameraFar = null;\n        this._uCameraProjectionMatrix = null;\n        this._uCameraInverseProjectionMatrix = null;\n\n        this._uScale = null;\n        this._uIntensity = null;\n        this._uBias = null;\n        this._uKernelRadius = null;\n        this._uMinResolution = null;\n\n        // VBOs\n\n        this._uvBuf = null;\n        this._positionsBuf = null;\n        this._indicesBuf = null;\n\n        this.init();\n    }\n\n    init() {\n\n        // Create program & VBOs, locate attributes and uniforms\n\n        const gl = this._scene.canvas.gl;\n\n        this._program = new Program(gl, {\n\n            vertex: [\n                `precision highp float;\n                precision highp int;\n                    \n                attribute vec3 aPosition;\n                attribute vec2 aUV;\n                uniform vec2 uViewport;\n                varying vec2 vUV;\n                varying vec2 vInvSize;\n                void main () {\n                    vUV = aUV;\n                    vInvSize = 1.0 / uViewport;\n                    gl_Position = vec4(aPosition, 1.0);\n                }`],\n\n            fragment: [\n                `precision highp float;\n                precision highp int;\n                    \n                #define PI 3.14159265359\n                #define PI2 6.28318530718\n                #define EPSILON 1e-6\n\n                #define KERNEL_RADIUS ${KERNEL_RADIUS}\n\n                varying vec2        vUV;\n                varying vec2        vInvSize;\n            \n                uniform sampler2D   uDepthTexture;\n                uniform sampler2D   uOcclusionTexture;              \n               \n                uniform float       uCameraNear;\n                uniform float       uCameraFar;               \n                uniform float       uDepthCutoff;\n\n                uniform vec2        uSampleOffsets[ KERNEL_RADIUS + 1 ];\n                uniform float       uSampleWeights[ KERNEL_RADIUS + 1 ];\n\n                const float         unpackDownscale = 255. / 256.; \n\n                const vec3          packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\n                const vec4          unpackFactors = unpackDownscale / vec4( packFactors, 1. );   \n\n                const float packUpscale = 256. / 255.;\n       \n                const float shiftRights = 1. / 256.;\n                \n                float unpackRGBAToFloat( const in vec4 v ) {\n                    return dot( floor( v * 255.0 + 0.5 ) / 255.0, unpackFactors );\n                }               \n\n                vec4 packFloatToRGBA( const in float v ) {\n                    vec4 r = vec4( fract( v * packFactors ), v );\n                    r.yzw -= r.xyz * shiftRights; \n                    return r * packUpscale;\n                }\n\n                float viewZToOrthographicDepth( const in float viewZ) {\n                    return ( viewZ + uCameraNear ) / ( uCameraNear - uCameraFar );\n                }\n              \n                float orthographicDepthToViewZ( const in float linearClipZ) {\n                    return linearClipZ * ( uCameraNear - uCameraFar ) - uCameraNear;\n                }\n\n                float viewZToPerspectiveDepth( const in float viewZ) {\n                    return (( uCameraNear + viewZ ) * uCameraFar ) / (( uCameraFar - uCameraNear ) * viewZ );\n                }\n                \n                float perspectiveDepthToViewZ( const in float invClipZ) {\n                    return ( uCameraNear * uCameraFar ) / ( ( uCameraFar - uCameraNear ) * invClipZ - uCameraFar );\n                }\n\n                float getDepth( const in vec2 screenPosition ) {`\n                + (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"] ? `return texture2D(uDepthTexture, screenPosition).r;` : `return unpackRGBAToFloat(texture2D( uDepthTexture, screenPosition));`) +\n                `}\n\n                float getViewZ( const in float depth ) {\n                     return perspectiveDepthToViewZ( depth );\n                }\n\n                void main() {\n                \n                    float depth = getDepth( vUV );\n                    if( depth >= ( 1.0 - EPSILON ) ) {\n                        discard;\n                    }\n\n                    float centerViewZ = -getViewZ( depth );\n                    bool rBreak = false;\n                    bool lBreak = false;\n\n                    float weightSum = uSampleWeights[0];\n                    float occlusionSum = unpackRGBAToFloat(texture2D( uOcclusionTexture, vUV )) * weightSum;\n\n                    for( int i = 1; i <= KERNEL_RADIUS; i ++ ) {\n\n                        float sampleWeight = uSampleWeights[i];\n                        vec2 sampleUVOffset = uSampleOffsets[i] * vInvSize;\n\n                        vec2 sampleUV = vUV + sampleUVOffset;\n                        float viewZ = -getViewZ( getDepth( sampleUV ) );\n\n                        if( abs( viewZ - centerViewZ ) > uDepthCutoff ) {\n                            rBreak = true;\n                        }\n\n                        if( ! rBreak ) {\n                            occlusionSum += unpackRGBAToFloat(texture2D( uOcclusionTexture, sampleUV )) * sampleWeight;\n                            weightSum += sampleWeight;\n                        }\n\n                        sampleUV = vUV - sampleUVOffset;\n                        viewZ = -getViewZ( getDepth( sampleUV ) );\n\n                        if( abs( viewZ - centerViewZ ) > uDepthCutoff ) {\n                            lBreak = true;\n                        }\n\n                        if( ! lBreak ) {\n                            occlusionSum += unpackRGBAToFloat(texture2D( uOcclusionTexture, sampleUV )) * sampleWeight;\n                            weightSum += sampleWeight;\n                        }\n                    }\n\n                    gl_FragColor = packFloatToRGBA(occlusionSum / weightSum);\n                }`]\n        });\n\n        if (this._program.errors) {\n            console.error(this._program.errors.join(\"\\n\"));\n            this._programError = true;\n            return;\n        }\n\n        const uv = new Float32Array([1, 1, 0, 1, 0, 0, 1, 0]);\n        const positions = new Float32Array([1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0]);\n        const indices = new Uint8Array([0, 1, 2, 0, 2, 3]);\n\n        this._positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, positions.length, 3, gl.STATIC_DRAW);\n        this._uvBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, uv, uv.length, 2, gl.STATIC_DRAW);\n        this._indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, indices, indices.length, 1, gl.STATIC_DRAW);\n\n        this._program.bind();\n\n        this._uViewport = this._program.getLocation(\"uViewport\");\n\n        this._uCameraNear = this._program.getLocation(\"uCameraNear\");\n        this._uCameraFar = this._program.getLocation(\"uCameraFar\");\n\n        this._uDepthCutoff = this._program.getLocation(\"uDepthCutoff\");\n\n        this._uSampleOffsets = gl.getUniformLocation(this._program.handle, \"uSampleOffsets\");\n        this._uSampleWeights = gl.getUniformLocation(this._program.handle, \"uSampleWeights\");\n\n        this._aPosition = this._program.getAttribute(\"aPosition\");\n        this._aUV = this._program.getAttribute(\"aUV\");\n    }\n\n    render(depthRenderBuffer, occlusionRenderBuffer, direction) {\n\n        if (this._programError) {\n            return;\n        }\n\n        if (!this._getInverseProjectMat) { // HACK: scene.camera not defined until render time\n            this._getInverseProjectMat = (() => {\n                let projMatDirty = true;\n                this._scene.camera.on(\"projMatrix\", function () {\n                    projMatDirty = true;\n                });\n                const inverseProjectMat = math.mat4();\n                return () => {\n                    if (projMatDirty) {\n                        math.inverseMat4(scene.camera.projMatrix, inverseProjectMat);\n                    }\n                    return inverseProjectMat;\n                }\n            })();\n        }\n\n        const gl = this._scene.canvas.gl;\n        const program = this._program;\n        const scene = this._scene;\n        const viewportWidth = gl.drawingBufferWidth;\n        const viewportHeight = gl.drawingBufferHeight;\n        const projectState = scene.camera.project._state;\n        const near = projectState.near;\n        const far = projectState.far;\n\n        gl.viewport(0, 0, viewportWidth, viewportHeight);\n        gl.clearColor(0, 0, 0, 1);\n        gl.enable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n        gl.frontFace(gl.CCW);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        program.bind();\n\n        tempVec2a[0] = viewportWidth;\n        tempVec2a[1] = viewportHeight;\n\n        gl.uniform2fv(this._uViewport, tempVec2a);\n        gl.uniform1f(this._uCameraNear, near);\n        gl.uniform1f(this._uCameraFar, far);\n\n        gl.uniform1f(this._uDepthCutoff, blurDepthCutoff);\n\n        if (direction === 0) {// Horizontal\n            gl.uniform2fv(this._uSampleOffsets, sampleOffsetsHor);\n        } else { // Vertical\n            gl.uniform2fv(this._uSampleOffsets, sampleOffsetsVert);\n        }\n\n        gl.uniform1fv(this._uSampleWeights, sampleWeights);\n\n        const depthTexture = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]\n            ? depthRenderBuffer.getDepthTexture()\n            : depthRenderBuffer.getTexture();\n\n        const occlusionTexture = occlusionRenderBuffer.getTexture();\n\n        program.bindTexture(this._uDepthTexture, depthTexture, 0);\n        program.bindTexture(this._uOcclusionTexture, occlusionTexture, 1);\n\n        this._aUV.bindArrayBuffer(this._uvBuf);\n        this._aPosition.bindArrayBuffer(this._positionsBuf);\n        this._indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, this._indicesBuf.numItems, this._indicesBuf.itemType, 0);\n    }\n\n    destroy() {\n        this._program.destroy();\n    }\n}\n\nfunction createSampleWeights(kernelRadius, stdDev) {\n    const weights = [];\n    for (let i = 0; i <= kernelRadius; i++) {\n        weights.push(gaussian(i, stdDev));\n    }\n    return weights; // TODO: Optimize\n}\n\nfunction gaussian(x, stdDev) {\n    return Math.exp(-(x * x) / (2.0 * (stdDev * stdDev))) / (Math.sqrt(2.0 * Math.PI) * stdDev);\n}\n\nfunction createSampleOffsets(kernelRadius, uvIncrement) {\n    const offsets = [];\n    for (let i = 0; i <= kernelRadius; i++) {\n        offsets.push(uvIncrement[0] * i);\n        offsets.push(uvIncrement[1] * i);\n    }\n    return offsets;\n}\n\nexport {SAODepthLimitedBlurRenderer};","import {FrameContext} from './FrameContext.js';\nimport {RenderBuffer} from './RenderBuffer.js';\nimport {math} from '../math/math.js';\nimport {stats} from '../stats.js';\nimport {WEBGL_INFO} from '../webglInfo.js';\nimport {Map} from \"../utils/Map.js\";\nimport {PickResult} from \"./PickResult.js\";\nimport {OcclusionTester} from \"./occlusion/OcclusionTester.js\";\nimport {SAOOcclusionRenderer} from \"./sao/SAOOcclusionRenderer.js\";\nimport {createRTCViewMat} from \"../math/rtcCoords.js\";\nimport {SAODepthLimitedBlurRenderer} from \"./sao/SAODepthLimitedBlurRenderer.js\";\n\n/**\n * @private\n */\nconst Renderer = function (scene, options) {\n\n    options = options || {};\n\n    const frameCtx = new FrameContext(scene);\n    const canvas = scene.canvas.canvas;\n    const gl = scene.canvas.gl;\n    const canvasTransparent = (!!options.transparent);\n    const alphaDepthMask = options.alphaDepthMask;\n\n    const extensionHandles = {};\n\n    const pickIDs = new Map({});\n\n    let drawableTypeInfo = {};\n    let drawables = {};\n\n    let drawableListDirty = true;\n    let stateSortDirty = true;\n    let imageDirty = true;\n    let shadowsDirty = true;\n\n    const saoDepthRenderBuffer = new RenderBuffer(canvas, gl, {\n        depthTexture: WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]\n    });\n    const occlusionRenderBuffer1 = new RenderBuffer(canvas, gl);\n    const occlusionRenderBuffer2 = new RenderBuffer(canvas, gl);\n\n    const pickBuffer = new RenderBuffer(canvas, gl);\n    const snapshotBuffer = new RenderBuffer(canvas, gl);\n\n    let snapshotBound = false;\n\n    const bindOutputFrameBuffer = null;\n    const unbindOutputFrameBuffer = null;\n\n    const saoOcclusionRenderer = new SAOOcclusionRenderer(scene);\n    const saoDepthLimitedBlurRenderer = new SAODepthLimitedBlurRenderer(scene);\n\n    this._occlusionTester = null; // Lazy-created in #addMarker()\n\n    this.needStateSort = function () {\n        stateSortDirty = true;\n    };\n\n    this.shadowsDirty = function () {\n        shadowsDirty = true;\n    };\n\n    this.imageDirty = function () {\n        imageDirty = true;\n    };\n\n    this.webglContextLost = function () {\n    };\n\n    this.webglContextRestored = function (gl) {\n\n        pickBuffer.webglContextRestored(gl);\n        snapshotBuffer.webglContextRestored(gl);\n        saoDepthRenderBuffer.webglContextRestored(gl);\n        occlusionRenderBuffer1.webglContextRestored(gl);\n        occlusionRenderBuffer2.webglContextRestored(gl);\n\n        saoOcclusionRenderer.init();\n        saoDepthLimitedBlurRenderer.init();\n\n        imageDirty = true;\n    };\n\n    /**\n     * Inserts a drawable into this renderer.\n     *  @private\n     */\n    this.addDrawable = function (id, drawable) {\n        const type = drawable.type;\n        if (!type) {\n            console.error(\"Renderer#addDrawable() : drawable with ID \" + id + \" has no 'type' - ignoring\");\n            return;\n        }\n        let drawableInfo = drawableTypeInfo[type];\n        if (!drawableInfo) {\n            drawableInfo = {\n                type: drawable.type,\n                count: 0,\n                isStateSortable: drawable.isStateSortable,\n                stateSortCompare: drawable.stateSortCompare,\n                drawableMap: {},\n                drawableListPreCull: [],\n                drawableList: []\n            };\n            drawableTypeInfo[type] = drawableInfo;\n        }\n        drawableInfo.count++;\n        drawableInfo.drawableMap[id] = drawable;\n        drawables[id] = drawable;\n        drawableListDirty = true;\n    };\n\n    /**\n     * Removes a drawable from this renderer.\n     *  @private\n     */\n    this.removeDrawable = function (id) {\n        const drawable = drawables[id];\n        if (!drawable) {\n            console.error(\"Renderer#removeDrawable() : drawable not found with ID \" + id + \" - ignoring\");\n            return;\n        }\n        const type = drawable.type;\n        const drawableInfo = drawableTypeInfo[type];\n        if (--drawableInfo.count <= 0) {\n            delete drawableTypeInfo[type];\n        } else {\n            delete drawableInfo.drawableMap[id];\n        }\n        delete drawables[id];\n        drawableListDirty = true;\n    };\n\n    /**\n     * Gets a unique pick ID for the given Pickable. A Pickable can be a {@link Mesh} or a {@link PerformanceMesh}.\n     * @returns {Number} New pick ID.\n     */\n    this.getPickID = function (entity) {\n        return pickIDs.addItem(entity);\n    };\n\n    /**\n     * Released a pick ID for reuse.\n     * @param {Number} pickID Pick ID to release.\n     */\n    this.putPickID = function (pickID) {\n        pickIDs.removeItem(pickID);\n    };\n\n    /**\n     * Clears the canvas.\n     *  @private\n     */\n    this.clear = function (params) {\n        params = params || {};\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (canvasTransparent) {\n            gl.clearColor(1, 1, 1, 1);\n        } else {\n            const backgroundColor = scene.canvas.backgroundColorFromAmbientLight ? this.lights.getAmbientColorAndIntensity() : scene.canvas.backgroundColor;\n            gl.clearColor(backgroundColor[0], backgroundColor[1], backgroundColor[2], 1.0);\n        }\n        if (bindOutputFrameBuffer) {\n            bindOutputFrameBuffer(params.pass);\n        }\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        if (unbindOutputFrameBuffer) {\n            unbindOutputFrameBuffer(params.pass);\n        }\n    };\n\n    /**\n     * Renders inserted drawables.\n     *  @private\n     */\n    this.render = function (params) {\n        params = params || {};\n        if (params.force) {\n            imageDirty = true;\n        }\n        updateDrawlist();\n        if (imageDirty) {\n            draw(params);\n            stats.frame.frameCount++;\n            imageDirty = false;\n        }\n    };\n\n    function updateDrawlist() { // Prepares state-sorted array of drawables from maps of inserted drawables\n        if (drawableListDirty) {\n            buildDrawableList();\n            drawableListDirty = false;\n            stateSortDirty = true;\n        }\n        if (stateSortDirty) {\n            sortDrawableList();\n            stateSortDirty = false;\n            imageDirty = true;\n        }\n        if (imageDirty) { // Image is usually dirty because the camera moved\n            cullDrawableList();\n        }\n    }\n\n    function buildDrawableList() {\n        for (let type in drawableTypeInfo) {\n            if (drawableTypeInfo.hasOwnProperty(type)) {\n                const drawableInfo = drawableTypeInfo[type];\n                const drawableMap = drawableInfo.drawableMap;\n                const drawableListPreCull = drawableInfo.drawableListPreCull;\n                let lenDrawableList = 0;\n                for (let id in drawableMap) {\n                    if (drawableMap.hasOwnProperty(id)) {\n                        drawableListPreCull[lenDrawableList++] = drawableMap[id];\n                    }\n                }\n                drawableListPreCull.length = lenDrawableList;\n            }\n        }\n    }\n\n    function sortDrawableList() {\n        for (let type in drawableTypeInfo) {\n            if (drawableTypeInfo.hasOwnProperty(type)) {\n                const drawableInfo = drawableTypeInfo[type];\n                if (drawableInfo.isStateSortable) {\n                    drawableInfo.drawableListPreCull.sort(drawableInfo.stateSortCompare);\n                }\n            }\n        }\n    }\n\n    function cullDrawableList() {\n        for (let type in drawableTypeInfo) {\n            if (drawableTypeInfo.hasOwnProperty(type)) {\n                const drawableInfo = drawableTypeInfo[type];\n                const drawableListPreCull = drawableInfo.drawableListPreCull;\n                const drawableList = drawableInfo.drawableList;\n                let lenDrawableList = 0;\n                for (let i = 0, len = drawableListPreCull.length; i < len; i++) {\n                    const drawable = drawableListPreCull[i];\n                    drawable.rebuildRenderFlags();\n                    if (!drawable.renderFlags.culled) {\n                        drawableList[lenDrawableList++] = drawable;\n                    }\n                }\n                drawableList.length = lenDrawableList;\n            }\n        }\n    }\n\n    function draw(params) {\n\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]) { // In case context lost/recovered\n            extensionHandles.OES_element_index_uint = gl.getExtension(\"OES_element_index_uint\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            extensionHandles.EXT_frag_depth = gl.getExtension('EXT_frag_depth');\n        }\n\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n            extensionHandles.WEBGL_depth_texture = gl.getExtension('WEBGL_depth_texture');\n        }\n\n        const sao = scene.sao;\n\n        if (sao.possible) {\n            drawSAOBuffers(params);\n        }\n\n        drawShadowMaps();\n\n        drawColor(params);\n    }\n\n    function drawSAOBuffers(params) {\n\n        const sao = scene.sao;\n\n        // Render depth buffer\n\n        saoDepthRenderBuffer.bind();\n        saoDepthRenderBuffer.clear();\n        drawDepth(params);\n        saoDepthRenderBuffer.unbind();\n\n        // Render occlusion buffer\n\n        occlusionRenderBuffer1.bind();\n        occlusionRenderBuffer1.clear();\n        saoOcclusionRenderer.render(saoDepthRenderBuffer);\n        occlusionRenderBuffer1.unbind();\n\n        if (sao.blur) {\n\n            // Horizontally blur occlusion buffer 1 into occlusion buffer 2\n\n            occlusionRenderBuffer2.bind();\n            occlusionRenderBuffer2.clear();\n            saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer1, 0);\n            occlusionRenderBuffer2.unbind();\n\n            // Vertically blur occlusion buffer 2 back into occlusion buffer 1\n\n            occlusionRenderBuffer1.bind();\n            occlusionRenderBuffer1.clear();\n            saoDepthLimitedBlurRenderer.render(saoDepthRenderBuffer, occlusionRenderBuffer2, 1);\n            occlusionRenderBuffer1.unbind();\n        }\n    }\n\n    function drawDepth(params) {\n\n        frameCtx.reset();\n        frameCtx.pass = params.pass;\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.frontFace(gl.CCW);\n        gl.enable(gl.CULL_FACE);\n        gl.depthMask(true);\n\n        if (params.clear !== false) {\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        for (let type in drawableTypeInfo) {\n            if (drawableTypeInfo.hasOwnProperty(type)) {\n\n                const drawableInfo = drawableTypeInfo[type];\n                const drawableList = drawableInfo.drawableList;\n\n                for (let i = 0, len = drawableList.length; i < len; i++) {\n\n                    const drawable = drawableList[i];\n\n                    if (drawable.culled === true || drawable.visible === false || !drawable.drawDepth) {\n                        continue;\n                    }\n\n                    if (drawable.renderFlags.colorOpaque) {\n                        drawable.drawDepth(frameCtx);\n                    }\n                }\n            }\n        }\n\n        // const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        // for (let ii = 0; ii < numVertexAttribs; ii++) {\n        //     gl.disableVertexAttribArray(ii);\n        // }\n\n    }\n\n    function drawShadowMaps() {\n\n        let lights = scene._lightsState.lights;\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light = lights[i];\n            if (!light.castsShadow) {\n                continue;\n            }\n            drawShadowMap(light);\n        }\n\n        // const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n        // for (let ii = 0; ii < numVertexAttribs; ii++) {\n        //     gl.disableVertexAttribArray(ii);\n        // }\n        //\n        shadowsDirty = false;\n    }\n\n    function drawShadowMap(light) {\n\n        const castsShadow = light.castsShadow;\n\n        if (!castsShadow) {\n            return;\n        }\n\n        const shadowRenderBuf = light.getShadowRenderBuf();\n\n        if (!shadowRenderBuf) {\n            return;\n        }\n\n        shadowRenderBuf.bind();\n\n        frameCtx.reset();\n\n        frameCtx.backfaces = true;\n        frameCtx.frontface = true;\n        frameCtx.shadowViewMatrix = light.getShadowViewMatrix();\n        frameCtx.shadowProjMatrix = light.getShadowProjMatrix();\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        gl.clearColor(0, 0, 0, 1);\n        gl.enable(gl.DEPTH_TEST);\n        gl.disable(gl.BLEND);\n\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        for (let type in drawableTypeInfo) {\n\n            if (drawableTypeInfo.hasOwnProperty(type)) {\n\n                const drawableInfo = drawableTypeInfo[type];\n                const drawableList = drawableInfo.drawableList;\n\n                for (let i = 0, len = drawableList.length; i < len; i++) {\n\n                    const drawable = drawableList[i];\n\n                    if (drawable.visible === false || !drawable.castsShadow || !drawable.drawShadow) {\n                        continue;\n                    }\n\n                    if (drawable.renderFlags.colorOpaque) { // Transparent objects don't cast shadows (yet)\n                        drawable.drawShadow(frameCtx);\n                    }\n                }\n            }\n        }\n\n        shadowRenderBuf.unbind();\n    }\n\n    const drawColor = (function () { // Draws the drawables in drawableListSorted\n\n        const normalDrawSAOBin = [];\n        const normalEdgesOpaqueBin = [];\n        const normalFillTransparentBin = [];\n        const normalEdgesTransparentBin = [];\n\n        const xrayedFillOpaqueBin = [];\n        const xrayEdgesOpaqueBin = [];\n        const xrayedFillTransparentBin = [];\n        const xrayEdgesTransparentBin = [];\n\n        const highlightedFillOpaqueBin = [];\n        const highlightedEdgesOpaqueBin = [];\n        const highlightedFillTransparentBin = [];\n        const highlightedEdgesTransparentBin = [];\n\n        const selectedFillOpaqueBin = [];\n        const selectedEdgesOpaqueBin = [];\n        const selectedFillTransparentBin = [];\n        const selectedEdgesTransparentBin = [];\n\n        return function (params) {\n\n            const ambientColorAndIntensity = scene._lightsState.getAmbientColorAndIntensity();\n\n            frameCtx.reset();\n            frameCtx.pass = params.pass;\n            frameCtx.withSAO = false;\n            frameCtx.pbrEnabled = !!scene.pbrEnabled;\n\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n            if (canvasTransparent) {\n                gl.clearColor(0, 0, 0, 0);\n            } else {\n                const backgroundColor = scene.canvas.backgroundColorFromAmbientLight ? ambientColorAndIntensity : scene.canvas.backgroundColor;\n                gl.clearColor(backgroundColor[0], backgroundColor[1], backgroundColor[2], 1.0);\n            }\n\n            gl.enable(gl.DEPTH_TEST);\n            gl.frontFace(gl.CCW);\n            gl.enable(gl.CULL_FACE);\n            gl.depthMask(true);\n            gl.lineWidth(1);\n\n            frameCtx.lineWidth = 1;\n\n            const saoPossible = scene.sao.possible;\n            frameCtx.occlusionTexture = saoPossible ? occlusionRenderBuffer1.getTexture() : null;\n\n            let i;\n            let len;\n            let drawable;\n\n            const startTime = Date.now();\n\n            if (bindOutputFrameBuffer) {\n                bindOutputFrameBuffer(params.pass);\n            }\n\n            if (params.clear !== false) {\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            }\n\n            let normalDrawSAOBinLen = 0;\n            let normalEdgesOpaqueBinLen = 0;\n            let normalFillTransparentBinLen = 0;\n            let normalEdgesTransparentBinLen = 0;\n\n            let xrayedFillOpaqueBinLen = 0;\n            let xrayEdgesOpaqueBinLen = 0;\n            let xrayedFillTransparentBinLen = 0;\n            let xrayEdgesTransparentBinLen = 0;\n\n            let highlightedFillOpaqueBinLen = 0;\n            let highlightedEdgesOpaqueBinLen = 0;\n            let highlightedFillTransparentBinLen = 0;\n            let highlightedEdgesTransparentBinLen = 0;\n\n            let selectedFillOpaqueBinLen = 0;\n            let selectedEdgesOpaqueBinLen = 0;\n            let selectedFillTransparentBinLen = 0;\n            let selectedEdgesTransparentBinLen = 0;\n\n            //------------------------------------------------------------------------------------------------------\n            // Render normal opaque solids, defer others to bins to render after\n            //------------------------------------------------------------------------------------------------------\n\n            for (let type in drawableTypeInfo) {\n                if (drawableTypeInfo.hasOwnProperty(type)) {\n\n                    const drawableInfo = drawableTypeInfo[type];\n                    const drawableList = drawableInfo.drawableList;\n\n                    for (i = 0, len = drawableList.length; i < len; i++) {\n\n                        drawable = drawableList[i];\n\n                        if (drawable.culled === true || drawable.visible === false) {\n                            continue;\n                        }\n\n                        const renderFlags = drawable.renderFlags;\n\n                        if (renderFlags.colorOpaque) {\n                            if (saoPossible && drawable.saoEnabled) {\n                                normalDrawSAOBin[normalDrawSAOBinLen++] = drawable;\n                            } else {\n                                drawable.drawColorOpaque(frameCtx);\n                            }\n                        }\n\n                        if (renderFlags.colorTransparent) {\n                            normalFillTransparentBin[normalFillTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.xrayedSilhouetteTransparent) {\n                            xrayedFillTransparentBin[xrayedFillTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.xrayedSilhouetteOpaque) {\n                            xrayedFillOpaqueBin[xrayedFillOpaqueBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.highlightedSilhouetteTransparent) {\n                            highlightedFillTransparentBin[highlightedFillTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.highlightedSilhouetteOpaque) {\n                            highlightedFillOpaqueBin[highlightedFillOpaqueBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.selectedSilhouetteTransparent) {\n                            selectedFillTransparentBin[selectedFillTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.selectedSilhouetteOpaque) {\n                            selectedFillOpaqueBin[selectedFillOpaqueBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.edgesOpaque) {\n                            normalEdgesOpaqueBin[normalEdgesOpaqueBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.edgesTransparent) {\n                            normalEdgesTransparentBin[normalEdgesTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.selectedEdgesTransparent) {\n                            selectedEdgesTransparentBin[selectedEdgesTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.selectedEdgesOpaque) {\n                            selectedEdgesOpaqueBin[selectedEdgesOpaqueBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.xrayedEdgesTransparent) {\n                            xrayEdgesTransparentBin[xrayEdgesTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.xrayedEdgesOpaque) {\n                            xrayEdgesOpaqueBin[xrayEdgesOpaqueBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.highlightedEdgesTransparent) {\n                            highlightedEdgesTransparentBin[highlightedEdgesTransparentBinLen++] = drawable;\n                        }\n\n                        if (renderFlags.highlightedEdgesOpaque) {\n                            highlightedEdgesOpaqueBin[highlightedEdgesOpaqueBinLen++] = drawable;\n                        }\n                    }\n                }\n            }\n\n            //------------------------------------------------------------------------------------------------------\n            // Render deferred bins\n            //------------------------------------------------------------------------------------------------------\n\n            if (normalDrawSAOBinLen > 0) {\n                frameCtx.withSAO = true;\n                for (i = 0; i < normalDrawSAOBinLen; i++) {\n                    normalDrawSAOBin[i].drawColorOpaque(frameCtx);\n                }\n            }\n\n            if (normalEdgesOpaqueBinLen > 0) {\n                for (i = 0; i < normalEdgesOpaqueBinLen; i++) {\n                    normalEdgesOpaqueBin[i].drawEdgesColorOpaque(frameCtx);\n                }\n            }\n\n            if (xrayedFillOpaqueBinLen > 0) {\n                for (i = 0; i < xrayedFillOpaqueBinLen; i++) {\n                    xrayedFillOpaqueBin[i].drawSilhouetteXRayed(frameCtx);\n                }\n            }\n\n            if (xrayEdgesOpaqueBinLen > 0) {\n                for (i = 0; i < xrayEdgesOpaqueBinLen; i++) {\n                    xrayEdgesOpaqueBin[i].drawEdgesXRayed(frameCtx);\n                }\n            }\n\n            if (xrayedFillTransparentBinLen > 0 || xrayEdgesTransparentBinLen > 0 || normalFillTransparentBinLen > 0 || normalEdgesTransparentBinLen > 0) {\n                gl.enable(gl.CULL_FACE);\n                gl.enable(gl.BLEND);\n\n                if (canvasTransparent) {\n                    gl.blendEquation(gl.FUNC_ADD);\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                } else {\n                    gl.blendEquation(gl.FUNC_ADD);\n                    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n                }\n\n                frameCtx.backfaces = false;\n                if (!alphaDepthMask) {\n                    gl.depthMask(false);\n                }\n                if (xrayEdgesTransparentBinLen > 0) {\n                    for (i = 0; i < xrayEdgesTransparentBinLen; i++) {\n                        xrayEdgesTransparentBin[i].drawEdgesXRayed(frameCtx);\n                    }\n                }\n                if (xrayedFillTransparentBinLen > 0) {\n                    for (i = 0; i < xrayedFillTransparentBinLen; i++) {\n                        xrayedFillTransparentBin[i].drawSilhouetteXRayed(frameCtx);\n                    }\n                }\n                if (normalFillTransparentBinLen > 0 || normalEdgesTransparentBinLen > 0) {\n                    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n                }\n                if (normalEdgesTransparentBinLen > 0) {\n                    for (i = 0; i < normalEdgesTransparentBinLen; i++) {\n                        drawable = normalEdgesTransparentBin[i];\n                        drawable.drawEdgesColorTransparent(frameCtx);\n                    }\n                }\n                if (normalFillTransparentBinLen > 0) {\n                    for (i = 0; i < normalFillTransparentBinLen; i++) {\n                        drawable = normalFillTransparentBin[i];\n                        drawable.drawColorTransparent(frameCtx);\n                    }\n                }\n                gl.disable(gl.BLEND);\n                if (!alphaDepthMask) {\n                    gl.depthMask(true);\n                }\n            }\n\n            if (highlightedFillOpaqueBinLen > 0 || highlightedEdgesOpaqueBinLen > 0) {\n                frameCtx.lastProgramId = null;\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n                if (highlightedEdgesOpaqueBinLen > 0) {\n                    for (i = 0; i < highlightedEdgesOpaqueBinLen; i++) {\n                        highlightedEdgesOpaqueBin[i].drawEdgesHighlighted(frameCtx);\n                    }\n                }\n                if (highlightedFillOpaqueBinLen > 0) {\n                    for (i = 0; i < highlightedFillOpaqueBinLen; i++) {\n                        highlightedFillOpaqueBin[i].drawSilhouetteHighlighted(frameCtx);\n                    }\n                }\n            }\n\n            if (highlightedFillTransparentBinLen > 0 || highlightedEdgesTransparentBinLen > 0 || highlightedFillOpaqueBinLen > 0) {\n                frameCtx.lastProgramId = null;\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n                gl.enable(gl.CULL_FACE);\n                gl.enable(gl.BLEND);\n\n                if (canvasTransparent) {\n                    gl.blendEquation(gl.FUNC_ADD);\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                } else {\n                    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n                }\n\n                if (highlightedEdgesTransparentBinLen > 0) {\n                    for (i = 0; i < highlightedEdgesTransparentBinLen; i++) {\n                        highlightedEdgesTransparentBin[i].drawEdgesHighlighted(frameCtx);\n                    }\n                }\n                if (highlightedFillTransparentBinLen > 0) {\n                    for (i = 0; i < highlightedFillTransparentBinLen; i++) {\n                        highlightedFillTransparentBin[i].drawSilhouetteHighlighted(frameCtx);\n                    }\n                }\n                gl.disable(gl.BLEND);\n            }\n\n            if (selectedFillOpaqueBinLen > 0 || selectedEdgesOpaqueBinLen > 0) {\n                frameCtx.lastProgramId = null;\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n                if (selectedEdgesOpaqueBinLen > 0) {\n                    for (i = 0; i < selectedEdgesOpaqueBinLen; i++) {\n                        selectedEdgesOpaqueBin[i].drawEdgesSelected(frameCtx);\n                    }\n                }\n                if (selectedFillOpaqueBinLen > 0) {\n                    for (i = 0; i < selectedFillOpaqueBinLen; i++) {\n                        selectedFillOpaqueBin[i].drawSilhouetteSelected(frameCtx);\n                    }\n                }\n            }\n\n            if (selectedFillTransparentBinLen > 0 || selectedEdgesTransparentBinLen > 0) {\n                frameCtx.lastProgramId = null;\n                gl.clear(gl.DEPTH_BUFFER_BIT);\n                gl.enable(gl.CULL_FACE);\n                gl.enable(gl.BLEND);\n\n                if (canvasTransparent) {\n                    gl.blendEquation(gl.FUNC_ADD);\n                    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                } else {\n                    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n                }\n\n                if (selectedEdgesTransparentBinLen > 0) {\n                    for (i = 0; i < selectedEdgesTransparentBinLen; i++) {\n                        selectedEdgesTransparentBin[i].drawEdgesSelected(frameCtx);\n                    }\n                }\n                if (selectedFillTransparentBinLen > 0) {\n                    for (i = 0; i < selectedFillTransparentBinLen; i++) {\n                        selectedFillTransparentBin[i].drawSilhouetteSelected(frameCtx);\n                    }\n                }\n                gl.disable(gl.BLEND);\n            }\n\n            const endTime = Date.now();\n            const frameStats = stats.frame;\n\n            frameStats.renderTime = (endTime - startTime) / 1000.0;\n            frameStats.drawElements = frameCtx.drawElements;\n            frameStats.useProgram = frameCtx.useProgram;\n            frameStats.bindTexture = frameCtx.bindTexture;\n            frameStats.bindArray = frameCtx.bindArray;\n\n            const numTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n            for (let ii = 0; ii < numTextureUnits; ii++) {\n                gl.activeTexture(gl.TEXTURE0 + ii);\n            }\n            gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n            gl.bindTexture(gl.TEXTURE_2D, null);\n\n            const numVertexAttribs = WEBGL_INFO.MAX_VERTEX_ATTRIBS; // Fixes https://github.com/xeokit/xeokit-sdk/issues/174\n            for (let ii = 0; ii < numVertexAttribs; ii++) {\n                gl.disableVertexAttribArray(ii);\n            }\n\n            if (unbindOutputFrameBuffer) {\n                unbindOutputFrameBuffer(params.pass);\n            }\n        };\n    })();\n\n    /**\n     * Picks an Entity.\n     * @private\n     */\n    this.pick = (function () {\n\n        const tempVec3a = math.vec3();\n        const tempMat4a = math.mat4();\n        const tempMat4b = math.mat4();\n\n        const up = math.vec3([0, 1, 0]);\n        const _pickResult = new PickResult();\n\n        const nearAndFar = math.vec2();\n\n        return function (params, pickResult = _pickResult) {\n\n            pickResult.reset();\n\n            updateDrawlist();\n\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]) { // In case context lost/recovered\n                extensionHandles.OES_element_index_uint = gl.getExtension(\"OES_element_index_uint\");\n            }\n\n            if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                extensionHandles.EXT_frag_depth = gl.getExtension('EXT_frag_depth');\n            }\n\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n                extensionHandles.WEBGL_depth_texture = gl.getExtension('WEBGL_depth_texture');\n            }\n\n            let canvasX;\n            let canvasY;\n            let origin;\n            let direction;\n            let look;\n            let pickViewMatrix = null;\n            let pickProjMatrix = null;\n\n            pickResult.pickSurface = params.pickSurface;\n\n            if (params.canvasPos) {\n\n                canvasX = params.canvasPos[0];\n                canvasY = params.canvasPos[1];\n\n                pickViewMatrix = scene.camera.viewMatrix;\n                pickProjMatrix = scene.camera.projMatrix;\n\n                pickResult.canvasPos = params.canvasPos;\n\n            } else {\n\n                // Picking with arbitrary World-space ray\n                // Align camera along ray and fire ray through center of canvas\n\n                const pickFrustumMatrix = math.frustumMat4(-1, 1, -1, 1, scene.camera.project.near, scene.camera.project.far, tempMat4a);\n\n                if (params.matrix) {\n\n                    pickViewMatrix = params.matrix;\n                    pickProjMatrix = pickFrustumMatrix;\n\n                } else {\n\n                    origin = params.origin || math.vec3([0, 0, 0]);\n                    direction = params.direction || math.vec3([0, 0, 1]);\n                    look = math.addVec3(origin, direction, tempVec3a);\n\n                    pickViewMatrix = math.lookAtMat4v(origin, look, up, tempMat4b);\n                    pickProjMatrix = pickFrustumMatrix;\n\n                    pickResult.origin = origin;\n                    pickResult.direction = direction;\n                }\n\n                canvasX = canvas.clientWidth * 0.5;\n                canvasY = canvas.clientHeight * 0.5;\n            }\n\n            pickBuffer.bind();\n\n            const pickable = pickPickable(canvasX, canvasY, pickViewMatrix, pickProjMatrix, params);\n\n            if (!pickable) {\n                pickBuffer.unbind();\n                return null;\n            }\n\n            const pickedEntity = (pickable.delegatePickedEntity) ? pickable.delegatePickedEntity() : pickable;\n\n            if (!pickedEntity) {\n                return null;\n            }\n\n            if (params.pickSurface) {\n\n                if (pickable.canPickTriangle && pickable.canPickTriangle()) {\n                    pickTriangle(pickable, canvasX, canvasY, pickViewMatrix, pickProjMatrix, pickResult);\n                    pickable.pickTriangleSurface(pickViewMatrix, pickProjMatrix, pickResult);\n\n                } else {\n\n                    if (pickable.canPickWorldPos && pickable.canPickWorldPos()) {\n\n                        nearAndFar[0] = scene.camera.project.near;\n                        nearAndFar[1] = scene.camera.project.far;\n\n                        pickWorldPos(pickable, canvasX, canvasY, pickViewMatrix, pickProjMatrix, nearAndFar, pickResult);\n                        if (params.pickSurfaceNormal !== false) {\n                            pickWorldNormal(pickable, canvasX, canvasY, pickViewMatrix, pickProjMatrix, nearAndFar, pickResult);\n                        }\n                    }\n                }\n            }\n\n            pickBuffer.unbind();\n\n            pickResult.entity = pickedEntity;\n\n            return pickResult;\n        };\n    })();\n\n    function pickPickable(canvasX, canvasY, pickViewMatrix, pickProjMatrix, params) {\n\n        frameCtx.reset();\n        frameCtx.backfaces = true;\n        frameCtx.frontface = true; // \"ccw\"\n        frameCtx.pickViewMatrix = pickViewMatrix;\n        frameCtx.pickProjMatrix = pickProjMatrix;\n        frameCtx.pickInvisible = !!params.pickInvisible;\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.BLEND);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        let i;\n        let len;\n        const includeEntityIds = params.includeEntityIds;\n        const excludeEntityIds = params.excludeEntityIds;\n\n        for (let type in drawableTypeInfo) {\n            if (drawableTypeInfo.hasOwnProperty(type)) {\n\n                const drawableInfo = drawableTypeInfo[type];\n                const drawableList = drawableInfo.drawableList;\n\n                for (i = 0, len = drawableList.length; i < len; i++) {\n\n                    const drawable = drawableList[i];\n\n                    if (!drawable.drawPickMesh || drawable.culled === true || (params.pickInvisible !== true && drawable.visible === false) || drawable.pickable === false) {\n                        continue;\n                    }\n                    if (includeEntityIds && !includeEntityIds[drawable.id]) { // TODO: push this logic into drawable\n                        continue;\n                    }\n                    if (excludeEntityIds && excludeEntityIds[drawable.id]) {\n                        continue;\n                    }\n\n                    drawable.drawPickMesh(frameCtx);\n                }\n            }\n        }\n\n        const pix = pickBuffer.read(Math.round(canvasX), Math.round(canvasY));\n        let pickID = pix[0] + (pix[1] * 256) + (pix[2] * 256 * 256) + (pix[3] * 256 * 256 * 256);\n\n        if (pickID < 0) {\n            return;\n        }\n\n        const pickable = pickIDs.items[pickID];\n\n        return pickable;\n    }\n\n    function pickTriangle(pickable, canvasX, canvasY, pickViewMatrix, pickProjMatrix, pickResult) {\n\n        if (!pickable.drawPickTriangles) {\n            return;\n        }\n\n        frameCtx.reset();\n        frameCtx.backfaces = true;\n        frameCtx.frontface = true; // \"ccw\"\n        frameCtx.pickViewMatrix = pickViewMatrix; // Can be null\n        frameCtx.pickProjMatrix = pickProjMatrix; // Can be null\n        // frameCtx.pickInvisible = !!params.pickInvisible;\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.BLEND);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        pickable.drawPickTriangles(frameCtx);\n\n        const pix = pickBuffer.read(canvasX, canvasY);\n\n        let primIndex = pix[0] + (pix[1] * 256) + (pix[2] * 256 * 256) + (pix[3] * 256 * 256 * 256);\n\n        primIndex *= 3; // Convert from triangle number to first vertex in indices\n\n        pickResult.primIndex = primIndex;\n    }\n\n    const pickWorldPos = (function () {\n\n        const tempVec4a = math.vec4();\n        const tempVec4b = math.vec4();\n        const tempVec4c = math.vec4();\n        const tempVec4d = math.vec4();\n        const tempVec4e = math.vec4();\n        const tempMat4a = math.mat4();\n        const tempMat4b = math.mat4();\n        const tempMat4c = math.mat4();\n\n        return function (pickable, canvasX, canvasY, pickViewMatrix, pickProjMatrix, nearAndFar, pickResult) {\n\n            frameCtx.reset();\n            frameCtx.backfaces = true;\n            frameCtx.frontface = true; // \"ccw\"\n            frameCtx.pickViewMatrix = pickViewMatrix;\n            frameCtx.pickProjMatrix = pickProjMatrix;\n            frameCtx.pickZNear = nearAndFar[0];\n            frameCtx.pickZFar = nearAndFar[1];\n\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n            gl.clearColor(0, 0, 0, 0);\n            gl.enable(gl.DEPTH_TEST);\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.BLEND);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n            pickable.drawPickDepths(frameCtx); // Draw color-encoded fragment screen-space depths\n\n            const pix = pickBuffer.read(Math.round(canvasX), Math.round(canvasY));\n\n            const screenZ = unpackDepth(pix); // Get screen-space Z at the given canvas coords\n\n            // Calculate clip space coordinates, which will be in range of x=[-1..1] and y=[-1..1], with y=(+1) at top\n            const x = (canvasX - canvas.width / 2) / (canvas.width / 2);\n            const y = -(canvasY - canvas.height / 2) / (canvas.height / 2);\n\n            const rtcCenter = pickable.rtcCenter;\n            let pvMat;\n\n            if (rtcCenter) {\n                const rtcPickViewMat = createRTCViewMat(pickViewMatrix, rtcCenter, tempMat4a);\n                pvMat = math.mulMat4(pickProjMatrix, rtcPickViewMat, tempMat4b);\n\n            } else {\n                pvMat = math.mulMat4(pickProjMatrix, pickViewMatrix, tempMat4b);\n            }\n\n            const pvMatInverse = math.inverseMat4(pvMat, tempMat4c);\n\n            tempVec4a[0] = x;\n            tempVec4a[1] = y;\n            tempVec4a[2] = -1;\n            tempVec4a[3] = 1;\n\n            let world1 = math.transformVec4(pvMatInverse, tempVec4a);\n            world1 = math.mulVec4Scalar(world1, 1 / world1[3]);\n\n            tempVec4b[0] = x;\n            tempVec4b[1] = y;\n            tempVec4b[2] = 1;\n            tempVec4b[3] = 1;\n\n            let world2 = math.transformVec4(pvMatInverse, tempVec4b);\n            world2 = math.mulVec4Scalar(world2, 1 / world2[3]);\n\n            const dir = math.subVec3(world2, world1, tempVec4c);\n            const worldPos = math.addVec3(world1, math.mulVec4Scalar(dir, screenZ, tempVec4d), tempVec4e);\n\n            if (rtcCenter) {\n                math.addVec3(worldPos, rtcCenter);\n            }\n\n            pickResult.worldPos = worldPos;\n        }\n    })();\n\n    function unpackDepth(depthZ) {\n        const vec = [depthZ[0] / 256.0, depthZ[1] / 256.0, depthZ[2] / 256.0, depthZ[3] / 256.0];\n        const bitShift = [1.0 / (256.0 * 256.0 * 256.0), 1.0 / (256.0 * 256.0), 1.0 / 256.0, 1.0];\n        return math.dotVec4(vec, bitShift);\n    }\n\n    function pickWorldNormal(pickable, canvasX, canvasY, pickViewMatrix, pickProjMatrix, nearAndFar, pickResult) {\n\n        frameCtx.reset();\n        frameCtx.backfaces = true;\n        frameCtx.frontface = true; // \"ccw\"\n        frameCtx.pickViewMatrix = pickViewMatrix;\n        frameCtx.pickProjMatrix = pickProjMatrix;\n        frameCtx.pickZNear = nearAndFar[0];\n        frameCtx.pickZFar = nearAndFar[1];\n\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n        gl.clearColor(0, 0, 0, 0);\n        gl.enable(gl.DEPTH_TEST);\n        gl.disable(gl.CULL_FACE);\n        gl.disable(gl.BLEND);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        pickable.drawPickNormals(frameCtx); // Draw color-encoded fragment World-space normals\n\n        const pix = pickBuffer.read(Math.round(canvasX), Math.round(canvasY));\n\n        const worldNormal = [(pix[0] / 256.0) - 0.5, (pix[1] / 256.0) - 0.5, (pix[2] / 256.0) - 0.5];\n\n        math.normalizeVec3(worldNormal);\n\n        pickResult.worldNormal = worldNormal;\n    }\n\n    /**\n     * Adds a {@link Marker} for occlusion testing.\n     * @param marker\n     */\n    this.addMarker = function (marker) {\n        this._occlusionTester = this._occlusionTester || new OcclusionTester(scene);\n        this._occlusionTester.addMarker(marker);\n        scene.occlusionTestCountdown = 0;\n    };\n\n    /**\n     * Notifies that a {@link Marker#worldPos} has updated.\n     * @param marker\n     */\n    this.markerWorldPosUpdated = function (marker) {\n        this._occlusionTester.markerWorldPosUpdated(marker);\n    };\n\n    /**\n     * Removes a {@link Marker} from occlusion testing.\n     * @param marker\n     */\n    this.removeMarker = function (marker) {\n        this._occlusionTester.removeMarker(marker);\n    };\n\n    /**\n     * Performs an occlusion test for all added {@link Marker}s, updating\n     * their {@link Marker#visible} properties accordingly.\n     */\n    this.doOcclusionTest = function () {\n\n        if (this._occlusionTester && this._occlusionTester.needOcclusionTest) {\n\n            updateDrawlist();\n\n            this._occlusionTester.bindRenderBuf();\n\n            frameCtx.reset();\n            frameCtx.backfaces = true;\n            frameCtx.frontface = true; // \"ccw\"\n\n            gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n            gl.clearColor(0, 0, 0, 0);\n            gl.enable(gl.DEPTH_TEST);\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.BLEND);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n            for (let type in drawableTypeInfo) {\n                if (drawableTypeInfo.hasOwnProperty(type)) {\n                    const drawableInfo = drawableTypeInfo[type];\n                    const drawableList = drawableInfo.drawableList;\n                    for (let i = 0, len = drawableList.length; i < len; i++) {\n                        const drawable = drawableList[i];\n                        if (!drawable.drawOcclusion || drawable.culled === true || drawable.visible === false || drawable.pickable === false) { // TODO: Option to exclude transparent?\n                            continue;\n                        }\n\n                        drawable.drawOcclusion(frameCtx);\n                    }\n                }\n            }\n\n            this._occlusionTester.drawMarkers(frameCtx);\n            this._occlusionTester.doOcclusionTest(); // Updates Marker \"visible\" properties\n            this._occlusionTester.unbindRenderBuf();\n        }\n    };\n\n    /**\n     * Read pixels from the renderer's current output. Performs a force-render first.\n     * @param pixels\n     * @param colors\n     * @param len\n     * @param opaqueOnly\n     * @private\n     */\n    this.readPixels = function (pixels, colors, len, opaqueOnly) {\n        snapshotBuffer.bind();\n        snapshotBuffer.clear();\n        this.render({force: true, opaqueOnly: opaqueOnly});\n        let color;\n        let i;\n        let j;\n        let k;\n        for (i = 0; i < len; i++) {\n            j = i * 2;\n            k = i * 4;\n            color = snapshotBuffer.read(pixels[j], pixels[j + 1]);\n            colors[k] = color[0];\n            colors[k + 1] = color[1];\n            colors[k + 2] = color[2];\n            colors[k + 3] = color[3];\n        }\n        snapshotBuffer.unbind();\n        imageDirty = true;\n    };\n\n    /**\n     * Enter snapshot mode.\n     *\n     * Switches rendering to a hidden snapshot canvas.\n     *\n     * Exit snapshot mode using endSnapshot().\n     */\n    this.beginSnapshot = function () {\n        snapshotBuffer.bind();\n        snapshotBuffer.clear();\n        snapshotBound = true;\n    };\n\n    /**\n     * When in snapshot mode, renders a frame of the current Scene state to the snapshot canvas.\n     */\n    this.renderSnapshot = function () {\n        if (!snapshotBound) {\n            return;\n        }\n        snapshotBuffer.clear();\n        this.render({force: true, opaqueOnly: false});\n        imageDirty = true;\n    };\n\n    /**\n     * When in snapshot mode, gets an image of the snapshot canvas.\n     *\n     * @private\n     * @returns {String} The image data URI.\n     */\n    this.readSnapshot = function (params) {\n        const imageDataURI = snapshotBuffer.readImage(params);\n        return imageDataURI;\n    };\n\n    /**\n     * Exists snapshot mode.\n     *\n     * Switches rendering back to the main canvas.\n     */\n    this.endSnapshot = function () {\n        if (!snapshotBound) {\n            return;\n        }\n        snapshotBuffer.unbind();\n        snapshotBound = false;\n    };\n\n    /**\n     * Destroys this renderer.\n     * @private\n     */\n    this.destroy = function () {\n\n        drawableTypeInfo = {};\n        drawables = {};\n\n        pickBuffer.destroy();\n        snapshotBuffer.destroy();\n        saoDepthRenderBuffer.destroy();\n        occlusionRenderBuffer1.destroy();\n        occlusionRenderBuffer2.destroy();\n\n        saoOcclusionRenderer.destroy();\n        saoDepthLimitedBlurRenderer.destroy();\n\n        if (this._occlusionTester) {\n            this._occlusionTester.destroy();\n        }\n    };\n};\n\nexport {Renderer};\n","import {Component} from '../Component.js';\nimport {math} from '../math/math.js';\n\n/**\n * @desc Meditates mouse, touch and keyboard events for various interaction controls.\n *\n * Ordinarily, you would only use this component as a utility to help manage input events and state for your\n * own custom input handlers.\n *\n * * Located at {@link Scene#input}\n * * Used by (at least) {@link CameraControl}\n *\n * ## Usage\n *\n * Subscribing to mouse events on the canvas:\n *\n * ````javascript\n * import {Viewer} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * const input = viewer.scene.input;\n *\n * const onMouseDown = input.on(\"mousedown\", (canvasCoords) => {\n *       console.log(\"Mouse down at: x=\" + canvasCoords[0] + \", y=\" + coords[1]);\n * });\n *\n * const onMouseUp = input.on(\"mouseup\", (canvasCoords) => {\n *       console.log(\"Mouse up at: x=\" + canvasCoords[0] + \", y=\" + canvasCoords[1]);\n * });\n *\n * const onMouseClicked = input.on(\"mouseclicked\", (canvasCoords) => {\n *      console.log(\"Mouse clicked at: x=\" + canvasCoords[0] + \", y=\" + canvasCoords[1]);\n * });\n *\n * const onDblClick = input.on(\"dblclick\", (canvasCoords) => {\n *       console.log(\"Double-click at: x=\" + canvasCoords[0] + \", y=\" + canvasCoords[1]);\n * });\n * ````\n *\n * Subscribing to keyboard events on the canvas:\n *\n * ````javascript\n * const onKeyDown = input.on(\"keydown\", (keyCode) => {\n *      switch (keyCode) {\n *          case this.KEY_A:\n *              console.log(\"The 'A' key is down\");\n *              break;\n *\n *          case this.KEY_B:\n *              console.log(\"The 'B' key is down\");\n *              break;\n *\n *          case this.KEY_C:\n *              console.log(\"The 'C' key is down\");\n *              break;\n *\n *          default:\n *              console.log(\"Some other key is down\");\n *      }\n * });\n *\n * const onKeyUp = input.on(\"keyup\", (keyCode) => {\n *      switch (keyCode) {\n *          case this.KEY_A:\n *              console.log(\"The 'A' key is up\");\n *              break;\n *\n *          case this.KEY_B:\n *              console.log(\"The 'B' key is up\");\n *              break;\n *\n *          case this.KEY_C:\n *              console.log(\"The 'C' key is up\");\n *              break;\n *\n *          default:\n *              console.log(\"Some other key is up\");\n *      }\n *  });\n * ````\n *\n * Checking if keys are down:\n *\n * ````javascript\n * const isCtrlDown = input.ctrlDown;\n * const isAltDown = input.altDown;\n * const shiftDown = input.shiftDown;\n * //...\n *\n * const isAKeyDown = input.keyDown[input.KEY_A];\n * const isBKeyDown = input.keyDown[input.KEY_B];\n * const isShiftKeyDown = input.keyDown[input.KEY_SHIFT];\n * //...\n *\n * ````\n * Unsubscribing from events:\n *\n * ````javascript\n * input.off(onMouseDown);\n * input.off(onMouseUp);\n * //...\n * ````\n *\n * ## Disabling all events\n *\n * Event handling is enabled by default.\n *\n * To disable all events:\n *\n * ````javascript\n * myViewer.scene.input.setEnabled(false);\n * ````\n * To enable all events again:\n *\n * ````javascript\n * myViewer.scene.input.setEnabled(true);\n * ````\n *\n * ## Disabling keyboard input\n *\n * When the mouse is over the canvas, the canvas will consume keyboard events. Therefore, sometimes we need\n * to disable keyboard control, so that other UI elements can get those events.\n *\n * To disable keyboard events:\n *\n * ````javascript\n * myViewer.scene.input.setKeyboardEnabled(false);\n * ````\n *\n * To enable keyboard events again:\n *\n * ````javascript\n * myViewer.scene.input.setKeyboardEnabled(true)\n * ````\n */\nclass Input extends Component {\n\n    /**\n     * @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        /**\n         * Code for the BACKSPACE key.\n         * @property KEY_BACKSPACE\n         * @final\n         * @type {Number}\n         */\n        this.KEY_BACKSPACE = 8;\n\n        /**\n         * Code for the TAB key.\n         * @property KEY_TAB\n         * @final\n         * @type {Number}\n         */\n        this.KEY_TAB = 9;\n\n        /**\n         * Code for the ENTER key.\n         * @property KEY_ENTER\n         * @final\n         * @type {Number}\n         */\n        this.KEY_ENTER = 13;\n\n        /**\n         * Code for the SHIFT key.\n         * @property KEY_SHIFT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SHIFT = 16;\n\n        /**\n         * Code for the CTRL key.\n         * @property KEY_CTRL\n         * @final\n         * @type {Number}\n         */\n        this.KEY_CTRL = 17;\n\n        /**\n         * Code for the ALT key.\n         * @property KEY_ALT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_ALT = 18;\n\n        /**\n         * Code for the PAUSE_BREAK key.\n         * @property KEY_PAUSE_BREAK\n         * @final\n         * @type {Number}\n         */\n        this.KEY_PAUSE_BREAK = 19;\n\n        /**\n         * Code for the CAPS_LOCK key.\n         * @property KEY_CAPS_LOCK\n         * @final\n         * @type {Number}\n         */\n        this.KEY_CAPS_LOCK = 20;\n\n        /**\n         * Code for the ESCAPE key.\n         * @property KEY_ESCAPE\n         * @final\n         * @type {Number}\n         */\n        this.KEY_ESCAPE = 27;\n\n        /**\n         * Code for the PAGE_UP key.\n         * @property KEY_PAGE_UP\n         * @final\n         * @type {Number}\n         */\n        this.KEY_PAGE_UP = 33;\n\n        /**\n         * Code for the PAGE_DOWN key.\n         * @property KEY_PAGE_DOWN\n         * @final\n         * @type {Number}\n         */\n        this.KEY_PAGE_DOWN = 34;\n\n        /**\n         * Code for the END key.\n         * @property KEY_END\n         * @final\n         * @type {Number}\n         */\n        this.KEY_END = 35;\n\n        /**\n         * Code for the HOME key.\n         * @property KEY_HOME\n         * @final\n         * @type {Number}\n         */\n        this.KEY_HOME = 36;\n\n        /**\n         * Code for the LEFT_ARROW key.\n         * @property KEY_LEFT_ARROW\n         * @final\n         * @type {Number}\n         */\n        this.KEY_LEFT_ARROW = 37;\n\n        /**\n         * Code for the UP_ARROW key.\n         * @property KEY_UP_ARROW\n         * @final\n         * @type {Number}\n         */\n        this.KEY_UP_ARROW = 38;\n\n        /**\n         * Code for the RIGHT_ARROW key.\n         * @property KEY_RIGHT_ARROW\n         * @final\n         * @type {Number}\n         */\n        this.KEY_RIGHT_ARROW = 39;\n\n        /**\n         * Code for the DOWN_ARROW key.\n         * @property KEY_DOWN_ARROW\n         * @final\n         * @type {Number}\n         */\n        this.KEY_DOWN_ARROW = 40;\n\n        /**\n         * Code for the INSERT key.\n         * @property KEY_INSERT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_INSERT = 45;\n\n        /**\n         * Code for the DELETE key.\n         * @property KEY_DELETE\n         * @final\n         * @type {Number}\n         */\n        this.KEY_DELETE = 46;\n\n        /**\n         * Code for the 0 key.\n         * @property KEY_NUM_0\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_0 = 48;\n\n        /**\n         * Code for the 1 key.\n         * @property KEY_NUM_1\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_1 = 49;\n\n        /**\n         * Code for the 2 key.\n         * @property KEY_NUM_2\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_2 = 50;\n\n        /**\n         * Code for the 3 key.\n         * @property KEY_NUM_3\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_3 = 51;\n\n        /**\n         * Code for the 4 key.\n         * @property KEY_NUM_4\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_4 = 52;\n\n        /**\n         * Code for the 5 key.\n         * @property KEY_NUM_5\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_5 = 53;\n\n        /**\n         * Code for the 6 key.\n         * @property KEY_NUM_6\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_6 = 54;\n\n        /**\n         * Code for the 7 key.\n         * @property KEY_NUM_7\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_7 = 55;\n\n        /**\n         * Code for the 8 key.\n         * @property KEY_NUM_8\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_8 = 56;\n\n        /**\n         * Code for the 9 key.\n         * @property KEY_NUM_9\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_9 = 57;\n\n        /**\n         * Code for the A key.\n         * @property KEY_A\n         * @final\n         * @type {Number}\n         */\n        this.KEY_A = 65;\n\n        /**\n         * Code for the B key.\n         * @property KEY_B\n         * @final\n         * @type {Number}\n         */\n        this.KEY_B = 66;\n\n        /**\n         * Code for the C key.\n         * @property KEY_C\n         * @final\n         * @type {Number}\n         */\n        this.KEY_C = 67;\n\n        /**\n         * Code for the D key.\n         * @property KEY_D\n         * @final\n         * @type {Number}\n         */\n        this.KEY_D = 68;\n\n        /**\n         * Code for the E key.\n         * @property KEY_E\n         * @final\n         * @type {Number}\n         */\n        this.KEY_E = 69;\n\n        /**\n         * Code for the F key.\n         * @property KEY_F\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F = 70;\n\n        /**\n         * Code for the G key.\n         * @property KEY_G\n         * @final\n         * @type {Number}\n         */\n        this.KEY_G = 71;\n\n        /**\n         * Code for the H key.\n         * @property KEY_H\n         * @final\n         * @type {Number}\n         */\n        this.KEY_H = 72;\n\n        /**\n         * Code for the I key.\n         * @property KEY_I\n         * @final\n         * @type {Number}\n         */\n        this.KEY_I = 73;\n\n        /**\n         * Code for the J key.\n         * @property KEY_J\n         * @final\n         * @type {Number}\n         */\n        this.KEY_J = 74;\n\n        /**\n         * Code for the K key.\n         * @property KEY_K\n         * @final\n         * @type {Number}\n         */\n        this.KEY_K = 75;\n\n        /**\n         * Code for the L key.\n         * @property KEY_L\n         * @final\n         * @type {Number}\n         */\n        this.KEY_L = 76;\n\n        /**\n         * Code for the M key.\n         * @property KEY_M\n         * @final\n         * @type {Number}\n         */\n        this.KEY_M = 77;\n\n        /**\n         * Code for the N key.\n         * @property KEY_N\n         * @final\n         * @type {Number}\n         */\n        this.KEY_N = 78;\n\n        /**\n         * Code for the O key.\n         * @property KEY_O\n         * @final\n         * @type {Number}\n         */\n        this.KEY_O = 79;\n\n        /**\n         * Code for the P key.\n         * @property KEY_P\n         * @final\n         * @type {Number}\n         */\n        this.KEY_P = 80;\n\n        /**\n         * Code for the Q key.\n         * @property KEY_Q\n         * @final\n         * @type {Number}\n         */\n        this.KEY_Q = 81;\n\n        /**\n         * Code for the R key.\n         * @property KEY_R\n         * @final\n         * @type {Number}\n         */\n        this.KEY_R = 82;\n\n        /**\n         * Code for the S key.\n         * @property KEY_S\n         * @final\n         * @type {Number}\n         */\n        this.KEY_S = 83;\n\n        /**\n         * Code for the T key.\n         * @property KEY_T\n         * @final\n         * @type {Number}\n         */\n        this.KEY_T = 84;\n\n        /**\n         * Code for the U key.\n         * @property KEY_U\n         * @final\n         * @type {Number}\n         */\n        this.KEY_U = 85;\n\n        /**\n         * Code for the V key.\n         * @property KEY_V\n         * @final\n         * @type {Number}\n         */\n        this.KEY_V = 86;\n\n        /**\n         * Code for the W key.\n         * @property KEY_W\n         * @final\n         * @type {Number}\n         */\n        this.KEY_W = 87;\n\n        /**\n         * Code for the X key.\n         * @property KEY_X\n         * @final\n         * @type {Number}\n         */\n        this.KEY_X = 88;\n\n        /**\n         * Code for the Y key.\n         * @property KEY_Y\n         * @final\n         * @type {Number}\n         */\n        this.KEY_Y = 89;\n\n        /**\n         * Code for the Z key.\n         * @property KEY_Z\n         * @final\n         * @type {Number}\n         */\n        this.KEY_Z = 90;\n\n        /**\n         * Code for the LEFT_WINDOW key.\n         * @property KEY_LEFT_WINDOW\n         * @final\n         * @type {Number}\n         */\n        this.KEY_LEFT_WINDOW = 91;\n\n        /**\n         * Code for the RIGHT_WINDOW key.\n         * @property KEY_RIGHT_WINDOW\n         * @final\n         * @type {Number}\n         */\n        this.KEY_RIGHT_WINDOW = 92;\n\n        /**\n         * Code for the SELECT key.\n         * @property KEY_SELECT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SELECT_KEY = 93;\n\n        /**\n         * Code for the number pad 0 key.\n         * @property KEY_NUMPAD_0\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_0 = 96;\n\n        /**\n         * Code for the number pad 1 key.\n         * @property KEY_NUMPAD_1\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_1 = 97;\n\n        /**\n         * Code for the number pad 2 key.\n         * @property KEY_NUMPAD 2\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_2 = 98;\n\n        /**\n         * Code for the number pad 3 key.\n         * @property KEY_NUMPAD_3\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_3 = 99;\n\n        /**\n         * Code for the number pad 4 key.\n         * @property KEY_NUMPAD_4\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_4 = 100;\n\n        /**\n         * Code for the number pad 5 key.\n         * @property KEY_NUMPAD_5\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_5 = 101;\n\n        /**\n         * Code for the number pad 6 key.\n         * @property KEY_NUMPAD_6\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_6 = 102;\n\n        /**\n         * Code for the number pad 7 key.\n         * @property KEY_NUMPAD_7\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_7 = 103;\n\n        /**\n         * Code for the number pad 8 key.\n         * @property KEY_NUMPAD_8\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_8 = 104;\n\n        /**\n         * Code for the number pad 9 key.\n         * @property KEY_NUMPAD_9\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUMPAD_9 = 105;\n\n        /**\n         * Code for the MULTIPLY key.\n         * @property KEY_MULTIPLY\n         * @final\n         * @type {Number}\n         */\n        this.KEY_MULTIPLY = 106;\n\n        /**\n         * Code for the ADD key.\n         * @property KEY_ADD\n         * @final\n         * @type {Number}\n         */\n        this.KEY_ADD = 107;\n\n        /**\n         * Code for the SUBTRACT key.\n         * @property KEY_SUBTRACT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SUBTRACT = 109;\n\n        /**\n         * Code for the DECIMAL POINT key.\n         * @property KEY_DECIMAL_POINT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_DECIMAL_POINT = 110;\n\n        /**\n         * Code for the DIVIDE key.\n         * @property KEY_DIVIDE\n         * @final\n         * @type {Number}\n         */\n        this.KEY_DIVIDE = 111;\n\n        /**\n         * Code for the F1 key.\n         * @property KEY_F1\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F1 = 112;\n\n        /**\n         * Code for the F2 key.\n         * @property KEY_F2\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F2 = 113;\n\n        /**\n         * Code for the F3 key.\n         * @property KEY_F3\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F3 = 114;\n\n        /**\n         * Code for the F4 key.\n         * @property KEY_F4\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F4 = 115;\n\n        /**\n         * Code for the F5 key.\n         * @property KEY_F5\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F5 = 116;\n\n        /**\n         * Code for the F6 key.\n         * @property KEY_F6\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F6 = 117;\n\n        /**\n         * Code for the F7 key.\n         * @property KEY_F7\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F7 = 118;\n\n        /**\n         * Code for the F8 key.\n         * @property KEY_F8\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F8 = 119;\n\n        /**\n         * Code for the F9 key.\n         * @property KEY_F9\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F9 = 120;\n\n        /**\n         * Code for the F10 key.\n         * @property KEY_F10\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F10 = 121;\n\n        /**\n         * Code for the F11 key.\n         * @property KEY_F11\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F11 = 122;\n\n        /**\n         * Code for the F12 key.\n         * @property KEY_F12\n         * @final\n         * @type {Number}\n         */\n        this.KEY_F12 = 123;\n\n        /**\n         * Code for the NUM_LOCK key.\n         * @property KEY_NUM_LOCK\n         * @final\n         * @type {Number}\n         */\n        this.KEY_NUM_LOCK = 144;\n\n        /**\n         * Code for the SCROLL_LOCK key.\n         * @property KEY_SCROLL_LOCK\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SCROLL_LOCK = 145;\n\n        /**\n         * Code for the SEMI_COLON key.\n         * @property KEY_SEMI_COLON\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SEMI_COLON = 186;\n\n        /**\n         * Code for the EQUAL_SIGN key.\n         * @property KEY_EQUAL_SIGN\n         * @final\n         * @type {Number}\n         */\n        this.KEY_EQUAL_SIGN = 187;\n\n        /**\n         * Code for the COMMA key.\n         * @property KEY_COMMA\n         * @final\n         * @type {Number}\n         */\n        this.KEY_COMMA = 188;\n\n        /**\n         * Code for the DASH key.\n         * @property KEY_DASH\n         * @final\n         * @type {Number}\n         */\n        this.KEY_DASH = 189;\n\n        /**\n         * Code for the PERIOD key.\n         * @property KEY_PERIOD\n         * @final\n         * @type {Number}\n         */\n        this.KEY_PERIOD = 190;\n\n        /**\n         * Code for the FORWARD_SLASH key.\n         * @property KEY_FORWARD_SLASH\n         * @final\n         * @type {Number}\n         */\n        this.KEY_FORWARD_SLASH = 191;\n\n        /**\n         * Code for the GRAVE_ACCENT key.\n         * @property KEY_GRAVE_ACCENT\n         * @final\n         * @type {Number}\n         */\n        this.KEY_GRAVE_ACCENT = 192;\n\n        /**\n         * Code for the OPEN_BRACKET key.\n         * @property KEY_OPEN_BRACKET\n         * @final\n         * @type {Number}\n         */\n        this.KEY_OPEN_BRACKET = 219;\n\n        /**\n         * Code for the BACK_SLASH key.\n         * @property KEY_BACK_SLASH\n         * @final\n         * @type {Number}\n         */\n        this.KEY_BACK_SLASH = 220;\n\n        /**\n         * Code for the CLOSE_BRACKET key.\n         * @property KEY_CLOSE_BRACKET\n         * @final\n         * @type {Number}\n         */\n        this.KEY_CLOSE_BRACKET = 221;\n\n        /**\n         * Code for the SINGLE_QUOTE key.\n         * @property KEY_SINGLE_QUOTE\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SINGLE_QUOTE = 222;\n\n        /**\n         * Code for the SPACE key.\n         * @property KEY_SPACE\n         * @final\n         * @type {Number}\n         */\n        this.KEY_SPACE = 32;\n\n        /**\n         * The canvas element that mouse and keyboards are bound to.\n         *\n         * @final\n         * @type {HTMLCanvasElement}\n         */\n        this.element = cfg.element;\n\n        /** True whenever ALT key is down.\n         *\n         * @type {boolean}\n         */\n        this.altDown = false;\n\n        /** True whenever CTRL key is down.\n         *\n         * @type {boolean}\n         */\n        this.ctrlDown = false;\n\n        /** True whenever left mouse button is down.\n         *\n         * @type {boolean}\n         */\n        this.mouseDownLeft = false;\n\n        /**\n         * True whenever middle mouse button is down.\n         *\n         * @type {boolean}\n         */\n        this.mouseDownMiddle = false;\n\n        /**\n         * True whenever the right mouse button is down.\n         *\n         * @type {boolean}\n         */\n        this.mouseDownRight = false;\n\n        /**\n         * Flag for each key that's down.\n         *\n         * @type {boolean[]}\n         */\n        this.keyDown = [];\n\n        /** True while input enabled\n         *\n         * @type {boolean}\n         */\n        this.enabled = true;\n\n        /** True while keyboard input is enabled.\n         *\n         * Default value is ````true````.\n         *\n         * {@link CameraControl} will not respond to keyboard events while this is ````false````.\n         *\n         * @type {boolean}\n         */\n        this.keyboardEnabled = true;\n\n        /** True while the mouse is over the canvas.\n         *\n         * @type {boolean}\n         */\n        this.mouseover = false;\n\n        /**\n         * Current mouse position within the canvas.\n         * @type {Number[]}\n         */\n        this.mouseCanvasPos = math.vec2();\n\n        this._bindEvents();\n    }\n\n    _bindEvents() {\n\n        if (this._eventsBound) {\n            return;\n        }\n\n        document.addEventListener(\"keydown\", this._keyDownListener = (e) => {\n            if (!this.enabled || (!this.keyboardEnabled)) {\n                return;\n            }\n            if (e.target.tagName !== \"INPUT\" && e.target.tagName !== \"TEXTAREA\") {\n                if (e.keyCode === this.KEY_CTRL) {\n                    this.ctrlDown = true;\n                } else if (e.keyCode === this.KEY_ALT) {\n                    this.altDown = true;\n                } else if (e.keyCode === this.KEY_SHIFT) {\n                    this.shiftDown = true;\n                }\n                this.keyDown[e.keyCode] = true;\n                this.fire(\"keydown\", e.keyCode, true);\n            }\n        }, false);\n\n        document.addEventListener(\"keyup\", this._keyUpListener = (e) => {\n            if (!this.enabled || (!this.keyboardEnabled)) {\n                return;\n            }\n            if (e.target.tagName !== \"INPUT\" && e.target.tagName !== \"TEXTAREA\") {\n                if (e.keyCode === this.KEY_CTRL) {\n                    this.ctrlDown = false;\n                } else if (e.keyCode === this.KEY_ALT) {\n                    this.altDown = false;\n                } else if (e.keyCode === this.KEY_SHIFT) {\n                    this.shiftDown = false;\n                }\n                this.keyDown[e.keyCode] = false;\n                this.fire(\"keyup\", e.keyCode, true);\n            }\n        });\n\n        this.element.addEventListener(\"mouseenter\", this._mouseEnterListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            this.mouseover = true;\n            this._getMouseCanvasPos(e);\n            this.fire(\"mouseenter\", this.mouseCanvasPos, true);\n        });\n\n        this.element.addEventListener(\"mouseleave\", this._mouseLeaveListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            this.mouseover = false;\n            this._getMouseCanvasPos(e);\n            this.fire(\"mouseleave\", this.mouseCanvasPos, true);\n        });\n\n        this.element.addEventListener(\"mousedown\", this._mouseDownListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            switch (e.which) {\n                case 1:// Left button\n                    this.mouseDownLeft = true;\n                    break;\n                case 2:// Middle/both buttons\n                    this.mouseDownMiddle = true;\n                    break;\n                case 3:// Right button\n                    this.mouseDownRight = true;\n                    break;\n                default:\n                    break;\n            }\n            this._getMouseCanvasPos(e);\n            this.element.focus();\n            this.fire(\"mousedown\", this.mouseCanvasPos, true);\n            if (this.mouseover) {\n                e.preventDefault();\n            }\n        });\n\n        document.addEventListener(\"mouseup\", this._mouseUpListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            switch (e.which) {\n                case 1:// Left button\n                    this.mouseDownLeft = false;\n                    break;\n                case 2:// Middle/both buttons\n                    this.mouseDownMiddle = false;\n                    break;\n                case 3:// Right button\n                    this.mouseDownRight = false;\n                    break;\n                default:\n                    break;\n            }\n            this.fire(\"mouseup\", this.mouseCanvasPos, true);\n            // if (this.mouseover) {\n            //     e.preventDefault();\n            // }\n        }, true);\n\n        document.addEventListener(\"click\", this._clickListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            switch (e.which) {\n                case 1:// Left button\n                    this.mouseDownLeft = false;\n                    this.mouseDownRight = false;\n                    break;\n                case 2:// Middle/both buttons\n                    this.mouseDownMiddle = false;\n                    break;\n                case 3:// Right button\n                    this.mouseDownLeft = false;\n                    this.mouseDownRight = false;\n                    break;\n                default:\n                    break;\n            }\n            this._getMouseCanvasPos(e);\n            this.fire(\"click\", this.mouseCanvasPos, true);\n            if (this.mouseover) {\n                e.preventDefault();\n            }\n        });\n\n        document.addEventListener(\"dblclick\", this._dblClickListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            switch (e.which) {\n                case 1:// Left button\n                    this.mouseDownLeft = false;\n                    this.mouseDownRight = false;\n                    break;\n                case 2:// Middle/both buttons\n                    this.mouseDownMiddle = false;\n                    break;\n                case 3:// Right button\n                    this.mouseDownLeft = false;\n                    this.mouseDownRight = false;\n                    break;\n                default:\n                    break;\n            }\n            this._getMouseCanvasPos(e);\n            this.fire(\"dblclick\", this.mouseCanvasPos, true);\n            if (this.mouseover) {\n                e.preventDefault();\n            }\n        });\n\n        this.element.addEventListener(\"mousemove\", this._mouseMoveListener = (e) => {\n            if (!this.enabled) {\n                return;\n            }\n            this._getMouseCanvasPos(e);\n            this.fire(\"mousemove\", this.mouseCanvasPos, true);\n            if (this.mouseover) {\n                e.preventDefault();\n            }\n        });\n\n        this.element.addEventListener(\"wheel\", this._mouseWheelListener = (e, d) => {\n            if (!this.enabled) {\n                return;\n            }\n            const delta = Math.max(-1, Math.min(1, -e.deltaY * 40));\n            this.fire(\"mousewheel\", delta, true);\n        }, {passive: true});\n\n        // mouseclicked\n\n        {\n            let downX;\n            let downY;\n            // Tolerance between down and up positions for a mouse click\n            const tolerance = 2;\n            this.on(\"mousedown\", (params) => {\n                downX = params[0];\n                downY = params[1];\n            });\n            this.on(\"mouseup\", (params) => {\n                if (downX >= (params[0] - tolerance) &&\n                    downX <= (params[0] + tolerance) &&\n                    downY >= (params[1] - tolerance) &&\n                    downY <= (params[1] + tolerance)) {\n                    this.fire(\"mouseclicked\", params, true);\n                }\n            });\n        }\n\n        // VR\n\n        {\n\n            const orientationAngleLookup = {\n                'landscape-primary': 90,\n                'landscape-secondary': -90,\n                'portrait-secondary': 180,\n                'portrait-primary': 0\n            };\n\n            let orientation;\n            let orientationAngle;\n            const acceleration = math.vec3();\n            const accelerationIncludingGravity = math.vec3();\n\n            const orientationChangeEvent = {\n                orientation: null,\n                orientationAngle: 0\n            };\n\n            const deviceMotionEvent = {\n                orientationAngle: 0,\n                acceleration: null,\n                accelerationIncludingGravity: accelerationIncludingGravity,\n                rotationRate: math.vec3(),\n                interval: 0\n            };\n\n            const deviceOrientationEvent = {\n                alpha: 0,\n                beta: 0,\n                gamma: 0,\n                absolute: false\n            };\n\n            if (window.OrientationChangeEvent) {\n                window.addEventListener('orientationchange', this._orientationchangedListener = () => {\n\n                        orientation = window.screen.orientation || window.screen.mozOrientation || window.msOrientation || null;\n                        orientationAngle = orientation ? (orientationAngleLookup[orientation] || 0) : 0;\n\n                        orientationChangeEvent.orientation = orientation;\n                        orientationChangeEvent.orientationAngle = orientationAngle;\n\n                        /**\n                         * Fired when the orientation of the device has changed.\n                         *\n                         * @event orientationchange\n                         * @param orientation The orientation: \"landscape-primary\", \"landscape-secondary\", \"portrait-secondary\" or \"portrait-primary\"\n                         * @param orientationAngle The orientation angle in degrees: 90 for landscape-primary, -90 for landscape-secondary, 180 for portrait-secondary or 0 for portrait-primary.\n                         */\n                        this.fire(\"orientationchange\", orientationChangeEvent);\n                    },\n                    false);\n            }\n\n            if (window.DeviceMotionEvent) {\n                window.addEventListener('devicemotion', this._deviceMotionListener = (e) => {\n\n                        deviceMotionEvent.interval = e.interval;\n                        deviceMotionEvent.orientationAngle = orientationAngle;\n\n                        const accel = e.acceleration;\n\n                        if (accel) {\n                            acceleration[0] = accel.x;\n                            acceleration[1] = accel.y;\n                            acceleration[2] = accel.z;\n                            deviceMotionEvent.acceleration = acceleration;\n                        } else {\n                            deviceMotionEvent.acceleration = null;\n                        }\n\n                        const accelGrav = e.accelerationIncludingGravity;\n\n                        if (accelGrav) {\n                            accelerationIncludingGravity[0] = accelGrav.x;\n                            accelerationIncludingGravity[1] = accelGrav.y;\n                            accelerationIncludingGravity[2] = accelGrav.z;\n                            deviceMotionEvent.accelerationIncludingGravity = accelerationIncludingGravity;\n                        } else {\n                            deviceMotionEvent.accelerationIncludingGravity = null;\n                        }\n\n                        deviceMotionEvent.rotationRate = e.rotationRate;\n\n                        /**\n                         * Fires on a regular interval and returns data about the rotation\n                         * (in degrees per second) and acceleration (in meters per second squared) of the device, at that moment in\n                         * time. Some devices do not have the hardware to exclude the effect of gravity.\n                         *\n                         * @event devicemotion\n                         * @param Float32Array acceleration The acceleration of the device, in meters per second squared, as a 3-element vector. This value has taken into account the effect of gravity and removed it from the figures. This value may not exist if the hardware doesn't know how to remove gravity from the acceleration data.\n                         * @param Float32Array accelerationIncludingGravity The acceleration of the device, in meters per second squared, as a 3-element vector. This value includes the effect of gravity, and may be the only value available on devices that don't have a gyroscope to allow them to properly remove gravity from the data.\n                         * @param, Number interval The interval, in milliseconds, at which this event is fired. The next event will be fired in approximately this amount of time.\n                         * @param  Float32Array rotationRate The rates of rotation of the device about each axis, in degrees per second.\n                         */\n                        this.fire(\"devicemotion\", deviceMotionEvent);\n                    },\n                    false);\n            }\n\n            if (window.DeviceOrientationEvent) {\n                window.addEventListener(\"deviceorientation\", this._deviceOrientListener = (e) => {\n\n                        deviceOrientationEvent.gamma = e.gamma;\n                        deviceOrientationEvent.beta = e.beta;\n                        deviceOrientationEvent.alpha = e.alpha;\n                        deviceOrientationEvent.absolute = e.absolute;\n\n                        /**\n                         * Fired when fresh data is available from an orientation sensor about the current orientation\n                         * of the device as compared to the Earth coordinate frame. This data is gathered from a\n                         * magnetometer inside the device. See\n                         * <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Orientation_and_motion_data_explained\">Orientation and motion data explained</a> for more info.\n                         *\n                         * @event deviceorientation\n                         * @param Number alpha The current orientation of the device around the Z axis in degrees; that is, how far the device is rotated around a line perpendicular to the device.\n                         * @param Number beta The current orientation of the device around the X axis in degrees; that is, how far the device is tipped forward or backward.\n                         * @param Number gamma The current orientation of the device around the Y axis in degrees; that is, how far the device is turned left or right.\n                         * @param Boolean absolute This value is true if the orientation is provided as a difference between the device coordinate frame and the Earth coordinate frame; if the device can't detect the Earth coordinate frame, this value is false.\n                         */\n                        this.fire(\"deviceorientation\", deviceOrientationEvent);\n                    },\n                    false);\n            }\n        }\n        this._eventsBound = true;\n    }\n\n    _unbindEvents() {\n        if (!this._eventsBound) {\n            return;\n        }\n        document.removeEventListener(\"keydown\", this._keyDownListener);\n        document.removeEventListener(\"keyup\", this._keyUpListener);\n        this.element.removeEventListener(\"mouseenter\", this._mouseEnterListener);\n        this.element.removeEventListener(\"mouseleave\", this._mouseLeaveListener);\n        this.element.removeEventListener(\"mousedown\", this._mouseDownListener);\n        document.removeEventListener(\"mouseup\", this._mouseDownListener);\n        document.removeEventListener(\"click\", this._clickListener);\n        document.removeEventListener(\"dblclick\", this._dblClickListener);\n        this.element.removeEventListener(\"mousemove\", this._mouseMoveListener);\n        this.element.removeEventListener(\"wheel\", this._mouseWheelListener);\n        if (window.OrientationChangeEvent) {\n            window.removeEventListener('orientationchange', this._orientationchangedListener);\n        }\n        if (window.DeviceMotionEvent) {\n            window.removeEventListener('devicemotion', this._deviceMotionListener);\n        }\n        if (window.DeviceOrientationEvent) {\n            window.removeEventListener(\"deviceorientation\", this._deviceOrientListener);\n        }\n        this._eventsBound = false;\n    }\n\n    _getMouseCanvasPos(event) {\n        if (!event) {\n            event = window.event;\n            this.mouseCanvasPos[0] = event.x;\n            this.mouseCanvasPos[1] = event.y;\n        } else {\n            let element = event.target;\n            let totalOffsetLeft = 0;\n            let totalOffsetTop = 0;\n            while (element.offsetParent) {\n                totalOffsetLeft += element.offsetLeft;\n                totalOffsetTop += element.offsetTop;\n                element = element.offsetParent;\n            }\n            this.mouseCanvasPos[0] = event.pageX - totalOffsetLeft;\n            this.mouseCanvasPos[1] = event.pageY - totalOffsetTop;\n        }\n    }\n\n    /**\n     * Sets whether input handlers are enabled.\n     *\n     * Default value is ````true````.\n     *\n     * @param {Boolean} enable Indicates if input handlers are enabled.\n     */\n    setEnabled(enable) {\n        if (this.enabled !== enable) {\n            this.fire(\"enabled\", this.enabled = enable);\n        }\n    }\n\n    /**\n     * Gets whether input handlers are enabled.\n     *\n     * Default value is ````true````.\n     *\n     * @returns {Boolean} Indicates if input handlers are enabled.\n     */\n    getEnabled() {\n        return this.enabled;\n    }\n\n    /**\n     * Sets whether or not keyboard input is enabled.\n     *\n     * Default value is ````true````.\n     *\n     * {@link CameraControl} will not respond to keyboard events while this is set ````false````.\n     *\n     * @param {Boolean} value Indicates whether keyboard input is enabled.\n     */\n    setKeyboardEnabled(value) {\n        this.keyboardEnabled = value;\n    }\n\n    /**\n     * Gets whether keyboard input is enabled.\n     *\n     * Default value is ````true````.\n     *\n     * {@link CameraControl} will not respond to keyboard events while this is set ````false````.\n     *\n     * @returns {Boolean} Returns whether keyboard input is enabled.\n     */\n    getKeyboardEnabled() {\n        return this.keyboardEnabled;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        this._unbindEvents();\n    }\n}\n\nexport {Input};\n","import {Map} from \"../utils/Map.js\";\n\nconst ids = new Map({});\n\n/**\n * @desc Represents a chunk of state changes applied by the {@link Scene}'s renderer while it renders a frame.\n *\n * * Contains properties that represent the state changes.\n * * Has a unique automatically-generated numeric ID, which the renderer can use to sort these, in order to avoid applying redundant state changes for each frame.\n * * Initialize your own properties on a RenderState via its constructor.\n *\n * @private\n */\nclass RenderState {\n\n    constructor(cfg) {\n\n        /**\n         The RenderState's ID, unique within the renderer.\n         @property id\n         @type {Number}\n         @final\n         */\n        this.id = ids.addItem({});\n        for (const key in cfg) {\n            if (cfg.hasOwnProperty(key)) {\n                this[key] = cfg[key];\n            }\n        }\n    }\n\n    /**\n     Destroys this RenderState.\n     */\n    destroy() {\n        ids.removeItem(this.id);\n    }\n}\n\nexport {RenderState};","/**\n * @desc controls the canvas viewport for a {@link Scene}.\n *\n * * One Viewport per scene.\n * * You can configure a Scene to render multiple times per frame, while setting the Viewport to different extents on each render.\n * * Make a Viewport automatically size to its {@link Scene} {@link Canvas} by setting its {@link Viewport#autoBoundary} ````true````.\n *\n *\n * Configuring the Scene to render twice on each frame, each time to a separate viewport:\n *\n * ````Javascript\n * // Load glTF model\n * var model = new xeokit.GLTFModel({\n    src: \"models/gltf/GearboxAssy/glTF-MaterialsCommon/GearboxAssy.gltf\"\n });\n\n var scene = model.scene;\n var viewport = scene.viewport;\n\n // Configure Scene to render twice for each frame\n scene.passes = 2; // Default is 1\n scene.clearEachPass = false; // Default is false\n\n // Render to a separate viewport on each render\n\n var viewport = scene.viewport;\n viewport.autoBoundary = false;\n\n scene.on(\"rendering\", function (e) {\n     switch (e.pass) {\n         case 0:\n             viewport.boundary = [0, 0, 200, 200]; // xmin, ymin, width, height\n             break;\n\n         case 1:\n             viewport.boundary = [200, 0, 200, 200];\n             break;\n     }\n });\n ````\n\n @class Viewport\n @module xeokit\n @submodule rendering\n @constructor\n @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n @param {*} [cfg] Viewport configuration\n @param {String} [cfg.id] Optional ID, unique among all components in the parent\n {@link Scene}, generated automatically when omitted.\n @param {String:Object} [cfg.meta] Optional map of user-defined metadata to attach to this Viewport.\n @param [cfg.boundary] {Number[]} Canvas-space Viewport boundary, given as\n (min, max, width, height). Defaults to the size of the parent\n {@link Scene} {@link Canvas}.\n @param [cfg.autoBoundary=false] {Boolean} Indicates if this Viewport's {@link Viewport#boundary}\n automatically synchronizes with the size of the parent {@link Scene} {@link Canvas}.\n\n @extends Component\n */\nimport {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\nclass Viewport extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Viewport\";\n    }\n\n    /**\n     @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            boundary: [0, 0, 100, 100]\n        });\n\n        this.boundary = cfg.boundary;\n        this.autoBoundary = cfg.autoBoundary;\n    }\n\n\n    /**\n     * Sets the canvas-space boundary of this Viewport, indicated as ````[min, max, width, height]````.\n     *\n     * When {@link Viewport#autoBoundary} is ````true````, ignores calls to this method and automatically synchronizes with {@link Canvas#boundary}.\n     *\n     * Fires a \"boundary\"\" event on change.\n     *\n     * Defaults to the {@link Canvas} extents.\n     *\n     * @param {Number[]} value New Viewport extents.\n     */\n    set boundary(value) {\n\n        if (this._autoBoundary) {\n            return;\n        }\n\n        if (!value) {\n\n            const canvasBoundary = this.scene.canvas.boundary;\n\n            const width = canvasBoundary[2];\n            const height = canvasBoundary[3];\n\n            value = [0, 0, width, height];\n        }\n\n        this._state.boundary = value;\n\n        this.glRedraw();\n\n        /**\n         Fired whenever this Viewport's {@link Viewport#boundary} property changes.\n\n         @event boundary\n         @param value {Boolean} The property's new value\n         */\n        this.fire(\"boundary\", this._state.boundary);\n    }\n\n    /**\n     * Gets the canvas-space boundary of this Viewport, indicated as ````[min, max, width, height]````.\n     *\n     * @returns {Number[]} The Viewport extents.\n     */\n    get boundary() {\n        return this._state.boundary;\n    }\n\n    /**\n     * Sets if {@link Viewport#boundary} automatically synchronizes with {@link Canvas#boundary}.\n     *\n     * Default is ````false````.\n     *\n     * @param {Boolean} value Set true to automatically sycnhronize.\n     */\n    set autoBoundary(value) {\n\n        value = !!value;\n\n        if (value === this._autoBoundary) {\n            return;\n        }\n\n        this._autoBoundary = value;\n\n        if (this._autoBoundary) {\n            this._onCanvasSize = this.scene.canvas.on(\"boundary\",\n                function (boundary) {\n\n                    const width = boundary[2];\n                    const height = boundary[3];\n\n                    this._state.boundary = [0, 0, width, height];\n\n                    this.glRedraw();\n\n                    /**\n                     Fired whenever this Viewport's {@link Viewport#boundary} property changes.\n\n                     @event boundary\n                     @param value {Boolean} The property's new value\n                     */\n                    this.fire(\"boundary\", this._state.boundary);\n\n                }, this);\n\n        } else if (this._onCanvasSize) {\n            this.scene.canvas.off(this._onCanvasSize);\n            this._onCanvasSize = null;\n        }\n\n        /**\n         Fired whenever this Viewport's {@link autoBoundary/autoBoundary} property changes.\n\n         @event autoBoundary\n         @param value The property's new value\n         */\n        this.fire(\"autoBoundary\", this._autoBoundary);\n    }\n\n    /**\n     * Gets if {@link Viewport#boundary} automatically synchronizes with {@link Canvas#boundary}.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when automatically sycnhronizing.\n     */\n    get autoBoundary() {\n        return this._autoBoundary;\n    }\n\n    _getState() {\n        return this._state;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {Viewport};","import {math} from '../math/math.js';\nimport {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\n/**\n * @desc Defines its {@link Camera}'s perspective projection using a field-of-view angle.\n *\n * * Located at {@link Camera#perspective}.\n * * Implicitly sets the left, right, top, bottom frustum planes using {@link Perspective#fov}.\n * * {@link Perspective#near} and {@link Perspective#far} specify the distances to the WebGL clipping planes.\n */\nclass Perspective extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Perspective\";\n    }\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(camera, cfg = {}) {\n\n        super(camera, cfg);\n\n        /**\n         * The Camera this Perspective belongs to.\n         *\n         * @property camera\n         * @type {Camera}\n         * @final\n         */\n        this.camera = camera;\n\n        this._state = new RenderState({\n            matrix: math.mat4(),\n            inverseMatrix: math.mat4(),\n            transposedMatrix: math.mat4(),\n            near: 0.1,\n            far: 2000.0\n        });\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n\n        this._fov = 60.0;\n\n        // Recompute aspect from change in canvas size\n        this._canvasResized = this.scene.canvas.on(\"boundary\", this._needUpdate, this);\n\n        this.fov = cfg.fov;\n        this.fovAxis = cfg.fovAxis;\n        this.near = cfg.near;\n        this.far = cfg.far;\n    }\n\n    _update() {\n\n        const WIDTH_INDEX = 2;\n        const HEIGHT_INDEX = 3;\n        const boundary = this.scene.viewport.boundary;\n        const aspect = boundary[WIDTH_INDEX] / boundary[HEIGHT_INDEX];\n        const fovAxis = this._fovAxis;\n\n        let fov = this._fov;\n        if (fovAxis === \"x\" || (fovAxis === \"min\" && aspect < 1) || (fovAxis === \"max\" && aspect > 1)) {\n            fov = fov / aspect;\n        }\n        fov = Math.min(fov, 120);\n\n        math.perspectiveMat4(fov * (Math.PI / 180.0), aspect, this._state.near, this._state.far, this._state.matrix);\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n\n        this.glRedraw();\n\n        this.fire(\"matrix\", this._state.matrix);\n    }\n\n    /**\n     * Sets the Perspective's field-of-view angle (FOV).\n     *\n     * Fires an \"fov\" event on change.\n\n     * Default value is ````60.0````.\n     *\n     * @param {Number} value New field-of-view.\n     */\n    set fov(value) {\n        value = (value !== undefined && value !== null) ? value : 60.0;\n        if (value === this._fov) {\n            return;\n        }\n        this._fov = value;\n        this._needUpdate(0); // Ensure matrix built on next \"tick\"\n        this.fire(\"fov\", this._fov);\n    }\n\n    /**\n     * Gets the Perspective's field-of-view angle (FOV).\n     *\n     * Default value is ````60.0````.\n     *\n     * @returns {Number} Current field-of-view.\n     */\n    get fov() {\n        return this._fov;\n    }\n\n    /**\n     * Sets the Perspective's FOV axis.\n     *\n     * Options are ````\"x\"````, ````\"y\"```` or ````\"min\"````, to use the minimum axis.\n     *\n     * Fires an \"fovAxis\" event on change.\n\n     * Default value ````\"min\"````.\n     *\n     * @param {String} value New FOV axis value.\n     */\n    set fovAxis(value) {\n        value = value || \"min\";\n        if (this._fovAxis === value) {\n            return;\n        }\n        if (value !== \"x\" && value !== \"y\" && value !== \"min\") {\n            this.error(\"Unsupported value for 'fovAxis': \" + value + \" - defaulting to 'min'\");\n            value = \"min\";\n        }\n        this._fovAxis = value;\n        this._needUpdate(0); // Ensure matrix built on next \"tick\"\n        this.fire(\"fovAxis\", this._fovAxis);\n    }\n\n    /**\n     * Gets the Perspective's FOV axis.\n     *\n     * Options are ````\"x\"````, ````\"y\"```` or ````\"min\"````, to use the minimum axis.\n     *\n     * Fires an \"fovAxis\" event on change.\n\n     * Default value is ````\"min\"````.\n     *\n     * @returns {String} The current FOV axis value.\n     */\n    get fovAxis() {\n        return this._fovAxis;\n    }\n\n    /**\n     * Sets the position of the Perspective's near plane on the positive View-space Z-axis.\n     *\n     * Fires a \"near\" event on change.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param {Number} value New Perspective near plane position.\n     */\n    set near(value) {\n        const near = (value !== undefined && value !== null) ? value : 0.1;\n        if (this._state.near === near) {\n            return;\n        }\n        this._state.near = near;\n        this._needUpdate(0); // Ensure matrix built on next \"tick\"\n        this.fire(\"near\", this._state.near);\n    }\n\n    /**\n     * Gets the position of the Perspective's near plane on the positive View-space Z-axis.\n     *\n     * Fires an \"emits\" emits on change.\n     *\n     * Default value is ````0.1````.\n     *\n     * @returns The Perspective's near plane position.\n     */\n    get near() {\n        return this._state.near;\n    }\n\n    /**\n     * Sets the position of this Perspective's far plane on the positive View-space Z-axis.\n     *\n     * Fires a \"far\" event on change.\n     *\n     * @param {Number} value New Perspective far plane position.\n     */\n    set far(value) {\n        const far = (value !== undefined && value !== null) ? value : 2000.0;\n        if (this._state.far === far) {\n            return;\n        }\n        this._state.far = far;\n        this._needUpdate(0); // Ensure matrix built on next \"tick\"\n        this.fire(\"far\", this._state.far);\n    }\n\n    /**\n     * Gets the position of this Perspective's far plane on the positive View-space Z-axis.\n     *\n     * @return {Number} The Perspective's far plane position.\n     */\n    get far() {\n        return this._state.far;\n    }\n\n    /**\n     * Gets the Perspective's projection transform matrix.\n     *\n     * Fires a \"matrix\" event on change.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns {Number[]} The Perspective's projection matrix.\n     */\n    get matrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.matrix;\n    }\n\n    /**\n     * Gets the inverse of {@link Perspective#matrix}.\n     *\n     * @returns {Number[]} The inverse of {@link Perspective#matrix}.\n     */\n    get inverseMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._inverseMatrixDirty) {\n            math.inverseMat4(this._state.matrix, this._state.inverseMatrix);\n            this._inverseMatrixDirty = false;\n        }\n        return this._state.inverseMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link Perspective#matrix}.\n     *\n     * @returns {Number[]} The transpose of {@link Perspective#matrix}.\n     */\n    get transposedMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._transposedMatrixDirty) {\n            math.transposeMat4(this._state.matrix, this._state.transposedMatrix);\n            this._transposedMatrixDirty = false;\n        }\n        return this._state.transposedMatrix;\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates and Screen-space depth, using this Perspective projection.\n     *\n     * @param {Number[]} canvasPos Inputs 2D Canvas-space coordinates.\n     * @param {Number} screenZ Inputs Screen-space Z coordinate.\n     * @param {Number[]} screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param {Number[]} viewPos Outputs un-projected 3D View-space coordinates.\n     * @param {Number[]} worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(canvasPos, screenZ, screenPos, viewPos, worldPos) {\n\n        const canvas = this.scene.canvas.canvas;\n\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n        this.scene.canvas.off(this._canvasResized);\n    }\n}\n\nexport {Perspective};","import {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {math} from '../math/math.js';\n\n/**\n * @desc Defines its {@link Camera}'s orthographic projection as a box-shaped view volume.\n *\n * * Located at {@link Camera#ortho}.\n * * Works like Blender's orthographic projection, where the positions of the left, right, top and bottom planes are implicitly\n * indicated with a single {@link Ortho#scale} property, which causes the frustum to be symmetrical on X and Y axis, large enough to\n * contain the number of units given by {@link Ortho#scale}.\n * * {@link Ortho#near} and {@link Ortho#far} indicated the distances to the WebGL clipping planes.\n */\nclass Ortho extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Ortho\";\n    }\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(camera, cfg = {}) {\n\n        super(camera, cfg);\n\n        /**\n         * The Camera this Ortho belongs to.\n         *\n         * @property camera\n         * @type {Camera}\n         * @final\n         */\n        this.camera = camera;\n\n        this._state = new RenderState({\n            matrix: math.mat4(),\n            inverseMatrix: math.mat4(),\n            transposedMatrix: math.mat4(),\n            near: 0.1,\n            far: 2000.0\n        });\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n\n        this.scale = cfg.scale;\n        this.near = cfg.near;\n        this.far = cfg.far;\n\n        this._onCanvasBoundary = this.scene.canvas.on(\"boundary\", this._needUpdate, this);\n    }\n\n    _update() {\n\n        const WIDTH_INDEX = 2;\n        const HEIGHT_INDEX = 3;\n\n        const scene = this.scene;\n        const scale = this._scale;\n        const halfSize = 0.5 * scale;\n\n        const boundary = scene.viewport.boundary;\n        const boundaryWidth = boundary[WIDTH_INDEX];\n        const boundaryHeight = boundary[HEIGHT_INDEX];\n        const aspect = boundaryWidth / boundaryHeight;\n\n        let left;\n        let right;\n        let top;\n        let bottom;\n\n        if (boundaryWidth > boundaryHeight) {\n            left = -halfSize;\n            right = halfSize;\n            top = halfSize / aspect;\n            bottom = -halfSize / aspect;\n\n        } else {\n            left = -halfSize * aspect;\n            right = halfSize * aspect;\n            top = halfSize;\n            bottom = -halfSize;\n        }\n\n        math.orthoMat4c(left, right, bottom, top, this._state.near, this._state.far, this._state.matrix);\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n\n        this.glRedraw();\n\n        this.fire(\"matrix\", this._state.matrix);\n    }\n\n\n    /**\n     * Sets scale factor for this Ortho's extents on X and Y axis.\n     *\n     * Clamps to minimum value of ````0.01```.\n     *\n     * Fires a \"scale\" event on change.\n     *\n     * Default value is ````1.0````\n     * @param {Number} value New scale value.\n     */\n    set scale(value) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (value <= 0) {\n            value = 0.01;\n        }\n        this._scale = value;\n        this._needUpdate(0);\n        this.fire(\"scale\", this._scale);\n    }\n\n    /**\n     * Gets scale factor for this Ortho's extents on X and Y axis.\n     *\n     * Clamps to minimum value of ````0.01```.\n     *\n     * Default value is ````1.0````\n     *\n     * @returns {Number} New Ortho scale value.\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Sets the position of the Ortho's near plane on the positive View-space Z-axis.\n     *\n     * Fires a \"near\" emits on change.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param {Number} value New Ortho near plane position.\n     */\n    set near(value) {\n        const near = (value !== undefined && value !== null) ? value : 0.1;\n        if (this._state.near === near) {\n            return;\n        }\n        this._state.near = near;\n        this._needUpdate(0);\n        this.fire(\"near\", this._state.near);\n    }\n\n    /**\n     * Gets the position of the Ortho's near plane on the positive View-space Z-axis.\n     *\n     * Default value is ````0.1````.\n     *\n     * @returns {Number} New Ortho near plane position.\n     */\n    get near() {\n        return this._state.near;\n    }\n\n    /**\n     * Sets the position of the Ortho's far plane on the positive View-space Z-axis.\n     *\n     * Fires a \"far\" event on change.\n     *\n     * Default value is ````2000.0````.\n     *\n     * @param {Number} value New far ortho plane position.\n     */\n    set far(value) {\n        const far = (value !== undefined && value !== null) ? value : 2000.0;\n        if (this._state.far === far) {\n            return;\n        }\n        this._state.far = far;\n        this._needUpdate(0);\n        this.fire(\"far\", this._state.far);\n    }\n\n    /**\n     * Gets the position of the Ortho's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @returns {Number} New far ortho plane position.\n     */\n    get far() {\n        return this._state.far;\n    }\n\n    /**\n     * Gets the Ortho's projection transform matrix.\n     *\n     * Fires a \"matrix\" event on change.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns {Number[]} The Ortho's projection matrix.\n     */\n    get matrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.matrix;\n    }\n\n    /**\n     * Gets the inverse of {@link Ortho#matrix}.\n     *\n     * @returns {Number[]} The inverse of {@link Ortho#matrix}.\n     */\n    get inverseMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._inverseMatrixDirty) {\n            math.inverseMat4(this._state.matrix, this._state.inverseMatrix);\n            this._inverseMatrixDirty = false;\n        }\n        return this._state.inverseMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link Ortho#matrix}.\n     *\n     * @returns {Number[]} The transpose of {@link Ortho#matrix}.\n     */\n    get transposedMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._transposedMatrixDirty) {\n            math.transposeMat4(this._state.matrix, this._state.transposedMatrix);\n            this._transposedMatrixDirty = false;\n        }\n        return this._state.transposedMatrix;\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates, using this Ortho projection.\n     *\n     * @param {Number[]} canvasPos Inputs 2D Canvas-space coordinates.\n     * @param {Number} screenZ Inputs Screen-space Z coordinate.\n     * @param {Number[]} screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param {Number[]} viewPos Outputs un-projected 3D View-space coordinates.\n     * @param {Number[]} worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(canvasPos, screenZ, screenPos, viewPos, worldPos) {\n\n        const canvas = this.scene.canvas.canvas;\n\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n        this.scene.canvas.off(this._onCanvasBoundary);\n    }\n}\n\nexport {Ortho};","import {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {math} from '../math/math.js';\n\n/**\n * @desc Defines its {@link Camera}'s perspective projection as a frustum-shaped view volume.\n *\n * * Located at {@link Camera#frustum}.\n * * Allows to explicitly set the positions of the left, right, top, bottom, near and far planes, which is useful for asymmetrical view volumes, such as for stereo viewing.\n * * {@link Frustum#near} and {@link Frustum#far} specify the distances to the WebGL clipping planes.\n */\nclass Frustum extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Frustum\";\n    }\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(camera, cfg = {}) {\n\n        super(camera, cfg);\n\n        /**\n         * The Camera this Frustum belongs to.\n         *\n         * @property camera\n         * @type {Camera}\n         * @final\n         */\n        this.camera = camera;\n\n        this._state = new RenderState({\n            matrix: math.mat4(),\n            inverseMatrix: math.mat4(),\n            transposedMatrix: math.mat4(),\n            near: 0.1,\n            far: 10000.0\n        });\n\n        this._left = -1.0;\n        this._right = 1.0;\n        this._bottom = -1.0;\n        this._top = 1.0;\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n\n        // Set component properties\n\n        this.left = cfg.left;\n        this.right = cfg.right;\n        this.bottom = cfg.bottom;\n        this.top = cfg.top;\n        this.near = cfg.near;\n        this.far = cfg.far;\n    }\n\n    _update() {\n\n        math.frustumMat4(this._left, this._right, this._bottom, this._top, this._state.near, this._state.far, this._state.matrix);\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n\n        this.glRedraw();\n\n        this.fire(\"matrix\", this._state.matrix);\n    }\n\n    /**\n     * Sets the position of the Frustum's left plane on the View-space X-axis.\n     *\n     * Fires a {@link Frustum#left:emits} emits on change.\n     *\n     * @param {Number} value New left frustum plane position.\n     */\n    set left(value) {\n        this._left = (value !== undefined && value !== null) ? value : -1.0;\n        this._needUpdate(0);\n        this.fire(\"left\", this._left);\n    }\n\n    /**\n     * Gets the position of the Frustum's left plane on the View-space X-axis.\n     *\n     * @return {Number} Left frustum plane position.\n     */\n    get left() {\n        return this._left;\n    }\n\n    /**\n     * Sets the position of the Frustum's right plane on the View-space X-axis.\n     *\n     * Fires a {@link Frustum#right:emits} emits on change.\n     *\n     * @param {Number} value New right frustum plane position.\n     */\n    set right(value) {\n        this._right = (value !== undefined && value !== null) ? value : 1.0;\n        this._needUpdate(0);\n        this.fire(\"right\", this._right);\n    }\n\n    /**\n     * Gets the position of the Frustum's right plane on the View-space X-axis.\n     *\n     * Fires a {@link Frustum#right:emits} emits on change.\n     *\n     * @return {Number} Right frustum plane position.\n     */\n    get right() {\n        return this._right;\n    }\n\n    /**\n     * Sets the position of the Frustum's top plane on the View-space Y-axis.\n     *\n     * Fires a {@link Frustum#top:emits} emits on change.\n     *\n     * @param {Number} value New top frustum plane position.\n     */\n    set top(value) {\n        this._top = (value !== undefined && value !== null) ? value : 1.0;\n        this._needUpdate(0);\n        this.fire(\"top\", this._top);\n    }\n\n    /**\n     * Gets the position of the Frustum's top plane on the View-space Y-axis.\n     *\n     * Fires a {@link Frustum#top:emits} emits on change.\n     *\n     * @return {Number} Top frustum plane position.\n     */\n    get top() {\n        return this._top;\n    }\n\n    /**\n     * Sets the position of the Frustum's bottom plane on the View-space Y-axis.\n     *\n     * Fires a {@link Frustum#bottom:emits} emits on change.\n     *\n     * @emits {\"bottom\"} event with the value of this property whenever it changes.\n     *\n     * @param {Number} value New bottom frustum plane position.\n     */\n    set bottom(value) {\n        this._bottom = (value !== undefined && value !== null) ? value : -1.0;\n        this._needUpdate(0);\n        this.fire(\"bottom\", this._bottom);\n    }\n\n    /**\n     * Gets the position of the Frustum's bottom plane on the View-space Y-axis.\n     *\n     * Fires a {@link Frustum#bottom:emits} emits on change.\n     *\n     * @return {Number} Bottom frustum plane position.\n     */\n    get bottom() {\n        return this._bottom;\n    }\n\n    /**\n     * Sets the position of the Frustum's near plane on the positive View-space Z-axis.\n     *\n     * Fires a {@link Frustum#near:emits} emits on change.\n     *\n     * Default value is ````0.1````.\n     *\n     * @param {Number} value New Frustum near plane position.\n     */\n    set near(value) {\n        this._state.near = (value !== undefined && value !== null) ? value : 0.1;\n        this._needUpdate(0);\n        this.fire(\"near\", this._state.near);\n    }\n\n    /**\n     * Gets the position of the Frustum's near plane on the positive View-space Z-axis.\n     *\n     * Fires a {@link Frustum#near:emits} emits on change.\n     *\n     * Default value is ````0.1````.\n     *\n     * @return {Number} Near frustum plane position.\n     */\n    get near() {\n        return this._state.near;\n    }\n\n    /**\n     * Sets the position of the Frustum's far plane on the positive View-space Z-axis.\n     *\n     * Fires a {@link Frustum#far:emits} emits on change.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @param {Number} value New far frustum plane position.\n     */\n    set far(value) {\n        this._state.far = (value !== undefined && value !== null) ? value : 10000.0;\n        this._needUpdate(0);\n        this.fire(\"far\", this._state.far);\n    }\n\n    /**\n     * Gets the position of the Frustum's far plane on the positive View-space Z-axis.\n     *\n     * Default value is ````10000.0````.\n     *\n     * @return {Number} Far frustum plane position.\n     */\n    get far() {\n        return this._state.far;\n    }\n\n    /**\n     * Gets the Frustum's projection transform matrix.\n     *\n     * Fires a {@link Frustum#matrix:emits} emits on change.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @returns {Number[]} The Frustum's projection matrix matrix.\n     */\n    get matrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.matrix;\n    }\n\n    /**\n     * Gets the inverse of {@link Frustum#matrix}.\n     *\n     * @returns {Number[]} The inverse orthographic projection matrix.\n     */\n    get inverseMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._inverseMatrixDirty) {\n            math.inverseMat4(this._state.matrix, this._state.inverseMatrix);\n            this._inverseMatrixDirty = false;\n        }\n        return this._state.inverseMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link Frustum#matrix}.\n     *\n     * @returns {Number[]} The transpose of {@link Frustum#matrix}.\n     */\n    get transposedMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._transposedMatrixDirty) {\n            math.transposeMat4(this._state.matrix, this._state.transposedMatrix);\n            this._transposedMatrixDirty = false;\n        }\n        return this._state.transposedMatrix;\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates, using this Frustum projection.\n     *\n     * @param {Number[]} canvasPos Inputs 2D Canvas-space coordinates.\n     * @param {Number} screenZ Inputs Screen-space Z coordinate.\n     * @param {Number[]} screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param {Number[]} viewPos Outputs un-projected 3D View-space coordinates.\n     * @param {Number[]} worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(canvasPos, screenZ, screenPos, viewPos, worldPos) {\n\n        const canvas = this.scene.canvas.canvas;\n\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n        super.destroy();\n    }\n}\n\nexport {Frustum};","import {math} from '../math/math.js';\nimport {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\n/**\n * @desc Defines a custom projection for a {@link Camera} as a custom 4x4 matrix..\n *\n * Located at {@link Camera#customProjection}.\n */\nclass CustomProjection extends Component {\n\n    /**\n     * @private\n     */\n    get type() {\n        return \"CustomProjection\";\n    }\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(camera, cfg = {}) {\n\n        super(camera, cfg);\n\n        /**\n         * The Camera this CustomProjection belongs to.\n         *\n         * @property camera\n         * @type {Camera}\n         * @final\n         */\n        this.camera = camera;\n\n        this._state = new RenderState({\n            matrix: math.mat4(),\n            inverseMatrix: math.mat4(),\n            transposedMatrix: math.mat4()\n        });\n\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = false;\n\n        this.matrix = cfg.matrix;\n    }\n\n    /**\n     * Sets the CustomProjection's projection transform matrix.\n     *\n     * Fires a \"matrix\" event on change.\n\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @param {Number[]} matrix New value for the CustomProjection's matrix.\n     */\n    set matrix(matrix) {\n        this._state.matrix.set(matrix || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this._inverseMatrixDirty = true;\n        this._transposedMatrixDirty = true;\n        this.glRedraw();\n        this.fire(\"far\", this._state.matrix);\n    }\n\n    /**\n     * Gets the CustomProjection's projection transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @return {Number[]} New value for the CustomProjection's matrix.\n     */\n    get matrix() {\n        return this._state.matrix;\n    }\n\n    /**\n     * Gets the inverse of {@link CustomProjection#matrix}.\n     *\n     * @returns {Number[]} The inverse of {@link CustomProjection#matrix}.\n     */\n    get inverseMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._inverseMatrixDirty) {\n            math.inverseMat4(this._state.matrix, this._state.inverseMatrix);\n            this._inverseMatrixDirty = false;\n        }\n        return this._state.inverseMatrix;\n    }\n\n    /**\n     * Gets the transpose of {@link CustomProjection#matrix}.\n     *\n     * @returns {Number[]} The transpose of {@link CustomProjection#matrix}.\n     */\n    get transposedMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        if (this._transposedMatrixDirty) {\n            math.transposeMat4(this._state.matrix, this._state.transposedMatrix);\n            this._transposedMatrixDirty = false;\n        }\n        return this._state.transposedMatrix;\n    }\n\n    /**\n     * Un-projects the given Canvas-space coordinates, using this CustomProjection.\n     *\n     * @param {Number[]} canvasPos Inputs 2D Canvas-space coordinates.\n     * @param {Number} screenZ Inputs Screen-space Z coordinate.\n     * @param {Number[]} screenPos Outputs 3D Screen/Clip-space coordinates.\n     * @param {Number[]} viewPos Outputs un-projected 3D View-space coordinates.\n     * @param {Number[]} worldPos Outputs un-projected 3D World-space coordinates.\n     */\n    unproject(canvasPos, screenZ, screenPos, viewPos, worldPos) {\n\n        const canvas = this.scene.canvas.canvas;\n\n        const halfCanvasWidth = canvas.offsetWidth / 2.0;\n        const halfCanvasHeight = canvas.offsetHeight / 2.0;\n\n        screenPos[0] = (canvasPos[0] - halfCanvasWidth) / halfCanvasWidth;\n        screenPos[1] = (canvasPos[1] - halfCanvasHeight) / halfCanvasHeight;\n        screenPos[2] = screenZ;\n        screenPos[3] = 1.0;\n\n        math.mulMat4v4(this.inverseMatrix, screenPos, viewPos);\n        math.mulVec3Scalar(viewPos, 1.0 / viewPos[3]);\n\n        viewPos[3] = 1.0;\n        viewPos[1] *= -1;\n\n        math.mulMat4v4(this.camera.inverseViewMatrix, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    /** @private\n     *\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {CustomProjection};","import {math} from '../math/math.js';\nimport {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {Perspective} from './Perspective.js';\nimport {Ortho} from './Ortho.js';\nimport {Frustum} from './Frustum.js';\nimport {CustomProjection} from './CustomProjection.js';\n\nconst tempVec3 = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\nconst tempVec3d = math.vec3();\nconst tempVec3e = math.vec3();\nconst tempVec3f = math.vec3();\nconst tempMat = math.mat4();\nconst tempMatb = math.mat4();\nconst eyeLookVec = math.vec3();\nconst eyeLookVecNorm = math.vec3();\nconst eyeLookOffset = math.vec3();\nconst offsetEye = math.vec3();\n\n/**\n * @desc Manages viewing and projection transforms for its {@link Scene}.\n *\n * * One Camera per {@link Scene}\n * * Scene is located at {@link Viewer#scene} and Camera is located at {@link Scene#camera}\n * * Controls viewing and projection transforms\n * * Has methods to pan, zoom and orbit (or first-person rotation)\n * * Dynamically configurable World-space axis\n * * Has {@link Perspective}, {@link Ortho} and {@link Frustum} and {@link CustomProjection}, which you can dynamically switch it between\n * * Switchable gimbal lock\n * * Can be \"flown\" to look at targets using a {@link CameraFlightAnimation}\n * * Can be animated along a path using a {@link CameraPathAnimation}\n *\n * ## Getting the Camera\n *\n * There is exactly one Camera per {@link Scene}:\n *\n * ````javascript\n * import {Viewer} from \"xeokit-sdk.es.js\";\n *\n * var camera = viewer.scene.camera;\n *\n * ````\n *\n * ## Setting the Camera Position\n *\n * Get and set the Camera's absolute position via {@link Camera#eye}, {@link Camera#look} and {@link Camera#up}:\n *\n * ````javascript\n * camera.eye = [-10,0,0];\n * camera.look = [-10,0,0];\n * camera.up = [0,1,0];\n * ````\n *\n * ## Camera View and Projection Matrices\n *\n * The Camera's view matrix transforms coordinates from World-space to View-space.\n *\n * Getting the view matrix:\n *\n * ````javascript\n * var viewMatrix = camera.viewMatrix;\n * var viewNormalMatrix = camera.normalMatrix;\n * ````\n *\n * The Camera's view normal matrix transforms normal vectors from World-space to View-space.\n *\n * Getting the view normal matrix:\n *\n * ````javascript\n * var viewNormalMatrix = camera.normalMatrix;\n * ````\n *\n * The Camera fires a ````\"viewMatrix\"```` event whenever the {@link Camera#viewMatrix} and {@link Camera#viewNormalMatrix} updates.\n *\n * Listen for view matrix updates:\n *\n * ````javascript\n * camera.on(\"viewMatrix\", function(matrix) { ... });\n * ````\n *\n * ## Rotating the Camera\n *\n * Orbiting the {@link Camera#look} position:\n *\n * ````javascript\n * camera.orbitYaw(20.0);\n * camera.orbitPitch(10.0);\n * ````\n *\n * First-person rotation, rotates {@link Camera#look} and {@link Camera#up} about {@link Camera#eye}:\n *\n * ````javascript\n * camera.yaw(5.0);\n * camera.pitch(-10.0);\n * ````\n *\n * ## Panning the Camera\n *\n * Panning along the Camera's local axis (ie. left/right, up/down, forward/backward):\n *\n * ````javascript\n * camera.pan([-20, 0, 10]);\n * ````\n *\n * ## Zooming the Camera\n *\n * Zoom to vary distance between {@link Camera#eye} and {@link Camera#look}:\n *\n * ````javascript\n * camera.zoom(-5); // Move five units closer\n * ````\n *\n * Get the current distance between {@link Camera#eye} and {@link Camera#look}:\n *\n * ````javascript\n * var distance = camera.eyeLookDist;\n * ````\n *\n * ## Projection\n *\n * The Camera has a Component to manage each projection type, which are: {@link Perspective}, {@link Ortho}\n * and {@link Frustum} and {@link CustomProjection}.\n *\n * You can configure those components at any time, regardless of which is currently active:\n *\n * The Camera has a {@link Perspective} to manage perspective\n * ````javascript\n *\n * // Set some properties on Perspective\n * camera.perspective.near = 0.4;\n * camera.perspective.fov = 45;\n *\n * // Set some properties on Ortho\n * camera.ortho.near = 0.8;\n * camera.ortho.far = 1000;\n *\n * // Set some properties on Frustum\n * camera.frustum.left = -1.0;\n * camera.frustum.right = 1.0;\n * camera.frustum.far = 1000.0;\n *\n * // Set the matrix property on CustomProjection\n * camera.customProjection.matrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n *\n * // Switch between the projection types\n * camera.projection = \"perspective\"; // Switch to perspective\n * camera.projection = \"frustum\"; // Switch to frustum\n * camera.projection = \"ortho\"; // Switch to ortho\n * camera.projection = \"customProjection\"; // Switch to custom\n * ````\n *\n * Camera provides the projection matrix for the currently active projection in {@link Camera#projMatrix}.\n *\n * Get the projection matrix:\n *\n * ````javascript\n * var projMatrix = camera.projMatrix;\n * ````\n *\n * Listen for projection matrix updates:\n *\n * ````javascript\n * camera.on(\"projMatrix\", function(matrix) { ... });\n * ````\n *\n * ## Configuring World up direction\n *\n * We can dynamically configure the directions of the World-space coordinate system.\n *\n * Setting the +Y axis as World \"up\", +X as right and -Z as forwards (convention in some modeling software):\n *\n * ````javascript\n * camera.worldAxis = [\n *     1, 0, 0,    // Right\n *     0, 1, 0,    // Up\n *     0, 0,-1     // Forward\n * ];\n * ````\n *\n * Setting the +Z axis as World \"up\", +X as right and -Y as \"up\" (convention in most CAD and BIM viewers):\n *\n * ````javascript\n * camera.worldAxis = [\n *     1, 0, 0, // Right\n *     0, 0, 1, // Up\n *     0,-1, 0  // Forward\n * ];\n * ````\n *\n * The Camera has read-only convenience properties that provide each axis individually:\n *\n * ````javascript\n * var worldRight = camera.worldRight;\n * var worldForward = camera.worldForward;\n * var worldUp = camera.worldUp;\n * ````\n *\n * ### Gimbal locking\n *\n * By default, the Camera locks yaw rotation to pivot about the World-space \"up\" axis. We can dynamically lock and unlock that at any time:\n *\n * ````javascript\n * camera.gimbalLock = false; // Yaw rotation now happens about Camera's local Y-axis\n * camera.gimbalLock = true; // Yaw rotation now happens about World's \"up\" axis\n * ````\n *\n * See: <a href=\"https://en.wikipedia.org/wiki/Gimbal_lock\">https://en.wikipedia.org/wiki/Gimbal_lock</a>\n */\nclass Camera extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Camera\";\n    }\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            deviceMatrix: math.mat4(),\n            hasDeviceMatrix: false, // True when deviceMatrix set to other than identity\n            matrix: math.mat4(),\n            normalMatrix: math.mat4(),\n            inverseMatrix: math.mat4()\n        });\n\n        this._perspective = new Perspective(this);\n        this._ortho = new Ortho(this);\n        this._frustum = new Frustum(this);\n        this._customProjection = new CustomProjection(this);\n        this._project = this._perspective;\n\n        this._eye = math.vec3([0, 0, 10.0]);\n        this._look = math.vec3([0, 0, 0]);\n        this._up = math.vec3([0, 1, 0]);\n\n        this._worldUp = math.vec3([0, 1, 0]);\n        this._worldRight = math.vec3([1, 0, 0]);\n        this._worldForward = math.vec3([0, 0, -1]);\n\n        this.deviceMatrix = cfg.deviceMatrix;\n        this.eye = cfg.eye;\n        this.look = cfg.look;\n        this.up = cfg.up;\n        this.worldAxis = cfg.worldAxis;\n        this.gimbalLock = cfg.gimbalLock;\n        this.constrainPitch = cfg.constrainPitch;\n\n        this.projection = cfg.projection;\n\n        this._perspective.on(\"matrix\", () => {\n            if (this._projectionType === \"perspective\") {\n                this.fire(\"projMatrix\", this._perspective.matrix);\n            }\n        });\n        this._ortho.on(\"matrix\", () => {\n            if (this._projectionType === \"ortho\") {\n                this.fire(\"projMatrix\", this._ortho.matrix);\n            }\n        });\n        this._frustum.on(\"matrix\", () => {\n            if (this._projectionType === \"frustum\") {\n                this.fire(\"projMatrix\", this._frustum.matrix);\n            }\n        });\n        this._customProjection.on(\"matrix\", () => {\n            if (this._projectionType === \"customProjection\") {\n                this.fire(\"projMatrix\", this._customProjection.matrix);\n            }\n        });\n    }\n\n    _update() {\n        const state = this._state;\n        // In ortho mode, build the view matrix with an eye position that's translated\n        // well back from look, so that the front sectionPlane plane doesn't unexpectedly cut\n        // the front off the view (not a problem with perspective, since objects close enough\n        // to be clipped by the front plane are usually too big to see anything of their cross-sections).\n        let eye;\n        if (this.projection === \"ortho\") {\n            math.subVec3(this._eye, this._look, eyeLookVec);\n            math.normalizeVec3(eyeLookVec, eyeLookVecNorm);\n            math.mulVec3Scalar(eyeLookVecNorm, 1000.0, eyeLookOffset);\n            math.addVec3(this._look, eyeLookOffset, offsetEye);\n            eye = offsetEye;\n        } else {\n            eye = this._eye;\n        }\n        if (state.hasDeviceMatrix) {\n            math.lookAtMat4v(eye, this._look, this._up, tempMatb);\n            math.mulMat4(state.deviceMatrix, tempMatb, state.matrix);\n            //state.matrix.set(state.deviceMatrix);\n        } else {\n            math.lookAtMat4v(eye, this._look, this._up, state.matrix);\n        }\n        math.inverseMat4(this._state.matrix, this._state.inverseMatrix);\n        math.transposeMat4(this._state.inverseMatrix, this._state.normalMatrix);\n        this.glRedraw();\n        this.fire(\"matrix\", this._state.matrix);\n        this.fire(\"viewMatrix\", this._state.matrix);\n    }\n\n    /**\n     * Rotates {@link Camera#eye} about {@link Camera#look}, around the {@link Camera#up} vector\n     *\n     * @param {Number} angleInc Angle of rotation in degrees\n     */\n    orbitYaw(angleInc) {\n        let lookEyeVec = math.subVec3(this._eye, this._look, tempVec3);\n        math.rotationMat4v(angleInc * 0.0174532925, this._gimbalLock ? this._worldUp : this._up, tempMat);\n        lookEyeVec = math.transformPoint3(tempMat, lookEyeVec, tempVec3b);\n        this.eye = math.addVec3(this._look, lookEyeVec, tempVec3c); // Set eye position as 'look' plus 'eye' vector\n        this.up = math.transformPoint3(tempMat, this._up, tempVec3d); // Rotate 'up' vector\n    }\n\n    /**\n     * Rotates {@link Camera#eye} about {@link Camera#look} around the right axis (orthogonal to {@link Camera#up} and \"look\").\n     *\n     * @param {Number} angleInc Angle of rotation in degrees\n     */\n    orbitPitch(angleInc) {\n        if (this._constrainPitch) {\n            angleInc = math.dotVec3(this._up, this._worldUp) / math.DEGTORAD;\n            if (angleInc < 1) {\n                return;\n            }\n        }\n        let eye2 = math.subVec3(this._eye, this._look, tempVec3);\n        const left = math.cross3Vec3(math.normalizeVec3(eye2, tempVec3b), math.normalizeVec3(this._up, tempVec3c));\n        math.rotationMat4v(angleInc * 0.0174532925, left, tempMat);\n        eye2 = math.transformPoint3(tempMat, eye2, tempVec3d);\n        this.up = math.transformPoint3(tempMat, this._up, tempVec3e);\n        this.eye = math.addVec3(eye2, this._look, tempVec3f);\n    }\n\n    /**\n     * Rotates {@link Camera#look} about {@link Camera#eye}, around the {@link Camera#up} vector.\n     *\n     * @param {Number} angleInc Angle of rotation in degrees\n     */\n    yaw(angleInc) {\n        let look2 = math.subVec3(this._look, this._eye, tempVec3);\n        math.rotationMat4v(angleInc * 0.0174532925, this._gimbalLock ? this._worldUp : this._up, tempMat);\n        look2 = math.transformPoint3(tempMat, look2, tempVec3b);\n        this.look = math.addVec3(look2, this._eye, tempVec3c);\n        if (this._gimbalLock) {\n            this.up = math.transformPoint3(tempMat, this._up, tempVec3d);\n        }\n    }\n\n    /**\n     * Rotates {@link Camera#look} about {@link Camera#eye}, around the right axis (orthogonal to {@link Camera#up} and \"look\").\n\n     * @param {Number} angleInc Angle of rotation in degrees\n     */\n    pitch(angleInc) {\n        if (this._constrainPitch) {\n            angleInc = math.dotVec3(this._up, this._worldUp) / math.DEGTORAD;\n            if (angleInc < 1) {\n                return;\n            }\n        }\n        let look2 = math.subVec3(this._look, this._eye, tempVec3);\n        const left = math.cross3Vec3(math.normalizeVec3(look2, tempVec3b), math.normalizeVec3(this._up, tempVec3c));\n        math.rotationMat4v(angleInc * 0.0174532925, left, tempMat);\n        this.up = math.transformPoint3(tempMat, this._up, tempVec3f);\n        look2 = math.transformPoint3(tempMat, look2, tempVec3d);\n        this.look = math.addVec3(look2, this._eye, tempVec3e);\n    }\n\n    /**\n     * Pans the Camera along its local X, Y and Z axis.\n     *\n     * @param pan The pan vector\n     */\n    pan(pan) {\n        const eye2 = math.subVec3(this._eye, this._look, tempVec3);\n        const vec = [0, 0, 0];\n        let v;\n        if (pan[0] !== 0) {\n            const left = math.cross3Vec3(math.normalizeVec3(eye2, []), math.normalizeVec3(this._up, tempVec3b));\n            v = math.mulVec3Scalar(left, pan[0]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        if (pan[1] !== 0) {\n            v = math.mulVec3Scalar(math.normalizeVec3(this._up, tempVec3c), pan[1]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        if (pan[2] !== 0) {\n            v = math.mulVec3Scalar(math.normalizeVec3(eye2, tempVec3d), pan[2]);\n            vec[0] += v[0];\n            vec[1] += v[1];\n            vec[2] += v[2];\n        }\n        this.eye = math.addVec3(this._eye, vec, tempVec3e);\n        this.look = math.addVec3(this._look, vec, tempVec3f);\n    }\n\n    /**\n     * Increments/decrements the Camera's zoom factor, which is the distance between {@link Camera#eye} and {@link Camera#look}.\n     *\n     * @param {Number} delta Zoom factor increment.\n     */\n    zoom(delta) {\n        const vec = math.subVec3(this._eye, this._look, tempVec3);\n        const lenLook = Math.abs(math.lenVec3(vec, tempVec3b));\n        const newLenLook = Math.abs(lenLook + delta);\n        if (newLenLook < 0.5) {\n            return;\n        }\n        const dir = math.normalizeVec3(vec, tempVec3c);\n        this.eye = math.addVec3(this._look, math.mulVec3Scalar(dir, newLenLook), tempVec3d);\n    }\n\n    /**\n     * Sets the position of the Camera's eye.\n     *\n     * Default value is ````[0,0,10]````.\n     *\n     * @emits \"eye\" event on change, with the value of this property.\n     * @type {Number[]} New eye position.\n     */\n    set eye(eye) {\n        this._eye.set(eye || [0, 0, 10]);\n        this._needUpdate(0); // Ensure matrix built on next \"tick\"\n        this.fire(\"eye\", this._eye);\n    }\n\n    /**\n     * Gets the position of the Camera's eye.\n     *\n     * Default vale is ````[0,0,10]````.\n     *\n     * @type {Number[]} New eye position.\n     */\n    get eye() {\n        return this._eye;\n    }\n\n    /**\n     * Sets the position of this Camera's point-of-interest.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @emits \"look\" event on change, with the value of this property.\n     *\n     * @param {Number[]} look Camera look position.\n     */\n    set look(look) {\n        this._look.set(look || [0, 0, 0]);\n        this._needUpdate(0); // Ensure matrix built on next \"tick\"\n        this.fire(\"look\", this._look);\n    }\n\n    /**\n     * Gets the position of this Camera's point-of-interest.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @returns {Number[]} Camera look position.\n     */\n    get look() {\n        return this._look;\n    }\n\n    /**\n     * Sets the direction of this Camera's {@link Camera#up} vector.\n     *\n     * @emits \"up\" event on change, with the value of this property.\n     *\n     * @param {Number[]} up Direction of \"up\".\n     */\n    set up(up) {\n        this._up.set(up || [0, 1, 0]);\n        this._needUpdate(0);\n        this.fire(\"up\", this._up);\n    }\n\n    /**\n     * Gets the direction of this Camera's {@link Camera#up} vector.\n     *\n     * @returns {Number[]} Direction of \"up\".\n     */\n    get up() {\n        return this._up;\n    }\n\n    /**\n     * Sets an optional matrix to premultiply into {@link Camera#matrix} matrix.\n     *\n     * This is intended to be used for stereo rendering with WebVR etc.\n     *\n     * @param {Number[]} matrix The matrix.\n     */\n    set deviceMatrix(matrix) {\n        this._state.deviceMatrix.set(matrix || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n        this._state.hasDeviceMatrix = !!matrix;\n        this._needUpdate(0);\n        this.fire(\"deviceMatrix\", this._state.deviceMatrix);\n    }\n\n    /**\n     * Gets an optional matrix to premultiply into {@link Camera#matrix} matrix.\n     *\n     * @returns {Number[]} The matrix.\n     */\n    get deviceMatrix() {\n        return this._state.deviceMatrix;\n    }\n\n    /**\n     * Sets the up, right and forward axis of the World coordinate system.\n     *\n     * Has format: ````[rightX, rightY, rightZ, upX, upY, upZ, forwardX, forwardY, forwardZ]````\n     *\n     * Default axis is ````[1, 0, 0, 0, 1, 0, 0, 0, 1]````\n     *\n     * @param {Number[]} axis The new Wworld coordinate axis.\n     */\n    set worldAxis(axis) {\n        axis = axis || [1, 0, 0, 0, 1, 0, 0, 0, 1];\n        if (!this._worldAxis) {\n            this._worldAxis = math.vec3(axis);\n        } else {\n            this._worldAxis.set(axis);\n        }\n        this._worldRight[0] = this._worldAxis[0];\n        this._worldRight[1] = this._worldAxis[1];\n        this._worldRight[2] = this._worldAxis[2];\n        this._worldUp[0] = this._worldAxis[3];\n        this._worldUp[1] = this._worldAxis[4];\n        this._worldUp[2] = this._worldAxis[5];\n        this._worldForward[0] = this._worldAxis[6];\n        this._worldForward[1] = this._worldAxis[7];\n        this._worldForward[2] = this._worldAxis[8];\n        this.fire(\"worldAxis\", this._worldAxis);\n    }\n\n    /**\n     * Gets the up, right and forward axis of the World coordinate system.\n     *\n     * Has format: ````[rightX, rightY, rightZ, upX, upY, upZ, forwardX, forwardY, forwardZ]````\n     *\n     * Default axis is ````[1, 0, 0, 0, 1, 0, 0, 0, 1]````\n     *\n     * @returns {Number[]} The current World coordinate axis.\n     */\n    get worldAxis() {\n        return this._worldAxis;\n    }\n\n    /**\n     * Gets the direction of World-space \"up\".\n     *\n     * This is set by {@link Camera#worldAxis}.\n     *\n     * Default value is ````[0,1,0]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldUp() {\n        return this._worldUp;\n    }\n\n    /**\n     * Gets if the World-space X-axis is \"up\".\n     * @returns {boolean}\n     */\n    get xUp() {\n        return this._worldUp[0] > this._worldUp[1] && this._worldUp[0] > this._worldUp[2];\n    }\n\n    /**\n     * Gets if the World-space Y-axis is \"up\".\n     * @returns {boolean}\n     */\n    get yUp() {\n        return this._worldUp[1] > this._worldUp[0] && this._worldUp[1] > this._worldUp[2];\n    }\n\n    /**\n     * Gets if the World-space Z-axis is \"up\".\n     * @returns {boolean}\n     */\n    get zUp() {\n        return this._worldUp[2] > this._worldUp[0] && this._worldUp[2] > this._worldUp[1];\n    }\n\n    /**\n     * Gets the direction of World-space \"right\".\n     *\n     * This is set by {@link Camera#worldAxis}.\n     *\n     * Default value is ````[1,0,0]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldRight() {\n        return this._worldRight;\n    }\n\n    /**\n     * Gets the direction of World-space \"forwards\".\n     *\n     * This is set by {@link Camera#worldAxis}.\n     *\n     * Default value is ````[0,0,1]````.\n     *\n     * @returns {Number[]} The \"up\" vector.\n     */\n    get worldForward() {\n        return this._worldForward;\n    }\n\n    /**\n     * Sets whether to lock yaw rotation to pivot about the World-space \"up\" axis.\n     *\n     * Fires a {@link Camera#gimbalLock:event} event on change.\n     *\n     * @params {Boolean} gimbalLock Set true to lock gimbal.\n     */\n    set gimbalLock(value) {\n        this._gimbalLock = value !== false;\n        this.fire(\"gimbalLock\", this._gimbalLock);\n    }\n\n    /**\n     * Gets whether to lock yaw rotation to pivot about the World-space \"up\" axis.\n     *\n     * @returns {Boolean} Returns ````true```` if gimbal is locked.\n     */\n    get gimbalLock() {\n        return this._gimbalLock;\n    }\n\n    /**\n     * Sets whether to prevent camera from being pitched upside down.\n     *\n     * The camera is upside down when the angle between {@link Camera#up} and {@link Camera#worldUp} is less than one degree.\n     *\n     * Fires a {@link Camera#constrainPitch:event} event on change.\n     *\n     * Default value is ````false````.\n     *\n     * @param {Boolean} value Set ````true```` to contrain pitch rotation.\n     */\n    set constrainPitch(value) {\n        this._constrainPitch = !!value;\n        this.fire(\"constrainPitch\", this._constrainPitch);\n    }\n\n    /**\n     * Gets whether to prevent camera from being pitched upside down.\n     *\n     * The camera is upside down when the angle between {@link Camera#up} and {@link Camera#worldUp} is less than one degree.\n     *\n     * Default value is ````false````.\n     *\n     * @returns {Boolean} ````true```` if pitch rotation is currently constrained.\n     get constrainPitch() {\n        return this._constrainPitch;\n    }\n\n     /**\n     * Gets distance from {@link Camera#look} to {@link Camera#eye}.\n     *\n     * @returns {Number} The distance.\n     */\n    get eyeLookDist() {\n        return math.lenVec3(math.subVec3(this._look, this._eye, tempVec3));\n    }\n\n    /**\n     * Gets the Camera's viewing transformation matrix.\n     *\n     * Fires a {@link Camera#matrix:event} event on change.\n     *\n     * @returns {Number[]} The viewing transform matrix.\n     */\n    get matrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.matrix;\n    }\n\n    /**\n     * Gets the Camera's viewing transformation matrix.\n     *\n     * Fires a {@link Camera#matrix:event} event on change.\n     *\n     * @returns {Number[]} The viewing transform matrix.\n     */\n    get viewMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.matrix;\n    }\n\n    /**\n     * The Camera's viewing normal transformation matrix.\n     *\n     * Fires a {@link Camera#matrix:event} event on change.\n     *\n     * @returns {Number[]} The viewing normal transform matrix.\n     */\n    get normalMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.normalMatrix;\n    }\n\n    /**\n     * The Camera's viewing normal transformation matrix.\n     *\n     * Fires a {@link Camera#matrix:event} event on change.\n     *\n     * @returns {Number[]} The viewing normal transform matrix.\n     */\n    get viewNormalMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.normalMatrix;\n    }\n\n    /**\n     * Gets the inverse of the Camera's viewing transform matrix.\n     *\n     * This has the same value as {@link Camera#normalMatrix}.\n     *\n     * @returns {Number[]} The inverse viewing transform matrix.\n     */\n    get inverseViewMatrix() {\n        if (this._updateScheduled) {\n            this._doUpdate();\n        }\n        return this._state.inverseMatrix;\n    }\n\n    /**\n     * Gets the Camera's projection transformation projMatrix.\n     *\n     * Fires a {@link Camera#projMatrix:event} event on change.\n     *\n     * @returns {Number[]} The projection matrix.\n     */\n    get projMatrix() {\n        return this[this.projection].matrix;\n    }\n\n    /**\n     * Gets the Camera's perspective projection.\n     *\n     * The Camera uses this while {@link Camera#projection} equals ````perspective````.\n     *\n     * @returns {Perspective} The Perspective component.\n     */\n    get perspective() {\n        return this._perspective;\n    }\n\n    /**\n     * Gets the Camera's orthographic projection.\n     *\n     * The Camera uses this while {@link Camera#projection} equals ````ortho````.\n     *\n     * @returns {Ortho} The Ortho component.\n     */\n    get ortho() {\n        return this._ortho;\n    }\n\n    /**\n     * Gets the Camera's frustum projection.\n     *\n     * The Camera uses this while {@link Camera#projection} equals ````frustum````.\n     *\n     * @returns {Frustum} The Ortho component.\n     */\n    get frustum() {\n        return this._frustum;\n    }\n\n    /**\n     * Gets the Camera's custom projection.\n     *\n     * This is used while {@link Camera#projection} equals \"customProjection\".\n     *\n     * @returns {CustomProjection} The custom projection.\n     */\n    get customProjection() {\n        return this._customProjection;\n    }\n\n    /**\n     * Sets the active projection type.\n     *\n     * Accepted values are ````\"perspective\"````, ````\"ortho\"````, ````\"frustum\"```` and ````\"customProjection\"````.\n     *\n     * Default value is ````\"perspective\"````.\n     *\n     * @param {String} value Identifies the active projection type.\n     */\n    set projection(value) {\n        value = value || \"perspective\";\n        if (this._projectionType === value) {\n            return;\n        }\n        if (value === \"perspective\") {\n            this._project = this._perspective;\n        } else if (value === \"ortho\") {\n            this._project = this._ortho;\n        } else if (value === \"frustum\") {\n            this._project = this._frustum;\n        } else if (value === \"customProjection\") {\n            this._project = this._customProjection;\n        } else {\n            this.error(\"Unsupported value for 'projection': \" + value + \" defaulting to 'perspective'\");\n            this._project = this._perspective;\n            value = \"perspective\";\n        }\n        this._project._update();\n        this._projectionType = value;\n        this.glRedraw();\n        this._update(); // Need to rebuild lookat matrix with full eye, look & up\n        this.fire(\"dirty\");\n        this.fire(\"projection\", this._projectionType);\n        this.fire(\"projMatrix\", this._project.matrix);\n    }\n\n    /**\n     * Gets the active projection type.\n     *\n     * Possible values are ````\"perspective\"````, ````\"ortho\"````, ````\"frustum\"```` and ````\"customProjection\"````.\n     *\n     * Default value is ````\"perspective\"````.\n     *\n     * @returns {String} Identifies the active projection type.\n     */\n    get projection() {\n        return this._projectionType;\n    }\n\n    /**\n     * Gets the currently active projection for this Camera.\n     *\n     * The currently active project is selected with {@link Camera#projection}.\n     *\n     * @returns {Perspective|Ortho|Frustum|CustomProjection} The currently active projection is active.\n     */\n    get project() {\n        return this._project;\n    }\n\n    /**\n     * Destroys this Camera.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {Camera};\n","import {Component} from '../Component.js';\n\n/**\n * @desc A dynamic light source within a {@link Scene}.\n *\n * These are registered by {@link Light#id} in {@link Scene#lights}.\n */\nclass Light extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Light\";\n    }\n\n    /**\n     * @private\n     */\n    get isLight() {\n        return true;\n    }\n\n    constructor(owner, cfg = {}) {\n        super(owner, cfg);\n    }\n}\n\nexport {Light};\n","import {Light} from './Light.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {RenderBuffer} from '../webgl/RenderBuffer.js';\nimport {math} from '../math/math.js';\n\n/**\n * @desc A directional light source that illuminates all {@link Mesh}es equally from a given direction.\n *\n * * Has an emission direction vector in {@link DirLight#dir}, but no position.\n * * Defined in either *World* or *View* coordinate space. When in World-space, {@link DirLight#dir} is relative to the\n * World coordinate system, and will appear to move as the {@link Camera} moves. When in View-space, {@link DirLight#dir} is\n * relative to the View coordinate system, and will behave as if fixed to the viewer's head.\n * * {@link AmbientLight}s, {@link DirLight}s and {@link PointLight}s are registered by their {@link Component#id} on {@link Scene#lights}.\n *\n * ## Usage\n *\n * In the example below we'll replace the {@link Scene}'s default light sources with three View-space DirLights.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#lights_DirLight_view)]\n *\n * ````javascript\n * import {Viewer, Mesh, buildSphereGeometry,\n *      buildPlaneGeometry, ReadableGeometry,\n *      PhongMaterial, Texture, DirLight} from \"xeokit-sdk.es.js\";\n *\n * // Create a Viewer and arrange the camera\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * // Replace the Scene's default lights with three custom view-space DirLights\n *\n * viewer.scene.clearLights();\n *\n * new DirLight(viewer.scene, {\n *      id: \"keyLight\",\n *      dir: [0.8, -0.6, -0.8],\n *      color: [1.0, 0.3, 0.3],\n *      intensity: 1.0,\n *      space: \"view\"\n * });\n *\n * new DirLight(viewer.scene, {\n *      id: \"fillLight\",\n *      dir: [-0.8, -0.4, -0.4],\n *      color: [0.3, 1.0, 0.3],\n *      intensity: 1.0,\n *      space: \"view\"\n * });\n *\n * new DirLight(viewer.scene, {\n *      id: \"rimLight\",\n *      dir: [0.2, -0.8, 0.8],\n *      color: [0.6, 0.6, 0.6],\n *      intensity: 1.0,\n *      space: \"view\"\n * });\n *\n *\n * // Create a sphere and ground plane\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildSphereGeometry({\n *          radius: 2.0\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          diffuse: [0.7, 0.7, 0.7],\n *          specular: [1.0, 1.0, 1.0],\n *          emissive: [0, 0, 0],\n *          alpha: 1.0,\n *          ambient: [1, 1, 0],\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          })\n *      })\n *  });\n *\n * new Mesh(viewer.scene, {\n *      geometry: buildPlaneGeometry(ReadableGeometry, viewer.scene, {\n *          xSize: 30,\n *          zSize: 30\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          }),\n *          backfaces: true\n *      }),\n *      position: [0, -2.1, 0]\n * });\n * ````\n */\nclass DirLight extends Light {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"DirLight\";\n    }\n\n    /**\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this DirLight as well.\n     * @param {*} [cfg] The DirLight configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number[]} [cfg.dir=[1.0, 1.0, 1.0]]  A unit vector indicating the direction that the light is shining,  given in either World or View space, depending on the value of the ````space```` parameter.\n     * @param {Number[]} [cfg.color=[0.7, 0.7, 0.8 ]] The color of this DirLight.\n     * @param {Number} [cfg.intensity=1.0] The intensity of this DirLight, as a factor in range ````[0..1]````.\n     * @param {String} [cfg.space=\"view\"] The coordinate system the DirLight is defined in - ````\"view\"```` or ````\"space\"````.\n     * @param {Boolean} [cfg.castsShadow=false] Flag which indicates if this DirLight casts a castsShadow.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._shadowRenderBuf = null;\n        this._shadowViewMatrix = null;\n        this._shadowProjMatrix = null;\n        this._shadowViewMatrixDirty = true;\n        this._shadowProjMatrixDirty = true;\n\n        const camera = this.scene.camera;\n        const canvas = this.scene.canvas;\n\n        this._onCameraViewMatrix = camera.on(\"viewMatrix\", () => {\n            this._shadowViewMatrixDirty = true;\n        });\n\n        this._onCameraProjMatrix = camera.on(\"projMatrix\", () => {\n            this._shadowProjMatrixDirty = true;\n        });\n\n        this._onCanvasBoundary = canvas.on(\"boundary\", () => {\n            this._shadowProjMatrixDirty = true;\n        });\n\n        this._state = new RenderState({\n\n            type: \"dir\",\n            dir: math.vec3([1.0, 1.0, 1.0]),\n            color: math.vec3([0.7, 0.7, 0.8]),\n            intensity: 1.0,\n            space: cfg.space || \"view\",\n            castsShadow: false,\n\n            getShadowViewMatrix: () => {\n                if (this._shadowViewMatrixDirty) {\n                    if (!this._shadowViewMatrix) {\n                        this._shadowViewMatrix = math.identityMat4();\n                    }\n                    const camera = this.scene.camera;\n                    const dir = this._state.dir;\n                    const look = camera.look;\n                    const eye = [look[0] - dir[0], look[1] - dir[1], look[2] - dir[2]];\n                    const up = [0, 1, 0];\n                    math.lookAtMat4v(eye, look, up, this._shadowViewMatrix);\n                    this._shadowViewMatrixDirty = false;\n                }\n                return this._shadowViewMatrix;\n            },\n\n            getShadowProjMatrix: () => {\n                if (this._shadowProjMatrixDirty) { // TODO: Set when canvas resizes\n                    if (!this._shadowProjMatrix) {\n                        this._shadowProjMatrix = math.identityMat4();\n                    }\n                    math.orthoMat4c(-40, 40, -40, 40, -40.0, 80, this._shadowProjMatrix);  // left, right, bottom, top, near, far, dest\n                    this._shadowProjMatrixDirty = false;\n                }\n                return this._shadowProjMatrix;\n            },\n\n            getShadowRenderBuf: () => {\n                if (!this._shadowRenderBuf) {\n                    this._shadowRenderBuf = new RenderBuffer(this.scene.canvas.canvas, this.scene.canvas.gl, {size: [1024, 1024]}); // Super old mobile devices have a limit of 1024x1024 textures\n                }\n                return this._shadowRenderBuf;\n            }\n        });\n\n        this.dir = cfg.dir;\n        this.color = cfg.color;\n        this.intensity = cfg.intensity;\n        this.castsShadow = cfg.castsShadow;\n\n        this.scene._lightCreated(this);\n    }\n\n    /**\n     * Sets the direction in which the DirLight is shining.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @param {Number[]} value The direction vector.\n     */\n    set dir(value) {\n        this._state.dir.set(value || [1.0, 1.0, 1.0]);\n        this._shadowViewMatrixDirty = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the direction in which the DirLight is shining.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @returns {Number[]} The direction vector.\n     */\n    get dir() {\n        return this._state.dir;\n    }\n\n    /**\n     * Sets the RGB color of this DirLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @param {Number[]} color The DirLight's RGB color.\n     */\n    set color(color) {\n        this._state.color.set(color || [0.7, 0.7, 0.8]);\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB color of this DirLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @returns {Number[]} The DirLight's RGB color.\n     */\n    get color() {\n        return this._state.color;\n    }\n\n    /**\n     * Sets the intensity of this DirLight.\n     *\n     * Default intensity is ````1.0```` for maximum intensity.\n     *\n     * @param {Number} intensity The DirLight's intensity\n     */\n    set intensity(intensity) {\n        intensity = intensity !== undefined ? intensity : 1.0;\n        this._state.intensity = intensity;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the intensity of this DirLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The DirLight's intensity.\n     */\n    get intensity() {\n        return this._state.intensity;\n    }\n\n    /**\n     * Sets if this DirLight casts a shadow.\n     *\n     * Default value is ````false````.\n     *\n     * @param {Boolean} castsShadow Set ````true```` to cast shadows.\n     */\n    set castsShadow(castsShadow) {\n        castsShadow = !!castsShadow;\n        if (this._state.castsShadow === castsShadow) {\n            return;\n        }\n        this._state.castsShadow = castsShadow;\n        this._shadowViewMatrixDirty = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this DirLight casts a shadow.\n     *\n     * Default value is ````false````.\n     *\n     * @returns {Boolean} ````true```` if this DirLight casts shadows.\n     */\n    get castsShadow() {\n        return this._state.castsShadow;\n    }\n\n    /**\n     * Destroys this DirLight.\n     */\n    destroy() {\n\n        const camera = this.scene.camera;\n        const canvas = this.scene.canvas;\n        camera.off(this._onCameraViewMatrix);\n        camera.off(this._onCameraProjMatrix);\n        canvas.off(this._onCanvasBoundary);\n\n        super.destroy();\n        this._state.destroy();\n        if (this._shadowRenderBuf) {\n            this._shadowRenderBuf.destroy();\n        }\n        this.scene._lightDestroyed(this);\n        this.glRedraw();\n    }\n}\n\nexport {DirLight};\n","import {math} from '../math/math.js';\nimport {Light} from './Light.js';\n\n/**\n * @desc An ambient light source of fixed color and intensity that illuminates all {@link Mesh}es equally.\n *\n * * {@link AmbientLight#color} multiplies by {@link PhongMaterial#ambient} at each position of each {@link ReadableGeometry} surface.\n * * {@link AmbientLight#color} multiplies by {@link LambertMaterial#color} uniformly across each triangle of each {@link ReadableGeometry} (ie. flat shaded).\n * * {@link AmbientLight}s, {@link DirLight}s and {@link PointLight}s are registered by their {@link Component#id} on {@link Scene#lights}.\n *\n * ## Usage\n *\n * In the example below we'll destroy the {@link Scene}'s default light sources then create an AmbientLight and a couple of {@link @DirLight}s:\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#lights_AmbientLight)]\n *\n * ````javascript\n * import {Viewer, Mesh, buildTorusGeometry,\n * ReadableGeometry, PhongMaterial, Texture, AmbientLight} from \"xeokit-sdk.es.js\";\n *\n * // Create a Viewer and arrange the camera\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * // Replace the Scene's default lights with a single custom AmbientLight\n *\n * viewer.scene.clearLights();\n *\n * new AmbientLight(viewer.scene, {\n *      color: [0.0, 0.3, 0.7],\n *      intensity: 1.0\n * });\n *\n * new DirLight(viewer.scene, {\n *      id: \"keyLight\",\n *      dir: [0.8, -0.6, -0.8],\n *      color: [1.0, 0.3, 0.3],\n *      intensity: 1.0,\n *      space: \"view\"\n * });\n *\n * new DirLight(viewer.scene, {\n *      id: \"fillLight\",\n *      dir: [-0.8, -0.4, -0.4],\n *      color: [0.3, 1.0, 0.3],\n *      intensity: 1.0,\n *      space: \"view\"\n * });\n *\n * new DirLight(viewer.scene, {\n *      id: \"rimLight\",\n *      dir: [0.2, -0.8, 0.8],\n *      color: [0.6, 0.6, 0.6],\n *      intensity: 1.0,\n *      space: \"view\"\n * });\n *\n * // Create a mesh with torus shape and PhongMaterial\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildSphereGeometry({\n *          center: [0, 0, 0],\n *          radius: 1.5,\n *          tube: 0.5,\n *          radialSegments: 32,\n *          tubeSegments: 24,\n *          arc: Math.PI * 2.0\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          ambient: [1.0, 1.0, 1.0],\n *          shininess: 30,\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          })\n *      })\n * });\n *\n * // Adjust the color of our AmbientLight\n *\n * var ambientLight = viewer.scene.lights[\"myAmbientLight\"];\n * ambientLight.color = [1.0, 0.8, 0.8];\n *````\n */\nclass AmbientLight extends Light {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"AmbientLight\";\n    }\n\n    /**\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this AmbientLight as well.\n     * @param {*} [cfg] AmbientLight configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number[]} [cfg.color=[0.7, 0.7, 0.8]]  The color of this AmbientLight.\n     * @param {Number} [cfg.intensity=[1.0]]  The intensity of this AmbientLight, as a factor in range ````[0..1]````.\n     */\n    constructor(owner, cfg = {}) {\n        super(owner, cfg);\n        this._state = {\n            type: \"ambient\",\n            color: math.vec3([0.7, 0.7, 0.7]),\n            intensity: 1.0\n        };\n        this.color = cfg.color;\n        this.intensity = cfg.intensity;\n        this.scene._lightCreated(this);\n    }\n\n    /**\n     * Sets the RGB color of this AmbientLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @param {Number[]} color The AmbientLight's RGB color.\n     */\n    set color(color) {\n        this._state.color.set(color || [0.7, 0.7, 0.8]);\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB color of this AmbientLight.\n     *\n     * Default value is ````[0.7, 0.7, 0.8]````.\n     *\n     * @returns {Number[]} The AmbientLight's RGB color.\n     */\n    get color() {\n        return this._state.color;\n    }\n\n    /**\n     * Sets the intensity of this AmbientLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @param {Number} intensity The AmbientLight's intensity.\n     */\n    set intensity(intensity) {\n        this._state.intensity = intensity !== undefined ? intensity : 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the intensity of this AmbientLight.\n     *\n     * Default value is ````1.0```` for maximum intensity.\n     *\n     * @returns {Number} The AmbientLight's intensity.\n     */\n    get intensity() {\n        return this._state.intensity;\n    }\n\n    /**\n     * Destroys this AmbientLight.\n     */\n    destroy() {\n\n        super.destroy();\n\n        this.scene._lightDestroyed(this);\n    }\n}\n\nexport {AmbientLight};\n","import {Component} from '../Component.js';\nimport {stats} from '../stats.js';\n\n/**\n * @desc Defines a shape for one or more {@link Mesh}es.\n *\n * * {@link ReadableGeometry} is a subclass that stores its data in both browser and GPU memory. Use ReadableGeometry when you need to keep the geometry arrays in browser memory.\n * * {@link VBOGeometry} is a subclass that stores its data solely in GPU memory. Use VBOGeometry when you need a lower memory footprint and don't need to keep the geometry data in browser memory.\n */\nclass Geometry extends Component {\n\n    /** @private */\n    get type() {\n        return \"Geometry\";\n    }\n\n    /** @private */\n    get isGeometry() {\n        return true;\n    }\n\n    constructor(owner, cfg = {}) {\n        super(owner, cfg);\n        stats.memory.meshes++;\n    }\n\n    destroy() {\n        super.destroy();\n        stats.memory.meshes--;\n    }\n}\n\nexport {Geometry};\n","import {math} from './math.js';\n\n/**\n * @private\n */\nvar buildEdgeIndices = (function () {\n\n    const uniquePositions = [];\n    const indicesLookup = [];\n    const indicesReverseLookup = [];\n    const weldedIndices = [];\n\n// TODO: Optimize with caching, but need to cater to both compressed and uncompressed positions\n\n    const faces = [];\n    let numFaces = 0;\n    const compa = new Uint16Array(3);\n    const compb = new Uint16Array(3);\n    const compc = new Uint16Array(3);\n    const a = math.vec3();\n    const b = math.vec3();\n    const c = math.vec3();\n    const cb = math.vec3();\n    const ab = math.vec3();\n    const cross = math.vec3();\n    const normal = math.vec3();\n\n    function weldVertices(positions, indices) {\n        const positionsMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n        let vx;\n        let vy;\n        let vz;\n        let key;\n        const precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n        const precision = Math.pow(10, precisionPoints);\n        let i;\n        let len;\n        let lenUniquePositions = 0;\n        for (i = 0, len = positions.length; i < len; i += 3) {\n            vx = positions[i];\n            vy = positions[i + 1];\n            vz = positions[i + 2];\n            key = Math.round(vx * precision) + '_' + Math.round(vy * precision) + '_' + Math.round(vz * precision);\n            if (positionsMap[key] === undefined) {\n                positionsMap[key] = lenUniquePositions / 3;\n                uniquePositions[lenUniquePositions++] = vx;\n                uniquePositions[lenUniquePositions++] = vy;\n                uniquePositions[lenUniquePositions++] = vz;\n            }\n            indicesLookup[i / 3] = positionsMap[key];\n        }\n        for (i = 0, len = indices.length; i < len; i++) {\n            weldedIndices[i] = indicesLookup[indices[i]];\n            indicesReverseLookup[weldedIndices[i]] = indices[i];\n        }\n    }\n\n    function buildFaces(numIndices, positionsDecodeMatrix) {\n        numFaces = 0;\n        for (let i = 0, len = numIndices; i < len; i += 3) {\n            const ia = ((weldedIndices[i]) * 3);\n            const ib = ((weldedIndices[i + 1]) * 3);\n            const ic = ((weldedIndices[i + 2]) * 3);\n            if (positionsDecodeMatrix) {\n                compa[0] = uniquePositions[ia];\n                compa[1] = uniquePositions[ia + 1];\n                compa[2] = uniquePositions[ia + 2];\n                compb[0] = uniquePositions[ib];\n                compb[1] = uniquePositions[ib + 1];\n                compb[2] = uniquePositions[ib + 2];\n                compc[0] = uniquePositions[ic];\n                compc[1] = uniquePositions[ic + 1];\n                compc[2] = uniquePositions[ic + 2];\n                // Decode\n                math.decompressPosition(compa, positionsDecodeMatrix, a);\n                math.decompressPosition(compb, positionsDecodeMatrix, b);\n                math.decompressPosition(compc, positionsDecodeMatrix, c);\n            } else {\n                a[0] = uniquePositions[ia];\n                a[1] = uniquePositions[ia + 1];\n                a[2] = uniquePositions[ia + 2];\n                b[0] = uniquePositions[ib];\n                b[1] = uniquePositions[ib + 1];\n                b[2] = uniquePositions[ib + 2];\n                c[0] = uniquePositions[ic];\n                c[1] = uniquePositions[ic + 1];\n                c[2] = uniquePositions[ic + 2];\n            }\n            math.subVec3(c, b, cb);\n            math.subVec3(a, b, ab);\n            math.cross3Vec3(cb, ab, cross);\n            math.normalizeVec3(cross, normal);\n            const face = faces[numFaces] || (faces[numFaces] = {normal: math.vec3()});\n            face.normal[0] = normal[0];\n            face.normal[1] = normal[1];\n            face.normal[2] = normal[2];\n            numFaces++;\n        }\n    }\n\n    return function (positions, indices, positionsDecodeMatrix, edgeThreshold) {\n        weldVertices(positions, indices);\n        buildFaces(indices.length, positionsDecodeMatrix);\n        const edgeIndices = [];\n        const thresholdDot = Math.cos(math.DEGTORAD * edgeThreshold);\n        const edges = {};\n        let edge1;\n        let edge2;\n        let index1;\n        let index2;\n        let key;\n        let largeIndex = false;\n        let edge;\n        let normal1;\n        let normal2;\n        let dot;\n        let ia;\n        let ib;\n        for (let i = 0, len = indices.length; i < len; i += 3) {\n            const faceIndex = i / 3;\n            for (let j = 0; j < 3; j++) {\n                edge1 = weldedIndices[i + j];\n                edge2 = weldedIndices[i + ((j + 1) % 3)];\n                index1 = Math.min(edge1, edge2);\n                index2 = Math.max(edge1, edge2);\n                key = index1 + \",\" + index2;\n                if (edges[key] === undefined) {\n                    edges[key] = {\n                        index1: index1,\n                        index2: index2,\n                        face1: faceIndex,\n                        face2: undefined\n                    };\n                } else {\n                    edges[key].face2 = faceIndex;\n                }\n            }\n        }\n        for (key in edges) {\n            edge = edges[key];\n            // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n            if (edge.face2 !== undefined) {\n                normal1 = faces[edge.face1].normal;\n                normal2 = faces[edge.face2].normal;\n                dot = math.dotVec3(normal1, normal2);\n                if (dot > thresholdDot) {\n                    continue;\n                }\n            }\n            ia = indicesReverseLookup[edge.index1];\n            ib = indicesReverseLookup[edge.index2];\n            if (!largeIndex && ia > 65535 || ib > 65535) {\n                largeIndex = true;\n            }\n            edgeIndices.push(ia);\n            edgeIndices.push(ib);\n        }\n        return (largeIndex) ? new Uint32Array(edgeIndices) : new Uint16Array(edgeIndices);\n    };\n})();\n\nexport {buildEdgeIndices};","/**\n * Private geometry compression and decompression utilities.\n */\n\nimport {math} from \"./math.js\";\n\n/**\n * @private\n * @param array\n * @returns {{min: Float32Array, max: Float32Array}}\n */\nfunction getPositionsBounds(array) {\n    const min = new Float32Array(3);\n    const max = new Float32Array(3);\n    let i, j;\n    for (i = 0; i < 3; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 3) {\n        for (j = 0; j < 3; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\nconst createPositionsDecodeMatrix = (function () {\n    const translate = math.mat4();\n    const scale = math.mat4();\n    return function (aabb, positionsDecodeMatrix) {\n        positionsDecodeMatrix = positionsDecodeMatrix || math.mat4();\n        const xmin = aabb[0];\n        const ymin = aabb[1];\n        const zmin = aabb[2];\n        const xwid = aabb[3] - xmin;\n        const ywid = aabb[4] - ymin;\n        const zwid = aabb[5] - zmin;\n        const maxInt = 65535;\n        math.identityMat4(translate);\n        math.translationMat4v(aabb, translate);\n        math.identityMat4(scale);\n        math.scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n        math.mulMat4(translate, scale, positionsDecodeMatrix);\n        return positionsDecodeMatrix;\n    };\n})();\n\n/**\n * @private\n */\nvar compressPositions = (function () { // http://cg.postech.ac.kr/research/mesh_comp_mobile/mesh_comp_mobile_conference.pdf\n    const translate = math.mat4();\n    const scale = math.mat4();\n    return function (array, min, max) {\n        const quantized = new Uint16Array(array.length);\n        var multiplier = new Float32Array([\n            max[0] !== min[0] ? 65535 / (max[0] - min[0]) : 0,\n            max[1] !== min[1] ? 65535 / (max[1] - min[1]) : 0,\n            max[2] !== min[2] ? 65535 / (max[2] - min[2]) : 0\n        ]);\n        let i;\n        for (i = 0; i < array.length; i += 3) {\n            quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n            quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n            quantized[i + 2] = Math.floor((array[i + 2] - min[2]) * multiplier[2]);\n        }\n        math.identityMat4(translate);\n        math.translationMat4v(min, translate);\n        math.identityMat4(scale);\n        math.scalingMat4v([\n            (max[0] - min[0]) / 65535,\n            (max[1] - min[1]) / 65535,\n            (max[2] - min[2]) / 65535\n        ], scale);\n        const decodeMat = math.mulMat4(translate, scale, math.identityMat4());\n        return {\n            quantized: quantized,\n            decodeMatrix: decodeMat\n        };\n    };\n})();\n\nfunction decompressPosition(position, decodeMatrix, dest) {\n    dest[0] = position[0] * decodeMatrix[0] + decodeMatrix[12];\n    dest[1] = position[1] * decodeMatrix[5] + decodeMatrix[13];\n    dest[2] = position[2] * decodeMatrix[10] + decodeMatrix[14];\n    return dest;\n}\n\nfunction decompressAABB(aabb, decodeMatrix, dest=aabb) {\n    dest[0] = aabb[0] * decodeMatrix[0] + decodeMatrix[12];\n    dest[1] = aabb[1] * decodeMatrix[5] + decodeMatrix[13];\n    dest[2] = aabb[2] * decodeMatrix[10] + decodeMatrix[14];\n    dest[3] = aabb[3] * decodeMatrix[0] + decodeMatrix[12];\n    dest[4] = aabb[4] * decodeMatrix[5] + decodeMatrix[13];\n    dest[5] = aabb[5] * decodeMatrix[10] + decodeMatrix[14];\n    return dest;\n}\n\n/**\n * @private\n */\nfunction decompressPositions(positions, decodeMatrix, dest = new Float32Array(positions.length)) {\n    for (let i = 0, len = positions.length; i < len; i += 3) {\n        dest[i + 0] = positions[i + 0] * decodeMatrix[0] + decodeMatrix[12];\n        dest[i + 1] = positions[i + 1] * decodeMatrix[5] + decodeMatrix[13];\n        dest[i + 2] = positions[i + 2] * decodeMatrix[10] + decodeMatrix[14];\n    }\n    return dest;\n}\n\n//--------------- UVs --------------------------------------------------------------------------------------------------\n\n/**\n * @private\n * @param array\n * @returns {{min: Float32Array, max: Float32Array}}\n */\nfunction getUVBounds(array) {\n    const min = new Float32Array(2);\n    const max = new Float32Array(2);\n    let i, j;\n    for (i = 0; i < 2; i++) {\n        min[i] = Number.MAX_VALUE;\n        max[i] = -Number.MAX_VALUE;\n    }\n    for (i = 0; i < array.length; i += 2) {\n        for (j = 0; j < 2; j++) {\n            min[j] = Math.min(min[j], array[i + j]);\n            max[j] = Math.max(max[j], array[i + j]);\n        }\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\n/**\n * @private\n */\nvar compressUVs = (function () {\n    const translate = math.mat3();\n    const scale = math.mat3();\n    return function (array, min, max) {\n        const quantized = new Uint16Array(array.length);\n        const multiplier = new Float32Array([\n            65535 / (max[0] - min[0]),\n            65535 / (max[1] - min[1])\n        ]);\n        let i;\n        for (i = 0; i < array.length; i += 2) {\n            quantized[i + 0] = Math.floor((array[i + 0] - min[0]) * multiplier[0]);\n            quantized[i + 1] = Math.floor((array[i + 1] - min[1]) * multiplier[1]);\n        }\n        math.identityMat3(translate);\n        math.translationMat3v(min, translate);\n        math.identityMat3(scale);\n        math.scalingMat3v([\n            (max[0] - min[0]) / 65535,\n            (max[1] - min[1]) / 65535\n        ], scale);\n        const decodeMat = math.mulMat3(translate, scale, math.identityMat3());\n        return {\n            quantized: quantized,\n            decodeMatrix: decodeMat\n        };\n    };\n})();\n\n\n//--------------- Normals ----------------------------------------------------------------------------------------------\n\n/**\n * @private\n */\nfunction compressNormals(array) { // http://jcgt.org/published/0003/02/01/\n\n    // Note: three elements for each encoded normal, in which the last element in each triplet is redundant.\n    // This is to work around a mysterious WebGL issue where 2-element normals just wouldn't work in the shader :/\n\n    const encoded = new Int8Array(array.length);\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < array.length; i += 3) {\n        // Test various combinations of ceil and floor\n        // to minimize rounding errors\n        best = oct = octEncodeVec3(array, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(array, i, dec);\n        oct = octEncodeVec3(array, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(array, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(array, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(array, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        encoded[i] = best[0];\n        encoded[i + 1] = best[1];\n    }\n    return encoded;\n}\n\n/**\n * @private\n */\nfunction octEncodeVec3(array, i, xfunc, yfunc) { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    return new Int8Array([\n        Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)),\n        Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))\n    ]);\n}\n\n/**\n * Decode an oct-encoded normal\n */\nfunction octDecodeVec2(oct) {\n    let x = oct[0];\n    let y = oct[1];\n    x /= x < 0 ? 127 : 128;\n    y /= y < 0 ? 127 : 128;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    return [\n        x / length,\n        y / length,\n        z / length\n    ];\n}\n\n/**\n * Dot product of a normal in an array against a candidate decoding\n * @private\n */\nfunction dot(array, i, vec3) {\n    return array[i] * vec3[0] + array[i + 1] * vec3[1] + array[i + 2] * vec3[2];\n}\n\n/**\n * @private\n */\nfunction decompressUV(uv, decodeMatrix, dest) {\n    dest[0] = uv[0] * decodeMatrix[0] + decodeMatrix[6];\n    dest[1] = uv[1] * decodeMatrix[4] + decodeMatrix[7];\n}\n\n/**\n * @private\n */\nfunction decompressUVs(uvs, decodeMatrix, dest = new Float32Array(uvs.length)) {\n    for (let i = 0, len = uvs.length; i < len; i += 3) {\n        dest[i + 0] = uvs[i + 0] * decodeMatrix[0] + decodeMatrix[6];\n        dest[i + 1] = uvs[i + 1] * decodeMatrix[4] + decodeMatrix[7];\n    }\n    return dest;\n}\n\n/**\n * @private\n */\nfunction decompressNormal(oct, result) {\n    let x = oct[0];\n    let y = oct[1];\n    x = (2 * x + 1) / 255;\n    y = (2 * y + 1) / 255;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    result[0] = x / length;\n    result[1] = y / length;\n    result[2] = z / length;\n    return result;\n}\n\n/**\n * @private\n */\nfunction decompressNormals(octs, result) {\n    for (let i = 0, j = 0, len = octs.length; i < len; i += 2) {\n        let x = octs[i + 0];\n        let y = octs[i + 1];\n        x = (2 * x + 1) / 255;\n        y = (2 * y + 1) / 255;\n        const z = 1 - Math.abs(x) - Math.abs(y);\n        if (z < 0) {\n            x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n            y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        }\n        const length = Math.sqrt(x * x + y * y + z * z);\n        result[j + 0] = x / length;\n        result[j + 1] = y / length;\n        result[j + 2] = z / length;\n        j += 3;\n    }\n    return result;\n}\n\n/**\n * @private\n */\nconst geometryCompressionUtils = {\n\n    getPositionsBounds: getPositionsBounds,\n    createPositionsDecodeMatrix: createPositionsDecodeMatrix,\n    compressPositions: compressPositions,\n    decompressPositions: decompressPositions,\n    decompressPosition: decompressPosition,\n    decompressAABB: decompressAABB,\n\n    getUVBounds: getUVBounds,\n    compressUVs: compressUVs,\n    decompressUVs: decompressUVs,\n    decompressUV: decompressUV,\n\n    compressNormals: compressNormals,\n    decompressNormals: decompressNormals,\n    decompressNormal: decompressNormal\n};\n\nexport {geometryCompressionUtils};","import {Geometry} from './Geometry.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {ArrayBuf} from '../webgl/ArrayBuf.js';\nimport {math} from '../math/math.js';\nimport {stats} from '../stats.js';\nimport {WEBGL_INFO} from '../webglInfo.js';\nimport {buildEdgeIndices} from '../math/buildEdgeIndices.js';\nimport {geometryCompressionUtils} from '../math/geometryCompressionUtils.js';\n\nconst memoryStats = stats.memory;\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\nconst IndexArrayType = bigIndicesSupported ? Uint32Array : Uint16Array;\nconst tempAABB = math.AABB3();\n\n/**\n * @desc A {@link Geometry} that keeps its geometry data in both browser and GPU memory.\n *\n * ReadableGeometry uses more memory than {@link VBOGeometry}, which only stores its geometry data in GPU memory.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a ReadableGeometry that defines a single triangle, plus a {@link PhongMaterial} with diffuse {@link Texture}:\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_ReadableGeometry)]\n *\n * ````javascript\n * import {Viewer, Mesh, ReadableGeometry, PhongMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *         canvasId: \"myCanvas\"\n *     });\n *\n * const myMesh = new Mesh(viewer.scene, {\n *         geometry: new ReadableGeometry(viewer.scene, {\n *             primitive: \"triangles\",\n *             positions: [0.0, 3, 0.0, -3, -3, 0.0, 3, -3, 0.0],\n *             normals: [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0],\n *             uv: [0.0, 0.0, 0.5, 1.0, 1.0, 0.0],\n *             indices: [0, 1, 2]\n *         }),\n *         material: new PhongMaterial(viewer.scene, {\n *             diffuseMap: new Texture(viewer.scene, {\n *                 src: \"textures/diffuse/uvGrid2.jpg\"\n *             }),\n *             backfaces: true\n *         })\n *     });\n *\n * // Get geometry data from browser memory:\n *\n * const positions = myMesh.geometry.positions; // Flat arrays\n * const normals = myMesh.geometry.normals;\n * const uv = myMesh.geometry.uv;\n * const indices = myMesh.geometry.indices;\n *\n * ````\n */\nclass ReadableGeometry extends Geometry {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"ReadableGeometry\";\n    }\n\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    get isReadableGeometry() {\n        return true;\n    }\n\n    /**\n     *\n     @class ReadableGeometry\n     @module xeokit\n     @submodule geometry\n     @constructor\n     @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     @param {*} [cfg] Configs\n     @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene},\n     generated automatically when omitted.\n     @param {String:Object} [cfg.meta] Optional map of user-defined metadata to attach to this Geometry.\n     @param [cfg.primitive=\"triangles\"] {String} The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n     @param [cfg.positions] {Number[]} Positions array.\n     @param [cfg.normals] {Number[]} Vertex normal vectors array.\n     @param [cfg.uv] {Number[]} UVs array.\n     @param [cfg.colors] {Number[]} Vertex colors.\n     @param [cfg.indices] {Number[]} Indices array.\n     @param [cfg.autoVertexNormals=false] {Boolean} Set true to automatically generate normal vectors from the positions and\n     indices, if those are supplied.\n     @param [cfg.compressGeometry=false] {Boolean} Stores positions, colors, normals and UVs in compressGeometry and oct-encoded formats\n     for reduced memory footprint and GPU bus usage.\n     @param [cfg.edgeThreshold=10] {Number} When a {@link Mesh} renders this Geometry as wireframe,\n     this indicates the threshold angle (in degrees) between the face normals of adjacent triangles below which the edge is discarded.\n     @extends Component\n     * @param owner\n     * @param cfg\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({ // Arrays for emphasis effects are got from xeokit.Geometry friend methods\n            compressGeometry: !!cfg.compressGeometry,\n            primitive: null, // WebGL enum\n            primitiveName: null, // String\n            positions: null,    // Uint16Array when compressGeometry == true, else Float32Array\n            normals: null,      // Uint8Array when compressGeometry == true, else Float32Array\n            colors: null,\n            uv: null,           // Uint8Array when compressGeometry == true, else Float32Array\n            indices: null,\n            positionsDecodeMatrix: null, // Set when compressGeometry == true\n            uvDecodeMatrix: null, // Set when compressGeometry == true\n            positionsBuf: null,\n            normalsBuf: null,\n            colorsbuf: null,\n            uvBuf: null,\n            indicesBuf: null,\n            hash: \"\"\n        });\n\n        this._numTriangles = 0;\n\n        this._edgeThreshold = cfg.edgeThreshold || 10.0;\n\n        // Lazy-generated VBOs\n\n        this._edgeIndicesBuf = null;\n        this._pickTrianglePositionsBuf = null;\n        this._pickTriangleColorsBuf = null;\n\n        // Local-space Boundary3D\n\n        this._aabbDirty = true;\n\n        this._boundingSphere = true;\n        this._aabb = null;\n        this._aabbDirty = true;\n\n        this._obb = null;\n        this._obbDirty = true;\n\n        const state = this._state;\n        const gl = this.scene.canvas.gl;\n\n        // Primitive type\n\n        cfg.primitive = cfg.primitive || \"triangles\";\n        switch (cfg.primitive) {\n            case \"points\":\n                state.primitive = gl.POINTS;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"lines\":\n                state.primitive = gl.LINES;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"line-loop\":\n                state.primitive = gl.LINE_LOOP;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"line-strip\":\n                state.primitive = gl.LINE_STRIP;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"triangles\":\n                state.primitive = gl.TRIANGLES;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"triangle-strip\":\n                state.primitive = gl.TRIANGLE_STRIP;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"triangle-fan\":\n                state.primitive = gl.TRIANGLE_FAN;\n                state.primitiveName = cfg.primitive;\n                break;\n            default:\n                this.error(\"Unsupported value for 'primitive': '\" + cfg.primitive +\n                    \"' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', \" +\n                    \"'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'.\");\n                state.primitive = gl.TRIANGLES;\n                state.primitiveName = cfg.primitive;\n        }\n\n        if (cfg.positions) {\n            if (this._state.compressGeometry) {\n                const bounds = geometryCompressionUtils.getPositionsBounds(cfg.positions);\n                const result = geometryCompressionUtils.compressPositions(cfg.positions, bounds.min, bounds.max);\n                state.positions = result.quantized;\n                state.positionsDecodeMatrix = result.decodeMatrix;\n            } else {\n                state.positions = cfg.positions.constructor === Float32Array ? cfg.positions : new Float32Array(cfg.positions);\n            }\n        }\n        if (cfg.colors) {\n            state.colors = cfg.colors.constructor === Float32Array ? cfg.colors : new Float32Array(cfg.colors);\n        }\n        if (cfg.uv) {\n            if (this._state.compressGeometry) {\n                const bounds = geometryCompressionUtils.getUVBounds(cfg.uv);\n                const result = geometryCompressionUtils.compressUVs(cfg.uv, bounds.min, bounds.max);\n                state.uv = result.quantized;\n                state.uvDecodeMatrix = result.decodeMatrix;\n            } else {\n                state.uv = cfg.uv.constructor === Float32Array ? cfg.uv : new Float32Array(cfg.uv);\n            }\n        }\n        if (cfg.normals) {\n            if (this._state.compressGeometry) {\n                state.normals = geometryCompressionUtils.compressNormals(cfg.normals);\n            } else {\n                state.normals = cfg.normals.constructor === Float32Array ? cfg.normals : new Float32Array(cfg.normals);\n            }\n        }\n        if (cfg.indices) {\n            if (!bigIndicesSupported && cfg.indices.constructor === Uint32Array) {\n                this.error(\"This WebGL implementation does not support Uint32Array\");\n                return;\n            }\n            state.indices = (cfg.indices.constructor === Uint32Array || cfg.indices.constructor === Uint16Array) ? cfg.indices : new IndexArrayType(cfg.indices);\n            if (this._state.primitiveName === \"triangles\") {\n                this._numTriangles = (cfg.indices.length / 3);\n            }\n        }\n\n        this._buildHash();\n\n        memoryStats.meshes++;\n\n        this._buildVBOs();\n    }\n\n    _buildVBOs() {\n        const state = this._state;\n        const gl = this.scene.canvas.gl;\n        if (state.indices) {\n            state.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, state.indices, state.indices.length, 1, gl.STATIC_DRAW);\n            memoryStats.indices += state.indicesBuf.numItems;\n        }\n        if (state.positions) {\n            state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, state.positions, state.positions.length, 3, gl.STATIC_DRAW);\n            memoryStats.positions += state.positionsBuf.numItems;\n        }\n        if (state.normals) {\n            let normalized = state.compressGeometry;\n            state.normalsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, state.normals, state.normals.length, 3, gl.STATIC_DRAW, normalized);\n            memoryStats.normals += state.normalsBuf.numItems;\n        }\n        if (state.colors) {\n            state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, state.colors, state.colors.length, 4, gl.STATIC_DRAW);\n            memoryStats.colors += state.colorsBuf.numItems;\n        }\n        if (state.uv) {\n            state.uvBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, state.uv, state.uv.length, 2, gl.STATIC_DRAW);\n            memoryStats.uvs += state.uvBuf.numItems;\n        }\n    }\n\n    _buildHash() {\n        const state = this._state;\n        const hash = [\"/g\"];\n        hash.push(\"/\" + state.primitive + \";\");\n        if (state.positions) {\n            hash.push(\"p\");\n        }\n        if (state.colors) {\n            hash.push(\"c\");\n        }\n        if (state.normals || state.autoVertexNormals) {\n            hash.push(\"n\");\n        }\n        if (state.uv) {\n            hash.push(\"u\");\n        }\n        if (state.compressGeometry) {\n            hash.push(\"cp\");\n        }\n        hash.push(\";\");\n        state.hash = hash.join(\"\");\n    }\n\n    _getEdgeIndices() {\n        if (!this._edgeIndicesBuf) {\n            this._buildEdgeIndices();\n        }\n        return this._edgeIndicesBuf;\n    }\n\n    _getPickTrianglePositions() {\n        if (!this._pickTrianglePositionsBuf) {\n            this._buildPickTriangleVBOs();\n        }\n        return this._pickTrianglePositionsBuf;\n    }\n\n    _getPickTriangleColors() {\n        if (!this._pickTriangleColorsBuf) {\n            this._buildPickTriangleVBOs();\n        }\n        return this._pickTriangleColorsBuf;\n    }\n\n    _buildEdgeIndices() { // FIXME: Does not adjust indices after other objects are deleted from vertex buffer!!\n        const state = this._state;\n        if (!state.positions || !state.indices) {\n            return;\n        }\n        const gl = this.scene.canvas.gl;\n        const edgeIndices = buildEdgeIndices(state.positions, state.indices, state.positionsDecodeMatrix, this._edgeThreshold);\n        this._edgeIndicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, edgeIndices, edgeIndices.length, 1, gl.STATIC_DRAW);\n        memoryStats.indices += this._edgeIndicesBuf.numItems;\n    }\n\n    _buildPickTriangleVBOs() { // Builds positions and indices arrays that allow each triangle to have a unique color\n        const state = this._state;\n        if (!state.positions || !state.indices) {\n            return;\n        }\n        const gl = this.scene.canvas.gl;\n        const arrays = math.buildPickTriangles(state.positions, state.indices, state.compressGeometry);\n        const positions = arrays.positions;\n        const colors = arrays.colors;\n        this._pickTrianglePositionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, positions.length, 3, gl.STATIC_DRAW);\n        this._pickTriangleColorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, colors, colors.length, 4, gl.STATIC_DRAW, true);\n        memoryStats.positions += this._pickTrianglePositionsBuf.numItems;\n        memoryStats.colors += this._pickTriangleColorsBuf.numItems;\n    }\n\n    _buildPickVertexVBOs() {\n        // var state = this._state;\n        // if (!state.positions || !state.indices) {\n        //     return;\n        // }\n        // var gl = this.scene.canvas.gl;\n        // var arrays = math.buildPickVertices(state.positions, state.indices, state.compressGeometry);\n        // var pickVertexPositions = arrays.positions;\n        // var pickColors = arrays.colors;\n        // this._pickVertexPositionsBuf = new xeokit.renderer.ArrayBuf(gl, gl.ARRAY_BUFFER, pickVertexPositions, pickVertexPositions.length, 3, gl.STATIC_DRAW);\n        // this._pickVertexColorsBuf = new xeokit.renderer.ArrayBuf(gl, gl.ARRAY_BUFFER, pickColors, pickColors.length, 4, gl.STATIC_DRAW, true);\n        // memoryStats.positions += this._pickVertexPositionsBuf.numItems;\n        // memoryStats.colors += this._pickVertexColorsBuf.numItems;\n    }\n\n    _webglContextLost() {\n        if (this._sceneVertexBufs) {\n            this._sceneVertexBufs.webglContextLost();\n        }\n    }\n\n    _webglContextRestored() {\n        if (this._sceneVertexBufs) {\n            this._sceneVertexBufs.webglContextRestored();\n        }\n        this._buildVBOs();\n        this._edgeIndicesBuf = null;\n        this._pickVertexPositionsBuf = null;\n        this._pickTrianglePositionsBuf = null;\n        this._pickTriangleColorsBuf = null;\n        this._pickVertexPositionsBuf = null;\n        this._pickVertexColorsBuf = null;\n    }\n\n    /**\n     * Gets the Geometry's primitive type.\n\n     Valid types are: 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n\n     @property primitive\n     @default \"triangles\"\n     @type {String}\n     */\n    get primitive() {\n        return this._state.primitiveName;\n    }\n\n    /**\n     Indicates if this Geometry is quantized.\n\n     Compression is an internally-performed optimization which stores positions, colors, normals and UVs\n     in quantized and oct-encoded formats for reduced memory footprint and GPU bus usage.\n\n     Quantized geometry may not be updated.\n\n     @property compressGeometry\n     @default false\n     @type {Boolean}\n     @final\n     */\n    get compressGeometry() {\n        return this._state.compressGeometry;\n    }\n\n    /**\n     The Geometry's vertex positions.\n\n     @property positions\n     @default null\n     @type {Number[]}\n     */\n    get positions() {\n        if (!this._state.positions) {\n            return null;\n        }\n        if (!this._state.compressGeometry) {\n            return this._state.positions;\n        }\n        if (!this._decompressedPositions) {\n            this._decompressedPositions = new Float32Array(this._state.positions.length);\n            geometryCompressionUtils.decompressPositions(this._state.positions, this._state.positionsDecodeMatrix, this._decompressedPositions);\n        }\n        return this._decompressedPositions;\n    }\n\n    set positions(newPositions) {\n        const state = this._state;\n        const positions = state.positions;\n        if (!positions) {\n            this.error(\"can't update geometry positions - geometry has no positions\");\n            return;\n        }\n        if (positions.length !== newPositions.length) {\n            this.error(\"can't update geometry positions - new positions are wrong length\");\n            return;\n        }\n        if (this._state.compressGeometry) {\n            const bounds = geometryCompressionUtils.getPositionsBounds(newPositions);\n            const result = geometryCompressionUtils.compressPositions(newPositions, bounds.min, bounds.max);\n            newPositions = result.quantized; // TODO: Copy in-place\n            state.positionsDecodeMatrix = result.decodeMatrix;\n        }\n        positions.set(newPositions);\n        if (state.positionsBuf) {\n            state.positionsBuf.setData(positions);\n        }\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     The Geometry's vertex normals.\n\n     @property normals\n     @default null\n     @type {Number[]}\n     */\n    get normals() {\n        if (!this._state.normals) {\n            return;\n        }\n        if (!this._state.compressGeometry) {\n            return this._state.normals;\n        }\n        if (!this._decompressedNormals) {\n            const lenCompressed = this._state.normals.length;\n            const lenDecompressed = lenCompressed + (lenCompressed / 2); // 2 -> 3\n            this._decompressedNormals = new Float32Array(lenDecompressed);\n            geometryCompressionUtils.decompressNormals(this._state.normals, this._decompressedNormals);\n        }\n        return this._decompressedNormals;\n    }\n\n    set normals(newNormals) {\n        if (this._state.compressGeometry) {\n            this.error(\"can't update geometry normals - quantized geometry is immutable\"); // But will be eventually\n            return;\n        }\n        const state = this._state;\n        const normals = state.normals;\n        if (!normals) {\n            this.error(\"can't update geometry normals - geometry has no normals\");\n            return;\n        }\n        if (normals.length !== newNormals.length) {\n            this.error(\"can't update geometry normals - new normals are wrong length\");\n            return;\n        }\n        normals.set(newNormals);\n        if (state.normalsBuf) {\n            state.normalsBuf.setData(normals);\n        }\n        this.glRedraw();\n    }\n\n\n    /**\n     The Geometry's UV coordinates.\n\n     @property uv\n     @default null\n     @type {Number[]}\n     */\n    get uv() {\n        if (!this._state.uv) {\n            return null;\n        }\n        if (!this._state.compressGeometry) {\n            return this._state.uv;\n        }\n        if (!this._decompressedUV) {\n            this._decompressedUV = new Float32Array(this._state.uv.length);\n            geometryCompressionUtils.decompressUVs(this._state.uv, this._state.uvDecodeMatrix, this._decompressedUV);\n        }\n        return this._decompressedUV;\n    }\n\n    set uv(newUV) {\n        if (this._state.compressGeometry) {\n            this.error(\"can't update geometry UVs - quantized geometry is immutable\"); // But will be eventually\n            return;\n        }\n        const state = this._state;\n        const uv = state.uv;\n        if (!uv) {\n            this.error(\"can't update geometry UVs - geometry has no UVs\");\n            return;\n        }\n        if (uv.length !== newUV.length) {\n            this.error(\"can't update geometry UVs - new UVs are wrong length\");\n            return;\n        }\n        uv.set(newUV);\n        if (state.uvBuf) {\n            state.uvBuf.setData(uv);\n        }\n        this.glRedraw();\n    }\n\n    /**\n     The Geometry's vertex colors.\n\n     @property colors\n     @default null\n     @type {Number[]}\n     */\n    get colors() {\n        return this._state.colors;\n    }\n\n    set colors(newColors) {\n        if (this._state.compressGeometry) {\n            this.error(\"can't update geometry colors - quantized geometry is immutable\"); // But will be eventually\n            return;\n        }\n        const state = this._state;\n        const colors = state.colors;\n        if (!colors) {\n            this.error(\"can't update geometry colors - geometry has no colors\");\n            return;\n        }\n        if (colors.length !== newColors.length) {\n            this.error(\"can't update geometry colors - new colors are wrong length\");\n            return;\n        }\n        colors.set(newColors);\n        if (state.colorsBuf) {\n            state.colorsBuf.setData(colors);\n        }\n        this.glRedraw();\n    }\n\n    /**\n     The Geometry's indices.\n\n     If ````xeokit.WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"]```` is true, then this can be\n     a ````Uint32Array````, otherwise it needs to be a ````Uint16Array````.\n\n     @property indices\n     @default null\n     @type Uint16Array | Uint32Array\n     @final\n     */\n    get indices() {\n        return this._state.indices;\n    }\n\n    /**\n     * Local-space axis-aligned 3D boundary (AABB) of this geometry.\n     *\n     * The AABB is represented by a six-element Float64Array containing the min/max extents of the\n     * axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * @property aabb\n     * @final\n     * @type {Number[]}\n     */\n    get aabb() {\n        if (this._aabbDirty) {\n            if (!this._aabb) {\n                this._aabb = math.AABB3();\n            }\n            math.positions3ToAABB3(this._state.positions, this._aabb, this._state.positionsDecodeMatrix);\n            this._aabbDirty = false;\n        }\n        return this._aabb;\n    }\n\n    /**\n     * Local-space oriented 3D boundary (OBB) of this geometry.\n     *\n     * The OBB is represented by a 32-element Float64Array containing the eight vertices of the box,\n     * where each vertex is a homogeneous coordinate having [x,y,z,w] elements.\n     *\n     * @property obb\n     * @final\n     * @type {Number[]}\n     */\n    get obb() {\n        if (this._obbDirty) {\n            if (!this._obb) {\n                this._obb = math.OBB3();\n            }\n            math.positions3ToAABB3(this._state.positions, tempAABB, this._state.positionsDecodeMatrix);\n            math.AABB3ToOBB3(tempAABB, this._obb);\n            this._obbDirty = false;\n        }\n        return this._obb;\n    }\n\n    /**\n     * Approximate number of triangles in this ReadableGeometry.\n     *\n     * Will be zero if {@link ReadableGeometry#primitive} is not 'triangles', 'triangle-strip' or 'triangle-fan'.\n     *\n     * @type {Number}\n     */\n    get numTriangles() {\n        return this._numTriangles;\n    }\n\n    _setAABBDirty() {\n        if (this._aabbDirty) {\n            return;\n        }\n        this._aabbDirty = true;\n        this._aabbDirty = true;\n        this._obbDirty = true;\n    }\n\n    _getState() {\n        return this._state;\n    }\n\n    /**\n     * Destroys this ReadableGeometry\n     */\n    destroy() {\n        super.destroy();\n        const state = this._state;\n        if (state.indicesBuf) {\n            state.indicesBuf.destroy();\n        }\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n        }\n        if (state.normalsBuf) {\n            state.normalsBuf.destroy();\n        }\n        if (state.uvBuf) {\n            state.uvBuf.destroy();\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n        }\n        if (this._edgeIndicesBuf) {\n            this._edgeIndicesBuf.destroy();\n        }\n        if (this._pickTrianglePositionsBuf) {\n            this._pickTrianglePositionsBuf.destroy();\n        }\n        if (this._pickTriangleColorsBuf) {\n            this._pickTriangleColorsBuf.destroy();\n        }\n        if (this._pickVertexPositionsBuf) {\n            this._pickVertexPositionsBuf.destroy();\n        }\n        if (this._pickVertexColorsBuf) {\n            this._pickVertexColorsBuf.destroy();\n        }\n        state.destroy();\n        memoryStats.meshes--;\n    }\n}\n\n\nexport {ReadableGeometry};","/**\n * @desc A **Material** defines the surface appearance of attached {@link Mesh}es.\n *\n * Material is the base class for:\n *\n * * {@link MetallicMaterial} - physically-based material for metallic surfaces. Use this one for things made of metal.\n * * {@link SpecularMaterial} - physically-based material for non-metallic (dielectric) surfaces. Use this one for insulators, such as ceramics, plastics, wood etc.\n * * {@link PhongMaterial} - material for classic Blinn-Phong shading. This is less demanding of graphics hardware than the physically-based materials.\n * * {@link LambertMaterial} - material for fast, flat-shaded CAD rendering without textures. Use this for navigating huge CAD or BIM models interactively. This material gives the best rendering performance and uses the least memory.\n * * {@link EmphasisMaterial} - defines the appearance of Meshes when \"xrayed\" or \"highlighted\".\n * * {@link EdgeMaterial} - defines the appearance of Meshes when edges are emphasized.\n *\n * A {@link Scene} is allowed to contain a mixture of these material types.\n *\n */\nimport {Component} from '../Component.js';\nimport {stats} from '../stats.js';\n\nclass Material extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Material\";\n    }\n\n    constructor(owner, cfg={}) {\n        super(owner, cfg);\n        stats.memory.materials++;\n    }\n\n    destroy() {\n        super.destroy();\n        stats.memory.materials--;\n    }\n}\n\nexport {Material};\n","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {math} from '../math/math.js';\n\nconst alphaModes = {\"opaque\": 0, \"mask\": 1, \"blend\": 2};\nconst alphaModeNames = [\"opaque\", \"mask\", \"blend\"];\n\n/**\n * @desc Configures the normal rendered appearance of {@link Mesh}es using the non-physically-correct Blinn-Phong shading model.\n *\n * * Useful for non-realistic objects like gizmos.\n * * {@link SpecularMaterial} is best for insulators, such as wood, ceramics and plastic.\n * * {@link MetallicMaterial} is best for conductive materials, such as metal.\n * * {@link LambertMaterial} is appropriate for high-detail models that need to render as efficiently as possible.\n *\n * ## Usage\n *\n * In the example below, we'll create a {@link Mesh} with a PhongMaterial with a diffuse {@link Texture} and a specular {@link Fresnel}, using a {@link buildTorusGeometry} to create the {@link Geometry}.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#materials_PhongMaterial)]\n *\n *  ```` javascript\n * import {Viewer, Mesh, buildTorusGeometry,\n *     ReadableGeometry, PhongMaterial, Texture, Fresnel} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *        canvasId: \"myCanvas\"\n *    });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildTorusGeometry({\n *          center: [0, 0, 0],\n *          radius: 1.5,\n *          tube: 0.5,\n *          radialSegments: 32,\n *          tubeSegments: 24,\n *          arc: Math.PI * 2.0\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          ambient: [0.9, 0.3, 0.9],\n *          shininess: 30,\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          }),\n *          specularFresnel: new Fresnel(viewer.scene, {\n *              leftColor: [1.0, 1.0, 1.0],\n *              rightColor: [0.0, 0.0, 0.0],\n *              power: 4\n *          })\n *     })\n * });\n * ````\n *\n * ## PhongMaterial Properties\n *\n *  The following table summarizes PhongMaterial properties:\n *\n * | Property | Type | Range | Default Value | Space | Description |\n * |:--------:|:----:|:-----:|:-------------:|:-----:|:-----------:|\n * | {@link PhongMaterial#ambient} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the ambient light reflected by the material. |\n * | {@link PhongMaterial#diffuse} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the diffuse light reflected by the material. |\n * | {@link PhongMaterial#specular} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the specular light reflected by the material. |\n * | {@link PhongMaterial#emissive} | Array | [0, 1] for all components | [0,0,0] | linear | The RGB components of the light emitted by the material. |\n * | {@link PhongMaterial#alpha} | Number | [0, 1] | 1 | linear | The transparency of the material surface (0 fully transparent, 1 fully opaque). |\n * | {@link PhongMaterial#shininess} | Number | [0, 128] | 80 | linear | Determines the size and sharpness of specular highlights. |\n * | {@link PhongMaterial#reflectivity} | Number | [0, 1] | 1 | linear | Determines the amount of reflectivity. |\n * | {@link PhongMaterial#diffuseMap} | {@link Texture} |  | null | sRGB | Texture RGB components multiplying by {@link PhongMaterial#diffuse}. If the fourth component (A) is present, it multiplies by {@link PhongMaterial#alpha}. |\n * | {@link PhongMaterial#specularMap} | {@link Texture} |  | null | sRGB | Texture RGB components multiplying by {@link PhongMaterial#specular}. If the fourth component (A) is present, it multiplies by {@link PhongMaterial#alpha}. |\n * | {@link PhongMaterial#emissiveMap} | {@link Texture} |  | null | linear | Texture with RGB components multiplying by {@link PhongMaterial#emissive}. |\n * | {@link PhongMaterial#alphaMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link PhongMaterial#alpha}. |\n * | {@link PhongMaterial#occlusionMap} | {@link Texture} |  | null | linear | Ambient occlusion texture multiplying by {@link PhongMaterial#ambient}, {@link PhongMaterial#diffuse} and {@link PhongMaterial#specular}. |\n * | {@link PhongMaterial#normalMap} | {@link Texture} |  | null | linear | Tangent-space normal map. |\n * | {@link PhongMaterial#diffuseFresnel} | {@link Fresnel} |  | null |  | Fresnel term applied to {@link PhongMaterial#diffuse}. |\n * | {@link PhongMaterial#specularFresnel} | {@link Fresnel} |  | null |  | Fresnel term applied to {@link PhongMaterial#specular}. |\n * | {@link PhongMaterial#emissiveFresnel} | {@link Fresnel} |  | null |  | Fresnel term applied to {@link PhongMaterial#emissive}. |\n * | {@link PhongMaterial#reflectivityFresnel} | {@link Fresnel} |  | null |  | Fresnel term applied to {@link PhongMaterial#reflectivity}. |\n * | {@link PhongMaterial#alphaFresnel} | {@link Fresnel} |  | null |  | Fresnel term applied to {@link PhongMaterial#alpha}. |\n * | {@link PhongMaterial#lineWidth} | Number | [0..100] | 1 |  | Line width in pixels. |\n * | {@link PhongMaterial#pointSize} | Number | [0..100] | 1 |  | Point size in pixels. |\n * | {@link PhongMaterial#alphaMode} | String | \"opaque\", \"blend\", \"mask\" | \"blend\" |  | Alpha blend mode. |\n * | {@link PhongMaterial#alphaCutoff} | Number | [0..1] | 0.5 |  | Alpha cutoff value. |\n * | {@link PhongMaterial#backfaces} | Boolean |  | false |  | Whether to render geometry backfaces. |\n * | {@link PhongMaterial#frontface} | String | \"ccw\", \"cw\" | \"ccw\" |  | The winding order for geometry frontfaces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise. |\n */\nclass PhongMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"PhongMaterial\";\n    }\n\n    /**\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] The PhongMaterial configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number[]} [cfg.ambient=[1.0, 1.0, 1.0 ]]  PhongMaterial ambient color.\n     * @param {Number[]} [cfg.diffuse=[ 1.0, 1.0, 1.0 ]] PhongMaterial diffuse color.\n     * @param {Number[]} [cfg.specular=[ 1.0, 1.0, 1.0 ]]  PhongMaterial specular color.\n     * @param {Number[]} [cfg.emissive=[ 0.0, 0.0, 0.0 ]] PhongMaterial emissive color.\n     * @param {Number} [cfg.alpha=1] Scalar in range 0-1 that controls alpha, where 0 is completely transparent and 1 is completely opaque.\n     * @param {Number} [cfg.shininess=80] Scalar in range 0-128 that determines the size and sharpness of specular highlights.\n     * @param {Number} [cfg.reflectivity=1] Scalar in range 0-1 that controls how much {@link ReflectionMap} is reflected.\n     * @param {Number} [cfg.lineWidth=1] Scalar that controls the width of lines.\n     * @param {Number} [cfg.pointSize=1] Scalar that controls the size of points.\n     * @param {Texture} [cfg.ambientMap=null] A ambient map {@link Texture}, which will multiply by the diffuse property. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.diffuseMap=null] A diffuse map {@link Texture}, which will override the effect of the diffuse property. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.specularMap=null] A specular map {@link Texture}, which will override the effect of the specular property. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.emissiveMap=undefined] An emissive map {@link Texture}, which will override the effect of the emissive property. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.normalMap=undefined] A normal map {@link Texture}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.alphaMap=undefined] An alpha map {@link Texture}, which will override the effect of the alpha property. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.reflectivityMap=undefined] A reflectivity control map {@link Texture}, which will override the effect of the reflectivity property. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Texture} [cfg.occlusionMap=null] An occlusion map {@link Texture}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Fresnel} [cfg.diffuseFresnel=undefined] A diffuse {@link Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Fresnel} [cfg.specularFresnel=undefined] A specular {@link Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Fresnel} [cfg.emissiveFresnel=undefined] An emissive {@link Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Fresnel} [cfg.alphaFresnel=undefined] An alpha {@link Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {Fresnel} [cfg.reflectivityFresnel=undefined] A reflectivity {@link Fresnel\"}}Fresnel{{/crossLink}}. Must be within the same {@link Scene} as this PhongMaterial.\n     * @param {String} [cfg.alphaMode=\"opaque\"] The alpha blend mode - accepted values are \"opaque\", \"blend\" and \"mask\". See the {@link PhongMaterial#alphaMode} property for more info.\n     * @param {Number} [cfg.alphaCutoff=0.5] The alpha cutoff value. See the {@link PhongMaterial#alphaCutoff} property for more info.\n     * @param {Boolean} [cfg.backfaces=false] Whether to render geometry backfaces.\n     * @param {Boolean} [cfg.frontface=\"ccw\"] The winding order for geometry front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"PhongMaterial\",\n            ambient: math.vec3([1.0, 1.0, 1.0]),\n            diffuse: math.vec3([1.0, 1.0, 1.0]),\n            specular: math.vec3([1.0, 1.0, 1.0]),\n            emissive: math.vec3([0.0, 0.0, 0.0]),\n            alpha: null,\n            shininess: null,\n            reflectivity: null,\n            alphaMode: null,\n            alphaCutoff: null,\n            lineWidth: null,\n            pointSize: null,\n            backfaces: null,\n            frontface: null, // Boolean for speed; true == \"ccw\", false == \"cw\"\n            hash: null\n        });\n\n        this.ambient = cfg.ambient;\n        this.diffuse = cfg.diffuse;\n        this.specular = cfg.specular;\n        this.emissive = cfg.emissive;\n        this.alpha = cfg.alpha;\n        this.shininess = cfg.shininess;\n        this.reflectivity = cfg.reflectivity;\n        this.lineWidth = cfg.lineWidth;\n        this.pointSize = cfg.pointSize;\n\n        if (cfg.ambientMap) {\n            this._ambientMap = this._checkComponent(\"Texture\", cfg.ambientMap);\n        }\n        if (cfg.diffuseMap) {\n            this._diffuseMap = this._checkComponent(\"Texture\", cfg.diffuseMap);\n        }\n        if (cfg.specularMap) {\n            this._specularMap = this._checkComponent(\"Texture\", cfg.specularMap);\n        }\n        if (cfg.emissiveMap) {\n            this._emissiveMap = this._checkComponent(\"Texture\", cfg.emissiveMap);\n        }\n        if (cfg.alphaMap) {\n            this._alphaMap = this._checkComponent(\"Texture\", cfg.alphaMap);\n        }\n        if (cfg.reflectivityMap) {\n            this._reflectivityMap = this._checkComponent(\"Texture\", cfg.reflectivityMap);\n        }\n        if (cfg.normalMap) {\n            this._normalMap = this._checkComponent(\"Texture\", cfg.normalMap);\n        }\n        if (cfg.occlusionMap) {\n            this._occlusionMap = this._checkComponent(\"Texture\", cfg.occlusionMap);\n        }\n        if (cfg.diffuseFresnel) {\n            this._diffuseFresnel = this._checkComponent(\"Fresnel\", cfg.diffuseFresnel);\n        }\n        if (cfg.specularFresnel) {\n            this._specularFresnel = this._checkComponent(\"Fresnel\", cfg.specularFresnel);\n        }\n        if (cfg.emissiveFresnel) {\n            this._emissiveFresnel = this._checkComponent(\"Fresnel\", cfg.emissiveFresnel);\n        }\n        if (cfg.alphaFresnel) {\n            this._alphaFresnel = this._checkComponent(\"Fresnel\", cfg.alphaFresnel);\n        }\n        if (cfg.reflectivityFresnel) {\n            this._reflectivityFresnel = this._checkComponent(\"Fresnel\", cfg.reflectivityFresnel);\n        }\n\n        this.alphaMode = cfg.alphaMode;\n        this.alphaCutoff = cfg.alphaCutoff;\n        this.backfaces = cfg.backfaces;\n        this.frontface = cfg.frontface;\n\n        this._makeHash();\n    }\n\n    _makeHash() {\n        const state = this._state;\n        const hash = [\"/p\"]; // 'P' for Phong\n        if (this._normalMap) {\n            hash.push(\"/nm\");\n            if (this._normalMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._ambientMap) {\n            hash.push(\"/am\");\n            if (this._ambientMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n            hash.push(\"/\" + this._ambientMap.encoding);\n        }\n        if (this._diffuseMap) {\n            hash.push(\"/dm\");\n            if (this._diffuseMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n            hash.push(\"/\" + this._diffuseMap.encoding);\n        }\n        if (this._specularMap) {\n            hash.push(\"/sm\");\n            if (this._specularMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._emissiveMap) {\n            hash.push(\"/em\");\n            if (this._emissiveMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n            hash.push(\"/\" + this._emissiveMap.encoding);\n        }\n        if (this._alphaMap) {\n            hash.push(\"/opm\");\n            if (this._alphaMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._reflectivityMap) {\n            hash.push(\"/rm\");\n            if (this._reflectivityMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._occlusionMap) {\n            hash.push(\"/ocm\");\n            if (this._occlusionMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._diffuseFresnel) {\n            hash.push(\"/df\");\n        }\n        if (this._specularFresnel) {\n            hash.push(\"/sf\");\n        }\n        if (this._emissiveFresnel) {\n            hash.push(\"/ef\");\n        }\n        if (this._alphaFresnel) {\n            hash.push(\"/of\");\n        }\n        if (this._reflectivityFresnel) {\n            hash.push(\"/rf\");\n        }\n        hash.push(\";\");\n        state.hash = hash.join(\"\");\n    }\n\n    /**\n     * Sets the PhongMaterial's ambient color.\n     *\n     * Default value is ````[0.3, 0.3, 0.3]````.\n     *\n     * @type {Number[]}\n     */\n    set ambient(value) {\n        let ambient = this._state.ambient;\n        if (!ambient) {\n            ambient = this._state.ambient = new Float32Array(3);\n        } else if (value && ambient[0] === value[0] && ambient[1] === value[1] && ambient[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            ambient[0] = value[0];\n            ambient[1] = value[1];\n            ambient[2] = value[2];\n        } else {\n            ambient[0] = .2;\n            ambient[1] = .2;\n            ambient[2] = .2;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial's ambient color.\n     *\n     * Default value is ````[0.3, 0.3, 0.3]````.\n     *\n     * @type {Number[]}\n     */\n    get ambient() {\n        return this._state.ambient;\n    }\n\n    /**\n     * Sets the PhongMaterial's diffuse color.\n     *\n     * Multiplies by {@link PhongMaterial#diffuseMap}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @type {Number[]}\n     */\n    set diffuse(value) {\n        let diffuse = this._state.diffuse;\n        if (!diffuse) {\n            diffuse = this._state.diffuse = new Float32Array(3);\n        } else if (value && diffuse[0] === value[0] && diffuse[1] === value[1] && diffuse[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            diffuse[0] = value[0];\n            diffuse[1] = value[1];\n            diffuse[2] = value[2];\n        } else {\n            diffuse[0] = 1;\n            diffuse[1] = 1;\n            diffuse[2] = 1;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Sets the PhongMaterial's diffuse color.\n     *\n     * Multiplies by {@link PhongMaterial#diffuseMap}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @type {Number[]}\n     */\n    get diffuse() {\n        return this._state.diffuse;\n    }\n\n    /**\n     * Sets the PhongMaterial's specular color.\n     *\n     * Multiplies by {@link PhongMaterial#specularMap}.\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     * @type {Number[]}\n     */\n    set specular(value) {\n        let specular = this._state.specular;\n        if (!specular) {\n            specular = this._state.specular = new Float32Array(3);\n        } else if (value && specular[0] === value[0] && specular[1] === value[1] && specular[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            specular[0] = value[0];\n            specular[1] = value[1];\n            specular[2] = value[2];\n        } else {\n            specular[0] = 1;\n            specular[1] = 1;\n            specular[2] = 1;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial's specular color.\n     *\n     * Multiplies by {@link PhongMaterial#specularMap}.\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     * @type {Number[]}\n     */\n    get specular() {\n        return this._state.specular;\n    }\n\n    /**\n     * Sets the PhongMaterial's emissive color.\n     *\n     * Multiplies by {@link PhongMaterial#emissiveMap}.\n     *\n     * Default value is ````[0.0, 0.0, 0.0]````.\n     * @type {Number[]}\n     */\n    set emissive(value) {\n        let emissive = this._state.emissive;\n        if (!emissive) {\n            emissive = this._state.emissive = new Float32Array(3);\n        } else if (value && emissive[0] === value[0] && emissive[1] === value[1] && emissive[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            emissive[0] = value[0];\n            emissive[1] = value[1];\n            emissive[2] = value[2];\n        } else {\n            emissive[0] = 0;\n            emissive[1] = 0;\n            emissive[2] = 0;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial's emissive color.\n     *\n     * Multiplies by {@link PhongMaterial#emissiveMap}.\n     *\n     * Default value is ````[0.0, 0.0, 0.0]````.\n     * @type {Number[]}\n     */\n    get emissive() {\n        return this._state.emissive;\n    }\n\n    /**\n     * Sets the PhongMaterial alpha.\n     *\n     * This is a factor in the range [0..1] indicating how transparent the PhongMaterial is.\n     *\n     * A value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n     *\n     * Multiplies by {@link PhongMaterial#alphaMap}.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set alpha(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.alpha === value) {\n            return;\n        }\n        this._state.alpha = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial alpha.\n     *\n     * This is a factor in the range [0..1] indicating how transparent the PhongMaterial is.\n     *\n     * A value of 0.0 indicates fully transparent, 1.0 is fully opaque.\n     *\n     * Multiplies by {@link PhongMaterial#alphaMap}.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    get alpha() {\n        return this._state.alpha;\n    }\n\n    /**\n     * Sets the PhongMaterial shininess.\n     *\n     * This is a factor in range [0..128] that determines the size and sharpness of the specular highlights create by this PhongMaterial.\n     *\n     * Larger values produce smaller, sharper highlights. A value of 0.0 gives very large highlights that are almost never\n     * desirable. Try values close to 10 for a larger, fuzzier highlight and values of 100 or more for a small, sharp\n     * highlight.\n     *\n     * Default value is ```` 80.0````.\n     *\n     * @type {Number}\n     */\n    set shininess(value) {\n        this._state.shininess = value !== undefined ? value : 80;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial shininess.\n     *\n     * This is a factor in range [0..128] that determines the size and sharpness of the specular highlights create by this PhongMaterial.\n     *\n     * Larger values produce smaller, sharper highlights. A value of 0.0 gives very large highlights that are almost never\n     * desirable. Try values close to 10 for a larger, fuzzier highlight and values of 100 or more for a small, sharp\n     * highlight.\n     *\n     * Default value is ```` 80.0````.\n     *\n     * @type {Number}\n     */\n    get shininess() {\n        return this._state.shininess;\n    }\n\n    /**\n     * Sets the PhongMaterial's line width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set lineWidth(value) {\n        this._state.lineWidth = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial's line width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    get lineWidth() {\n        return this._state.lineWidth;\n    }\n\n    /**\n     * Sets the PhongMaterial's point size.\n     *\n     * Default value is 1.0.\n     *\n     * @type {Number}\n     */\n    set pointSize(value) {\n        this._state.pointSize = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial's point size.\n     *\n     * Default value is 1.0.\n     *\n     * @type {Number}\n     */\n    get pointSize() {\n        return this._state.pointSize;\n    }\n\n    /**\n     * Sets how much {@link ReflectionMap} is reflected by this PhongMaterial.\n     *\n     * This is a scalar in range ````[0-1]````. Default value is ````1.0````.\n     *\n     * The surface will be non-reflective when this is ````0````, and completely mirror-like when it is ````1.0````.\n     *\n     * Multiplies by {@link PhongMaterial#reflectivityMap}.\n     *\n     * @type {Number}\n     */\n    set reflectivity(value) {\n        this._state.reflectivity = value !== undefined ? value : 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets how much {@link ReflectionMap} is reflected by this PhongMaterial.\n     *\n     * This is a scalar in range ````[0-1]````. Default value is ````1.0````.\n     *\n     * The surface will be non-reflective when this is ````0````, and completely mirror-like when it is ````1.0````.\n     *\n     * Multiplies by {@link PhongMaterial#reflectivityMap}.\n     *\n     * @type {Number}\n     */\n    get reflectivity() {\n        return this._state.reflectivity;\n    }\n\n    /**\n     * Gets the PhongMaterials's normal map {@link Texture}.\n     *\n     * @type {Texture}\n     */\n    get normalMap() {\n        return this._normalMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's ambient {@link Texture}.\n     *\n     * Multiplies by {@link PhongMaterial#ambient}.\n     *\n     * @type {Texture}\n     */\n    get ambientMap() {\n        return this._ambientMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's diffuse {@link Texture}.\n     *\n     * Multiplies by {@link PhongMaterial#diffuse}.\n     *\n     * @type {Texture}\n     */\n    get diffuseMap() {\n        return this._diffuseMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's specular {@link Texture}.\n     *\n     * Multiplies by {@link PhongMaterial#specular}.\n     *\n     * @type {Texture}\n     */\n    get specularMap() {\n        return this._specularMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's emissive {@link Texture}.\n     *\n     * Multiplies by {@link PhongMaterial#emissive}.\n     *\n     * @type {Texture}\n     */\n    get emissiveMap() {\n        return this._emissiveMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's alpha {@link Texture}.\n     *\n     * Multiplies by {@link PhongMaterial#alpha}.\n     *\n     * @type {Texture}\n     */\n    get alphaMap() {\n        return this._alphaMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's reflectivity {@link Texture}.\n     *\n     * Multiplies by {@link PhongMaterial#reflectivity}.\n     *\n     * @type {Texture}\n     */\n    get reflectivityMap() {\n        return this._reflectivityMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's ambient occlusion {@link Texture}.\n     *\n     * @type {Texture}\n     */\n    get occlusionMap() {\n        return this._occlusionMap;\n    }\n\n    /**\n     * Gets the PhongMaterials's diffuse {@link Fresnel}.\n     *\n     * Applies to {@link PhongMaterial#diffuse}.\n     *\n     * @type {Fresnel}\n     */\n    get diffuseFresnel() {\n        return this._diffuseFresnel;\n    }\n\n    /**\n     * Gets the PhongMaterials's specular {@link Fresnel}.\n     *\n     * Applies to {@link PhongMaterial#specular}.\n     *\n     * @type {Fresnel}\n     */\n    get specularFresnel() {\n        return this._specularFresnel;\n    }\n\n    /**\n     * Gets the PhongMaterials's emissive {@link Fresnel}.\n     *\n     * Applies to {@link PhongMaterial#emissive}.\n     *\n     * @type {Fresnel}\n     */\n    get emissiveFresnel() {\n        return this._emissiveFresnel;\n    }\n\n    /**\n     * Gets the PhongMaterials's alpha {@link Fresnel}.\n     *\n     * Applies to {@link PhongMaterial#alpha}.\n     *\n     * @type {Fresnel}\n     */\n    get alphaFresnel() {\n        return this._alphaFresnel;\n    }\n\n    /**\n     * Gets the PhongMaterials's reflectivity {@link Fresnel}.\n     *\n     * Applies to {@link PhongMaterial#reflectivity}.\n     *\n     * @type {Fresnel}\n     */\n    get reflectivityFresnel() {\n        return this._reflectivityFresnel;\n    }\n\n    /**\n     * Sets the PhongMaterial's alpha rendering mode.\n     *\n     * This governs how alpha is treated. Alpha is the combined result of {@link PhongMaterial#alpha} and {@link PhongMaterial#alphaMap}.\n     *\n     * Supported values are:\n     *\n     * * \"opaque\" - The alpha value is ignored and the rendered output is fully opaque (default).\n     * * \"mask\" - The rendered output is either fully opaque or fully transparent depending on the alpha value and the specified alpha cutoff value.\n     * * \"blend\" - The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator).\n     *\n     *@type {String}\n     */\n    set alphaMode(alphaMode) {\n        alphaMode = alphaMode || \"opaque\";\n        let value = alphaModes[alphaMode];\n        if (value === undefined) {\n            this.error(\"Unsupported value for 'alphaMode': \" + alphaMode + \" - defaulting to 'opaque'\");\n            value = \"opaque\";\n        }\n        if (this._state.alphaMode === value) {\n            return;\n        }\n        this._state.alphaMode = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the PhongMaterial's alpha rendering mode.\n     *\n     *@type {String}\n     */\n    get alphaMode() {\n        return alphaModeNames[this._state.alphaMode];\n    }\n\n    /**\n     * Sets the PhongMaterial's alpha cutoff value.\n     *\n     * This specifies the cutoff threshold when {@link PhongMaterial#alphaMode} equals \"mask\". If the alpha is greater than or equal to this value then it is rendered as fully\n     * opaque, otherwise, it is rendered as fully transparent. A value greater than 1.0 will render the entire material as fully transparent. This value is ignored for other modes.\n     *\n     * Alpha is the combined result of {@link PhongMaterial#alpha} and {@link PhongMaterial#alphaMap}.\n     *\n     * Default value is ````0.5````.\n     *\n     * @type {Number}\n     */\n    set alphaCutoff(alphaCutoff) {\n        if (alphaCutoff === null || alphaCutoff === undefined) {\n            alphaCutoff = 0.5;\n        }\n        if (this._state.alphaCutoff === alphaCutoff) {\n            return;\n        }\n        this._state.alphaCutoff = alphaCutoff;\n    }\n\n    /**\n     * Gets the PhongMaterial's alpha cutoff value.\n     *\n     * @type {Number}\n     */\n    get alphaCutoff() {\n        return this._state.alphaCutoff;\n    }\n\n    /**\n     * Sets whether backfaces are visible on attached {@link Mesh}es.\n     *\n     * The backfaces will belong to {@link Geometry} compoents that are also attached to the {@link Mesh}es.\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set backfaces(value) {\n        value = !!value;\n        if (this._state.backfaces === value) {\n            return;\n        }\n        this._state.backfaces = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether backfaces are visible on attached {@link Mesh}es.\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get backfaces() {\n        return this._state.backfaces;\n    }\n\n    /**\n     * Sets the winding direction of geometry front faces.\n     *\n     * Default is ````\"ccw\"````.\n     * @type {String}\n     */\n    set frontface(value) {\n        value = value !== \"cw\";\n        if (this._state.frontface === value) {\n            return;\n        }\n        this._state.frontface = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the winding direction of front faces on attached {@link Mesh}es.\n     *\n     * Default is ````\"ccw\"````.\n     * @type {String}\n     */\n    get frontface() {\n        return this._state.frontface ? \"ccw\" : \"cw\";\n    }\n\n    /**\n     * Destroys this PhongMaterial.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {PhongMaterial};","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\nconst PRESETS = {\n    \"default\": {\n        fill: true,\n        fillColor: [0.4, 0.4, 0.4],\n        fillAlpha: 0.2,\n        edges: true,\n        edgeColor: [0.2, 0.2, 0.2],\n        edgeAlpha: 0.5,\n        edgeWidth: 1\n    },\n    \"defaultWhiteBG\": {\n        fill: true,\n        fillColor: [1, 1, 1],\n        fillAlpha: 0.6,\n        edgeColor: [0.2, 0.2, 0.2],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"defaultLightBG\": {\n        fill: true,\n        fillColor: [0.4, 0.4, 0.4],\n        fillAlpha: 0.2,\n        edges: true,\n        edgeColor: [0.2, 0.2, 0.2],\n        edgeAlpha: 0.5,\n        edgeWidth: 1\n    },\n    \"defaultDarkBG\": {\n        fill: true,\n        fillColor: [0.4, 0.4, 0.4],\n        fillAlpha: 0.2,\n        edges: true,\n        edgeColor: [0.5, 0.5, 0.5],\n        edgeAlpha: 0.5,\n        edgeWidth: 1\n    },\n    \"phosphorous\": {\n        fill: true,\n        fillColor: [0.0, 0.0, 0.0],\n        fillAlpha: 0.4,\n        edges: true,\n        edgeColor: [0.9, 0.9, 0.9],\n        edgeAlpha: 0.5,\n        edgeWidth: 2\n    },\n    \"sunset\": {\n        fill: true,\n        fillColor: [0.9, 0.9, 0.6],\n        fillAlpha: 0.2,\n        edges: true,\n        edgeColor: [0.9, 0.9, 0.9],\n        edgeAlpha: 0.5,\n        edgeWidth: 1\n    },\n    \"vectorscope\": {\n        fill: true,\n        fillColor: [0.0, 0.0, 0.0],\n        fillAlpha: 0.7,\n        edges: true,\n        edgeColor: [0.2, 1.0, 0.2],\n        edgeAlpha: 1,\n        edgeWidth: 2\n    },\n    \"battlezone\": {\n        fill: true,\n        fillColor: [0.0, 0.0, 0.0],\n        fillAlpha: 1.0,\n        edges: true,\n        edgeColor: [0.2, 1.0, 0.2],\n        edgeAlpha: 1,\n        edgeWidth: 3\n    },\n    \"sepia\": {\n        fill: true,\n        fillColor: [0.970588207244873, 0.7965892553329468, 0.6660899519920349],\n        fillAlpha: 0.4,\n        edges: true,\n        edgeColor: [0.529411792755127, 0.4577854573726654, 0.4100345969200134],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"yellowHighlight\": {\n        fill: true,\n        fillColor: [1.0, 1.0, 0.0],\n        fillAlpha: 0.5,\n        edges: true,\n        edgeColor: [0.529411792755127, 0.4577854573726654, 0.4100345969200134],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"greenSelected\": {\n        fill: true,\n        fillColor: [0.0, 1.0, 0.0],\n        fillAlpha: 0.5,\n        edges: true,\n        edgeColor: [0.4577854573726654, 0.529411792755127, 0.4100345969200134],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"gamegrid\": {\n        fill: true,\n        fillColor: [0.2, 0.2, 0.7],\n        fillAlpha: 0.9,\n        edges: true,\n        edgeColor: [0.4, 0.4, 1.6],\n        edgeAlpha: 0.8,\n        edgeWidth: 3\n    }\n};\n\n/**\n * Configures the appearance of {@link Entity}s when they are xrayed, highlighted or selected.\n *\n * * XRay an {@link Entity} by setting {@link Entity#xrayed} ````true````.\n * * Highlight an {@link Entity} by setting {@link Entity#highlighted} ````true````.\n * * Select an {@link Entity} by setting {@link Entity#selected} ````true````.\n * * When {@link Entity}s are within the subtree of a root {@link Entity}, then setting {@link Entity#xrayed}, {@link Entity#highlighted} or {@link Entity#selected}\n * on the root will collectively set those properties on all sub-{@link Entity}s.\n * * EmphasisMaterial provides several presets. Select a preset by setting {@link EmphasisMaterial#preset} to the ID of a preset in {@link EmphasisMaterial#presets}.\n * * By default, a {@link Mesh} uses the default EmphasisMaterials in {@link Scene#xrayMaterial}, {@link Scene#highlightMaterial} and {@link Scene#selectedMaterial}\n * but you can assign each {@link Mesh#xrayMaterial}, {@link Mesh#highlightMaterial} or {@link Mesh#selectedMaterial} to a custom EmphasisMaterial, if required.\n *\n * ## Usage\n *\n * In the example below, we'll create a {@link Mesh} with its own XRayMaterial and set {@link Mesh#xrayed} ````true```` to xray it.\n *\n * Recall that {@link Mesh} is a concrete subtype of the abstract {@link Entity} base class.\n *\n * ````javascript\n * new Mesh(viewer.scene, {\n *     geometry: new BoxGeometry(viewer.scene, {\n *         edgeThreshold: 1\n *     }),\n *     material: new PhongMaterial(viewer.scene, {\n *         diffuse: [0.2, 0.2, 1.0]\n *     }),\n *     xrayMaterial: new EmphasisMaterial(viewer.scene, {\n *         fill: true,\n *         fillColor: [0, 0, 0],\n *         fillAlpha: 0.7,\n *         edges: true,\n *         edgeColor: [0.2, 1.0, 0.2],\n *         edgeAlpha: 1.0,\n *         edgeWidth: 2\n *     }),\n *     xrayed: true\n * });\n * ````\n *\n * Note the ````edgeThreshold```` configuration for the {@link ReadableGeometry} on our {@link Mesh}.  EmphasisMaterial configures\n * a wireframe representation of the {@link ReadableGeometry} for the selected emphasis mode, which will have inner edges (those edges between\n * adjacent co-planar triangles) removed for visual clarity. The ````edgeThreshold```` indicates that, for\n * this particular {@link ReadableGeometry}, an inner edge is one where the angle between the surface normals of adjacent triangles\n * is not greater than ````5```` degrees. That's set to ````2```` by default, but we can override it to tweak the effect\n * as needed for particular Geometries.\n *\n * Here's the example again, this time implicitly defaulting to the {@link Scene#edgeMaterial}. We'll also modify that EdgeMaterial\n * to customize the effect.\n *\n * ````javascript\n * new Mesh({\n *     geometry: new TeapotGeometry(viewer.scene, {\n *         edgeThreshold: 5\n *     }),\n *     material: new PhongMaterial(viewer.scene, {\n *         diffuse: [0.2, 0.2, 1.0]\n *     }),\n *     xrayed: true\n * });\n *\n * var xrayMaterial = viewer.scene.xrayMaterial;\n *\n * xrayMaterial.fillColor = [0.2, 1.0, 0.2];\n * xrayMaterial.fillAlpha = 1.0;\n * ````\n *\n * ## Presets\n *\n * Let's switch the {@link Scene#xrayMaterial} to one of the presets in {@link EmphasisMaterial#presets}:\n *\n * ````javascript\n * viewer.xrayMaterial.preset = EmphasisMaterial.presets[\"sepia\"];\n * ````\n *\n * We can also create an EmphasisMaterial from a preset, while overriding properties of the preset as required:\n *\n * ````javascript\n * var myEmphasisMaterial = new EMphasisMaterial(viewer.scene, {\n *      preset: \"sepia\",\n *      fillColor = [1.0, 0.5, 0.5]\n * });\n * ````\n */\nclass EmphasisMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"EmphasisMaterial\";\n    }\n\n    /**\n     * Gets available EmphasisMaterial presets.\n     *\n     * @type {Object}\n     */\n    get presets() {\n        return PRESETS;\n    };\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] The EmphasisMaterial configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Boolean} [cfg.fill=true] Indicates if xray surfaces are filled with color.\n     * @param {Number[]} [cfg.fillColor=[0.4,0.4,0.4]] EmphasisMaterial fill color.\n     * @param  {Number} [cfg.fillAlpha=0.2] Transparency of filled xray faces. A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     * @param {Boolean} [cfg.edges=true] Indicates if xray edges are visible.\n     * @param {Number[]} [cfg.edgeColor=[0.2,0.2,0.2]]  RGB color of xray edges.\n     * @param {Number} [cfg.edgeAlpha=0.5] Transparency of xray edges. A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     * @param {Number} [cfg.edgeWidth=1] Width of xray edges, in pixels.\n     * @param {String} [cfg.preset] Selects a preset EmphasisMaterial configuration - see {@link EmphasisMaterial#presets}.\n     * @param {Boolean} [cfg.backfaces=false] Whether to render geometry backfaces when emphasising.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"EmphasisMaterial\",\n            fill: null,\n            fillColor: null,\n            fillAlpha: null,\n            edges: null,\n            edgeColor: null,\n            edgeAlpha: null,\n            edgeWidth: null,\n            backfaces: true\n        });\n\n        this._preset = \"default\";\n\n        if (cfg.preset) { // Apply preset then override with configs where provided\n            this.preset = cfg.preset;\n            if (cfg.fill !== undefined) {\n                this.fill = cfg.fill;\n            }\n            if (cfg.fillColor) {\n                this.fillColor = cfg.fillColor;\n            }\n            if (cfg.fillAlpha !== undefined) {\n                this.fillAlpha = cfg.fillAlpha;\n            }\n            if (cfg.edges !== undefined) {\n                this.edges = cfg.edges;\n            }\n            if (cfg.edgeColor) {\n                this.edgeColor = cfg.edgeColor;\n            }\n            if (cfg.edgeAlpha !== undefined) {\n                this.edgeAlpha = cfg.edgeAlpha;\n            }\n            if (cfg.edgeWidth !== undefined) {\n                this.edgeWidth = cfg.edgeWidth;\n            }\n            if (cfg.backfaces !== undefined) {\n                this.backfaces = cfg.backfaces;\n            }\n        } else {\n            this.fill = cfg.fill;\n            this.fillColor = cfg.fillColor;\n            this.fillAlpha = cfg.fillAlpha;\n            this.edges = cfg.edges;\n            this.edgeColor = cfg.edgeColor;\n            this.edgeAlpha = cfg.edgeAlpha;\n            this.edgeWidth = cfg.edgeWidth;\n            this.backfaces = cfg.backfaces;\n        }\n    }\n\n    /**\n     * Sets if surfaces are filled with color.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    set fill(value) {\n        value = value !== false;\n        if (this._state.fill === value) {\n            return;\n        }\n        this._state.fill = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if surfaces are filled with color.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    get fill() {\n        return this._state.fill;\n    }\n\n    /**\n     * Sets the RGB color of filled faces.\n     *\n     * Default is ````[0.4, 0.4, 0.4]````.\n     *\n     * @type {Number[]}\n     */\n    set fillColor(value) {\n        let fillColor = this._state.fillColor;\n        if (!fillColor) {\n            fillColor = this._state.fillColor = new Float32Array(3);\n        } else if (value && fillColor[0] === value[0] && fillColor[1] === value[1] && fillColor[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            fillColor[0] = value[0];\n            fillColor[1] = value[1];\n            fillColor[2] = value[2];\n        } else {\n            fillColor[0] = 0.4;\n            fillColor[1] = 0.4;\n            fillColor[2] = 0.4;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB color of filled faces.\n     *\n     * Default is ````[0.4, 0.4, 0.4]````.\n     *\n     * @type {Number[]}\n     */\n    get fillColor() {\n        return this._state.fillColor;\n    }\n\n    /**\n     * Sets the transparency of filled faces.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     *\n     * @type {Number}\n     */\n    set fillAlpha(value) {\n        value = (value !== undefined && value !== null) ? value : 0.2;\n        if (this._state.fillAlpha === value) {\n            return;\n        }\n        this._state.fillAlpha = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the transparency of filled faces.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     *\n     * @type {Number}\n     */\n    get fillAlpha() {\n        return this._state.fillAlpha;\n    }\n\n    /**\n     * Sets if edges are visible.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    set edges(value) {\n        value = value !== false;\n        if (this._state.edges === value) {\n            return;\n        }\n        this._state.edges = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if edges are visible.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    get edges() {\n        return this._state.edges;\n    }\n\n    /**\n     * Sets the RGB color of edges.\n     *\n     * Default is ```` [0.2, 0.2, 0.2]````.\n     *\n     * @type {Number[]}\n     */\n    set edgeColor(value) {\n        let edgeColor = this._state.edgeColor;\n        if (!edgeColor) {\n            edgeColor = this._state.edgeColor = new Float32Array(3);\n        } else if (value && edgeColor[0] === value[0] && edgeColor[1] === value[1] && edgeColor[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            edgeColor[0] = value[0];\n            edgeColor[1] = value[1];\n            edgeColor[2] = value[2];\n        } else {\n            edgeColor[0] = 0.2;\n            edgeColor[1] = 0.2;\n            edgeColor[2] = 0.2;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB color of edges.\n     *\n     * Default is ```` [0.2, 0.2, 0.2]````.\n     *\n     * @type {Number[]}\n     */\n    get edgeColor() {\n        return this._state.edgeColor;\n    }\n\n    /**\n     * Sets the transparency of edges.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     *\n     * @type {Number}\n     */\n    set edgeAlpha(value) {\n        value = (value !== undefined && value !== null) ? value : 0.5;\n        if (this._state.edgeAlpha === value) {\n            return;\n        }\n        this._state.edgeAlpha = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the transparency of edges.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default is ````0.2````.\n     *\n     * @type {Number}\n     */\n    get edgeAlpha() {\n        return this._state.edgeAlpha;\n    }\n\n    /**\n     * Sets edge width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    set edgeWidth(value) {\n        this._state.edgeWidth = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets edge width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    get edgeWidth() {\n        return this._state.edgeWidth;\n    }\n\n    /**\n     * Sets whether to render backfaces when {@link EmphasisMaterial#fill} is ````true````..\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set backfaces(value) {\n        value = !!value;\n        if (this._state.backfaces === value) {\n            return;\n        }\n        this._state.backfaces = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether to render backfaces when {@link EmphasisMaterial#fill} is ````true````..\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get backfaces() {\n        return this._state.backfaces;\n    }\n\n    /**\n     * Selects a preset EmphasisMaterial configuration.\n     *\n     * Default value is \"default\".\n     *\n     * @type {String}\n     */\n    set preset(value) {\n        value = value || \"default\";\n        if (this._preset === value) {\n            return;\n        }\n        const preset = PRESETS[value];\n        if (!preset) {\n            this.error(\"unsupported preset: '\" + value + \"' - supported values are \" + Object.keys(PRESETS).join(\", \"));\n            return;\n        }\n        this.fill = preset.fill;\n        this.fillColor = preset.fillColor;\n        this.fillAlpha = preset.fillAlpha;\n        this.edges = preset.edges;\n        this.edgeColor = preset.edgeColor;\n        this.edgeAlpha = preset.edgeAlpha;\n        this.edgeWidth = preset.edgeWidth;\n        this._preset = value;\n    }\n\n    /**\n     * Gets the current preset EmphasisMaterial configuration.\n     *\n     * Default value is \"default\".\n     *\n     * @type {String}\n     */\n    get preset() {\n        return this._preset;\n    }\n\n    /**\n     * Destroys this EmphasisMaterial.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {EmphasisMaterial};","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\nconst PRESETS = {\n    \"default\": {\n        edgeColor: [0.0, 0.0, 0.0],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"defaultWhiteBG\": {\n        edgeColor: [0.2, 0.2, 0.2],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"defaultLightBG\": {\n        edgeColor: [0.2, 0.2, 0.2],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    },\n    \"defaultDarkBG\": {\n        edgeColor: [0.5, 0.5, 0.5],\n        edgeAlpha: 1.0,\n        edgeWidth: 1\n    }\n};\n\n/**\n * @desc Configures the appearance of {@link Entity}s when their edges are emphasised.\n *\n * * Emphasise edges of an {@link Entity} by setting {@link Entity#edges} ````true````.\n * * When {@link Entity}s are within the subtree of a root {@link Entity}, then setting {@link Entity#edges} on the root\n * will collectively set that property on all sub-{@link Entity}s.\n * * EdgeMaterial provides several presets. Select a preset by setting {@link EdgeMaterial#preset} to the ID of a preset in {@link EdgeMaterial#presets}.\n * * By default, a {@link Mesh} uses the default EdgeMaterial in {@link Scene#edgeMaterial}, but you can assign each {@link Mesh#edgeMaterial} to a custom EdgeMaterial if required.\n *\n * ## Usage\n *\n * In the example below, we'll create a {@link Mesh} with its own EdgeMaterial and set {@link Mesh#edges} ````true```` to emphasise its edges.\n *\n * Recall that {@link Mesh} is a concrete subtype of the abstract {@link Entity} base class.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#materials_EdgeMaterial)]\n *\n * ````javascript\n * import {Viewer, Mesh, buildSphereGeometry,\n *      ReadableGeometry, PhongMaterial, EdgeMaterial} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\",\n *      transparent: true\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *\n *      geometry: new ReadableGeometry(viewer.scene, buildSphereGeometry({\n *          radius: 1.5,\n *          heightSegments: 24,\n *          widthSegments: 16,\n *          edgeThreshold: 2 // Default is 10\n *      })),\n *\n *      material: new PhongMaterial(viewer.scene, {\n *          diffuse: [0.4, 0.4, 1.0],\n *          ambient: [0.9, 0.3, 0.9],\n *          shininess: 30,\n *          alpha: 0.5,\n *          alphaMode: \"blend\"\n *      }),\n *\n *      edgeMaterial: new EdgeMaterial(viewer.scene, {\n *          edgeColor: [0.0, 0.0, 1.0]\n *          edgeAlpha: 1.0,\n *          edgeWidth: 2\n *      }),\n *\n *      edges: true\n * });\n * ````\n *\n * Note the ````edgeThreshold```` configuration for the {@link ReadableGeometry} on our {@link Mesh}.  EdgeMaterial configures\n * a wireframe representation of the {@link ReadableGeometry}, which will have inner edges (those edges between\n * adjacent co-planar triangles) removed for visual clarity. The ````edgeThreshold```` indicates that, for\n * this particular {@link ReadableGeometry}, an inner edge is one where the angle between the surface normals of adjacent triangles\n * is not greater than ````5```` degrees. That's set to ````2```` by default, but we can override it to tweak the effect\n * as needed for particular Geometries.\n *\n * Here's the example again, this time implicitly defaulting to the {@link Scene#edgeMaterial}. We'll also modify that EdgeMaterial\n * to customize the effect.\n *\n * ````javascript\n * new Mesh({\n *     geometry: new ReadableGeometry(viewer.scene, buildSphereGeometry({\n *          radius: 1.5,\n *          heightSegments: 24,\n *          widthSegments: 16,\n *          edgeThreshold: 2 // Default is 10\n *      })),\n *     material: new PhongMaterial(viewer.scene, {\n *         diffuse: [0.2, 0.2, 1.0]\n *     }),\n *     edges: true\n * });\n *\n * var edgeMaterial = viewer.scene.edgeMaterial;\n *\n * edgeMaterial.edgeColor = [0.2, 1.0, 0.2];\n * edgeMaterial.edgeAlpha = 1.0;\n * edgeMaterial.edgeWidth = 2;\n * ````\n *\n *  ## Presets\n *\n * Let's switch the {@link Scene#edgeMaterial} to one of the presets in {@link EdgeMaterial#presets}:\n *\n * ````javascript\n * viewer.edgeMaterial.preset = EdgeMaterial.presets[\"sepia\"];\n * ````\n *\n * We can also create an EdgeMaterial from a preset, while overriding properties of the preset as required:\n *\n * ````javascript\n * var myEdgeMaterial = new EdgeMaterial(viewer.scene, {\n *      preset: \"sepia\",\n *      edgeColor = [1.0, 0.5, 0.5]\n * });\n * ````\n */\nclass EdgeMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"EdgeMaterial\";\n    }\n\n    /**\n     * Gets available EdgeMaterial presets.\n     *\n     * @type {Object}\n     */\n    get presets() {\n        return PRESETS;\n    };\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] The EdgeMaterial configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number[]} [cfg.edgeColor=[0.2,0.2,0.2]] RGB edge color.\n     * @param {Number} [cfg.edgeAlpha=1.0] Edge transparency. A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     * @param {Number} [cfg.edgeWidth=1] Edge width in pixels.\n     * @param {String} [cfg.preset] Selects a preset EdgeMaterial configuration - see {@link EdgeMaterial#presets}.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"EdgeMaterial\",\n            edges: null,\n            edgeColor: null,\n            edgeAlpha: null,\n            edgeWidth: null\n        });\n\n        this._preset = \"default\";\n\n        if (cfg.preset) { // Apply preset then override with configs where provided\n            this.preset = cfg.preset;\n            if (cfg.edgeColor) {\n                this.edgeColor = cfg.edgeColor;\n            }\n            if (cfg.edgeAlpha !== undefined) {\n                this.edgeAlpha = cfg.edgeAlpha;\n            }\n            if (cfg.edgeWidth !== undefined) {\n                this.edgeWidth = cfg.edgeWidth;\n            }\n        } else {\n            this.edgeColor = cfg.edgeColor;\n            this.edgeAlpha = cfg.edgeAlpha;\n            this.edgeWidth = cfg.edgeWidth;\n        }\n        this.edges = (cfg.edges !== false);\n    }\n\n\n    /**\n     * Sets if edges are visible.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    set edges(value) {\n        value = value !== false;\n        if (this._state.edges === value) {\n            return;\n        }\n        this._state.edges = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if edges are visible.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    get edges() {\n        return this._state.edges;\n    }\n\n    /**\n     * Sets RGB edge color.\n     *\n     * Default value is ````[0.2, 0.2, 0.2]````.\n     *\n     * @type {Number[]}\n     */\n    set edgeColor(value) {\n        let edgeColor = this._state.edgeColor;\n        if (!edgeColor) {\n            edgeColor = this._state.edgeColor = new Float32Array(3);\n        } else if (value && edgeColor[0] === value[0] && edgeColor[1] === value[1] && edgeColor[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            edgeColor[0] = value[0];\n            edgeColor[1] = value[1];\n            edgeColor[2] = value[2];\n        } else {\n            edgeColor[0] = 0.2;\n            edgeColor[1] = 0.2;\n            edgeColor[2] = 0.2;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets RGB edge color.\n     *\n     * Default value is ````[0.2, 0.2, 0.2]````.\n     *\n     * @type {Number[]}\n     */\n    get edgeColor() {\n        return this._state.edgeColor;\n    }\n\n    /**\n     * Sets edge transparency.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set edgeAlpha(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.edgeAlpha === value) {\n            return;\n        }\n        this._state.edgeAlpha = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets edge transparency.\n     *\n     * A value of ````0.0```` indicates fully transparent, ````1.0```` is fully opaque.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    get edgeAlpha() {\n        return this._state.edgeAlpha;\n    }\n\n    /**\n     * Sets edge width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    set edgeWidth(value) {\n        this._state.edgeWidth = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets edge width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    get edgeWidth() {\n        return this._state.edgeWidth;\n    }\n\n    /**\n     * Selects a preset EdgeMaterial configuration.\n     *\n     * Default value is ````\"default\"````.\n     *\n     * @type {String}\n     */\n    set preset(value) {\n        value = value || \"default\";\n        if (this._preset === value) {\n            return;\n        }\n        const preset = PRESETS[value];\n        if (!preset) {\n            this.error(\"unsupported preset: '\" + value + \"' - supported values are \" + Object.keys(PRESETS).join(\", \"));\n            return;\n        }\n        this.edgeColor = preset.edgeColor;\n        this.edgeAlpha = preset.edgeAlpha;\n        this.edgeWidth = preset.edgeWidth;\n        this._preset = value;\n    }\n\n    /**\n     * The current preset EdgeMaterial configuration.\n     *\n     * Default value is ````\"default\"````.\n     *\n     * @type {String}\n     */\n    get preset() {\n        return this._preset;\n    }\n\n    /**\n     * Destroys this EdgeMaterial.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {EdgeMaterial};","//----------------------------------------------------------------------------------------------------------------------\n// This file is named \"Metriqs.js\" because \"Metrics.js\" is blocked by uBlock Origin (https://en.wikipedia.org/wiki/UBlock_Origin)\n//----------------------------------------------------------------------------------------------------------------------\n\nimport {Component} from \"../Component.js\";\nimport {math} from \"../math/math.js\";\n\nconst unitsInfo = {\n    meters: {\n        abbrev: \"m\"\n    },\n    metres: {\n        abbrev: \"m\"\n    },\n    centimeters: {\n        abbrev: \"cm\"\n    },\n    centimetres: {\n        abbrev: \"cm\"\n    },\n    millimeters: {\n        abbrev: \"mm\"\n    },\n    millimetres: {\n        abbrev: \"mm\"\n    },\n    yards: {\n        abbrev: \"yd\"\n    },\n    feet: {\n        abbrev: \"ft\"\n    },\n    inches: {\n        abbrev: \"in\"\n    }\n};\n\n/**\n * @desc Configures its {@link Scene}'s measurement unit and mapping between the Real-space and World-space 3D Cartesian coordinate systems.\n *\n *\n * ## Overview\n *\n * * Located at {@link Scene#metrics}.\n * * {@link Metrics#units} configures the Real-space unit type, which is ````\"meters\"```` by default.\n * * {@link Metrics#scale} configures the number of Real-space units represented by each unit within the World-space 3D coordinate system. This is ````1.0```` by default.\n * * {@link Metrics#origin} configures the 3D Real-space origin, in current Real-space units, at which this {@link Scene}'s World-space coordinate origin sits, This is ````[0,0,0]```` by default.\n *\n * ## Usage\n *\n * Let's load a model using an {@link XKTLoaderPlugin}, then configure the Real-space unit type and the coordinate\n * mapping between the Real-space and World-space 3D coordinate systems.\n *\n * ````JavaScript\n * import {Viewer, XKTLoaderPlugin} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [-2.37, 18.97, -26.12];\n * viewer.scene.camera.look = [10.97, 5.82, -11.22];\n * viewer.scene.camera.up = [0.36, 0.83, 0.40];\n *\n * const xktLoader = new XKTLoaderPlugin(viewer);\n *\n * const model = xktLoader.load({\n *     src: \"./models/xkt/duplex/duplex.xkt\"\n * });\n *\n * const metrics = viewer.scene.metrics;\n *\n * metrics.units = \"meters\";\n * metrics.scale = 10.0;\n * metrics.origin = [100.0, 0.0, 200.0];\n * ````\n */\nclass Metrics extends Component {\n\n    /**\n     * @constructor\n     * @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._units = \"meters\";\n        this._scale = 1.0;\n        this._origin = math.vec3([0, 0, 0]);\n\n        this.units = cfg.units;\n        this.scale = cfg.scale;\n        this.origin = cfg.origin;\n    }\n\n    /**\n     * Gets info about the supported Real-space unit types.\n     *\n     * This will be:\n     *\n     * ````javascript\n     * {\n     *      {\n     *          meters: {\n     *              abbrev: \"m\"\n     *          },\n     *          metres: {\n     *              abbrev: \"m\"\n     *          },\n     *          centimeters: {\n     *              abbrev: \"cm\"\n     *          },\n     *          centimetres: {\n     *              abbrev: \"cm\"\n     *          },\n     *          millimeters: {\n     *              abbrev: \"mm\"\n     *          },\n     *          millimetres: {\n     *              abbrev: \"mm\"\n     *          },\n     *          yards: {\n     *              abbrev: \"yd\"\n     *          },\n     *          feet: {\n     *              abbrev: \"ft\"\n     *          },\n     *          inches: {\n     *              abbrev: \"in\"\n     *          }\n     *      }\n     * }\n     * ````\n     *\n     * @type {*}\n     */\n    get unitsInfo() {\n        return unitsInfo;\n    }\n\n    /**\n     * Sets the {@link Scene}'s Real-space unit type.\n     *\n     * Accepted values are ````\"meters\"````, ````\"centimeters\"````, ````\"millimeters\"````, ````\"metres\"````, ````\"centimetres\"````, ````\"millimetres\"````, ````\"yards\"````, ````\"feet\"```` and ````\"inches\"````.\n     *\n     * @emits ````\"units\"```` event on change, with the value of this property.\n     * @type {String}\n     */\n    set units(value) {\n        if (!value) {\n            value = \"meters\";\n        }\n        const info = unitsInfo[value];\n        if (!info) {\n            this.error(\"Unsupported value for 'units': \" + value + \" defaulting to 'meters'\");\n            value = \"meters\";\n        }\n        this._units = value;\n        this.fire(\"units\", this._units);\n    }\n\n    /**\n     * Gets the {@link Scene}'s Real-space unit type.\n     *\n     * @type {String}\n     */\n    get units() {\n        return this._units;\n    }\n\n    /**\n     * Sets the number of Real-space units represented by each unit of the {@link Scene}'s World-space coordinate system.\n     *\n     * For example, if {@link Metrics#units} is ````\"meters\"````, and there are ten meters per World-space coordinate system unit, then ````scale```` would have a value of ````10.0````.\n     *\n     * @emits ````\"scale\"```` event on change, with the value of this property.\n     * @type {Number}\n     */\n    set scale(value) {\n        value = value || 1;\n        if (value <= 0) {\n            this.error(\"scale value should be larger than zero\");\n            return;\n        }\n        this._scale = value;\n        this.fire(\"scale\", this._scale);\n    }\n\n    /**\n     * Gets the number of Real-space units represented by each unit of the {@link Scene}'s World-space coordinate system.\n     *\n     * @type {Number}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Sets the Real-space 3D origin, in Real-space units, at which this {@link Scene}'s World-space coordinate origin ````[0,0,0]```` sits.\n     *\n     * @emits \"origin\" event on change, with the value of this property.\n     * @type {Number[]}\n     */\n    set origin(value) {\n        if (!value) {\n            this._origin[0] = 0;\n            this._origin[1] = 0;\n            this._origin[2] = 0;\n            return;\n        }\n        this._origin[0] = value[0];\n        this._origin[1] = value[1];\n        this._origin[2] = value[2];\n        this.fire(\"origin\", this._origin);\n    }\n\n    /**\n     * Gets the 3D Real-space origin, in Real-space units, at which this {@link Scene}'s World-space coordinate origin ````[0,0,0]```` sits.\n     *\n     * @type {Number[]}\n     */\n    get origin() {\n        return this._origin;\n    }\n\n    /**\n     * Converts a 3D position from World-space to Real-space.\n     *\n     * This is equivalent to ````realPos = #origin + (worldPos * #scale)````.\n     *\n     * @param {Number[]} worldPos World-space 3D position, in World coordinate system units.\n     * @param {Number[]} [realPos] Destination for Real-space 3D position.\n     * @returns {Number[]} Real-space 3D position, in units indicated by {@link Metrics#units}.\n     */\n    worldToRealPos(worldPos, realPos = math.vec3(3)) {\n        realPos[0] = this._origin[0] + (this._scale * worldPos[0]);\n        realPos[1] = this._origin[1] + (this._scale * worldPos[1]);\n        realPos[2] = this._origin[2] + (this._scale * worldPos[2]);\n    }\n\n    /**\n     * Converts a 3D position from Real-space to World-space.\n     *\n     * This is equivalent to ````worldPos = (worldPos - #origin) / #scale````.\n     *\n     * @param {Number[]} realPos Real-space 3D position.\n     * @param {Number[]} [worldPos] Destination for World-space 3D position.\n     * @returns {Number[]} World-space 3D position.\n     */\n    realToWorldPos(realPos, worldPos = math.vec3(3)) {\n        worldPos[0] = (realPos[0] - this._origin[0]) / this._scale;\n        worldPos[1] = (realPos[1] - this._origin[1]) / this._scale;\n        worldPos[2] = (realPos[2] - this._origin[2]) / this._scale;\n        return worldPos;\n    }\n}\n\nexport {Metrics};","import {Component} from '../Component.js';\nimport {WEBGL_INFO} from \"../webglInfo.js\";\n\n/**\n * @desc Configures Scalable Ambient Obscurance (SAO) for a {@link Scene}.\n *\n *  <a href=\"https://xeokit.github.io/xeokit-sdk/examples/#postEffects_SAO_OTCConferenceCenter\"><img src=\"http://xeokit.io/img/docs/SAO/saoEnabledDisabled.gif\"></a>\n *\n * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#postEeffects_SAO_OTCConferenceCenter)]\n *\n * ## Overview\n *\n * SAO approximates [Ambient Occlusion](https://en.wikipedia.org/wiki/Ambient_occlusion) in realtime. It darkens creases, cavities and surfaces\n * that are close to each other, which tend to be occluded from ambient light and appear darker.\n *\n * The animated GIF above shows the effect as we repeatedly enable and disable SAO. When SAO is enabled, we can see darkening\n * in regions such as the corners, and the crevices between stairs. This increases the amount of detail we can see when ambient\n * light is high, or when objects have uniform colors across their surfaces. Run the example to experiment with the various\n * SAO configurations.\n *\n * xeokit's implementation of SAO is based on the paper [Scalable Ambient Obscurance](https://research.nvidia.com/sites/default/files/pubs/2012-06_Scalable-Ambient-Obscurance/McGuire12SAO.pdf).\n *\n * ## Caveats\n *\n * Currently, SAO only works with perspective and orthographic projections. Therefore, to use SAO, make sure {@link Camera#projection} is\n * either \"perspective\" or \"ortho\".\n *\n * {@link SAO#scale} and {@link SAO#intensity} must be tuned to the distance\n * between {@link Perspective#near} and {@link Perspective#far}, or the distance\n * between {@link Ortho#near} and {@link Ortho#far}, depending on which of those two projections the {@link Camera} is currently\n * using. Use the [live example](https://xeokit.github.io/xeokit-sdk/examples/#postEeffects_SAO_OTCConferenceCenter) to get a\n * feel for that.\n *\n * ## Usage\n *\n * In the example below, we'll start by logging a warning message to the console if SAO is not supported by the\n * system.\n *\n *Then we'll enable and configure SAO, position the camera, and configure the near and far perspective and orthographic\n * clipping planes. Finally, we'll use {@link XKTLoaderPlugin} to load the OTC Conference Center model.\n *\n * ````javascript\n * import {Viewer, XKTLoaderPlugin} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\",\n *     transparent: true\n * });\n *\n * const sao = viewer.scene.sao;\n *\n * if (!sao.supported) {\n *     sao.warn(\"SAO is not supported on this system - ignoring SAO configs\")\n * }\n *\n * sao.enabled = true; // Enable SAO - only works if supported (see above)\n * sao.intensity = 0.15;\n * sao.bias = 0.5;\n * sao.scale = 1.0;\n * sao.minResolution = 0.0;\n * sao.numSamples = 10;\n * sao.kernelRadius = 100;\n * sao.blendCutoff = 0.1;\n *\n * const camera = viewer.scene.camera;\n *\n * camera.eye = [3.69, 5.83, -23.98];\n * camera.look = [84.31, -29.88, -116.21];\n * camera.up = [0.18, 0.96, -0.21];\n *\n * camera.perspective.near = 0.1;\n * camera.perspective.far = 2000.0;\n *\n * camera.ortho.near = 0.1;\n * camera.ortho.far = 2000.0;\n * camera.projection = \"perspective\";\n *\n * const xktLoader = new XKTLoaderPlugin(viewer);\n *\n * const model = xktLoader.load({\n *     id: \"myModel\",\n *     src: \"./models/xkt/OTCConferenceCenter.xkt\"\n *     edges: true\n * });\n * ````\n *\n * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#postEeffects_SAO_OTCConferenceCenter)]\n *\n * ## Efficiency\n *\n * SAO can incur some rendering overhead, especially on objects that are viewed close to the camera. For this reason,\n * it's recommended to use a low value for {@link SAO#kernelRadius}.  A low radius will sample pixels that are close\n * to the source pixel, which will allow the GPU to efficiently cache those pixels. When {@link Camera#projection} is \"perspective\",\n * objects near to the viewpoint will use larger radii than farther pixels. Therefore, computing  SAO for close objects\n * is more expensive than for objects far away, that occupy fewer pixels on the canvas.\n *\n * ## Selectively enabling SAO for models\n *\n * When loading multiple models into a Scene, we sometimes only want SAO on the models that are actually going to\n * show it, such as the architecture or structure, and not show SAO on models that won't show it well, such as the\n * electrical wiring, or plumbing.\n *\n * To illustrate, lets load some of the models for the West Riverside Hospital. We'll enable SAO on the structure model,\n * but disable it on the electrical and plumbing.\n *\n * This will only apply SAO to those models if {@link SAO#supported} and {@link SAO#enabled} are both true.\n *\n * Note, by the way, how we load the models in sequence. Since XKTLoaderPlugin uses scratch memory as part of its loading\n * process, this allows the plugin to reuse that same memory across multiple loads, instead of having to create multiple\n * pools of scratch memory.\n *\n * ````javascript\n * const structure = xktLoader.load({\n *      id: \"structure\",\n *      src: \"./models/xkt/WestRiverSideHospital/structure.xkt\"\n *      edges: true,\n *      saoEnabled: true\n *  });\n *\n *  structure.on(\"loaded\", () => {\n *\n *      const electrical = xktLoader.load({\n *          id: \"electrical\",\n *          src: \"./models/xkt/WestRiverSideHospital/electrical.xkt\",\n *          edges: true\n *      });\n *\n *      electrical.on(\"loaded\", () => {\n *\n *          const plumbing = xktLoader.load({\n *              id: \"plumbing\",\n *              src: \"./models/xkt/WestRiverSideHospital/plumbing.xkt\",\n *              edges: true\n *          });\n *      });\n * });\n * ````\n *\n * ## Disabling SAO while camera is moving\n *\n * For smoother interaction with large models on low-power hardware, we can disable SAO while the {@link Camera} is moving:\n *\n * ````javascript\n * const timeoutDuration = 150; // Milliseconds\n * var timer = timeoutDuration;\n * var saoDisabled = false;\n *\n * const onCameraMatrix = scene.camera.on(\"matrix\", () => {\n *     timer = timeoutDuration;\n *     if (!saoDisabled) {\n *         scene.sao.enabled = false;\n *         saoDisabled = true;\n *     }\n * });\n *\n * const onSceneTick = scene.on(\"tick\", (tickEvent) => {\n *     if (!saoDisabled) {\n *         return;\n *     }\n *     timer -= tickEvent.deltaTime; // Milliseconds\n *     if (timer <= 0) {\n *         if (saoDisabled) {\n *             scene.sao.enabled = true;\n *             saoDisabled = false;\n *         }\n *     }\n * });\n * ````\n *\n * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#techniques_nonInteractiveQuality)]\n */\nclass SAO extends Component {\n\n    /** @private */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        const ua = navigator.userAgent.match(/(opera|chrome|safari|firefox|msie)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\n        const browser = (navigator.userAgent.match(/Edge/i) || navigator.userAgent.match(/Trident.*rv[ :]*11\\./i)) ? \"msie\" : ua[1].toLowerCase();\n        const isSafari = (browser === \"safari\");\n\n        this._supported = (!isSafari) &&\n            WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_standard_derivatives\"]; // For computing normals in SAO fragment shader\n\n        this.enabled = cfg.enabled;\n        this.kernelRadius = cfg.kernelRadius;\n        this.intensity = cfg.intensity;\n        this.bias = cfg.bias;\n        this.scale = cfg.scale;\n        this.minResolution = cfg.minResolution;\n        this.numSamples = cfg.numSamples;\n        this.blur = cfg.blur;\n        this.blendCutoff = cfg.blendCutoff;\n        this.blendFactor = cfg.blendFactor;\n    }\n\n    /**\n     * Gets whether or not SAO is supported by this browser and GPU.\n     *\n     * Even when enabled, SAO will only work if supported.\n     *\n     * @type {Boolean}\n     */\n    get supported() {\n        return this._supported;\n    }\n\n    /**\n     * Sets whether SAO is enabled for the {@link Scene}.\n     *\n     * Even when enabled, SAO will only work if supported.\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set enabled(value) {\n        value = !!value;\n        if (this._enabled === value) {\n            return;\n        }\n        this._enabled = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether SAO is enabled for the {@link Scene}.\n     *\n     * Even when enabled, SAO will only apply if supported.\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get enabled() {\n        return this._enabled;\n    }\n\n    /**\n     * Returns true if SAO is currently possible, where it is supported, enabled, and the current scene state is compatible.\n     * Called internally by renderer logic.\n     * @private\n     * @returns {boolean}\n     */\n    get possible() {\n        if (!this._supported) {\n            return false;\n        }\n        if (!this._enabled) {\n            return false;\n        }\n        const projection = this.scene.camera.projection;\n        if (projection === \"customProjection\") {\n            return false;\n        }\n        if (projection === \"frustum\") {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * @private\n     * @returns {boolean|*}\n     */\n    get active() {\n        return this._active;\n    }\n\n    /**\n     * Sets the maximum area that SAO takes into account when checking for possible occlusion for each fragment.\n     *\n     * Default value is ````100.0````.\n     *\n     * @type {Number}\n     */\n    set kernelRadius(value) {\n        if (value === undefined || value === null) {\n            value = 100.0;\n        }\n        if (this._kernelRadius === value) {\n            return;\n        }\n        this._kernelRadius = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the maximum area that SAO takes into account when checking for possible occlusion for each fragment.\n     *\n     * Default value is ````100.0````.\n     *\n     * @type {Number}\n     */\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    /**\n     * Sets the degree of darkening (ambient obscurance) produced by the SAO effect.\n     *\n     * Default value is ````0.15````.\n     *\n     * @type {Number}\n     */\n    set intensity(value) {\n        if (value === undefined || value === null) {\n            value = 0.15;\n        }\n        if (this._intensity === value) {\n            return;\n        }\n        this._intensity = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the degree of darkening (ambient obscurance) produced by the SAO effect.\n     *\n     * Default value is ````0.15````.\n     *\n     * @type {Number}\n     */\n    get intensity() {\n        return this._intensity;\n    }\n\n    /**\n     * Sets the SAO bias.\n     *\n     * Default value is ````0.5````.\n     *\n     * @type {Number}\n     */\n    set bias(value) {\n        if (value === undefined || value === null) {\n            value = 0.5;\n        }\n        if (this._bias === value) {\n            return;\n        }\n        this._bias = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the SAO bias.\n     *\n     * Default value is ````0.5````.\n     *\n     * @type {Number}\n     */\n    get bias() {\n        return this._bias;\n    }\n\n    /**\n     * Sets the SAO occlusion scale.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set scale(value) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (this._scale === value) {\n            return;\n        }\n        this._scale = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the SAO occlusion scale.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Sets the SAO minimum resolution.\n     *\n     * Default value is ````0.0````.\n     *\n     * @type {Number}\n     */\n    set minResolution(value) {\n        if (value === undefined || value === null) {\n            value = 0.0;\n        }\n        if (this._minResolution === value) {\n            return;\n        }\n        this._minResolution = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the SAO minimum resolution.\n     *\n     * Default value is ````0.0````.\n     *\n     * @type {Number}\n     */\n    get minResolution() {\n        return this._minResolution;\n    }\n\n    /**\n     * Sets the number of SAO samples.\n     *\n     * Default value is ````10````.\n     *\n     * Update this sparingly, since it causes a shader recompile.\n     *\n     * @type {Number}\n     */\n    set numSamples(value) {\n        if (value === undefined || value === null) {\n            value = 10;\n        }\n        if (this._numSamples === value) {\n            return;\n        }\n        this._numSamples = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the number of SAO samples.\n     *\n     * Default value is ````10````.\n     *\n     * @type {Number}\n     */\n    get numSamples() {\n        return this._numSamples;\n    }\n\n    /**\n     * Sets whether Guassian blur is enabled.\n     *\n     * Default value is ````true````.\n     *\n     * @type {Boolean}\n     */\n    set blur(value) {\n        value = (value !== false);\n        if (this._blur === value) {\n            return;\n        }\n        this._blur = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether Guassian blur is enabled.\n     *\n     * Default value is ````true````.\n     *\n     * @type {Boolean}\n     */\n    get blur() {\n        return this._blur;\n    }\n\n    /**\n     * Sets the SAO blend cutoff.\n     *\n     * Default value is ````0.3````.\n     *\n     * Normally you don't need to alter this.\n     *\n     * @type {Number}\n     */\n    set blendCutoff(value) {\n        if (value === undefined || value === null) {\n            value = 0.3;\n        }\n        if (this._blendCutoff === value) {\n            return;\n        }\n        this._blendCutoff = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the SAO blend cutoff.\n     *\n     * Default value is ````0.3````.\n     *\n     * Normally you don't need to alter this.\n     *\n     * @type {Number}\n     */\n    get blendCutoff() {\n        return this._blendCutoff;\n    }\n\n    /**\n     * Sets the SAO blend factor.\n     *\n     * Default value is ````1.0````.\n     *\n     * Normally you don't need to alter this.\n     *\n     * @type {Number}\n     */\n    set blendFactor(value) {\n        if (value === undefined || value === null) {\n            value = 1.0;\n        }\n        if (this._blendFactor === value) {\n            return;\n        }\n        this._blendFactor = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the SAO blend scale.\n     *\n     * Default value is ````1.0````.\n     *\n     * Normally you don't need to alter this.\n     *\n     * @type {Number}\n     */\n    get blendFactor() {\n        return this._blendFactor;\n    }\n\n    /**\n     * Destroys this component.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {SAO};\n","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\nconst PRESETS = {\n    \"default\": {\n        pointSize: 4,\n        roundPoints: true,\n        perspectivePoints: true\n    },\n    \"square\": {\n        pointSize: 4,\n        roundPoints: false,\n        perspectivePoints: true\n    },\n    \"round\": {\n        pointSize: 4,\n        roundPoints: true,\n        perspectivePoints: true\n    }\n};\n\n/**\n * @desc Configures the size and shape of \"points\" geometry primitives.\n *\n * * Located at {@link Scene#pointsMaterial}.\n * * Supports round and square points.\n * * Optional perspective point scaling.\n * * Globally configures \"points\" primitives for all {@link PerformanceModel}s.\n *\n * ## Usage\n *\n * In the example below, we'll customize the {@link Scene}'s global ````PointsMaterial````, then use\n * an {@link XKTLoaderPlugin} to load a model containing a point cloud.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#materials_PointsMaterial)]\n *\n * ````javascript\n * import {Viewer, XKTLoaderPlugin} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\",\n *     transparent: true\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * viewer.scene.pointsMaterial.pointSize = 2;\n * viewer.scene.pointsMaterial.roundPoints = true;\n * viewer.scene.pointsMaterial.perspectivePoints = true;\n * viewer.scene.pointsMaterial.minPerspectivePointSize = 1;\n * viewer.scene.pointsMaterial.maxPerspectivePointSize = 6;\n *\n * const xktLoader = new XKTLoaderPlugin(viewer);\n *\n * const model = xktLoader.load({\n *      id: \"myModel\",\n *      src: \"../assets/models/xkt/MAP-PointCloud.xkt\"\n * });\n * ````\n */\nclass PointsMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"PointsMaterial\";\n    }\n\n    /**\n     * Gets available PointsMaterial presets.\n     *\n     * @type {Object}\n     */\n    get presets() {\n        return PRESETS;\n    };\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] The PointsMaterial configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number} [cfg.pointSize=2] Point size in pixels.\n     * @param {Boolean} [cfg.roundPoints=true] Whether points are round (````true````) or square (````false````).\n     * @param {Boolean} [cfg.perspectivePoints=true] Whether apparent point size reduces with distance when {@link Camera#projection} is set to \"perspective\".\n     * @param {Number} [cfg.minPerspectivePointSize=1] When ````perspectivePoints```` is ````true````, this is the minimum rendered size of each point in pixels.\n     * @param {Number} [cfg.maxPerspectivePointSize=6] When ````perspectivePoints```` is ````true````, this is the maximum rendered size of each point in pixels.\n     * @param {String} [cfg.preset] Selects a preset PointsMaterial configuration - see {@link PointsMaterial#presets}.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"PointsMaterial\",\n            pointSize: null,\n            roundPoints: null,\n            perspectivePoints: null,\n            minPerspectivePointSize: null,\n            maxPerspectivePointSize: null\n        });\n\n        if (cfg.preset) { // Apply preset then override with configs where provided\n            this.preset = cfg.preset;\n            if (cfg.pointSize !== undefined) {\n                this.pointSize = cfg.pointSize;\n            }\n            if (cfg.roundPoints !== undefined) {\n                this.roundPoints = cfg.roundPoints;\n            }\n            if (cfg.perspectivePoints !== undefined) {\n                this.perspectivePoints = cfg.perspectivePoints;\n            }\n            if (cfg.minPerspectivePointSize !== undefined) {\n                this.minPerspectivePointSize = cfg.minPerspectivePointSize;\n            }\n            if (cfg.maxPerspectivePointSize !== undefined) {\n                this.maxPerspectivePointSize = cfg.minPerspectivePointSize;\n            }\n        } else {\n            this._preset = \"default\";\n            this.pointSize = cfg.pointSize;\n            this.roundPoints = cfg.roundPoints;\n            this.perspectivePoints = cfg.perspectivePoints;\n            this.minPerspectivePointSize = cfg.minPerspectivePointSize;\n            this.maxPerspectivePointSize = cfg.maxPerspectivePointSize;\n        }\n    }\n\n    /**\n     * Sets point size.\n     *\n     * Default value is ````2.0```` pixels.\n     *\n     * @type {Number}\n     */\n    set pointSize(value) {\n        this._state.pointSize = value || 2.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets point size.\n     *\n     * Default value is ````2.0```` pixels.\n     *\n     * @type {Number}\n     */\n    get pointSize() {\n        return this._state.pointSize;\n    }\n\n\n    /**\n     * Sets if points are round or square.\n     *\n     * Default is ````true```` to set points round.\n     *\n     * @type {Boolean}\n     */\n    set roundPoints(value) {\n        value = (value !== false);\n        if (this._state.roundPoints === value) {\n            return;\n        }\n        this._state.roundPoints = value;\n        this.scene._needRecompile = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if points are round or square.\n     *\n     * Default is ````true```` to set points round.\n     *\n     * @type {Boolean}\n     */\n    get roundPoints() {\n        return this._state.roundPoints;\n    }\n\n    /**\n     * Sets if rendered point size reduces with distance when {@link Camera#projection} is set to ````\"perspective\"````.\n     *\n     * Default is ````true````.\n     *\n     * @type {Boolean}\n     */\n    set perspectivePoints(value) {\n        value = (value !== false);\n        if (this._state.perspectivePoints === value) {\n            return;\n        }\n        this._state.perspectivePoints = value;\n        this.scene._needRecompile = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if rendered point size reduces with distance when {@link Camera#projection} is set to \"perspective\".\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get perspectivePoints() {\n        return this._state.perspectivePoints;\n    }\n\n    /**\n     * Sets the minimum rendered size of points when {@link PointsMaterial#perspectivePoints} is ````true````.\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    set minPerspectivePointSize(value) {\n        this._state.minPerspectivePointSize = value || 1.0;\n        this.scene._needRecompile = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the minimum rendered size of points when {@link PointsMaterial#perspectivePoints} is ````true````.\n     *\n     * Default value is ````1.0```` pixels.\n     *\n     * @type {Number}\n     */\n    get minPerspectivePointSize() {\n        return this._state.minPerspectivePointSize;\n    }\n\n    /**\n     * Sets the maximum rendered size of points when {@link PointsMaterial#perspectivePoints} is ````true````.\n     *\n     * Default value is ````6```` pixels.\n     *\n     * @type {Number}\n     */\n    set maxPerspectivePointSize(value) {\n        this._state.maxPerspectivePointSize = value || 6;\n        this.scene._needRecompile = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the maximum rendered size of points when {@link PointsMaterial#perspectivePoints} is ````true````.\n     *\n     * Default value is ````6```` pixels.\n     *\n     * @type {Number}\n     */\n    get maxPerspectivePointSize() {\n        return this._state.maxPerspectivePointSize;\n    }\n\n    /**\n     * Selects a preset ````PointsMaterial```` configuration.\n     *\n     * Default value is ````\"default\"````.\n     *\n     * @type {String}\n     */\n    set preset(value) {\n        value = value || \"default\";\n        if (this._preset === value) {\n            return;\n        }\n        const preset = PRESETS[value];\n        if (!preset) {\n            this.error(\"unsupported preset: '\" + value + \"' - supported values are \" + Object.keys(PRESETS).join(\", \"));\n            return;\n        }\n        this.pointSize = preset.pointSize;\n        this.roundPoints = preset.roundPoints;\n        this.perspectivePoints = preset.perspectivePoints;\n        this.minPerspectivePointSize = preset.minPerspectivePointSize;\n        this.maxPerspectivePointSize = preset.maxPerspectivePointSize;\n        this._preset = value;\n    }\n\n    /**\n     * The current preset ````PointsMaterial```` configuration.\n     *\n     * Default value is ````\"default\"````.\n     *\n     * @type {String}\n     */\n    get preset() {\n        return this._preset;\n    }\n\n    /**\n     * @private\n     * @return {string}\n     */\n    get hash() {\n        return [\n            this.pointSize,\n            this.roundPoints,\n            this.perspectivePoints,\n            this.minPerspectivePointSize,\n            this.maxPerspectivePointSize\n        ].join((\";\"));\n    }\n\n    /**\n     * Destroys this ````PointsMaterial````.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {PointsMaterial};","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\n\nconst PRESETS = {\n    \"default\": {\n        lineWidth: 1\n    },\n    \"thick\": {\n        lineWidth: 2\n    },\n    \"thicker\": {\n        lineWidth: 4\n    }\n};\n\n/**\n * @desc Configures the shape of \"lines\" geometry primitives.\n *\n * * Located at {@link Scene#linesMaterial}.\n * * Globally configures \"lines\" primitives for all {@link PerformanceModel}s.\n *\n * ## Usage\n *\n * In the example below, we'll customize the {@link Scene}'s global ````LinesMaterial````, then use\n * an {@link XKTLoaderPlugin} to load a model containing line segments.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#materials_LinesMaterial)]\n *\n * ````javascript\n * import {Viewer, XKTLoaderPlugin} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\",\n *     transparent: true\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * viewer.scene.linesMaterial.lineWidth = 3;\n *\n * const xktLoader = new XKTLoaderPlugin(viewer);\n *\n * const model = xktLoader.load({\n *      id: \"myModel\",\n *      src: \"./models/xkt/Duplex.xkt\"\n * });\n * ````\n */\nclass LinesMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"LinesMaterial\";\n    }\n\n    /**\n     * Gets available LinesMaterial presets.\n     *\n     * @type {Object}\n     */\n    get presets() {\n        return PRESETS;\n    };\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] The LinesMaterial configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number} [cfg.lineWidth=1] Line width in pixels.\n     * @param {String} [cfg.preset] Selects a preset LinesMaterial configuration - see {@link LinesMaterial#presets}.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"LinesMaterial\",\n            lineWidth: null\n        });\n\n        if (cfg.preset) { // Apply preset then override with configs where provided\n            this.preset = cfg.preset;\n            if (cfg.lineWidth !== undefined) {\n                this.lineWidth = cfg.lineWidth;\n            }\n        } else {\n            this._preset = \"default\";\n            this.lineWidth = cfg.lineWidth;\n        }\n    }\n\n    /**\n     * Sets line width.\n     *\n     * Default value is ````1```` pixels.\n     *\n     * @type {Number}\n     */\n    set lineWidth(value) {\n        this._state.lineWidth = value || 1;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the line width.\n     *\n     * Default value is ````1```` pixels.\n     *\n     * @type {Number}\n     */\n    get lineWidth() {\n        return this._state.lineWidth;\n    }\n\n    /**\n     * Selects a preset LinesMaterial configuration.\n     *\n     * Default value is ````\"default\"````.\n     *\n     * @type {String}\n     */\n    set preset(value) {\n        value = value || \"default\";\n        if (this._preset === value) {\n            return;\n        }\n        const preset = PRESETS[value];\n        if (!preset) {\n            this.error(\"unsupported preset: '\" + value + \"' - supported values are \" + Object.keys(PRESETS).join(\", \"));\n            return;\n        }\n        this.lineWidth = preset.lineWidth;\n        this._preset = value;\n    }\n\n    /**\n     * The current preset LinesMaterial configuration.\n     *\n     * Default value is ````\"default\"````.\n     *\n     * @type {String}\n     */\n    get preset() {\n        return this._preset;\n    }\n\n    /**\n     * @private\n     * @return {string}\n     */\n    get hash() {\n        return [\"\" + this.lineWidth].join((\";\"));\n    }\n\n    /**\n     * Destroys this LinesMaterial.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {LinesMaterial};","import {core} from '../core.js';\nimport {utils} from '../utils.js';\nimport {math} from '../math/math.js';\nimport {Component} from '../Component.js';\nimport {Canvas} from '../canvas/Canvas.js';\nimport {Renderer} from '../webgl/Renderer.js';\nimport {Input} from '../input/Input.js';\nimport {Viewport} from '../viewport/Viewport.js';\nimport {Camera} from '../camera/Camera.js';\nimport {DirLight} from '../lights/DirLight.js';\nimport {AmbientLight} from '../lights/AmbientLight.js';\nimport {ReadableGeometry} from \"../geometry/ReadableGeometry.js\";\nimport {buildBoxGeometry} from '../geometry/builders/buildBoxGeometry.js';\nimport {PhongMaterial} from '../materials/PhongMaterial.js';\nimport {EmphasisMaterial} from '../materials/EmphasisMaterial.js';\nimport {EdgeMaterial} from '../materials/EdgeMaterial.js';\nimport {Metrics} from \"../metriqs/Metriqs.js\";\nimport {SAO} from \"../postfx/SAO.js\";\nimport {PointsMaterial} from \"../materials/PointsMaterial.js\";\nimport {LinesMaterial} from \"../materials/LinesMaterial.js\";\n\n// Enables runtime check for redundant calls to object state update methods, eg. Scene#_objectVisibilityUpdated\nconst ASSERT_OBJECT_STATE_UPDATE = false;\n\n// Cached vars to avoid garbage collection\n\nfunction getEntityIDMap(scene, entityIds) {\n    const map = {};\n    let entityId;\n    let entity;\n    for (let i = 0, len = entityIds.length; i < len; i++) {\n        entityId = entityIds[i];\n        entity = scene.component[entityId];\n        if (!entity) {\n            scene.warn(\"pick(): Component not found: \" + entityId);\n            continue;\n        }\n        if (!entity.isEntity) {\n            scene.warn(\"pick(): Component is not an Entity: \" + entityId);\n            continue;\n        }\n        map[entityId] = true;\n    }\n    return map;\n}\n\n/**\n * Fired whenever a debug message is logged on a component within this Scene.\n * @event log\n * @param {String} value The debug message\n */\n\n/**\n * Fired whenever an error is logged on a component within this Scene.\n * @event error\n * @param {String} value The error message\n */\n\n/**\n * Fired whenever a warning is logged on a component within this Scene.\n * @event warn\n * @param {String} value The warning message\n */\n\n/**\n * @desc Contains the components that comprise a 3D scene.\n *\n * * A {@link Viewer} has a single Scene, which it provides in {@link Viewer#scene}.\n * * Plugins like {@link AxisGizmoPlugin} also have their own private Scenes.\n * * Each Scene has a corresponding {@link MetaScene}, which the Viewer provides in {@link Viewer#metaScene}.\n *\n * ## Getting a Viewer's Scene\n *\n * ````javascript\n * var scene = viewer.scene;\n * ````\n *\n * ## Creating and accessing Scene components\n *\n * As a brief introduction to creating Scene components, we'll create a {@link Mesh} that has a\n * {@link buildTorusGeometry} and a {@link PhongMaterial}:\n *\n * ````javascript\n * var teapotMesh = new Mesh(scene, {\n *     id: \"myMesh\",                               // <<---------- ID automatically generated if not provided\n *     geometry: new TorusGeometry(scene),\n *     material: new PhongMaterial(scene, {\n *         id: \"myMaterial\",\n *         diffuse: [0.2, 0.2, 1.0]\n *     })\n * });\n *\n * teapotMesh.scene.camera.eye = [45, 45, 45];\n * ````\n *\n * Find components by ID in their Scene's {@link Scene#components} map:\n *\n * ````javascript\n * var teapotMesh = scene.components[\"myMesh\"];\n * teapotMesh.visible = false;\n *\n * var teapotMaterial = scene.components[\"myMaterial\"];\n * teapotMaterial.diffuse = [1,0,0]; // Change to red\n * ````\n *\n * A Scene also has a map of component instances for each {@link Component} subtype:\n *\n * ````javascript\n * var meshes = scene.types[\"Mesh\"];\n * var teapotMesh = meshes[\"myMesh\"];\n * teapotMesh.xrayed = true;\n *\n * var phongMaterials = scene.types[\"PhongMaterial\"];\n * var teapotMaterial = phongMaterials[\"myMaterial\"];\n * teapotMaterial.diffuse = [0,1,0]; // Change to green\n * ````\n *\n * See {@link Node}, {@link Node} and {@link Model} for how to create and access more sophisticated content.\n *\n * ## Controlling the camera\n *\n * Use the Scene's {@link Camera} to control the current viewpoint and projection:\n *\n * ````javascript\n * var camera = myScene.camera;\n *\n * camera.eye = [-10,0,0];\n * camera.look = [-10,0,0];\n * camera.up = [0,1,0];\n *\n * camera.projection = \"perspective\";\n * camera.perspective.fov = 45;\n * //...\n * ````\n *\n * ## Managing the canvas\n *\n * The Scene's {@link Canvas} component provides various conveniences relevant to the WebGL canvas, such\n * as firing resize events etc:\n *\n * ````javascript\n * var canvas = scene.canvas;\n *\n * canvas.on(\"boundary\", function(boundary) {\n *     //...\n * });\n * ````\n *\n * ## Picking\n *\n * Use {@link Scene#pick} to pick and raycast entites.\n *\n * For example, to pick a point on the surface of the closest entity at the given canvas coordinates:\n *\n * ````javascript\n * var pickResult = scene.pick({\n *      pickSurface: true,\n *      canvasPos: [23, 131]\n * });\n *\n * if (pickResult) { // Picked an entity\n *\n *     var entity = pickResult.entity;\n *\n *     var primitive = pickResult.primitive; // Type of primitive that was picked, usually \"triangles\"\n *     var primIndex = pickResult.primIndex; // Position of triangle's first index in the picked Mesh's Geometry's indices array\n *     var indices = pickResult.indices; // UInt32Array containing the triangle's vertex indices\n *     var localPos = pickResult.localPos; // Float64Array containing the picked Local-space position on the triangle\n *     var worldPos = pickResult.worldPos; // Float64Array containing the picked World-space position on the triangle\n *     var viewPos = pickResult.viewPos; // Float64Array containing the picked View-space position on the triangle\n *     var bary = pickResult.bary; // Float64Array containing the picked barycentric position within the triangle\n *     var normal = pickResult.normal; // Float64Array containing the interpolated normal vector at the picked position on the triangle\n *     var uv = pickResult.uv; // Float64Array containing the interpolated UV coordinates at the picked position on the triangle\n * }\n * ````\n *\n * ## Pick masking\n *\n * We can use {@link Scene#pick}'s ````includeEntities```` and ````excludeEntities````  options to mask which {@link Mesh}es we attempt to pick.\n *\n * This is useful for picking through things, to pick only the Entities of interest.\n *\n * To pick only Entities ````\"gearbox#77.0\"```` and ````\"gearbox#79.0\"````, picking through any other Entities that are\n * in the way, as if they weren't there:\n *\n * ````javascript\n * var pickResult = scene.pick({\n *      canvasPos: [23, 131],\n *      includeEntities: [\"gearbox#77.0\", \"gearbox#79.0\"]\n * });\n *\n * if (pickResult) {\n *       // Entity will always be either \"gearbox#77.0\" or \"gearbox#79.0\"\n *       var entity = pickResult.entity;\n * }\n * ````\n *\n * To pick any pickable Entity, except for ````\"gearbox#77.0\"```` and ````\"gearbox#79.0\"````, picking through those\n * Entities if they happen to be in the way:\n *\n * ````javascript\n * var pickResult = scene.pick({\n *      canvasPos: [23, 131],\n *      excludeEntities: [\"gearbox#77.0\", \"gearbox#79.0\"]\n * });\n *\n * if (pickResult) {\n *       // Entity will never be \"gearbox#77.0\" or \"gearbox#79.0\"\n *       var entity = pickResult.entity;\n * }\n * ````\n *\n * See {@link Scene#pick} for more info on picking.\n *\n * ## Querying and tracking boundaries\n *\n * Getting a Scene's World-space axis-aligned boundary (AABB):\n *\n * ````javascript\n * var aabb = scene.aabb; // [xmin, ymin, zmin, xmax, ymax, zmax]\n * ````\n *\n * Subscribing to updates to the AABB, which occur whenever {@link Entity}s are transformed, their\n * {@link ReadableGeometry}s have been updated, or the {@link Camera} has moved:\n *\n * ````javascript\n * scene.on(\"boundary\", function() {\n *      var aabb = scene.aabb;\n * });\n * ````\n *\n * Getting the AABB of the {@link Entity}s with the given IDs:\n *\n * ````JavaScript\n * scene.getAABB(); // Gets collective boundary of all Entities in the scene\n * scene.getAABB(\"saw\"); // Gets boundary of an Object\n * scene.getAABB([\"saw\", \"gearbox\"]); // Gets collective boundary of two Objects\n * ````\n *\n * See {@link Scene#getAABB} and {@link Entity} for more info on querying and tracking boundaries.\n *\n * ## Managing the viewport\n *\n * The Scene's {@link Viewport} component manages the WebGL viewport:\n *\n * ````javascript\n * var viewport = scene.viewport\n * viewport.boundary = [0, 0, 500, 400];;\n * ````\n *\n * ## Controlling rendering\n *\n * You can configure a Scene to perform multiple \"passes\" (renders) per frame. This is useful when we want to render the\n * scene to multiple viewports, such as for stereo effects.\n *\n * In the example, below, we'll configure the Scene to render twice on each frame, each time to different viewport. We'll do this\n * with a callback that intercepts the Scene before each render and sets its {@link Viewport} to a\n * different portion of the canvas. By default, the Scene will clear the canvas only before the first render, allowing the\n * two views to be shown on the canvas at the same time.\n *\n * ````Javascript\n * var viewport = scene.viewport;\n *\n * // Configure Scene to render twice for each frame\n * scene.passes = 2; // Default is 1\n * scene.clearEachPass = false; // Default is false\n *\n * // Render to a separate viewport on each render\n *\n * var viewport = scene.viewport;\n * viewport.autoBoundary = false;\n *\n * scene.on(\"rendering\", function (e) {\n *      switch (e.pass) {\n *          case 0:\n *              viewport.boundary = [0, 0, 200, 200]; // xmin, ymin, width, height\n *              break;\n *\n *          case 1:\n *              viewport.boundary = [200, 0, 200, 200];\n *              break;\n *      }\n * });\n *\n * // We can also intercept the Scene after each render,\n * // (though we're not using this for anything here)\n * scene.on(\"rendered\", function (e) {\n *      switch (e.pass) {\n *          case 0:\n *              break;\n *\n *          case 1:\n *              break;\n *      }\n * });\n * ````\n *\n * ## Gamma correction\n *\n * Within its shaders, xeokit performs shading calculations in linear space.\n *\n * By default, the Scene expects color textures (eg. {@link PhongMaterial#diffuseMap},\n * {@link MetallicMaterial#baseColorMap} and {@link SpecularMaterial#diffuseMap}) to\n * be in pre-multipled gamma space, so will convert those to linear space before they are used in shaders. Other textures are\n * always expected to be in linear space.\n *\n * By default, the Scene will also gamma-correct its rendered output.\n *\n * You can configure the Scene to expect all those color textures to be linear space, so that it does not gamma-correct them:\n *\n * ````javascript\n * scene.gammaInput = false;\n * ````\n *\n * You would still need to gamma-correct the output, though, if it's going straight to the canvas, so normally we would\n * leave that enabled:\n *\n * ````javascript\n * scene.gammaOutput = true;\n * ````\n *\n * See {@link Texture} for more information on texture encoding and gamma.\n *\n * @class Scene\n */\nclass Scene extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Scene\";\n    }\n\n    /**\n     * @private\n     * @constructor\n     * @param {Viewer} viewer The Viewer this Scene belongs to.\n     * @param {Object} cfg Scene configuration.\n     * @param {String} [cfg.canvasId]  ID of an existing HTML canvas for the {@link Scene#canvas} - either this or canvasElement is mandatory. When both values are given, the element reference is always preferred to the ID.\n     * @param {HTMLCanvasElement} [cfg.canvasElement] Reference of an existing HTML canvas for the {@link Scene#canvas} - either this or canvasId is mandatory. When both values are given, the element reference is always preferred to the ID.\n     * @throws {String} Throws an exception when both canvasId or canvasElement are missing or they aren't pointing to a valid HTMLCanvasElement.\n     */\n    constructor(viewer, cfg = {}) {\n\n        super(null, cfg);\n\n        const canvas = cfg.canvasElement || document.getElementById(cfg.canvasId);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw \"Mandatory config expected: valid canvasId or canvasElement\";\n        }\n\n        const transparent = (!!cfg.transparent);\n        const alphaDepthMask = (!!cfg.alphaDepthMask);\n\n        this._aabbDirty = true;\n\n        /**\n         * The {@link Viewer} this Scene belongs to.\n         * @type {Viewer}\n         */\n        this.viewer = viewer;\n\n        /** Decremented each frame, triggers occlusion test for occludable {@link Marker}s when zero.\n         * @private\n         * @type {number}\n         */\n        this.occlusionTestCountdown = 0;\n\n        /**\n         The number of models currently loading.\n\n         @property loading\n         @final\n         @type {Number}\n         */\n        this.loading = 0;\n\n        /**\n         The epoch time (in milliseconds since 1970) when this Scene was instantiated.\n\n         @property timeCreated\n         @final\n         @type {Number}\n         */\n        this.startTime = (new Date()).getTime();\n\n        /**\n         * Map of {@link Entity}s that represent models.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id} when {@link Entity#isModel} is ````true````.\n         *\n         * @property models\n         * @final\n         * @type {{String:Entity}}\n         */\n        this.models = {};\n\n        /**\n         * Map of {@link Entity}s that represents objects.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id} when {@link Entity#isObject} is ````true````.\n         *\n         * @property objects\n         * @final\n         * @type {{String:Entity}}\n         */\n        this.objects = {};\n        this._numObjects = 0;\n\n        /**\n         * Map of currently visible {@link Entity}s that represent objects.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is ````true````, and is visible when {@link Entity#visible} is true.\n         *\n         * @property visibleObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.visibleObjects = {};\n        this._numVisibleObjects = 0;\n\n        /**\n         * Map of currently xrayed {@link Entity}s that represent objects.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is ````true````, and is xrayed when {@link Entity#xrayed} is true.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id}.\n         *\n         * @property xrayedObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.xrayedObjects = {};\n        this._numXRayedObjects = 0;\n\n        /**\n         * Map of currently highlighted {@link Entity}s that represent objects.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is ````true```` is true, and is highlighted when {@link Entity#highlighted} is true.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id}.\n         *\n         * @property highlightedObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.highlightedObjects = {};\n        this._numHighlightedObjects = 0;\n\n        /**\n         * Map of currently selected {@link Entity}s that represent objects.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is true, and is selected while {@link Entity#selected} is true.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id}.\n         *\n         * @property selectedObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.selectedObjects = {};\n        this._numSelectedObjects = 0;\n\n        /**\n         * Map of currently colorized {@link Entity}s that represent objects.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is ````true````.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id}.\n         *\n         * @property colorizedObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.colorizedObjects = {};\n        this._numColorizedObjects = 0;\n\n        /**\n         * Map of {@link Entity}s that represent objects whose opacity was updated.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is ````true````.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id}.\n         *\n         * @property opacityObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.opacityObjects = {};\n        this._numOpacityObjects = 0;\n\n        /**\n         * Map of {@link Entity}s that represent objects whose {@link Entity#offset}s were updated.\n         *\n         * An Entity represents an object if {@link Entity#isObject} is ````true````.\n         *\n         * Each {@link Entity} is mapped here by {@link Entity#id}.\n         *\n         * @property offsetObjects\n         * @final\n         * @type {{String:Object}}\n         */\n        this.offsetObjects = {};\n        this._numOffsetObjects = 0;\n\n        // Cached ID arrays, lazy-rebuilt as needed when stale after map updates\n\n        /**\n         Lazy-regenerated ID lists.\n         */\n        this._modelIds = null;\n        this._objectIds = null;\n        this._visibleObjectIds = null;\n        this._xrayedObjectIds = null;\n        this._highlightedObjectIds = null;\n        this._selectedObjectIds = null;\n        this._colorizedObjectIds = null;\n        this._opacityObjectIds = null;\n        this._offsetObjectIds = null;\n\n        this._collidables = {}; // Components that contribute to the Scene AABB\n        this._compilables = {}; // Components that require shader compilation\n\n        this._needRecompile = false;\n\n        /**\n         * For each {@link Component} type, a map of IDs to {@link Component} instances of that type.\n         *\n         * @type {{String:{String:Component}}}\n         */\n        this.types = {};\n\n        /**\n         * The {@link Component}s within this Scene, each mapped to its {@link Component#id}.\n         *\n         * *@type {{String:Component}}\n         */\n        this.components = {};\n\n        /**\n         * The {@link SectionPlane}s in this Scene, each mapped to its {@link SectionPlane#id}.\n         *\n         * @type {{String:SectionPlane}}\n         */\n        this.sectionPlanes = {};\n\n        /**\n         * The {@link Light}s in this Scene, each mapped to its {@link Light#id}.\n         *\n         * @type {{String:Light}}\n         */\n        this.lights = {};\n\n        /**\n         * The {@link LightMap}s in this Scene, each mapped to its {@link LightMap#id}.\n         *\n         * @type {{String:LightMap}}\n         */\n        this.lightMaps = {};\n\n        /**\n         * The {@link ReflectionMap}s in this Scene, each mapped to its {@link ReflectionMap#id}.\n         *\n         * @type {{String:ReflectionMap}}\n         */\n        this.reflectionMaps = {};\n\n        /**\n         * The real world offset for this Scene\n         *\n         * @type {Number[]}\n         */\n        this.realWorldOffset = cfg.realWorldOffset || new Float64Array([0, 0, 0]);\n\n        /**\n         * Manages the HTML5 canvas for this Scene.\n         *\n         * @type {Canvas}\n         */\n        this.canvas = new Canvas(this, {\n            dontClear: true, // Never destroy this component with Scene#clear();\n            canvas: canvas,\n            spinnerElementId: cfg.spinnerElementId,\n            transparent: transparent,\n            webgl2: cfg.webgl2 !== false,\n            contextAttr: cfg.contextAttr || {},\n            backgroundColor: cfg.backgroundColor,\n            backgroundColorFromAmbientLight: cfg.backgroundColorFromAmbientLight,\n            premultipliedAlpha: cfg.premultipliedAlpha\n        });\n\n        this.canvas.on(\"boundary\", () => {\n            this.glRedraw();\n        });\n\n        this.canvas.on(\"webglContextFailed\", () => {\n            alert(\"xeokit failed to find WebGL!\");\n        });\n\n        this._renderer = new Renderer(this, {\n            transparent: transparent,\n            alphaDepthMask: alphaDepthMask\n        });\n\n        this._sectionPlanesState = new (function () {\n\n            this.sectionPlanes = [];\n\n            this.clippingCaps = false;\n\n            let hash = null;\n\n            this.getHash = function () {\n                if (hash) {\n                    return hash;\n                }\n                const sectionPlanes = this.sectionPlanes;\n                if (sectionPlanes.length === 0) {\n                    return this.hash = \";\";\n                }\n                let sectionPlane;\n\n                const hashParts = [];\n                for (let i = 0, len = sectionPlanes.length; i < len; i++) {\n                    sectionPlane = sectionPlanes[i];\n                    hashParts.push(\"cp\");\n                }\n                hashParts.push(\";\");\n                hash = hashParts.join(\"\");\n                return hash;\n            };\n\n            this.addSectionPlane = function (sectionPlane) {\n                this.sectionPlanes.push(sectionPlane);\n                hash = null;\n            };\n\n            this.removeSectionPlane = function (sectionPlane) {\n                for (let i = 0, len = this.sectionPlanes.length; i < len; i++) {\n                    if (this.sectionPlanes[i].id === sectionPlane.id) {\n                        this.sectionPlanes.splice(i, 1);\n                        hash = null;\n                        return;\n                    }\n                }\n            };\n        })();\n\n        this._lightsState = new (function () {\n\n            const DEFAULT_AMBIENT = math.vec4([0, 0, 0, 0]);\n            const ambientColorIntensity = math.vec4();\n\n            this.lights = [];\n            this.reflectionMaps = [];\n            this.lightMaps = [];\n\n            let hash = null;\n            let ambientLight = null;\n\n            this.getHash = function () {\n                if (hash) {\n                    return hash;\n                }\n                const hashParts = [];\n                const lights = this.lights;\n                let light;\n                for (let i = 0, len = lights.length; i < len; i++) {\n                    light = lights[i];\n                    hashParts.push(\"/\");\n                    hashParts.push(light.type);\n                    hashParts.push((light.space === \"world\") ? \"w\" : \"v\");\n                    if (light.castsShadow) {\n                        hashParts.push(\"sh\");\n                    }\n                }\n                if (this.lightMaps.length > 0) {\n                    hashParts.push(\"/lm\");\n                }\n                if (this.reflectionMaps.length > 0) {\n                    hashParts.push(\"/rm\");\n                }\n                hashParts.push(\";\");\n                hash = hashParts.join(\"\");\n                return hash;\n            };\n\n            this.addLight = function (state) {\n                this.lights.push(state);\n                ambientLight = null;\n                hash = null;\n            };\n\n            this.removeLight = function (state) {\n                for (let i = 0, len = this.lights.length; i < len; i++) {\n                    const light = this.lights[i];\n                    if (light.id === state.id) {\n                        this.lights.splice(i, 1);\n                        if (ambientLight && ambientLight.id === state.id) {\n                            ambientLight = null;\n                        }\n                        hash = null;\n                        return;\n                    }\n                }\n            };\n\n            this.addReflectionMap = function (state) {\n                this.reflectionMaps.push(state);\n                hash = null;\n            };\n\n            this.removeReflectionMap = function (state) {\n                for (let i = 0, len = this.reflectionMaps.length; i < len; i++) {\n                    if (this.reflectionMaps[i].id === state.id) {\n                        this.reflectionMaps.splice(i, 1);\n                        hash = null;\n                        return;\n                    }\n                }\n            };\n\n            this.addLightMap = function (state) {\n                this.lightMaps.push(state);\n                hash = null;\n            };\n\n            this.removeLightMap = function (state) {\n                for (let i = 0, len = this.lightMaps.length; i < len; i++) {\n                    if (this.lightMaps[i].id === state.id) {\n                        this.lightMaps.splice(i, 1);\n                        hash = null;\n                        return;\n                    }\n                }\n            };\n\n            this.getAmbientColorAndIntensity = function () {\n                if (!ambientLight) {\n                    for (let i = 0, len = this.lights.length; i < len; i++) {\n                        const light = this.lights[i];\n                        if (light.type === \"ambient\") {\n                            ambientLight = light;\n                            break;\n                        }\n                    }\n                }\n                if (ambientLight) {\n                    const color = ambientLight.color;\n                    const intensity = ambientLight.intensity;\n                    ambientColorIntensity[0] = color[0];\n                    ambientColorIntensity[1] = color[1];\n                    ambientColorIntensity[2] = color[2];\n                    ambientColorIntensity[3] = intensity\n                    return ambientColorIntensity;\n                } else {\n                    return DEFAULT_AMBIENT;\n                }\n            };\n\n        })();\n\n        /**\n         * Publishes input events that occur on this Scene's canvas.\n         *\n         * @property input\n         * @type {Input}\n         * @final\n         */\n        this.input = new Input(this, {\n            dontClear: true, // Never destroy this component with Scene#clear();\n            element: this.canvas.canvas\n        });\n\n        /**\n         * Configures this Scene's units of measurement and coordinate mapping between Real-space and World-space 3D coordinate systems.\n         *\n         * @property metrics\n         * @type {Metrics}\n         * @final\n         */\n        this.metrics = new Metrics(this, {\n            units: cfg.units,\n            scale: cfg.scale,\n            origin: cfg.origin\n        });\n\n        /** Configures Scalable Ambient Obscurance (SAO) for this Scene.\n         * @type {SAO}\n         * @final\n         */\n        this.sao = new SAO(this, {\n            enabled: cfg.saoEnabled\n        });\n\n        this.ticksPerRender = cfg.ticksPerRender;\n        this.ticksPerOcclusionTest = cfg.ticksPerOcclusionTest;\n        this.passes = cfg.passes;\n        this.clearEachPass = cfg.clearEachPass;\n        this.gammaInput = cfg.gammaInput;\n        this.gammaOutput = cfg.gammaOutput;\n        this.gammaFactor = cfg.gammaFactor;\n\n        this._entityOffsetsEnabled = !!cfg.entityOffsetsEnabled;\n        this._logarithmicDepthBufferEnabled = !!cfg.logarithmicDepthBufferEnabled;\n\n        this._pbrEnabled = !!cfg.pbrEnabled;\n\n        // Register Scene on xeokit\n        // Do this BEFORE we add components below\n        core._addScene(this);\n\n        this._initDefaults();\n\n        // Global components\n\n        this._viewport = new Viewport(this, {\n            id: \"default.viewport\",\n            autoBoundary: true,\n            dontClear: true // Never destroy this component with Scene#clear();\n        });\n\n        this._camera = new Camera(this, {\n            id: \"default.camera\",\n            dontClear: true // Never destroy this component with Scene#clear();\n        });\n\n        // Default lights\n\n        new AmbientLight(this, {\n            color: [1.0, 1.0, 1.0],\n            intensity: 0.7\n        });\n\n        new DirLight(this, {\n            dir: [0.8, -.5, -0.5],\n            color: [0.67, 0.67, 1.0],\n            intensity: 0.7,\n            space: \"world\"\n        });\n\n        new DirLight(this, {\n            dir: [-0.8, -1.0, 0.5],\n            color: [1, 1, .9],\n            intensity: 0.9,\n            space: \"world\"\n        });\n\n        this._camera.on(\"dirty\", () => {\n            this._renderer.imageDirty();\n        });\n    }\n\n    _initDefaults() {\n\n        // Call this Scene's property accessors to lazy-init their properties\n\n        let dummy; // Keeps Codacy happy\n\n        dummy = this.geometry;\n        dummy = this.material;\n        dummy = this.xrayMaterial;\n        dummy = this.edgeMaterial;\n        dummy = this.selectedMaterial;\n        dummy = this.highlightMaterial;\n    }\n\n    _addComponent(component) {\n        if (component.id) { // Manual ID\n            if (this.components[component.id]) {\n                this.error(\"Component \" + utils.inQuotes(component.id) + \" already exists in Scene - ignoring ID, will randomly-generate instead\");\n                component.id = null;\n            }\n        }\n        if (!component.id) { // Auto ID\n            if (window.nextID === undefined) {\n                window.nextID = 0;\n            }\n            //component.id = math.createUUID();\n            component.id = \"__\" + window.nextID++;\n            while (this.components[component.id]) {\n                component.id = math.createUUID();\n            }\n        }\n        this.components[component.id] = component;\n\n        // Register for class type\n        const type = component.type;\n        let types = this.types[component.type];\n        if (!types) {\n            types = this.types[type] = {};\n        }\n        types[component.id] = component;\n\n        if (component.compile) {\n            this._compilables[component.id] = component;\n        }\n        if (component.isDrawable) {\n            this._renderer.addDrawable(component.id, component);\n            this._collidables[component.id] = component;\n        }\n    }\n\n    _removeComponent(component) {\n        var id = component.id;\n        var type = component.type;\n        delete this.components[id];\n        // Unregister for types\n        const types = this.types[type];\n        if (types) {\n            delete types[id];\n            if (utils.isEmptyObject(types)) {\n                delete this.types[type];\n            }\n        }\n        if (component.compile) {\n            delete this._compilables[component.id];\n        }\n        if (component.isDrawable) {\n            this._renderer.removeDrawable(component.id);\n            delete this._collidables[component.id];\n        }\n    }\n\n    // Methods below are called by various component types to register themselves on their\n    // Scene. Violates Hollywood Principle, where we could just filter on type in _addComponent,\n    // but this is faster than checking the type of each component in such a filter.\n\n    _sectionPlaneCreated(sectionPlane) {\n        this.sectionPlanes[sectionPlane.id] = sectionPlane;\n        this.scene._sectionPlanesState.addSectionPlane(sectionPlane._state);\n        this.scene.fire(\"sectionPlaneCreated\", sectionPlane, true /* Don't retain event */);\n        this._needRecompile = true;\n    }\n\n    _lightCreated(light) {\n        this.lights[light.id] = light;\n        this.scene._lightsState.addLight(light._state);\n        this._needRecompile = true;\n    }\n\n    _lightMapCreated(lightMap) {\n        this.lightMaps[lightMap.id] = lightMap;\n        this.scene._lightsState.addLightMap(lightMap._state);\n        this._needRecompile = true;\n    }\n\n    _reflectionMapCreated(reflectionMap) {\n        this.reflectionMaps[reflectionMap.id] = reflectionMap;\n        this.scene._lightsState.addReflectionMap(reflectionMap._state);\n        this._needRecompile = true;\n    }\n\n    _sectionPlaneDestroyed(sectionPlane) {\n        delete this.sectionPlanes[sectionPlane.id];\n        this.scene._sectionPlanesState.removeSectionPlane(sectionPlane._state);\n        this.scene.fire(\"sectionPlaneDestroyed\", sectionPlane, true /* Don't retain event */);\n        this._needRecompile = true;\n    }\n\n    _lightDestroyed(light) {\n        delete this.lights[light.id];\n        this.scene._lightsState.removeLight(light._state);\n        this._needRecompile = true;\n    }\n\n    _lightMapDestroyed(lightMap) {\n        delete this.lightMaps[lightMap.id];\n        this.scene._lightsState.removeLightMap(lightMap._state);\n        this._needRecompile = true;\n    }\n\n    _reflectionMapDestroyed(reflectionMap) {\n        delete this.reflectionMaps[reflectionMap.id];\n        this.scene._lightsState.removeReflectionMap(reflectionMap._state);\n        this._needRecompile = true;\n    }\n\n    _registerModel(entity) {\n        this.models[entity.id] = entity;\n        this._modelIds = null; // Lazy regenerate\n    }\n\n    _deregisterModel(entity) {\n        delete this.models[entity.id];\n        this._modelIds = null; // Lazy regenerate\n    }\n\n    _registerObject(entity) {\n        this.objects[entity.id] = entity;\n        this._numObjects++;\n        this._objectIds = null; // Lazy regenerate\n    }\n\n    _deregisterObject(entity) {\n        delete this.objects[entity.id];\n        this._numObjects--;\n        this._objectIds = null; // Lazy regenerate\n    }\n\n    _objectVisibilityUpdated(entity, notify = true) {\n        if (entity.visible) {\n            if (ASSERT_OBJECT_STATE_UPDATE && this.visibleObjects[entity.id]) {\n                console.error(\"Redundant object visibility update (visible=true)\");\n                return;\n            }\n            this.visibleObjects[entity.id] = entity;\n            this._numVisibleObjects++;\n        } else {\n            if (ASSERT_OBJECT_STATE_UPDATE && (!this.visibleObjects[entity.id])) {\n                console.error(\"Redundant object visibility update (visible=false)\");\n                return;\n            }\n            delete this.visibleObjects[entity.id];\n            this._numVisibleObjects--;\n        }\n        this._visibleObjectIds = null; // Lazy regenerate\n        if (notify) {\n            this.fire(\"objectVisibility\", entity, true);\n        }\n    }\n\n    _objectXRayedUpdated(entity) {\n        if (entity.xrayed) {\n            if (ASSERT_OBJECT_STATE_UPDATE && this.xrayedObjects[entity.id]) {\n                console.error(\"Redundant object xray update (xrayed=true)\");\n                return;\n            }\n            this.xrayedObjects[entity.id] = entity;\n            this._numXRayedObjects++;\n        } else {\n            if (ASSERT_OBJECT_STATE_UPDATE && (!this.xrayedObjects[entity.id])) {\n                console.error(\"Redundant object xray update (xrayed=false)\");\n                return;\n            }\n            delete this.xrayedObjects[entity.id];\n            this._numXRayedObjects--;\n        }\n        this._xrayedObjectIds = null; // Lazy regenerate\n    }\n\n    _objectHighlightedUpdated(entity) {\n        if (entity.highlighted) {\n            if (ASSERT_OBJECT_STATE_UPDATE && this.highlightedObjects[entity.id]) {\n                console.error(\"Redundant object highlight update (highlighted=true)\");\n                return;\n            }\n            this.highlightedObjects[entity.id] = entity;\n            this._numHighlightedObjects++;\n        } else {\n            if (ASSERT_OBJECT_STATE_UPDATE && (!this.highlightedObjects[entity.id])) {\n                console.error(\"Redundant object highlight update (highlighted=false)\");\n                return;\n            }\n            delete this.highlightedObjects[entity.id];\n            this._numHighlightedObjects--;\n        }\n        this._highlightedObjectIds = null; // Lazy regenerate\n    }\n\n    _objectSelectedUpdated(entity) {\n        if (entity.selected) {\n            if (ASSERT_OBJECT_STATE_UPDATE && this.selectedObjects[entity.id]) {\n                console.error(\"Redundant object select update (selected=true)\");\n                return;\n            }\n            this.selectedObjects[entity.id] = entity;\n            this._numSelectedObjects++;\n        } else {\n            if (ASSERT_OBJECT_STATE_UPDATE && (!this.selectedObjects[entity.id])) {\n                console.error(\"Redundant object select update (selected=false)\");\n                return;\n            }\n            delete this.selectedObjects[entity.id];\n            this._numSelectedObjects--;\n        }\n        this._selectedObjectIds = null; // Lazy regenerate\n    }\n\n    _objectColorizeUpdated(entity, colorized) {\n        if (colorized) {\n            this.colorizedObjects[entity.id] = entity;\n            this._numColorizedObjects++;\n        } else {\n            delete this.colorizedObjects[entity.id];\n            this._numColorizedObjects--;\n        }\n        this._colorizedObjectIds = null; // Lazy regenerate\n    }\n\n    _objectOpacityUpdated(entity, opacityUpdated) {\n        if (opacityUpdated) {\n            this.opacityObjects[entity.id] = entity;\n            this._numOpacityObjects++;\n        } else {\n            delete this.opacityObjects[entity.id];\n            this._numOpacityObjects--;\n        }\n        this._opacityObjectIds = null; // Lazy regenerate\n    }\n\n    _objectOffsetUpdated(entity, offset) {\n        if (!offset || offset[0] === 0 && offset[1] === 0 && offset[2] === 0) {\n            this.offsetObjects[entity.id] = entity;\n            this._numOffsetObjects++;\n        } else {\n            delete this.offsetObjects[entity.id];\n            this._numOffsetObjects--;\n        }\n        this._offsetObjectIds = null; // Lazy regenerate\n    }\n\n    _webglContextLost() {\n        //  this.loading++;\n        this.canvas.spinner.processes++;\n        for (const id in this.components) {\n            if (this.components.hasOwnProperty(id)) {\n                const component = this.components[id];\n                if (component._webglContextLost) {\n                    component._webglContextLost();\n                }\n            }\n        }\n        this._renderer.webglContextLost();\n    }\n\n    _webglContextRestored() {\n        const gl = this.canvas.gl;\n        for (const id in this.components) {\n            if (this.components.hasOwnProperty(id)) {\n                const component = this.components[id];\n                if (component._webglContextRestored) {\n                    component._webglContextRestored(gl);\n                }\n            }\n        }\n        this._renderer.webglContextRestored(gl);\n        //this.loading--;\n        this.canvas.spinner.processes--;\n    }\n\n    /**\n     * Whether {@link Entity#offset} is enabled.\n     *\n     * This is set via the {@link Viewer} constructor and is ````false```` by default.\n     *\n     * @returns {Boolean} True if {@link Entity#offset} is enabled.\n     */\n    get entityOffsetsEnabled() {\n        return this._entityOffsetsEnabled;\n    }\n\n    /**\n     * Whether logarithmic depth buffer is enabled.\n     *\n     * This is set via the {@link Viewer} constructor and is ````false```` by default.\n     *\n     * @returns {Boolean} True if logarithmic depth buffer is enabled.\n     */\n    get logarithmicDepthBufferEnabled() {\n        return this._logarithmicDepthBufferEnabled;\n    }\n\n    /**\n     * Sets whether physically-based rendering is enabled.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} True if quality rendering is enabled.\n     */\n    set pbrEnabled(pbrEnabled) {\n        this._pbrEnabled = !!pbrEnabled;\n        this.glRedraw();\n    }\n\n    /**\n     * Sets whether quality rendering is enabled.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} True if quality rendering is enabled.\n     */\n    get pbrEnabled() {\n        return this._pbrEnabled;\n    }\n\n    /**\n     * Performs an occlusion test on all {@link Marker}s in this {@link Scene}.\n     *\n     * Sets each {@link Marker#visible} ````true```` if the Marker is currently not occluded by any opaque {@link Entity}s\n     * in the Scene, or ````false```` if an Entity is occluding it.\n     */\n    doOcclusionTest() {\n        if (this._needRecompile) {\n            this._recompile();\n            this._needRecompile = false;\n        }\n        this._renderer.doOcclusionTest();\n    }\n\n    /**\n     * Renders a single frame of this Scene.\n     *\n     * The Scene will periodically render itself after any updates, but you can call this method to force a render\n     * if required.\n     *\n     * @param {Boolean} [forceRender=false] Forces a render when true, otherwise only renders if something has changed in this Scene\n     * since the last render.\n     */\n    render(forceRender) {\n\n        if (forceRender) {\n            core.runTasks();\n        }\n\n        const renderEvent = {\n            sceneId: null,\n            pass: 0\n        };\n\n        if (this._needRecompile) {\n            this._recompile();\n            this._renderer.imageDirty();\n            this._needRecompile = false;\n        }\n\n        renderEvent.sceneId = this.id;\n\n        const passes = this._passes;\n        const clearEachPass = this._clearEachPass;\n        let pass;\n        let clear;\n\n        for (pass = 0; pass < passes; pass++) {\n\n            renderEvent.pass = pass;\n\n            /**\n             * Fired when about to render a frame for a Scene.\n             *\n             * @event rendering\n             * @param {String} sceneID The ID of this Scene.\n             * @param {Number} pass Index of the pass we are about to render (see {@link Scene#passes}).\n             */\n            this.fire(\"rendering\", renderEvent, true);\n\n            clear = clearEachPass || (pass === 0);\n\n            this._renderer.render({pass: pass, clear: clear, force: forceRender});\n\n            /**\n             * Fired when we have just rendered a frame for a Scene.\n             *\n             * @event rendering\n             * @param {String} sceneID The ID of this Scene.\n             * @param {Number} pass Index of the pass we rendered (see {@link Scene#passes}).\n             */\n            this.fire(\"rendered\", renderEvent, true);\n        }\n\n        this._saveAmbientColor();\n    }\n\n    _recompile() {\n        for (const id in this._compilables) {\n            if (this._compilables.hasOwnProperty(id)) {\n                this._compilables[id].compile();\n            }\n        }\n        this._renderer.shadowsDirty();\n        this.fire(\"compile\", this, true);\n    }\n\n    _saveAmbientColor() {\n        const canvas = this.canvas;\n        if (!canvas.transparent && !canvas.backgroundImage && !canvas.backgroundColor) {\n            const ambientColorIntensity = this._lightsState.getAmbientColorAndIntensity();\n            if (!this._lastAmbientColor ||\n                this._lastAmbientColor[0] !== ambientColorIntensity[0] ||\n                this._lastAmbientColor[1] !== ambientColorIntensity[1] ||\n                this._lastAmbientColor[2] !== ambientColorIntensity[2] ||\n                this._lastAmbientColor[3] !== ambientColorIntensity[3]) {\n                canvas.backgroundColor = ambientColorIntensity;\n                if (!this._lastAmbientColor) {\n                    this._lastAmbientColor = math.vec4([0, 0, 0, 1]);\n                }\n                this._lastAmbientColor.set(ambientColorIntensity);\n            }\n        } else {\n            this._lastAmbientColor = null;\n        }\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#models}.\n     *\n     * @type {String[]}\n     */\n    get modelIds() {\n        if (!this._modelIds) {\n            this._modelIds = Object.keys(this.models);\n        }\n        return this._modelIds;\n    }\n\n    /**\n     * Gets the number of {@link Entity}s in {@link Scene#objects}.\n     *\n     * @type {Number}\n     */\n    get numObjects() {\n        return this._numObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#objects}.\n     *\n     * @type {String[]}\n     */\n    get objectIds() {\n        if (!this._objectIds) {\n            this._objectIds = Object.keys(this.objects);\n        }\n        return this._objectIds;\n    }\n\n    /**\n     * Gets the number of {@link Entity}s in {@link Scene#visibleObjects}.\n     *\n     * @type {Number}\n     */\n    get numVisibleObjects() {\n        return this._numVisibleObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#visibleObjects}.\n     *\n     * @type {String[]}\n     */\n    get visibleObjectIds() {\n        if (!this._visibleObjectIds) {\n            this._visibleObjectIds = Object.keys(this.visibleObjects);\n        }\n        return this._visibleObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link Entity}s in {@link Scene#xrayedObjects}.\n     *\n     * @type {Number}\n     */\n    get numXRayedObjects() {\n        return this._numXRayedObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#xrayedObjects}.\n     *\n     * @type {String[]}\n     */\n    get xrayedObjectIds() {\n        if (!this._xrayedObjectIds) {\n            this._xrayedObjectIds = Object.keys(this.xrayedObjects);\n        }\n        return this._xrayedObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link Entity}s in {@link Scene#highlightedObjects}.\n     *\n     * @type {Number}\n     */\n    get numHighlightedObjects() {\n        return this._numHighlightedObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#highlightedObjects}.\n     *\n     * @type {String[]}\n     */\n    get highlightedObjectIds() {\n        if (!this._highlightedObjectIds) {\n            this._highlightedObjectIds = Object.keys(this.highlightedObjects);\n        }\n        return this._highlightedObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link Entity}s in {@link Scene#selectedObjects}.\n     *\n     * @type {Number}\n     */\n    get numSelectedObjects() {\n        return this._numSelectedObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#selectedObjects}.\n     *\n     * @type {String[]}\n     */\n    get selectedObjectIds() {\n        if (!this._selectedObjectIds) {\n            this._selectedObjectIds = Object.keys(this.selectedObjects);\n        }\n        return this._selectedObjectIds;\n    }\n\n    /**\n     * Gets the number of {@link Entity}s in {@link Scene#colorizedObjects}.\n     *\n     * @type {Number}\n     */\n    get numColorizedObjects() {\n        return this._numColorizedObjects;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#colorizedObjects}.\n     *\n     * @type {String[]}\n     */\n    get colorizedObjectIds() {\n        if (!this._colorizedObjectIds) {\n            this._colorizedObjectIds = Object.keys(this.colorizedObjects);\n        }\n        return this._colorizedObjectIds;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#opacityObjects}.\n     *\n     * @type {String[]}\n     */\n    get opacityObjectIds() {\n        if (!this._opacityObjectIds) {\n            this._opacityObjectIds = Object.keys(this.opacityObjects);\n        }\n        return this._opacityObjectIds;\n    }\n\n    /**\n     * Gets the IDs of the {@link Entity}s in {@link Scene#offsetObjects}.\n     *\n     * @type {String[]}\n     */\n    get offsetObjectIds() {\n        if (!this._offsetObjectIds) {\n            this._offsetObjectIds = Object.keys(this.offsetObjects);\n        }\n        return this._offsetObjectIds;\n    }\n\n    /**\n     * Sets the number of \"ticks\" that happen between each render or this Scene.\n     *\n     * Default value is ````1````.\n     *\n     * @type {Number}\n     */\n    set ticksPerRender(value) {\n        if (value === undefined || value === null) {\n            value = 1;\n        } else if (!utils.isNumeric(value) || value <= 0) {\n            this.error(\"Unsupported value for 'ticksPerRender': '\" + value +\n                \"' - should be an integer greater than zero.\");\n            value = 1;\n        }\n        if (value === this._ticksPerRender) {\n            return;\n        }\n        this._ticksPerRender = value;\n    }\n\n    /**\n     * Gets the number of \"ticks\" that happen between each render or this Scene.\n     *\n     * Default value is ````1````.\n     *\n     * @type {Number}\n     */\n    get ticksPerRender() {\n        return this._ticksPerRender;\n    }\n\n    /**\n     * Sets the number of \"ticks\" that happen between occlusion testing for {@link Marker}s.\n     *\n     * Default value is ````20````.\n     *\n     * @type {Number}\n     */\n    set ticksPerOcclusionTest(value) {\n        if (value === undefined || value === null) {\n            value = 20;\n        } else if (!utils.isNumeric(value) || value <= 0) {\n            this.error(\"Unsupported value for 'ticksPerOcclusionTest': '\" + value +\n                \"' - should be an integer greater than zero.\");\n            value = 20;\n        }\n        if (value === this._ticksPerOcclusionTest) {\n            return;\n        }\n        this._ticksPerOcclusionTest = value;\n    }\n\n    /**\n     * Gets the number of \"ticks\" that happen between each render of this Scene.\n     *\n     * Default value is ````1````.\n     *\n     * @type {Number}\n     */\n    get ticksPerOcclusionTest() {\n        return this._ticksPerOcclusionTest;\n    }\n\n    /**\n     * Sets the number of times this Scene renders per frame.\n     *\n     * Default value is ````1````.\n     *\n     * @type {Number}\n     */\n    set passes(value) {\n        if (value === undefined || value === null) {\n            value = 1;\n        } else if (!utils.isNumeric(value) || value <= 0) {\n            this.error(\"Unsupported value for 'passes': '\" + value +\n                \"' - should be an integer greater than zero.\");\n            value = 1;\n        }\n        if (value === this._passes) {\n            return;\n        }\n        this._passes = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the number of times this Scene renders per frame.\n     *\n     * Default value is ````1````.\n     *\n     * @type {Number}\n     */\n    get passes() {\n        return this._passes;\n    }\n\n    /**\n     * When {@link Scene#passes} is greater than ````1````, indicates whether or not to clear the canvas before each pass (````true````) or just before the first pass (````false````).\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set clearEachPass(value) {\n        value = !!value;\n        if (value === this._clearEachPass) {\n            return;\n        }\n        this._clearEachPass = value;\n        this.glRedraw();\n    }\n\n    /**\n     * When {@link Scene#passes} is greater than ````1````, indicates whether or not to clear the canvas before each pass (````true````) or just before the first pass (````false````).\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get clearEachPass() {\n        return this._clearEachPass;\n    }\n\n    /**\n     * Sets whether or not {@link Scene} should expect all {@link Texture}s and colors to have pre-multiplied gamma.\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set gammaInput(value) {\n        value = value !== false;\n        if (value === this._renderer.gammaInput) {\n            return;\n        }\n        this._renderer.gammaInput = value;\n        this._needRecompile = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether or not {@link Scene} should expect all {@link Texture}s and colors to have pre-multiplied gamma.\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get gammaInput() {\n        return this._renderer.gammaInput;\n    }\n\n    /**\n     * Sets whether or not to render pixels with pre-multiplied gama.\n     *\n     * Default value is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set gammaOutput(value) {\n        value = !!value;\n        if (value === this._renderer.gammaOutput) {\n            return;\n        }\n        this._renderer.gammaOutput = value;\n        this._needRecompile = true;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether or not to render pixels with pre-multiplied gama.\n     *\n     * Default value is ````true````.\n     *\n     * @type {Boolean}\n     */\n    get gammaOutput() {\n        return this._renderer.gammaOutput;\n    }\n\n    /**\n     * Sets the gamma factor to use when {@link Scene#gammaOutput} is set true.\n     *\n     * Default value is ````2.2````.\n     *\n     * @type {Number}\n     */\n    set gammaFactor(value) {\n        value = (value === undefined || value === null) ? 2.2 : value;\n        if (value === this._renderer.gammaFactor) {\n            return;\n        }\n        this._renderer.gammaFactor = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the gamma factor to use when {@link Scene#gammaOutput} is set true.\n     *\n     * Default value is ````2.2````.\n     *\n     * @type {Number}\n     */\n    get gammaFactor() {\n        return this._renderer.gammaFactor;\n    }\n\n    /**\n     * Gets the default {@link Geometry} for this Scene, which is a {@link ReadableGeometry} with a unit-sized box shape.\n     *\n     * Has {@link ReadableGeometry#id} set to \"default.geometry\".\n     *\n     * {@link Mesh}s in this Scene have {@link Mesh#geometry} set to this {@link ReadableGeometry} by default.\n     *\n     * @type {ReadableGeometry}\n     */\n    get geometry() {\n        return this.components[\"default.geometry\"] || buildBoxGeometry(ReadableGeometry, this, {\n            id: \"default.geometry\",\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the default {@link Material} for this Scene, which is a {@link PhongMaterial}.\n     *\n     * Has {@link PhongMaterial#id} set to \"default.material\".\n     *\n     * {@link Mesh}s in this Scene have {@link Mesh#material} set to this {@link PhongMaterial} by default.\n     *\n     * @type {PhongMaterial}\n     */\n    get material() {\n        return this.components[\"default.material\"] || new PhongMaterial(this, {\n            id: \"default.material\",\n            emissive: [0.4, 0.4, 0.4], // Visible by default on geometry without normals\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the default xraying {@link EmphasisMaterial} for this Scene.\n     *\n     * Has {@link EmphasisMaterial#id} set to \"default.xrayMaterial\".\n     *\n     * {@link Mesh}s in this Scene have {@link Mesh#xrayMaterial} set to this {@link EmphasisMaterial} by default.\n     *\n     * {@link Mesh}s are xrayed while {@link Mesh#xrayed} is ````true````.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get xrayMaterial() {\n        return this.components[\"default.xrayMaterial\"] || new EmphasisMaterial(this, {\n            id: \"default.xrayMaterial\",\n            preset: \"sepia\",\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the default highlight {@link EmphasisMaterial} for this Scene.\n     *\n     * Has {@link EmphasisMaterial#id} set to \"default.highlightMaterial\".\n     *\n     * {@link Mesh}s in this Scene have {@link Mesh#highlightMaterial} set to this {@link EmphasisMaterial} by default.\n     *\n     * {@link Mesh}s are highlighted while {@link Mesh#highlighted} is ````true````.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get highlightMaterial() {\n        return this.components[\"default.highlightMaterial\"] || new EmphasisMaterial(this, {\n            id: \"default.highlightMaterial\",\n            preset: \"yellowHighlight\",\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the default selection {@link EmphasisMaterial} for this Scene.\n     *\n     * Has {@link EmphasisMaterial#id} set to \"default.selectedMaterial\".\n     *\n     * {@link Mesh}s in this Scene have {@link Mesh#highlightMaterial} set to this {@link EmphasisMaterial} by default.\n     *\n     * {@link Mesh}s are highlighted while {@link Mesh#highlighted} is ````true````.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get selectedMaterial() {\n        return this.components[\"default.selectedMaterial\"] || new EmphasisMaterial(this, {\n            id: \"default.selectedMaterial\",\n            preset: \"greenSelected\",\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the default {@link EdgeMaterial} for this Scene.\n     *\n     * Has {@link EdgeMaterial#id} set to \"default.edgeMaterial\".\n     *\n     * {@link Mesh}s in this Scene have {@link Mesh#edgeMaterial} set to this {@link EdgeMaterial} by default.\n     *\n     * {@link Mesh}s have their edges emphasized while {@link Mesh#edges} is ````true````.\n     *\n     * @type {EdgeMaterial}\n     */\n    get edgeMaterial() {\n        return this.components[\"default.edgeMaterial\"] || new EdgeMaterial(this, {\n            id: \"default.edgeMaterial\",\n            preset: \"default\",\n            edgeColor: [0.0, 0.0, 0.0],\n            edgeAlpha: 1.0,\n            edgeWidth: 1,\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the {@link PointsMaterial} for this Scene.\n     *\n     * @type {PointsMaterial}\n     */\n    get pointsMaterial() {\n        return this.components[\"default.pointsMaterial\"] || new PointsMaterial(this, {\n            id: \"default.pointsMaterial\",\n            preset: \"default\",\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the {@link LinesMaterial} for this Scene.\n     *\n     * @type {LinesMaterial}\n     */\n    get linesMaterial() {\n        return this.components[\"default.linesMaterial\"] || new LinesMaterial(this, {\n            id: \"default.linesMaterial\",\n            preset: \"default\",\n            dontClear: true\n        });\n    }\n\n    /**\n     * Gets the {@link Viewport} for this Scene.\n     *\n     * @type Viewport\n     */\n    get viewport() {\n        return this._viewport;\n    }\n\n    /**\n     * Gets the {@link Camera} for this Scene.\n     *\n     * @type {Camera}\n     */\n    get camera() {\n        return this._camera;\n    }\n\n    /**\n     * Gets the World-space 3D center of this Scene.\n     *\n     *@type {Number[]}\n     */\n    get center() {\n        if (this._aabbDirty || !this._center) {\n            if (!this._center || !this._center) {\n                this._center = math.vec3();\n            }\n            const aabb = this.aabb;\n            this._center[0] = (aabb[0] + aabb[3]) / 2;\n            this._center[1] = (aabb[1] + aabb[4]) / 2;\n            this._center[2] = (aabb[2] + aabb[5]) / 2;\n        }\n        return this._center;\n    }\n\n    /**\n     * Gets the World-space axis-aligned 3D boundary (AABB) of this Scene.\n     *\n     * The AABB is represented by a six-element Float64Array containing the min/max extents of the axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * When the Scene has no content, will be ````[-100,-100,-100,100,100,100]````.\n     *\n     * @type {Number[]}\n     */\n    get aabb() {\n        if (this._aabbDirty) {\n            if (!this._aabb) {\n                this._aabb = math.AABB3();\n            }\n            let xmin = math.MAX_DOUBLE;\n            let ymin = math.MAX_DOUBLE;\n            let zmin = math.MAX_DOUBLE;\n            let xmax = math.MIN_DOUBLE;\n            let ymax = math.MIN_DOUBLE;\n            let zmax = math.MIN_DOUBLE;\n            let aabb;\n            const collidables = this._collidables;\n            let collidable;\n            let valid = false;\n            for (const collidableId in collidables) {\n                if (collidables.hasOwnProperty(collidableId)) {\n                    collidable = collidables[collidableId];\n                    if (collidable.collidable === false) {\n                        continue;\n                    }\n                    aabb = collidable.aabb;\n                    if (aabb[0] < xmin) {\n                        xmin = aabb[0];\n                    }\n                    if (aabb[1] < ymin) {\n                        ymin = aabb[1];\n                    }\n                    if (aabb[2] < zmin) {\n                        zmin = aabb[2];\n                    }\n                    if (aabb[3] > xmax) {\n                        xmax = aabb[3];\n                    }\n                    if (aabb[4] > ymax) {\n                        ymax = aabb[4];\n                    }\n                    if (aabb[5] > zmax) {\n                        zmax = aabb[5];\n                    }\n                    valid = true;\n                }\n            }\n            if (!valid) {\n                xmin = -100;\n                ymin = -100;\n                zmin = -100;\n                xmax = 100;\n                ymax = 100;\n                zmax = 100;\n            }\n            this._aabb[0] = xmin;\n            this._aabb[1] = ymin;\n            this._aabb[2] = zmin;\n            this._aabb[3] = xmax;\n            this._aabb[4] = ymax;\n            this._aabb[5] = zmax;\n            this._aabbDirty = false;\n        }\n        return this._aabb;\n    }\n\n    _setAABBDirty() {\n        //if (!this._aabbDirty) {\n        this._aabbDirty = true;\n        this.fire(\"boundary\");\n        // }\n    }\n\n    /**\n     * Attempts to pick an {@link Entity} in this Scene.\n     *\n     * Ignores {@link Entity}s with {@link Entity#pickable} set ````false````.\n     *\n     * When an {@link Entity} is picked, fires a \"pick\" event on the {@link Entity} with the pick result as parameters.\n     *\n     * Picking the {@link Entity} at the given canvas coordinates:\n\n     * ````javascript\n     * var pickResult = scene.pick({\n     *          canvasPos: [23, 131]\n     *       });\n     *\n     * if (pickResult) { // Picked an Entity\n     *         var entity = pickResult.entity;\n     *     }\n     * ````\n     *\n     * Picking, with a ray cast through the canvas, hits an {@link Entity}:\n     *\n     * ````javascript\n     * var pickResult = scene.pick({\n     *         pickSurface: true,\n     *         canvasPos: [23, 131]\n     *      });\n     *\n     * if (pickResult) { // Picked an Entity\n     *\n     *     var entity = pickResult.entity;\n     *\n     *     if (pickResult.primitive === \"triangle\") {\n     *\n     *         // Picked a triangle on the entity surface\n     *\n     *         var primIndex = pickResult.primIndex; // Position of triangle's first index in the picked Entity's Geometry's indices array\n     *         var indices = pickResult.indices; // UInt32Array containing the triangle's vertex indices\n     *         var localPos = pickResult.localPos; // Float64Array containing the picked Local-space position on the triangle\n     *         var worldPos = pickResult.worldPos; // Float64Array containing the picked World-space position on the triangle\n     *         var viewPos = pickResult.viewPos; // Float64Array containing the picked View-space position on the triangle\n     *         var bary = pickResult.bary; // Float64Array containing the picked barycentric position within the triangle\n     *         var worldNormal = pickResult.worldNormal; // Float64Array containing the interpolated World-space normal vector at the picked position on the triangle\n     *         var uv = pickResult.uv; // Float64Array containing the interpolated UV coordinates at the picked position on the triangle\n     *\n     *     } else if (pickResult.worldPos && pickResult.worldNormal) {\n     *\n     *         // Picked a point and normal on the entity surface\n     *\n     *         var worldPos = pickResult.worldPos; // Float64Array containing the picked World-space position on the Entity surface\n     *         var worldNormal = pickResult.worldNormal; // Float64Array containing the picked World-space normal vector on the Entity Surface\n     *     }\n     * }\n     * ````\n     *\n     * Picking the {@link Entity} that intersects an arbitrarily-aligned World-space ray:\n     *\n     * ````javascript\n     * var pickResult = scene.pick({\n     *       pickSurface: true,   // Picking with arbitrarily-positioned ray\n     *       origin: [0,0,-5],    // Ray origin\n     *       direction: [0,0,1]   // Ray direction\n     * });\n     *\n     * if (pickResult) { // Picked an Entity with the ray\n     *\n     *       var entity = pickResult.entity;\n     *\n     *       if (pickResult.primitive == \"triangle\") {\n     *\n     *          // Picked a triangle on the entity surface\n     *\n     *           var primitive = pickResult.primitive; // Type of primitive that was picked, usually \"triangles\"\n     *           var primIndex = pickResult.primIndex; // Position of triangle's first index in the picked Entity's Geometry's indices array\n     *           var indices = pickResult.indices; // UInt32Array containing the triangle's vertex indices\n     *           var localPos = pickResult.localPos; // Float64Array containing the picked Local-space position on the triangle\n     *           var worldPos = pickResult.worldPos; // Float64Array containing the picked World-space position on the triangle\n     *           var viewPos = pickResult.viewPos; // Float64Array containing the picked View-space position on the triangle\n     *           var bary = pickResult.bary; // Float64Array containing the picked barycentric position within the triangle\n     *           var worldNormal = pickResult.worldNormal; // Float64Array containing the interpolated World-space normal vector at the picked position on the triangle\n     *           var uv = pickResult.uv; // Float64Array containing the interpolated UV coordinates at the picked position on the triangle\n     *           var origin = pickResult.origin; // Float64Array containing the World-space ray origin\n     *           var direction = pickResult.direction; // Float64Array containing the World-space ray direction\n     *\n     *     } else if (pickResult.worldPos && pickResult.worldNormal) {\n     *\n     *         // Picked a point and normal on the entity surface\n     *\n     *         var worldPos = pickResult.worldPos; // Float64Array containing the picked World-space position on the Entity surface\n     *         var worldNormal = pickResult.worldNormal; // Float64Array containing the picked World-space normal vector on the Entity Surface\n     *     }\n     * }\n     *  ````\n     *\n     * @param {*} params Picking parameters.\n     * @param {Boolean} [params.pickSurface=false] Whether to find the picked position on the surface of the Entity.\n     * @param {Boolean} [params.pickSurfaceNormal=false] Whether to find the picked normal on the surface of the Entity. Only works if ````pickSurface```` is given.\n     * @param {Number[]} [params.canvasPos] Canvas-space coordinates. When ray-picking, this will override the **origin** and ** direction** parameters and will cause the ray to be fired through the canvas at this position, directly along the negative View-space Z-axis.\n     * @param {Number[]} [params.origin] World-space ray origin when ray-picking. Ignored when canvasPos given.\n     * @param {Number[]} [params.direction] World-space ray direction when ray-picking. Also indicates the length of the ray. Ignored when canvasPos given.\n     * @param {Number[]} [params.matrix] 4x4 transformation matrix to define the World-space ray origin and direction, as an alternative to ````origin```` and ````direction````.\n     * @param {String[]} [params.includeEntities] IDs of {@link Entity}s to restrict picking to. When given, ignores {@link Entity}s whose IDs are not in this list.\n     * @param {String[]} [params.excludeEntities] IDs of {@link Entity}s to ignore. When given, will pick *through* these {@link Entity}s, as if they were not there.\n     * @param {PickResult} [pickResult] Holds the results of the pick attempt. Will use the Scene's singleton PickResult if you don't supply your own.\n     * @returns {PickResult} Holds results of the pick attempt, returned when an {@link Entity} is picked, else null. See method comments for description.\n     */\n    pick(params, pickResult) {\n\n        if (this.canvas.boundary[2] === 0 || this.canvas.boundary[3] === 0) {\n            this.error(\"Picking not allowed while canvas has zero width or height\");\n            return null;\n        }\n\n        params = params || {};\n\n        params.pickSurface = params.pickSurface || params.rayPick; // Backwards compatibility\n\n        if (!params.canvasPos && !params.matrix && (!params.origin || !params.direction)) {\n            this.warn(\"picking without canvasPos, matrix, or ray origin and direction\");\n        }\n\n        const includeEntities = params.includeEntities || params.include; // Backwards compat\n        if (includeEntities) {\n            params.includeEntityIds = getEntityIDMap(this, includeEntities);\n        }\n\n        const excludeEntities = params.excludeEntities || params.exclude; // Backwards compat\n        if (excludeEntities) {\n            params.excludeEntityIds = getEntityIDMap(this, excludeEntities);\n        }\n\n        if (this._needRecompile) {\n            this._recompile();\n            this._renderer.imageDirty();\n            this._needRecompile = false;\n        }\n\n        pickResult = this._renderer.pick(params, pickResult);\n\n        if (pickResult) {\n            if (pickResult.entity && pickResult.entity.fire) {\n                pickResult.entity.fire(\"picked\", pickResult); // TODO: PerformanceModelNode doesn't fire events\n            }\n            return pickResult;\n        }\n    }\n\n    /**\n     * Destroys all non-default {@link Component}s in this Scene.\n     */\n    clear() {\n        var component;\n        for (const id in this.components) {\n            if (this.components.hasOwnProperty(id)) {\n                component = this.components[id];\n                if (!component._dontClear) { // Don't destroy components like Camera, Input, Viewport etc.\n                    component.destroy();\n                }\n            }\n        }\n    }\n\n    /**\n     * Destroys all {@link Light}s in this Scene..\n     */\n    clearLights() {\n        const ids = Object.keys(this.lights);\n        for (let i = 0, len = ids.length; i < len; i++) {\n            this.lights[ids[i]].destroy();\n        }\n    }\n\n    /**\n     * Destroys all {@link SectionPlane}s in this Scene.\n     */\n    clearSectionPlanes() {\n        const ids = Object.keys(this.sectionPlanes);\n        for (let i = 0, len = ids.length; i < len; i++) {\n            this.sectionPlanes[ids[i]].destroy();\n        }\n    }\n\n    /**\n     * Gets the collective axis-aligned boundary (AABB) of a batch of {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * Each {@link Entity} on which {@link Entity#isObject} is registered by {@link Entity#id} in {@link Scene#visibleObjects}.\n     *\n     * Each {@link Entity} is only included in the AABB when {@link Entity#collidable} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @returns {[Number, Number, Number, Number, Number, Number]} An axis-aligned World-space bounding box, given as elements ````[xmin, ymin, zmin, xmax, ymax, zmax]````.\n     */\n    getAABB(ids) {\n        if (ids === undefined) {\n            return this.aabb;\n        }\n        if (utils.isString(ids)) {\n            const entity = this.objects[ids];\n            if (entity && entity.aabb) { // A Component subclass with an AABB\n                return entity.aabb;\n            }\n            ids = [ids]; // Must be an entity type\n        }\n        if (ids.length === 0) {\n            return this.aabb;\n        }\n        let xmin = math.MAX_DOUBLE;\n        let ymin = math.MAX_DOUBLE;\n        let zmin = math.MAX_DOUBLE;\n        let xmax = math.MIN_DOUBLE;\n        let ymax = math.MIN_DOUBLE;\n        let zmax = math.MIN_DOUBLE;\n        let valid;\n        this.withObjects(ids, entity => {\n                if (entity.collidable) {\n                    const aabb = entity.aabb;\n                    if (aabb[0] < xmin) {\n                        xmin = aabb[0];\n                    }\n                    if (aabb[1] < ymin) {\n                        ymin = aabb[1];\n                    }\n                    if (aabb[2] < zmin) {\n                        zmin = aabb[2];\n                    }\n                    if (aabb[3] > xmax) {\n                        xmax = aabb[3];\n                    }\n                    if (aabb[4] > ymax) {\n                        ymax = aabb[4];\n                    }\n                    if (aabb[5] > zmax) {\n                        zmax = aabb[5];\n                    }\n                    valid = true;\n                }\n            }\n        );\n        if (valid) {\n            const aabb2 = math.AABB3();\n            aabb2[0] = xmin;\n            aabb2[1] = ymin;\n            aabb2[2] = zmin;\n            aabb2[3] = xmax;\n            aabb2[4] = ymax;\n            aabb2[5] = zmax;\n            return aabb2;\n        } else {\n            return this.aabb; // Scene AABB\n        }\n    }\n\n    /**\n     * Batch-updates {@link Entity#visible} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * Each {@link Entity} on which both {@link Entity#isObject} and {@link Entity#visible} are ````true```` is\n     * registered by {@link Entity#id} in {@link Scene#visibleObjects}.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} visible Whether or not to cull.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsVisible(ids, visible) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.visible !== visible);\n            entity.visible = visible;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#collidable} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} collidable Whether or not to cull.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCollidable(ids, collidable) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.collidable !== collidable);\n            entity.collidable = collidable;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#culled} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} culled Whether or not to cull.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsCulled(ids, culled) {\n        return this.withObjects(ids, this.objects, entity => {\n            const changed = (entity.culled !== culled);\n            entity.culled = culled;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#selected} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * Each {@link Entity} on which both {@link Entity#isObject} and {@link Entity#selected} are ````true```` is\n     * registered by {@link Entity#id} in {@link Scene#selectedObjects}.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} selected Whether or not to highlight.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsSelected(ids, selected) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.selected !== selected);\n            entity.selected = selected;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#highlighted} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * Each {@link Entity} on which both {@link Entity#isObject} and {@link Entity#highlighted} are ````true```` is\n     * registered by {@link Entity#id} in {@link Scene#highlightedObjects}.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} highlighted Whether or not to highlight.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsHighlighted(ids, highlighted) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.highlighted !== highlighted);\n            entity.highlighted = highlighted;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#xrayed} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * Each {@link Entity} on which both {@link Entity#isObject} and {@link Entity#xrayed} are ````true```` is\n     * registered by {@link Entity#id} in {@link Scene#xrayedObjects}.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} xrayed Whether or not to xray.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsXRayed(ids, xrayed) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.xrayed !== xrayed);\n            entity.xrayed = xrayed;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#edges} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} edges Whether or not to show edges.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsEdges(ids, edges) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.edges !== edges);\n            entity.edges = edges;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#colorize} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Number[]} [colorize=(1,1,1)] RGB colorize factors, multiplied by the rendered pixel colors.\n     * @returns {Boolean} True if any {@link Entity}s changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsColorized(ids, colorize) {\n        return this.withObjects(ids, entity => {\n            entity.colorize = colorize;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#opacity} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Number} [opacity=1.0] Opacity factor, multiplied by the rendered pixel alphas.\n     * @returns {Boolean} True if any {@link Entity}s changed opacity, else false if all updates were redundant and not applied.\n     */\n    setObjectsOpacity(ids, opacity) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.opacity !== opacity);\n            entity.opacity = opacity;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#pickable} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Boolean} pickable Whether or not to enable picking.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    setObjectsPickable(ids, pickable) {\n        return this.withObjects(ids, entity => {\n            const changed = (entity.pickable !== pickable);\n            entity.pickable = pickable;\n            return changed;\n        });\n    }\n\n    /**\n     * Batch-updates {@link Entity#offset} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Number[]} [offset] 3D offset vector.\n     */\n    setObjectsOffset(ids, offset) {\n        this.withObjects(ids, entity => {\n            entity.offset = offset;\n        });\n    }\n\n    /**\n     * Iterates with a callback over {@link Entity#visible} on {@link Entity}s that represent objects.\n     *\n     * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````.\n     *\n     * Each {@link Entity} on which both {@link Entity#isObject} and {@link Entity#visible} are ````true```` is\n     * registered by {@link Entity#id} in {@link Scene#visibleObjects}.\n     *\n     * @param {String[]} ids Array of {@link Entity#id} values.\n     * @param {Function} callback Callback to execute on eacn {@link Entity}.\n     * @returns {Boolean} True if any {@link Entity}s were updated, else false if all updates were redundant and not applied.\n     */\n    withObjects(ids, callback) {\n        if (utils.isString(ids)) {\n            ids = [ids];\n        }\n        let changed = false;\n        for (let i = 0, len = ids.length; i < len; i++) {\n            const id = ids[i];\n            let entity = this.objects[id];\n            if (entity) {\n                changed = callback(entity) || changed;\n            } else {\n                const modelIds = this.modelIds;\n                for (let i = 0, len = modelIds.length; i < len; i++) {\n                    const modelId = modelIds[i];\n                    const globalObjectId = math.globalizeObjectId(modelId, id);\n                    entity = this.objects[globalObjectId];\n                    if (entity) {\n                        changed = callback(entity) || changed;\n                    }\n                }\n            }\n        }\n        return changed;\n    }\n\n    /**\n     * Destroys this Scene.\n     */\n    destroy() {\n\n        super.destroy();\n\n        for (const id in this.components) {\n            if (this.components.hasOwnProperty(id)) {\n                this.components[id].destroy();\n            }\n        }\n\n        this.canvas.gl = null;\n\n        // Memory leak prevention\n        this.components = null;\n        this.models = null;\n        this.objects = null;\n        this.visibleObjects = null;\n        this.xrayedObjects = null;\n        this.highlightedObjects = null;\n        this.selectedObjects = null;\n        this.colorizedObjects = null;\n        this.opacityObjects = null;\n        this.sectionPlanes = null;\n        this.lights = null;\n        this.lightMaps = null;\n        this.reflectionMaps = null;\n        this._objectIds = null;\n        this._visibleObjectIds = null;\n        this._xrayedObjectIds = null;\n        this._highlightedObjectIds = null;\n        this._selectedObjectIds = null;\n        this._colorizedObjectIds = null;\n        this.types = null;\n        this.components = null;\n        this.canvas = null;\n        this._renderer = null;\n        this.input = null;\n        this._viewport = null;\n        this._camera = null;\n    }\n}\n\nexport {Scene};\n","import {utils} from '../../utils.js';\n\n/**\n * @desc Creates box-shaped {@link Geometry}.\n *\n * ## Usage\n *\n * In the example below we'll create a {@link Mesh} with a box-shaped {@link ReadableGeometry}.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildBoxGeometry)]\n *\n * ````javascript\n * import {Viewer, Mesh, buildBoxGeometry, ReadableGeometry, PhongMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *         canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [0, 0, 5];\n * viewer.scene.camera.look = [0, 0, 0];\n * viewer.scene.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildBoxGeometry({\n *         center: [0,0,0],\n *         xSize: 1,  // Half-size on each axis\n *         ySize: 1,\n *         zSize: 1\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildBoxGeometry\n * @param {*} [cfg] Configs\n * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param {Number[]} [cfg.center]  3D point indicating the center position.\n * @param {Number} [cfg.xSize=1.0]  Half-size on the X-axis.\n * @param {Number} [cfg.ySize=1.0]  Half-size on the Y-axis.\n * @param {Number} [cfg.zSize=1.0]  Half-size on the Z-axis.\n * @returns {Object} Configuration for a {@link Geometry} subtype.\n */\nfunction buildBoxGeometry(cfg = {}) {\n\n    let xSize = cfg.xSize || 1;\n    if (xSize < 0) {\n        console.error(\"negative xSize not allowed - will invert\");\n        xSize *= -1;\n    }\n\n    let ySize = cfg.ySize || 1;\n    if (ySize < 0) {\n        console.error(\"negative ySize not allowed - will invert\");\n        ySize *= -1;\n    }\n\n    let zSize = cfg.zSize || 1;\n    if (zSize < 0) {\n        console.error(\"negative zSize not allowed - will invert\");\n        zSize *= -1;\n    }\n\n    const center = cfg.center;\n    const centerX = center ? center[0] : 0;\n    const centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const xmin = -xSize + centerX;\n    const ymin = -ySize + centerY;\n    const zmin = -zSize + centerZ;\n    const xmax = xSize + centerX;\n    const ymax = ySize + centerY;\n    const zmax = zSize + centerZ;\n\n    return utils.apply(cfg, {\n\n        // The vertices - eight for our cube, each\n        // one spanning three array elements for X,Y and Z\n        positions: [\n\n            // v0-v1-v2-v3 front\n            xmax, ymax, zmax,\n            xmin, ymax, zmax,\n            xmin, ymin, zmax,\n            xmax, ymin, zmax,\n\n            // v0-v3-v4-v1 right\n            xmax, ymax, zmax,\n            xmax, ymin, zmax,\n            xmax, ymin, zmin,\n            xmax, ymax, zmin,\n\n            // v0-v1-v6-v1 top\n            xmax, ymax, zmax,\n            xmax, ymax, zmin,\n            xmin, ymax, zmin,\n            xmin, ymax, zmax,\n\n            // v1-v6-v7-v2 left\n            xmin, ymax, zmax,\n            xmin, ymax, zmin,\n            xmin, ymin, zmin,\n            xmin, ymin, zmax,\n\n            // v7-v4-v3-v2 bottom\n            xmin, ymin, zmin,\n            xmax, ymin, zmin,\n            xmax, ymin, zmax,\n            xmin, ymin, zmax,\n\n            // v4-v7-v6-v1 back\n            xmax, ymin, zmin,\n            xmin, ymin, zmin,\n            xmin, ymax, zmin,\n            xmax, ymax, zmin\n        ],\n\n        // Normal vectors, one for each vertex\n        normals: [\n\n            // v0-v1-v2-v3 front\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n            0, 0, 1,\n\n            // v0-v3-v4-v5 right\n            1, 0, 0,\n            1, 0, 0,\n            1, 0, 0,\n            1, 0, 0,\n\n            // v0-v5-v6-v1 top\n            0, 1, 0,\n            0, 1, 0,\n            0, 1, 0,\n            0, 1, 0,\n\n            // v1-v6-v7-v2 left\n            -1, 0, 0,\n            -1, 0, 0,\n            -1, 0, 0,\n            -1, 0, 0,\n\n            // v7-v4-v3-v2 bottom\n            0, -1, 0,\n            0, -1, 0,\n            0, -1, 0,\n            0, -1, 0,\n\n            // v4-v7-v6-v5 back\n            0, 0, -1,\n            0, 0, -1,\n            0, 0, -1,\n            0, 0, -1\n        ],\n\n        // UV coords\n        uv: [\n\n            // v0-v1-v2-v3 front\n            1, 0,\n            0, 0,\n            0, 1,\n            1, 1,\n\n            // v0-v3-v4-v1 right\n            0, 0,\n            0, 1,\n            1, 1,\n            1, 0,\n\n            // v0-v1-v6-v1 top\n            1, 1,\n            1, 0,\n            0, 0,\n            0, 1,\n\n            // v1-v6-v7-v2 left\n            1, 0,\n            0, 0,\n            0, 1,\n            1, 1,\n\n            // v7-v4-v3-v2 bottom\n            0, 1,\n            1, 1,\n            1, 0,\n            0, 0,\n\n            // v4-v7-v6-v1 back\n            0, 1,\n            1, 1,\n            1, 0,\n            0, 0\n        ],\n\n        // Indices - these organise the\n        // positions and uv texture coordinates\n        // into geometric primitives in accordance\n        // with the \"primitive\" parameter,\n        // in this case a set of three indices\n        // for each triangle.\n        //\n        // Note that each triangle is specified\n        // in counter-clockwise winding order.\n        //\n        // You can specify them in clockwise\n        // order if you configure the Modes\n        // node's frontFace flag as \"cw\", instead of\n        // the default \"ccw\".\n        indices: [\n            0, 1, 2,\n            0, 2, 3,\n            // front\n            4, 5, 6,\n            4, 6, 7,\n            // right\n            8, 9, 10,\n            8, 10, 11,\n            // top\n            12, 13, 14,\n            12, 14, 15,\n            // left\n            16, 17, 18,\n            16, 18, 19,\n            // bottom\n            20, 21, 22,\n            20, 22, 23\n        ]\n    });\n}\n\nexport {buildBoxGeometry};\n","import {math} from '../math/math.js';\nimport {utils} from '../utils.js';\nimport {core} from '../core.js';\nimport {Component} from '../Component.js';\n\nconst tempVec3 = math.vec3();\nconst newLook = math.vec3();\nconst newEye = math.vec3();\nconst newUp = math.vec3();\nconst newLookEyeVec = math.vec3();\n\n/**\n * @desc Jumps or flies the {@link Scene}'s {@link Camera} to a given target.\n *\n * * Located at {@link Viewer#cameraFlight}\n * * Can fly or jump to its target.\n * * While flying, can be stopped, or redirected to a different target.\n * * Can also smoothly transition between ortho and perspective projections.\n *\n *\n * A CameraFlightAnimation's target can be:\n *\n * * specific ````eye````, ````look```` and ````up```` positions,\n * * an axis-aligned World-space bounding box (AABB), or\n * * an instance or ID of any {@link Component} subtype that provides a World-space AABB.\n *\n * A target can also contain a ````projection```` type to transition into. For example, if your {@link Camera#projection} is\n * currently ````\"perspective\"```` and you supply {@link CameraFlightAnimation#flyTo} with a ````projection```` property\n * equal to \"ortho\", then CameraFlightAnimation will smoothly transition the Camera into an orthographic projection.\n *\n * Configure {@link CameraFlightAnimation#fit} and {@link CameraFlightAnimation#fitFOV} to make it stop at the point\n * where the target occupies a certain amount of the field-of-view.\n *\n * ## Flying to an Entity\n *\n * Flying to an {@link Entity}:\n *\n * ````Javascript\n * var entity = new Mesh(viewer.scene);\n *\n * // Fly to the Entity's World-space AABB\n * viewer.cameraFlight.flyTo(entity);\n * ````\n * ## Flying to a Position\n *\n * Flying the CameraFlightAnimation from the previous example to specified eye, look and up positions:\n *\n * ````Javascript\n * viewer.cameraFlight.flyTo({\n *    eye: [-5,-5,-5],\n *    look: [0,0,0]\n *    up: [0,1,0],\n *    duration: 1 // Default, seconds\n * },() => {\n *      // Done\n * });\n * ````\n *\n * ## Flying to an AABB\n *\n * Flying the CameraFlightAnimation from the previous two examples explicitly to the {@link Boundary3D\"}}Boundary3D's{{/crossLink}}\n * axis-aligned bounding box:\n *\n * ````Javascript\n * viewer.cameraFlight.flyTo(entity.aabb);\n * ````\n *\n * ## Transitioning Between Projections\n *\n * CameraFlightAnimation also allows us to smoothly transition between Camera projections. We can do that by itself, or\n * in addition to flying the Camera to a target.\n *\n * Let's transition the Camera to orthographic projection:\n *\n * [[Run example](http://xeokit.github.io/xeokit-sdk/examples/#camera_CameraFlightAnimation_projection)]\n *\n * ````Javascript\n * viewer.cameraFlight.flyTo({ projection: \"ortho\", () => {\n *      // Done\n * });\n * ````\n *\n * Now let's transition the Camera back to perspective projection:\n *\n * ````Javascript\n * viewer.cameraFlight.flyTo({ projection: \"perspective\"}, () => {\n *      // Done\n * });\n * ````\n *\n * Fly Camera to a position, while transitioning to orthographic projection:\n *\n * ````Javascript\n * viewer.cameraFlight.flyTo({\n *     eye: [-100,20,2],\n *     look: [0,0,-40],\n *     up: [0,1,0],\n *     projection: \"ortho\", () => {\n *        // Done\n * });\n * ````\n */\nclass CameraFlightAnimation extends Component {\n\n    /**\n     * @private\n     */\n    get type() {\n        return \"CameraFlightAnimation\";\n    }\n\n    /**\n     @constructor\n     @private\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._look1 = math.vec3();\n        this._eye1 = math.vec3();\n        this._up1 = math.vec3();\n        this._look2 = math.vec3();\n        this._eye2 = math.vec3();\n        this._up2 = math.vec3();\n        this._orthoScale1 = 1;\n        this._orthoScale2 = 1;\n        this._flying = false;\n        this._flyEyeLookUp = false;\n        this._flyingEye = false;\n        this._flyingLook = false;\n        this._callback = null;\n        this._callbackScope = null;\n        this._time1 = null;\n        this._time2 = null;\n        this.easing = cfg.easing !== false;\n\n        this.duration = cfg.duration;\n        this.fit = cfg.fit;\n        this.fitFOV = cfg.fitFOV;\n        this.trail = cfg.trail;\n    }\n\n    /**\n     * Flies the {@link Camera} to a target.\n     *\n     *  * When the target is a boundary, the {@link Camera} will fly towards the target and stop when the target fills most of the canvas.\n     *  * When the target is an explicit {@link Camera} position, given as ````eye````, ````look```` and ````up````, then CameraFlightAnimation will interpolate the {@link Camera} to that target and stop there.\n     *\n     * @param {Object|Component} [params=Scene] Either a parameters object or a {@link Component} subtype that has\n     * an AABB. Defaults to the {@link Scene}, which causes the {@link Camera} to fit the Scene in view.\n     * @param {Number} [params.arc=0] Factor in range ````[0..1]```` indicating how much the {@link Camera#eye} position\n     * will swing away from its {@link Camera#look} position as it flies to the target.\n     * @param {Number|String|Component} [params.component] ID or instance of a component to fly to. Defaults to the entire {@link Scene}.\n     * @param {Number[]} [params.aabb] World-space axis-aligned bounding box (AABB) target to fly to.\n     * @param {Number[]} [params.eye] Position to fly the eye position to.\n     * @param {Number[]} [params.look] Position to fly the look position to.\n     * @param {Number[]} [params.up] Position to fly the up vector to.\n     * @param {String} [params.projection] Projection type to transition into as we fly. Can be any of the values of {@link Camera.projection}.\n     * @param {Boolean} [params.fit=true] Whether to fit the target to the view volume. Overrides {@link CameraFlightAnimation#fit}.\n     * @param {Number} [params.fitFOV] How much of field-of-view, in degrees, that a target {@link Entity} or its AABB should\n     * fill the canvas on arrival. Overrides {@link CameraFlightAnimation#fitFOV}.\n     * @param {Number} [params.duration] Flight duration in seconds.  Overrides {@link CameraFlightAnimation#duration}.\n     * @param {Number} [params.orthoScale] Animate the Camera's orthographic scale to this target value. See {@link Ortho#scale}.\n     * @param {Function} [callback] Callback fired on arrival.\n     * @param {Object} [scope] Optional scope for callback.\n     */\n    flyTo(params, callback, scope) {\n\n        params = params || this.scene;\n\n        if (this._flying) {\n            this.stop();\n        }\n\n        this._flying = false;\n        this._flyingEye = false;\n        this._flyingLook = false;\n        this._flyingEyeLookUp = false;\n\n        this._callback = callback;\n        this._callbackScope = scope;\n\n        const camera = this.scene.camera;\n        const flyToProjection = (!!params.projection) && (params.projection !== camera.projection);\n\n        this._eye1[0] = camera.eye[0];\n        this._eye1[1] = camera.eye[1];\n        this._eye1[2] = camera.eye[2];\n\n        this._look1[0] = camera.look[0];\n        this._look1[1] = camera.look[1];\n        this._look1[2] = camera.look[2];\n\n        this._up1[0] = camera.up[0];\n        this._up1[1] = camera.up[1];\n        this._up1[2] = camera.up[2];\n\n        this._orthoScale1 = camera.ortho.scale;\n        this._orthoScale2 = params.orthoScale || this._orthoScale1;\n\n        let aabb;\n        let eye;\n        let look;\n        let up;\n        let componentId;\n\n        if (params.aabb) {\n            aabb = params.aabb;\n\n        } else if (params.length === 6) {\n            aabb = params;\n\n        } else if ((params.eye && params.look) || params.up) {\n            eye = params.eye;\n            look = params.look;\n            up = params.up;\n\n        } else if (params.eye) {\n            eye = params.eye;\n\n        } else if (params.look) {\n            look = params.look;\n\n        } else { // Argument must be an instance or ID of a Component (subtype)\n\n            let component = params;\n\n            if (utils.isNumeric(component) || utils.isString(component)) {\n\n                componentId = component;\n                component = this.scene.components[componentId];\n\n                if (!component) {\n                    this.error(\"Component not found: \" + utils.inQuotes(componentId));\n                    if (callback) {\n                        if (scope) {\n                            callback.call(scope);\n                        } else {\n                            callback();\n                        }\n                    }\n                    return;\n                }\n            }\n            if (!flyToProjection) {\n                aabb = component.aabb || this.scene.aabb;\n            }\n        }\n\n        const poi = params.poi;\n\n        if (aabb) {\n\n            if (aabb[3] < aabb[0] || aabb[4] < aabb[1] || aabb[5] < aabb[2]) { // Don't fly to an inverted boundary\n                return;\n            }\n\n            if (aabb[3] === aabb[0] && aabb[4] === aabb[1] && aabb[5] === aabb[2]) { // Don't fly to an empty boundary\n                return;\n            }\n\n            aabb = aabb.slice();\n            const aabbCenter = math.getAABB3Center(aabb);\n\n            this._look2 = poi || aabbCenter;\n\n            const eyeLookVec = math.subVec3(this._eye1, this._look1, tempVec3);\n            const eyeLookVecNorm = math.normalizeVec3(eyeLookVec);\n            const diag = poi ? math.getAABB3DiagPoint(aabb, poi) : math.getAABB3Diag(aabb);\n            const fitFOV = params.fitFOV || this._fitFOV;\n            const sca = Math.abs(diag / Math.tan(fitFOV * math.DEGTORAD));\n\n            this._orthoScale2 = diag * 1.1;\n\n            this._eye2[0] = this._look2[0] + (eyeLookVecNorm[0] * sca);\n            this._eye2[1] = this._look2[1] + (eyeLookVecNorm[1] * sca);\n            this._eye2[2] = this._look2[2] + (eyeLookVecNorm[2] * sca);\n\n            this._up2[0] = this._up1[0];\n            this._up2[1] = this._up1[1];\n            this._up2[2] = this._up1[2];\n\n            this._flyingEyeLookUp = true;\n\n        } else if (eye || look || up) {\n\n            this._flyingEyeLookUp = !!eye && !!look && !!up;\n            this._flyingEye = !!eye && !look;\n            this._flyingLook = !!look && !eye;\n\n            if (eye) {\n                this._eye2[0] = eye[0];\n                this._eye2[1] = eye[1];\n                this._eye2[2] = eye[2];\n            }\n\n            if (look) {\n                this._look2[0] = look[0];\n                this._look2[1] = look[1];\n                this._look2[2] = look[2];\n            }\n\n            if (up) {\n                this._up2[0] = up[0];\n                this._up2[1] = up[1];\n                this._up2[2] = up[2];\n            }\n        }\n\n        if (flyToProjection) {\n\n            if (params.projection === \"ortho\" && camera.projection !== \"ortho\") {\n                this._projection2 = \"ortho\";\n                this._projMatrix1 = camera.projMatrix.slice();\n                camera.ortho.scale = this._orthoScale2;\n                this._projMatrix2 = camera.ortho.matrix.slice();\n                camera.projection = \"customProjection\";\n            }\n\n            if (params.projection === \"perspective\" && camera.projection !== \"perspective\") {\n                this._projection2 = \"perspective\";\n                this._projMatrix1 = camera.projMatrix.slice();\n                this._projMatrix2 = camera.perspective.matrix.slice();\n                camera.projection = \"customProjection\";\n            }\n        } else {\n            this._projection2 = null;\n        }\n\n        this.fire(\"started\", params, true);\n\n        this._time1 = Date.now();\n        this._time2 = this._time1 + (params.duration ? params.duration * 1000 : this._duration);\n\n        this._flying = true; // False as soon as we stop\n\n        core.scheduleTask(this._update, this);\n    }\n\n    /**\n     * Jumps the {@link Scene}'s {@link Camera} to the given target.\n     *\n     * * When the target is a boundary, this CameraFlightAnimation will position the {@link Camera} at where the target fills most of the canvas.\n     * * When the target is an explicit {@link Camera} position, given as ````eye````, ````look```` and ````up```` vectors, then this CameraFlightAnimation will jump the {@link Camera} to that target.\n     *\n     * @param {*|Component} params  Either a parameters object or a {@link Component} subtype that has a World-space AABB.\n     * @param {Number} [params.arc=0]  Factor in range [0..1] indicating how much the {@link Camera#eye} will swing away from its {@link Camera#look} as it flies to the target.\n     * @param {Number|String|Component} [params.component] ID or instance of a component to fly to.\n     * @param {Number[]} [params.aabb]  World-space axis-aligned bounding box (AABB) target to fly to.\n     * @param {Number[]} [params.eye] Position to fly the eye position to.\n     * @param {Number[]} [params.look]  Position to fly the look position to.\n     * @param {Number[]} [params.up] Position to fly the up vector to.\n     * @param {String} [params.projection] Projection type to transition into. Can be any of the values of {@link Camera.projection}.\n     * @param {Number} [params.fitFOV] How much of field-of-view, in degrees, that a target {@link Entity} or its AABB should fill the canvas on arrival. Overrides {@link CameraFlightAnimation#fitFOV}.\n     * @param {Boolean} [params.fit] Whether to fit the target to the view volume. Overrides {@link CameraFlightAnimation#fit}.\n     */\n    jumpTo(params) {\n        this._jumpTo(params);\n    }\n\n    _jumpTo(params) {\n\n        if (this._flying) {\n            this.stop();\n        }\n\n        const camera = this.scene.camera;\n\n        var aabb;\n        var componentId;\n        var newEye;\n        var newLook;\n        var newUp;\n\n        if (params.aabb) { // Boundary3D\n            aabb = params.aabb;\n\n        } else if (params.length === 6) { // AABB\n            aabb = params;\n\n        } else if (params.eye || params.look || params.up) { // Camera pose\n            newEye = params.eye;\n            newLook = params.look;\n            newUp = params.up;\n\n        } else { // Argument must be an instance or ID of a Component (subtype)\n\n            let component = params;\n\n            if (utils.isNumeric(component) || utils.isString(component)) {\n                componentId = component;\n                component = this.scene.components[componentId];\n                if (!component) {\n                    this.error(\"Component not found: \" + utils.inQuotes(componentId));\n                    return;\n                }\n            }\n            aabb = component.aabb || this.scene.aabb;\n        }\n\n        const poi = params.poi;\n\n        if (aabb) {\n\n            if (aabb[3] <= aabb[0] || aabb[4] <= aabb[1] || aabb[5] <= aabb[2]) { // Don't fly to an empty boundary\n                return;\n            }\n\n            var diag = poi ? math.getAABB3DiagPoint(aabb, poi) : math.getAABB3Diag(aabb);\n\n            newLook = poi || math.getAABB3Center(aabb, newLook);\n\n            if (this._trail) {\n                math.subVec3(camera.look, newLook, newLookEyeVec);\n            } else {\n                math.subVec3(camera.eye, camera.look, newLookEyeVec);\n            }\n\n            math.normalizeVec3(newLookEyeVec);\n            let dist;\n            const fit = (params.fit !== undefined) ? params.fit : this._fit;\n\n            if (fit) {\n                dist = Math.abs((diag) / Math.tan((params.fitFOV || this._fitFOV) * math.DEGTORAD));\n\n            } else {\n                dist = math.lenVec3(math.subVec3(camera.eye, camera.look, tempVec3));\n            }\n\n            math.mulVec3Scalar(newLookEyeVec, dist);\n\n            camera.eye = math.addVec3(newLook, newLookEyeVec, tempVec3);\n            camera.look = newLook;\n\n            this.scene.camera.ortho.scale = diag * 1.1;\n\n        } else if (newEye || newLook || newUp) {\n\n            if (newEye) {\n                camera.eye = newEye;\n            }\n            if (newLook) {\n                camera.look = newLook;\n            }\n            if (newUp) {\n                camera.up = newUp;\n            }\n        }\n\n        if (params.projection) {\n            camera.projection = params.projection;\n        }\n    }\n\n    _update() {\n        if (!this._flying) {\n            return;\n        }\n        const time = Date.now();\n        let t = (time - this._time1) / (this._time2 - this._time1);\n        const stopping = (t >= 1);\n\n        if (t > 1) {\n            t = 1;\n        }\n\n        const tFlight = this.easing ? CameraFlightAnimation._ease(t, 0, 1, 1) : t;\n        const camera = this.scene.camera;\n\n        if (this._flyingEye || this._flyingLook) {\n\n            if (this._flyingEye) {\n                math.subVec3(camera.eye, camera.look, newLookEyeVec);\n                camera.eye = math.lerpVec3(tFlight, 0, 1, this._eye1, this._eye2, newEye);\n                camera.look = math.subVec3(newEye, newLookEyeVec, newLook);\n            } else if (this._flyingLook) {\n                camera.look = math.lerpVec3(tFlight, 0, 1, this._look1, this._look2, newLook);\n                camera.up = math.lerpVec3(tFlight, 0, 1, this._up1, this._up2, newUp);\n            }\n\n        } else if (this._flyingEyeLookUp) {\n\n            camera.eye = math.lerpVec3(tFlight, 0, 1, this._eye1, this._eye2, newEye);\n            camera.look = math.lerpVec3(tFlight, 0, 1, this._look1, this._look2, newLook);\n            camera.up = math.lerpVec3(tFlight, 0, 1, this._up1, this._up2, newUp);\n        }\n\n        if (this._projection2) {\n            const tProj = (this._projection2 === \"ortho\") ? CameraFlightAnimation._easeOutExpo(t, 0, 1, 1) : CameraFlightAnimation._easeInCubic(t, 0, 1, 1);\n            camera.customProjection.matrix = math.lerpMat4(tProj, 0, 1, this._projMatrix1, this._projMatrix2);\n\n        } else {\n            camera.ortho.scale = this._orthoScale1 + (t * (this._orthoScale2 - this._orthoScale1));\n        }\n\n        if (stopping) {\n            this.stop();\n            return;\n        }\n        core.scheduleTask(this._update, this); // Keep flying\n    }\n\n    static _ease(t, b, c, d) { // Quadratic easing out - decelerating to zero velocity http://gizma.com/easing\n        t /= d;\n        return -c * t * (t - 2) + b;\n    }\n\n    static _easeInCubic(t, b, c, d) {\n        t /= d;\n        return c * t * t * t + b;\n    }\n\n    static _easeOutExpo(t, b, c, d) {\n        return c * (-Math.pow(2, -10 * t / d) + 1) + b;\n    }\n\n    /**\n     * Stops an earlier flyTo, fires arrival callback.\n     */\n    stop() {\n        if (!this._flying) {\n            return;\n        }\n        this._flying = false;\n        this._time1 = null;\n        this._time2 = null;\n        if (this._projection2) {\n            this.scene.camera.projection = this._projection2;\n        }\n        const callback = this._callback;\n        if (callback) {\n            this._callback = null;\n            if (this._callbackScope) {\n                callback.call(this._callbackScope);\n            } else {\n                callback();\n            }\n        }\n        this.fire(\"stopped\", true, true);\n    }\n\n    /**\n     * Cancels an earlier flyTo without calling the arrival callback.\n     */\n    cancel() {\n        if (!this._flying) {\n            return;\n        }\n        this._flying = false;\n        this._time1 = null;\n        this._time2 = null;\n        if (this._callback) {\n            this._callback = null;\n        }\n        this.fire(\"canceled\", true, true);\n    }\n\n    /**\n     * Sets the flight duration, in seconds, when calling {@link CameraFlightAnimation#flyTo}.\n     *\n     * Stops any flight currently in progress.\n     *\n     * default value is ````0.5````.\n     *\n     * @param {Number} value New duration value.\n     */\n    set duration(value) {\n        this._duration = value ? (value * 1000.0) : 500;\n        this.stop();\n    }\n\n    /**\n     * Gets the flight duration, in seconds, when calling {@link CameraFlightAnimation#flyTo}.\n     *\n     * default value is ````0.5````.\n     *\n     * @returns {Number} New duration value.\n     */\n    get duration() {\n        return this._duration / 1000.0;\n    }\n\n    /**\n     * Sets if, when CameraFlightAnimation is flying to a boundary, it will always adjust the distance between the\n     * {@link Camera#eye} and {@link Camera#look} so as to ensure that the target boundary is always filling the view volume.\n     *\n     * When false, the eye will remain at its current distance from the look position.\n     *\n     * Default value is ````true````.\n     *\n     * @param {Boolean} value Set ````true```` to activate this behaviour.\n     */\n    set fit(value) {\n        this._fit = value !== false;\n    }\n\n    /**\n     * Gets if, when CameraFlightAnimation is flying to a boundary, it will always adjust the distance between the\n     * {@link Camera#eye} and {@link Camera#look} so as to ensure that the target boundary is always filling the view volume.\n     *\n     * When false, the eye will remain at its current distance from the look position.\n     *\n     * Default value is ````true````.\n     *\n     * @returns {Boolean} value Set ````true```` to activate this behaviour.\n     */\n    get fit() {\n        return this._fit;\n    }\n\n    /**\n     * Sets how much of the perspective field-of-view, in degrees, that a target {@link Entity#aabb} should\n     * fill the canvas when calling {@link CameraFlightAnimation#flyTo} or {@link CameraFlightAnimation#jumpTo}.\n     *\n     * Default value is ````45````.\n     *\n     * @param {Number} value New FOV value.\n     */\n    set fitFOV(value) {\n        this._fitFOV = value || 45;\n    }\n\n    /**\n     * Gets how much of the perspective field-of-view, in degrees, that a target {@link Entity#aabb} should\n     * fill the canvas when calling {@link CameraFlightAnimation#flyTo} or {@link CameraFlightAnimation#jumpTo}.\n     *\n     * Default value is ````45````.\n     *\n     * @returns {Number} Current FOV value.\n     */\n    get fitFOV() {\n        return this._fitFOV;\n    }\n\n    /**\n     * Sets if this CameraFlightAnimation to point the {@link Camera}\n     * in the direction that it is travelling when flying to a target after calling {@link CameraFlightAnimation#flyTo}.\n     *\n     * Default value is ````true````.\n     *\n     * @param {Boolean} value Set ````true```` to activate trailing behaviour.\n     */\n    set trail(value) {\n        this._trail = !!value;\n    }\n\n    /**\n     * Gets if this CameraFlightAnimation points the {@link Camera}\n     * in the direction that it is travelling when flying to a target after calling {@link CameraFlightAnimation#flyTo}.\n     *\n     * Default value is ````true````.\n     *\n     * @returns {Boolean} True if trailing behaviour is active.\n     */\n    get trail() {\n        return this._trail;\n    }\n\n    /**\n     * @private\n     */\n    destroy() {\n        this.stop();\n        super.destroy();\n    }\n}\n\nexport {CameraFlightAnimation};\n","import {math} from \"../../../math/math.js\";\n\nconst screenPos = math.vec4();\nconst viewPos = math.vec4();\n\nconst tempVec3a = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\n\nconst tempVec4a = math.vec4();\nconst tempVec4b = math.vec4();\nconst tempVec4c = math.vec4();\n\n/**\n * @private\n */\nclass PanController {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    /**\n     * Dollys the Camera towards the given target 2D canvas position.\n     *\n     * When the target's corresponding World-space position is also provided, then this function will also test if we've\n     * dollied past the target, and will return ````true```` if that's the case.\n     *\n     * @param [optionalTargetWorldPos] Optional world position of the target\n     * @param targetCanvasPos Canvas position of the target\n     * @param dollyDelta Amount to dolly\n     * @return True if optionalTargetWorldPos was given, and we've dollied past that position.\n     */\n    dollyToCanvasPos(optionalTargetWorldPos, targetCanvasPos, dollyDelta) {\n\n        let dolliedThroughSurface = false;\n\n        const camera = this._scene.camera;\n\n        if (optionalTargetWorldPos) {\n            const eyeToWorldPosVec = math.subVec3(optionalTargetWorldPos, camera.eye, tempVec3a);\n            const eyeWorldPosDist = math.lenVec3(eyeToWorldPosVec);\n            dolliedThroughSurface = (eyeWorldPosDist < dollyDelta);\n        }\n\n        if (camera.projection === \"perspective\") {\n\n            camera.ortho.scale = camera.ortho.scale - dollyDelta;\n\n            const unprojectedWorldPos = this._unproject(targetCanvasPos, tempVec4a);\n            const offset = math.subVec3(unprojectedWorldPos, camera.eye, tempVec4c);\n            const moveVec = math.mulVec3Scalar(math.normalizeVec3(offset), -dollyDelta, []);\n\n            camera.eye = [camera.eye[0] - moveVec[0], camera.eye[1] - moveVec[1], camera.eye[2] - moveVec[2]];\n            camera.look = [camera.look[0] - moveVec[0], camera.look[1] - moveVec[1], camera.look[2] - moveVec[2]];\n\n            if (optionalTargetWorldPos) {\n\n                // Subtle UX tweak - if we have a target World position, then set camera eye->look distance to\n                // the same distance as from eye->target. This just gives us a better position for look,\n                // if we subsequently orbit eye about look, so that we don't orbit a position that's\n                // suddenly a lot closer than the point we pivoted about on the surface of the last object\n                // that we click-drag-pivoted on.\n\n                const eyeTargetVec = math.subVec3(optionalTargetWorldPos, camera.eye, tempVec3a);\n                const lenEyeTargetVec = math.lenVec3(eyeTargetVec);\n                const eyeLookVec = math.mulVec3Scalar(math.normalizeVec3(math.subVec3(camera.look, camera.eye, tempVec3b)), lenEyeTargetVec);\n                camera.look = [camera.eye[0] + eyeLookVec[0], camera.eye[1] + eyeLookVec[1], camera.eye[2] + eyeLookVec[2]];\n            }\n\n        } else if (camera.projection === \"ortho\") {\n\n            // - set ortho scale, getting the unprojected targetCanvasPos before and after, get that difference in a vector;\n            // - get the vector in which we're dollying;\n            // - add both vectors to camera eye and look.\n\n            const worldPos1 = this._unproject(targetCanvasPos, tempVec4a);\n\n            camera.ortho.scale = camera.ortho.scale - dollyDelta;\n            camera.ortho._update(); // HACK\n\n            const worldPos2 = this._unproject(targetCanvasPos, tempVec4b);\n            const offset = math.subVec3(worldPos2, worldPos1, tempVec4c);\n            const eyeLookMoveVec = math.mulVec3Scalar(math.normalizeVec3(math.subVec3(camera.look, camera.eye, tempVec3a)), -dollyDelta, tempVec3b);\n            const moveVec = math.addVec3(offset, eyeLookMoveVec, tempVec3c);\n\n            camera.eye = [camera.eye[0] - moveVec[0], camera.eye[1] - moveVec[1], camera.eye[2] - moveVec[2]];\n            camera.look = [camera.look[0] - moveVec[0], camera.look[1] - moveVec[1], camera.look[2] - moveVec[2]];\n        }\n\n        return dolliedThroughSurface;\n    }\n\n    _unproject(canvasPos, worldPos) {\n\n        const camera = this._scene.camera;\n        const transposedProjectMat = camera.project.transposedMatrix;\n        const Pt3 = transposedProjectMat.subarray(8, 12);\n        const Pt4 = transposedProjectMat.subarray(12);\n        const D = [0, 0, -1.0, 1];\n        const screenZ = math.dotVec4(D, Pt3) / math.dotVec4(D, Pt4);\n\n        camera.project.unproject(canvasPos, screenZ, screenPos, viewPos, worldPos);\n\n        return worldPos;\n    }\n\n    destroy() {\n    }\n}\n\nexport {PanController};","import {math} from \"../../../math/math.js\";\n\nconst tempVec3a = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\n\nconst tempVec4a = math.vec4();\nconst tempVec4b = math.vec4();\nconst tempVec4c = math.vec4();\n\n\n/** @private */\nclass PivotController {\n\n    /**\n     * @private\n     */\n    constructor(scene, configs) {\n\n        // Pivot math by: http://www.derschmale.com/\n\n        this._scene = scene;\n        this._configs = configs;\n        this._pivotWorldPos = math.vec3();\n        this._cameraOffset = math.vec3();\n        this._azimuth = 0;\n        this._polar = 0;\n        this._radius = 0;\n        this._pivotPosSet = false; // Initially false, true as soon as _pivotWorldPos has been set to some value\n        this._pivoting = false; // True while pivoting\n        this._shown = false;\n\n        this._pivotViewPos = math.vec4();\n        this._pivotProjPos = math.vec4();\n        this._pivotCanvasPos = math.vec2();\n        this._cameraDirty = true;\n\n        this._onViewMatrix = this._scene.camera.on(\"viewMatrix\", () => {\n            this._cameraDirty = true;\n        });\n\n        this._onProjMatrix = this._scene.camera.on(\"projMatrix\", () => {\n            this._cameraDirty = true;\n        });\n\n        this._onTick = this._scene.on(\"tick\", () => {\n            this.updatePivotElement();\n        });\n    }\n\n    updatePivotElement() {\n\n        const camera = this._scene.camera;\n        const canvas = this._scene.canvas;\n\n        if (this._pivoting && this._cameraDirty) {\n\n            math.transformPoint3(camera.viewMatrix, this.getPivotPos(), this._pivotViewPos);\n            this._pivotViewPos[3] = 1;\n            math.transformPoint4(camera.projMatrix, this._pivotViewPos, this._pivotProjPos);\n\n            const canvasAABB = canvas.boundary;\n            const canvasWidth = canvasAABB[2];\n            const canvasHeight = canvasAABB[3];\n\n            this._pivotCanvasPos[0] = Math.floor((1 + this._pivotProjPos[0] / this._pivotProjPos[3]) * canvasWidth / 2);\n            this._pivotCanvasPos[1] = Math.floor((1 - this._pivotProjPos[1] / this._pivotProjPos[3]) * canvasHeight / 2);\n\n            const canvasElem = canvas.canvas;\n            const canvasBoundingRect = canvasElem.getBoundingClientRect();\n\n            if (this._pivotElement) {\n                this._pivotElement.style.left = (Math.floor(canvasBoundingRect.left + this._pivotCanvasPos[0]) - (this._pivotElement.clientWidth / 2) + window.scrollX) + \"px\";\n                this._pivotElement.style.top = (Math.floor(canvasBoundingRect.top + this._pivotCanvasPos[1]) - (this._pivotElement.clientHeight / 2) + window.scrollY) + \"px\";\n            }\n            this._cameraDirty = false;\n        }\n    }\n\n    /**\n     * Sets the HTML DOM element that will represent the pivot position.\n     *\n     * @param pivotElement\n     */\n    setPivotElement(pivotElement) {\n        this._pivotElement = pivotElement;\n    }\n\n    /**\n     * Begins pivoting.\n     */\n    startPivot() {\n\n        if (this._cameraLookingDownwards()) {\n            this._pivoting = false;\n            return false;\n        }\n\n        const camera = this._scene.camera;\n\n        let lookat = math.lookAtMat4v(camera.eye, camera.look, camera.worldUp);\n        math.transformPoint3(lookat, this.getPivotPos(), this._cameraOffset);\n\n        const pivotPos = this.getPivotPos();\n        this._cameraOffset[2] += math.distVec3(camera.eye, pivotPos);\n\n        lookat = math.inverseMat4(lookat);\n\n        const offset = math.transformVec3(lookat, this._cameraOffset);\n        const diff = math.vec3();\n\n        math.subVec3(camera.eye, pivotPos, diff);\n        math.addVec3(diff, offset);\n\n        if (camera.zUp) {\n            const t = diff[1];\n            diff[1] = diff[2];\n            diff[2] = t;\n        }\n\n        this._radius = math.lenVec3(diff);\n        this._polar = Math.acos(diff[1] / this._radius);\n        this._azimuth = Math.atan2(diff[0], diff[2]);\n        this._pivoting = true;\n    }\n\n    _cameraLookingDownwards() { // Returns true if angle between camera viewing direction and World-space \"up\" axis is too small\n        const camera = this._scene.camera;\n        const forwardAxis = math.normalizeVec3(math.subVec3(camera.look, camera.eye, tempVec3a));\n        const rightAxis = math.cross3Vec3(forwardAxis, camera.worldUp, tempVec3b);\n        let rightAxisLen = math.sqLenVec3(rightAxis);\n        return (rightAxisLen <= 0.0001);\n    }\n\n    /**\n     * Returns true if we are currently pivoting.\n     *\n     * @returns {boolean}\n     */\n    getPivoting() {\n        return this._pivoting;\n    }\n\n    /**\n     * Sets a 3D World-space position to pivot about.\n     *\n     * @param {Number[]} worldPos The new World-space pivot position.\n     */\n    setPivotPos(worldPos) {\n        this._pivotWorldPos.set(worldPos);\n        this._pivotPosSet = true;\n    }\n\n    /**\n     * Sets the pivot position to the 3D projection of the given 2D canvas coordinates on a sphere centered\n     * at the viewpoint. The radius of the sphere is configured via {@link CameraControl#smartPivot}.\n     *\n     * @param canvasPos\n     */\n    setCanvasPivotPos(canvasPos) {\n        const camera = this._scene.camera;\n        const pivotShereRadius = Math.abs(math.distVec3(this._scene.center, camera.eye));\n        const transposedProjectMat = camera.project.transposedMatrix;\n        const Pt3 = transposedProjectMat.subarray(8, 12);\n        const Pt4 = transposedProjectMat.subarray(12);\n        const D = [0, 0, -1.0, 1];\n        const screenZ = math.dotVec4(D, Pt3) / math.dotVec4(D, Pt4);\n        const worldPos = tempVec4a;\n        camera.project.unproject(canvasPos, screenZ, tempVec4b, tempVec4c, worldPos);\n        const eyeWorldPosVec = math.normalizeVec3(math.subVec3(worldPos, camera.eye, tempVec3a));\n        const posOnSphere = math.addVec3(camera.eye, math.mulVec3Scalar(eyeWorldPosVec, pivotShereRadius, tempVec3b), tempVec3c);\n        this.setPivotPos(posOnSphere);\n    }\n\n    /**\n     * Gets the current position we're pivoting about.\n     * @returns {Number[]} The current World-space pivot position.\n     */\n    getPivotPos() {\n        return (this._pivotPosSet) ? this._pivotWorldPos : this._scene.camera.look; // Avoid pivoting about [0,0,0] by default\n    }\n\n    /**\n     * Continues to pivot.\n     *\n     * @param {Number} yawInc Yaw rotation increment.\n     * @param {Number} pitchInc Pitch rotation increment.\n     */\n    continuePivot(yawInc, pitchInc) {\n        if (!this._pivoting) {\n            return;\n        }\n        if (yawInc === 0 && pitchInc === 0) {\n            return;\n        }\n        const camera = this._scene.camera;\n        var dx = -yawInc;\n        const dy = -pitchInc;\n        if (camera.worldUp[2] === 1) {\n            dx = -dx;\n        }\n        this._azimuth += -dx * .01;\n        this._polar += dy * .01;\n        this._polar = math.clamp(this._polar, .001, Math.PI - .001);\n        const pos = [\n            this._radius * Math.sin(this._polar) * Math.sin(this._azimuth),\n            this._radius * Math.cos(this._polar),\n            this._radius * Math.sin(this._polar) * Math.cos(this._azimuth)\n        ];\n        if (camera.worldUp[2] === 1) {\n            const t = pos[1];\n            pos[1] = pos[2];\n            pos[2] = t;\n        }\n        // Preserve the eye->look distance, since in xeokit \"look\" is the point-of-interest, not the direction vector.\n        const eyeLookLen = math.lenVec3(math.subVec3(camera.look, camera.eye, math.vec3()));\n        const pivotPos = this.getPivotPos();\n        math.addVec3(pos, pivotPos);\n        let lookat = math.lookAtMat4v(pos, pivotPos, camera.worldUp);\n        lookat = math.inverseMat4(lookat);\n        const offset = math.transformVec3(lookat, this._cameraOffset);\n        lookat[12] -= offset[0];\n        lookat[13] -= offset[1];\n        lookat[14] -= offset[2];\n        const zAxis = [lookat[8], lookat[9], lookat[10]];\n        camera.eye = [lookat[12], lookat[13], lookat[14]];\n        math.subVec3(camera.eye, math.mulVec3Scalar(zAxis, eyeLookLen), camera.look);\n        camera.up = [lookat[4], lookat[5], lookat[6]];\n        this.showPivot();\n    }\n\n    /**\n     * Shows the pivot position.\n     *\n     * Only works if we set an  HTML DOM element to represent the pivot position.\n     */\n    showPivot() {\n        if (this._shown) {\n            return;\n        }\n        if (this._hideTimeout !== null) {\n            window.clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        if (this._pivotElement) {\n            this.updatePivotElement();\n            this._pivotElement.style.visibility = \"visible\";\n            this._shown = true;\n            this._hideTimeout = window.setTimeout(() => {\n                this.hidePivot();\n            }, 1000);\n        }\n    }\n\n    /**\n     * Hides the pivot position.\n     *\n     * Only works if we set an  HTML DOM element to represent the pivot position.\n     */\n    hidePivot() {\n        if (!this._shown) {\n            return;\n        }\n        if (this._hideTimeout !== null) {\n            window.clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        if (this._pivotElement) {\n            this._pivotElement.style.visibility = \"hidden\";\n        }\n        this._shown = false;\n    }\n\n    /**\n     * Finishes pivoting.\n     */\n    endPivot() {\n        this._pivoting = false;\n    }\n\n    destroy() {\n        this._scene.camera.off(this._onViewMatrix);\n        this._scene.camera.off(this._onProjMatrix);\n        this._scene.off(this._onTick);\n    }\n}\n\n\nexport {PivotController};\n","import {math} from \"../../../math/math.js\";\nimport {PickResult} from \"../../../webgl/PickResult.js\";\n\n/**\n *\n * @private\n */\nclass PickController {\n\n    constructor(cameraControl, configs) {\n\n        this._scene = cameraControl.scene;\n\n        this._cameraControl = cameraControl;\n\n        this._scene.canvas.canvas.oncontextmenu = function (e) {\n            e.preventDefault();\n        };\n\n        this._configs = configs;\n\n        /**\n         * Set true to schedule picking of an Entity.\n         * @type {boolean}\n         */\n        this.schedulePickEntity = false;\n\n        /**\n         * Set true to schedule picking of a position on teh surface of an Entity.\n         * @type {boolean}\n         */\n        this.schedulePickSurface = false;\n\n        /**\n         * The canvas position at which to do the next scheduled pick.\n         * @type {Number[]}\n         */\n        this.pickCursorPos = math.vec2();\n\n        /**\n         * Will be true after picking to indicate that something was picked.\n         * @type {boolean}\n         */\n        this.picked = false;\n\n        /**\n         * Will be true after picking to indicate that a position on the surface of an Entity was picked.\n         * @type {boolean}\n         */\n        this.pickedSurface = false;\n\n        /**\n         * Will hold the PickResult after after picking.\n         * @type {PickResult}\n         */\n        this.pickResult = null;\n\n        this._lastPickedEntityId = null;\n\n        this._needFireEvents = false;\n    }\n\n    /**\n     * Immediately attempts a pick, if scheduled.\n     */\n    update() {\n\n        if (!this._configs.pointerEnabled) {\n            return;\n        }\n\n        if (!this.schedulePickEntity && !this.schedulePickSurface) {\n            return;\n        }\n\n        this.picked = false;\n        this.pickedSurface = false;\n        this._needFireEvents = false;\n\n        const hasHoverSurfaceSubs = this._cameraControl.hasSubs(\"hoverSurface\");\n\n        if (this.schedulePickSurface) {\n            if (this.pickResult && this.pickResult.worldPos) {\n                const pickResultCanvasPos = this.pickResult.canvasPos;\n                if (pickResultCanvasPos[0] === this.pickCursorPos[0] && pickResultCanvasPos[1] === this.pickCursorPos[1]) {\n                    this.picked = true;\n                    this.pickedSurface = true;\n                    this._needFireEvents = hasHoverSurfaceSubs;\n                    this.schedulePickEntity = false;\n                    this.schedulePickSurface = false;\n                    return;\n                }\n            }\n        }\n\n        if (this.schedulePickEntity) {\n            if (this.pickResult) {\n                const pickResultCanvasPos = this.pickResult.canvasPos;\n                if (pickResultCanvasPos[0] === this.pickCursorPos[0] && pickResultCanvasPos[1] === this.pickCursorPos[1]) {\n                    this.picked = true;\n                    this.pickedSurface = false;\n                    this._needFireEvents = false;\n                    this.schedulePickEntity = false;\n                    this.schedulePickSurface = false;\n                    return;\n                }\n            }\n        }\n\n        if (this.schedulePickSurface) {\n\n            this.pickResult = this._scene.pick({\n                pickSurface: true,\n                pickSurfaceNormal: false,\n                canvasPos: this.pickCursorPos\n            });\n\n            if (this.pickResult) {\n                this.picked = true;\n                this.pickedSurface = true;\n                this._needFireEvents = true;\n            }\n\n        } else { // schedulePickEntity == true\n\n            this.pickResult = this._scene.pick({\n                canvasPos: this.pickCursorPos\n            });\n\n            if (this.pickResult) {\n                this.picked = true;\n                this.pickedSurface = false;\n                this._needFireEvents = true;\n            }\n        }\n\n        this.schedulePickEntity = false;\n        this.schedulePickSurface = false;\n    }\n\n    fireEvents() {\n\n        if (!this._needFireEvents) {\n            return;\n        }\n\n        if (this.picked && this.pickResult && this.pickResult.entity) {\n\n            const pickedEntityId = this.pickResult.entity.id;\n\n            if (this._lastPickedEntityId !== pickedEntityId) {\n\n                if (this._lastPickedEntityId !== undefined) {\n                    this._cameraControl.fire(\"hoverOut\", {\n                        entity: this._scene.objects[this._lastPickedEntityId]\n                    }, true);\n                }\n\n                this._cameraControl.fire(\"hoverEnter\", this.pickResult, true);\n                this._lastPickedEntityId = pickedEntityId;\n            }\n\n            this._cameraControl.fire(\"hover\", this.pickResult, true);\n\n            if (this.pickResult.worldPos) {\n                this.pickedSurface = true;\n                this._cameraControl.fire(\"hoverSurface\", this.pickResult, true);\n            }\n\n        } else {\n\n            if (this._lastPickedEntityId !== undefined) {\n                this._cameraControl.fire(\"hoverOut\", {\n                    entity: this._scene.objects[this._lastPickedEntityId]\n                }, true);\n                this._lastPickedEntityId = undefined;\n            }\n\n            this._cameraControl.fire(\"hoverOff\", {\n                canvasPos: this.pickCursorPos\n            }, true);\n        }\n\n        this.pickResult = null;\n\n        this._needFireEvents = false;\n    }\n\n    destroy() {\n    }\n}\n\nexport {PickController};\n","/**\n * @private\n */\nimport {math} from \"../../../math/math.js\";\n\nconst canvasPos = math.vec2();\n\nconst getCanvasPosFromEvent = function (event, canvasPos) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        let element = event.target;\n        let totalOffsetLeft = 0;\n        let totalOffsetTop = 0;\n        while (element.offsetParent) {\n            totalOffsetLeft += element.offsetLeft;\n            totalOffsetTop += element.offsetTop;\n            element = element.offsetParent;\n        }\n        canvasPos[0] = event.pageX - totalOffsetLeft;\n        canvasPos[1] = event.pageY - totalOffsetTop;\n    }\n    return canvasPos;\n};\n\n/**\n * @private\n */\nclass MousePanRotateDollyHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n\n        const pickController = controllers.pickController;\n\n        let lastX = 0;\n        let lastY = 0;\n        let lastXDown = 0;\n        let lastYDown = 0;\n        let xRotateDelta = 0;\n        let yRotateDelta = 0;\n\n        let mouseDownLeft;\n        let mouseDownMiddle;\n        let mouseDownRight;\n\n        let mouseDownPicked = false;\n        const pickedWorldPos = math.vec3();\n\n        let mouseMovedOnCanvasSinceLastWheel = true;\n\n        const canvas = this._scene.canvas.canvas;\n\n        const keyDown = [];\n\n        document.addEventListener(\"keydown\", this._documentKeyDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!scene.input.keyboardEnabled)) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDown[keyCode] = true;\n        });\n\n        document.addEventListener(\"keyup\", this._documentKeyUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!scene.input.keyboardEnabled)) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDown[keyCode] = false;\n        });\n\n        function setMousedownState(pick = true) {\n            canvas.style.cursor = \"move\";\n            setMousedownPositions();\n            if (pick) {\n                setMousedownPick();\n            }\n        }\n\n        function setMousedownPositions() {\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n\n            lastX = states.pointerCanvasPos[0];\n            lastY = states.pointerCanvasPos[1];\n            lastXDown = states.pointerCanvasPos[0];\n            lastYDown = states.pointerCanvasPos[1];\n        }\n\n        function setMousedownPick() {\n            pickController.pickCursorPos = states.pointerCanvasPos;\n            pickController.schedulePickSurface = true;\n            pickController.update();\n\n            if (pickController.picked && pickController.pickedSurface && pickController.pickResult && pickController.pickResult.worldPos) {\n                mouseDownPicked = true;\n                pickedWorldPos.set(pickController.pickResult.worldPos);\n            } else {\n                mouseDownPicked = false;\n            }\n        }\n\n        canvas.addEventListener(\"mousedown\", this._mouseDownHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            switch (e.which) {\n\n                case 1: // Left button\n\n                    if (keyDown[scene.input.KEY_SHIFT] || configs.planView) {\n\n                        mouseDownLeft = true;\n\n                        setMousedownState();\n\n                    } else {\n\n                        mouseDownLeft = true;\n\n                        setMousedownState(false);\n                    }\n\n                    break;\n\n                case 2: // Middle/both buttons\n\n                    mouseDownMiddle = true;\n\n                    setMousedownState();\n\n                    break;\n\n                case 3: // Right button\n\n                    mouseDownRight = true;\n\n                    if (configs.panRightClick) {\n\n                        setMousedownState();\n                    }\n\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        document.addEventListener(\"mousemove\", this._documentMouseMoveHandler = () => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (!mouseDownLeft && !mouseDownMiddle && !mouseDownRight) {\n                return;\n            }\n\n            // Scaling drag-rotate to canvas boundary\n\n            const canvasBoundary = scene.canvas.boundary;\n            const canvasWidth = canvasBoundary[2] - canvasBoundary[0];\n            const canvasHeight = canvasBoundary[3] - canvasBoundary[1];\n            const x = states.pointerCanvasPos[0];\n            const y = states.pointerCanvasPos[1];\n\n            const panning = keyDown[scene.input.KEY_SHIFT] || configs.planView || (!configs.panRightClick && mouseDownMiddle) || (configs.panRightClick && mouseDownRight);\n\n            if (panning) {\n\n                const xPanDelta = (x - lastX);\n                const yPanDelta = (y - lastY);\n\n                const camera = scene.camera;\n\n                // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                if (camera.projection === \"perspective\") {\n\n                    const depth = Math.abs(mouseDownPicked ? math.lenVec3(math.subVec3(pickedWorldPos, scene.camera.eye, [])) : scene.camera.eyeLookDist);\n                    const targetDistance = depth * Math.tan((camera.perspective.fov / 2) * Math.PI / 180.0);\n\n                    updates.panDeltaX += (1.5 * xPanDelta * targetDistance / canvasHeight);\n                    updates.panDeltaY += (1.5 * yPanDelta * targetDistance / canvasHeight);\n\n                } else {\n\n                    updates.panDeltaX += 0.5 * camera.ortho.scale * (xPanDelta / canvasHeight);\n                    updates.panDeltaY += 0.5 * camera.ortho.scale * (yPanDelta / canvasHeight);\n                }\n\n            } else if (mouseDownLeft && !mouseDownMiddle && !mouseDownRight) {\n\n                if (!configs.planView) { // No rotating in plan-view mode\n\n                    if (configs.firstPerson) {\n                        updates.rotateDeltaY -= ((x - lastX) / canvasWidth) * configs.dragRotationRate / 2;\n                        updates.rotateDeltaX += ((y - lastY) / canvasHeight) * (configs.dragRotationRate / 4);\n\n                    } else {\n                        updates.rotateDeltaY -= ((x - lastX) / canvasWidth) * (configs.dragRotationRate * 1.5);\n                        updates.rotateDeltaX += ((y - lastY) / canvasHeight) * (configs.dragRotationRate * 1.5);\n                    }\n                }\n            }\n\n            lastX = x;\n            lastY = y;\n        });\n\n        canvas.addEventListener(\"mousemove\", this._canvasMouseMoveHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            mouseMovedOnCanvasSinceLastWheel = true;\n        });\n\n        document.addEventListener(\"mouseup\", this._documentMouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 1: // Left button\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                case 2: // Middle/both buttons\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                case 3: // Right button\n                    mouseDownLeft = false;\n                    mouseDownMiddle = false;\n                    mouseDownRight = false;\n                    break;\n                default:\n                    break;\n            }\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n        });\n\n        canvas.addEventListener(\"mouseup\", this._mouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            switch (e.which) {\n                case 3: // Right button\n                    getCanvasPosFromEvent(e, canvasPos);\n                    const x = canvasPos[0];\n                    const y = canvasPos[1];\n                    if (Math.abs(x - lastXDown) < 3 && Math.abs(y - lastYDown) < 3) {\n                        controllers.cameraControl.fire(\"rightClick\", { // For context menus\n                            canvasPos: canvasPos,\n                            event: e\n                        }, true);\n                    }\n                    break;\n                default:\n                    break;\n            }\n            canvas.style.removeProperty(\"cursor\");\n        });\n\n        canvas.addEventListener(\"mouseenter\", this._mouseEnterHandler = () => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            xRotateDelta = 0;\n            yRotateDelta = 0;\n        });\n\n        const maxElapsed = 1 / 20;\n        const minElapsed = 1 / 60;\n\n        let secsNowLast = null;\n\n        canvas.addEventListener(\"wheel\", this._mouseWheelHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            const secsNow = performance.now() / 1000.0;\n            var secsElapsed = (secsNowLast !== null) ? (secsNow - secsNowLast) : 0;\n            secsNowLast = secsNow;\n            if (secsElapsed > maxElapsed) {\n                secsElapsed = maxElapsed;\n            }\n            if (secsElapsed < minElapsed) {\n                secsElapsed = minElapsed;\n            }\n            const delta = Math.max(-1, Math.min(1, -e.deltaY * 40));\n            if (delta === 0) {\n                return;\n            }\n            const normalizedDelta = delta / Math.abs(delta);\n            updates.dollyDelta += -normalizedDelta * secsElapsed * configs.mouseWheelDollyRate;\n\n            if (mouseMovedOnCanvasSinceLastWheel) {\n                states.followPointerDirty = true;\n                mouseMovedOnCanvasSinceLastWheel = false;\n            }\n\n            e.preventDefault();\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        const canvas = this._scene.canvas.canvas;\n\n        document.removeEventListener(\"keydown\", this._documentKeyDownHandler);\n        document.removeEventListener(\"keyup\", this._documentKeyUpHandler);\n        canvas.removeEventListener(\"mousedown\", this._mouseDownHandler);\n        document.removeEventListener(\"mousemove\", this._documentMouseMoveHandler);\n        canvas.removeEventListener(\"mousemove\", this._canvasMouseMoveHandler);\n        document.removeEventListener(\"mouseup\", this._documentMouseUpHandler);\n        canvas.removeEventListener(\"mouseup\", this._mouseUpHandler);\n        canvas.removeEventListener(\"mouseenter\", this._mouseEnterHandler);\n        canvas.removeEventListener(\"wheel\", this._mouseWheelHandler);\n    }\n}\n\nexport {MousePanRotateDollyHandler};\n","import {math} from \"../../../math/math.js\";\n\nconst center = math.vec3();\nconst tempVec3a = math.vec3();\nconst tempVec3b = math.vec3();\nconst tempVec3c = math.vec3();\nconst tempVec3d = math.vec3();\n\nconst tempCameraTarget = {\n    eye: math.vec3(),\n    look: math.vec3(),\n    up: math.vec3()\n};\n\n/**\n * @private\n */\nclass KeyboardAxisViewHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n        const cameraControl = controllers.cameraControl;\n        const camera = scene.camera;\n\n        scene.input.on(\"keydown\", this._documentKeyDownHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled) || (!scene.input.keyboardEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            const axisViewRight = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_RIGHT);\n            const axisViewBack = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_BACK);\n            const axisViewLeft = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_LEFT);\n            const axisViewFront = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_FRONT);\n            const axisViewTop = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_TOP);\n            const axisViewBottom = cameraControl._isKeyDownForAction(cameraControl.AXIS_VIEW_BOTTOM);\n\n            if ((!axisViewRight) && (!axisViewBack) && (!axisViewLeft) && (!axisViewFront) && (!axisViewTop) && (!axisViewBottom)) {\n                return;\n            }\n\n            const aabb = scene.aabb;\n            const diag = math.getAABB3Diag(aabb);\n\n            math.getAABB3Center(aabb, center);\n\n            const perspectiveDist = Math.abs(diag / Math.tan(controllers.cameraFlight.fitFOV * math.DEGTORAD));\n            const orthoScale = diag * 1.1;\n\n            tempCameraTarget.orthoScale = orthoScale;\n\n            if (axisViewRight) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldRight, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewBack) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldForward, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewLeft) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldRight, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewFront) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldForward, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(camera.worldUp);\n\n            } else if (axisViewTop) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldUp, perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(math.normalizeVec3(math.mulVec3Scalar(camera.worldForward, 1, tempVec3b), tempVec3c));\n\n            } else if (axisViewBottom) {\n\n                tempCameraTarget.eye.set(math.addVec3(center, math.mulVec3Scalar(camera.worldUp, -perspectiveDist, tempVec3a), tempVec3d));\n                tempCameraTarget.look.set(center);\n                tempCameraTarget.up.set(math.normalizeVec3(math.mulVec3Scalar(camera.worldForward, -1, tempVec3b)));\n            }\n\n            if ((!configs.firstPerson) && configs.followPointer) {\n                controllers.pivotController.setPivotPos(center);\n            }\n\n            if (controllers.cameraFlight.duration > 0) {\n                controllers.cameraFlight.flyTo(tempCameraTarget, () => {\n                    if (controllers.pivotController.getPivoting() && configs.followPointer) {\n                        controllers.pivotController.showPivot();\n                    }\n                });\n\n            } else {\n                controllers.cameraFlight.jumpTo(tempCameraTarget);\n                if (controllers.pivotController.getPivoting() && configs.followPointer) {\n                    controllers.pivotController.showPivot();\n                }\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        document.removeEventListener(\"keydown\", this._documentKeyDownHandler);\n    }\n}\n\nexport {KeyboardAxisViewHandler};","import {math} from \"../../../math/math.js\";\n\n/**\n * @private\n */\nclass MousePickHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const cameraControl = controllers.cameraControl;\n\n        this._clicks = 0;\n        this._timeout = null;\n        this._lastPickedEntityId = null;\n\n        let leftDown = false;\n        let rightDown = false;\n\n        const canvas = this._scene.canvas.canvas;\n\n        const flyCameraTo = (pickResult) => {\n            let pos;\n            if (pickResult && pickResult.worldPos) {\n                pos = pickResult.worldPos\n            }\n            const aabb = pickResult && pickResult.entity ? pickResult.entity.aabb : scene.aabb;\n            if (pos) { // Fly to look at point, don't change eye->look dist\n                const camera = scene.camera;\n                const diff = math.subVec3(camera.eye, camera.look, []);\n                controllers.cameraFlight.flyTo({\n                    // look: pos,\n                    // eye: xeokit.math.addVec3(pos, diff, []),\n                    // up: camera.up,\n                    aabb: aabb\n                });\n                // TODO: Option to back off to fit AABB in view\n            } else {// Fly to fit target boundary in view\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n            }\n        };\n\n        canvas.addEventListener(\"mousemove\", this._canvasMouseMoveHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            if (leftDown || rightDown) {\n                return;\n            }\n\n            const hoverSubs = cameraControl.hasSubs(\"hover\");\n            const hoverOutSubs = cameraControl.hasSubs(\"hoverOut\");\n            const hoverOffSubs = cameraControl.hasSubs(\"hoverOff\");\n            const hoverSurfaceSubs = cameraControl.hasSubs(\"hoverSurface\");\n\n            if (hoverSubs || hoverOutSubs || hoverOffSubs || hoverSurfaceSubs) {\n\n                pickController.pickCursorPos = states.pointerCanvasPos;\n                pickController.schedulePickEntity = true;\n                pickController.schedulePickSurface = hoverSurfaceSubs;\n\n                pickController.update();\n\n                if (pickController.pickResult) {\n\n                    const pickedEntityId = pickController.pickResult.entity.id;\n\n                    if (this._lastPickedEntityId !== pickedEntityId) {\n\n                        if (this._lastPickedEntityId !== undefined) {\n\n                            cameraControl.fire(\"hoverOut\", { // Hovered off an entity\n                                entity: scene.objects[this._lastPickedEntityId]\n                            }, true);\n                        }\n\n                        cameraControl.fire(\"hoverEnter\", pickController.pickResult, true); // Hovering over a new entity\n\n                        this._lastPickedEntityId = pickedEntityId;\n                    }\n\n                    cameraControl.fire(\"hover\", pickController.pickResult, true);\n\n                    if (pickController.pickResult.worldPos) { // Hovering the surface of an entity\n                        cameraControl.fire(\"hoverSurface\", pickController.pickResult, true);\n                    }\n\n                } else {\n\n                    if (this._lastPickedEntityId !== undefined) {\n\n                        cameraControl.fire(\"hoverOut\", { // Hovered off an entity\n                            entity: scene.objects[this._lastPickedEntityId]\n                        }, true);\n\n                        this._lastPickedEntityId = undefined;\n                    }\n\n                    cameraControl.fire(\"hoverOff\", { // Not hovering on any entity\n                        canvasPos: pickController.pickCursorPos\n                    }, true);\n                }\n            }\n        });\n\n        canvas.addEventListener('mousedown', this._canvasMouseDownHandler = (e) => {\n\n            if (e.which === 1) {\n                leftDown = true;\n            }\n\n            if (e.which === 3) {\n                rightDown = true;\n            }\n\n            const leftButtonDown = (e.which === 1);\n\n            if (!leftButtonDown) {\n                return;\n            }\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            // Left mouse button down to start pivoting\n\n            states.mouseDownClientX = e.clientX;\n            states.mouseDownClientY = e.clientY;\n            states.mouseDownCursorX = states.pointerCanvasPos[0];\n            states.mouseDownCursorY = states.pointerCanvasPos[1];\n\n            if ((!configs.firstPerson) && configs.followPointer) {\n\n                pickController.pickCursorPos = states.pointerCanvasPos;\n                pickController.schedulePickSurface = true;\n\n                pickController.update();\n\n                if (e.which === 1) {// Left button\n                    const pickResult = pickController.pickResult;\n                    if (pickResult && pickResult.worldPos) {\n                        pivotController.setPivotPos(pickResult.worldPos);\n                        pivotController.startPivot();\n                    } else {\n                        if (configs.smartPivot) {\n                            pivotController.setCanvasPivotPos(states.pointerCanvasPos);\n                        } else {\n                            pivotController.setPivotPos(scene.camera.look);\n                        }\n                        pivotController.startPivot();\n                    }\n                }\n            }\n        });\n\n        document.addEventListener('mouseup', this._documentMouseUpHandler = (e) => {\n\n            if (e.which === 1) {\n                leftDown = false;\n            }\n\n            if (e.which === 3) {\n                rightDown = false;\n            }\n        });\n\n        canvas.addEventListener('mouseup', this._canvasMouseUpHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const leftButtonUp = (e.which === 1);\n\n            if (!leftButtonUp) {\n                return;\n            }\n\n            // Left mouse button up to possibly pick or double-pick\n\n            pivotController.hidePivot();\n\n            if (Math.abs(e.clientX - states.mouseDownClientX) > 3 || Math.abs(e.clientY - states.mouseDownClientY) > 3) {\n                return;\n            }\n\n            const pickedSubs = cameraControl.hasSubs(\"picked\");\n            const pickedNothingSubs = cameraControl.hasSubs(\"pickedNothing\");\n            const pickedSurfaceSubs = cameraControl.hasSubs(\"pickedSurface\");\n            const doublePickedSubs = cameraControl.hasSubs(\"doublePicked\");\n            const doublePickedSurfaceSubs = cameraControl.hasSubs(\"doublePickedSurface\");\n            const doublePickedNothingSubs = cameraControl.hasSubs(\"doublePickedNothing\");\n\n            if ((!configs.doublePickFlyTo) &&\n                (!doublePickedSubs) &&\n                (!doublePickedSurfaceSubs) &&\n                (!doublePickedNothingSubs)) {\n\n                //  Avoid the single/double click differentiation timeout\n\n                if (pickedSubs || pickedNothingSubs || pickedSurfaceSubs) {\n\n                    pickController.pickCursorPos = states.pointerCanvasPos;\n                    pickController.schedulePickEntity = true;\n                    pickController.schedulePickSurface = pickedSurfaceSubs;\n                    pickController.update();\n\n                    if (pickController.pickResult) {\n\n                        cameraControl.fire(\"picked\", pickController.pickResult, true);\n\n                        if (pickController.pickedSurface) {\n                            cameraControl.fire(\"pickedSurface\", pickController.pickResult, true);\n                        }\n                    } else {\n                        cameraControl.fire(\"pickedNothing\", {\n                            canvasPos: states.pointerCanvasPos\n                        }, true);\n                    }\n                }\n\n                this._clicks = 0;\n\n                return;\n            }\n\n            this._clicks++;\n\n            if (this._clicks === 1) { // First click\n\n                this._timeout = setTimeout(() => {\n\n                    pickController.pickCursorPos = states.pointerCanvasPos;\n                    pickController.schedulePickEntity = configs.doublePickFlyTo;\n                    pickController.schedulePickSurface = pickedSurfaceSubs;\n                    pickController.update();\n\n                    if (pickController.pickResult) {\n\n                        cameraControl.fire(\"picked\", pickController.pickResult, true);\n\n                        if (pickController.pickedSurface) {\n\n                            cameraControl.fire(\"pickedSurface\", pickController.pickResult, true);\n\n                            if ((!configs.firstPerson) && configs.followPointer) {\n                                controllers.pivotController.setPivotPos(pickController.pickResult.worldPos);\n                                if (controllers.pivotController.startPivot()) {\n                                    controllers.pivotController.showPivot();\n                                }\n                            }\n                        }\n                    } else {\n                        cameraControl.fire(\"pickedNothing\", {\n                            canvasPos: states.pointerCanvasPos\n                        }, true);\n                    }\n\n                    this._clicks = 0;\n\n                }, 250);  // FIXME: Too short for track pads\n\n            } else { // Second click\n\n                if (this._timeout !== null) {\n                    window.clearTimeout(this._timeout);\n                    this._timeout = null;\n                }\n\n                pickController.pickCursorPos = states.pointerCanvasPos;\n                pickController.schedulePickEntity = configs.doublePickFlyTo || doublePickedSubs || doublePickedSurfaceSubs;\n                pickController.schedulePickSurface = pickController.schedulePickEntity && doublePickedSurfaceSubs;\n                pickController.update();\n\n                if (pickController.pickResult) {\n\n                    cameraControl.fire(\"doublePicked\", pickController.pickResult, true);\n\n                    if (pickController.pickedSurface) {\n                        cameraControl.fire(\"doublePickedSurface\", pickController.pickResult, true);\n                    }\n\n                    if (configs.doublePickFlyTo) {\n\n                        flyCameraTo(pickController.pickResult);\n\n                        if ((!configs.firstPerson) && configs.followPointer) {\n\n                            const pickedEntityAABB = pickController.pickResult.entity.aabb;\n                            const pickedEntityCenterPos = math.getAABB3Center(pickedEntityAABB);\n\n                            controllers.pivotController.setPivotPos(pickedEntityCenterPos);\n\n                            if (controllers.pivotController.startPivot()) {\n                                controllers.pivotController.showPivot();\n                            }\n                        }\n                    }\n\n                } else {\n\n                    cameraControl.fire(\"doublePickedNothing\", {\n                        canvasPos: states.pointerCanvasPos\n                    }, true);\n\n                    if (configs.doublePickFlyTo) {\n\n                        flyCameraTo();\n\n                        if ((!configs.firstPerson) && configs.followPointer) {\n\n                            const sceneAABB = scene.aabb;\n                            const sceneCenterPos = math.getAABB3Center(sceneAABB);\n\n                            controllers.pivotController.setPivotPos(sceneCenterPos);\n\n                            if (controllers.pivotController.startPivot()) {\n                                controllers.pivotController.showPivot();\n                            }\n                        }\n                    }\n                }\n\n                this._clicks = 0;\n            }\n        }, false);\n    }\n\n    reset() {\n        this._clicks = 0;\n        this._lastPickedEntityId = null;\n        if (this._timeout) {\n            window.clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n    }\n\n    destroy() {\n        const canvas = this._scene.canvas.canvas;\n        canvas.removeEventListener(\"mousemove\", this._canvasMouseMoveHandler);\n        canvas.removeEventListener(\"mousedown\", this._canvasMouseDownHandler);\n        document.removeEventListener(\"mouseup\", this._documentMouseUpHandler);\n        canvas.removeEventListener(\"mouseup\", this._canvasMouseUpHandler);\n        if (this._timeout) {\n            window.clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n    }\n}\n\n\n\nexport {MousePickHandler};","/**\n * @private\n */\nclass KeyboardPanRotateDollyHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n        const input = scene.input;\n\n        const keyDownMap = [];\n\n        const canvas = scene.canvas.canvas;\n\n        const pickController = controllers.pickController;\n\n        let mouseMovedSinceLastKeyboardDolly = true;\n\n        document.addEventListener(\"mousemove\", this._documentMouseMoveHandler = () => {\n            mouseMovedSinceLastKeyboardDolly = true;\n        });\n\n        document.addEventListener(\"keydown\", this._documentKeyDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!scene.input.keyboardEnabled)) {\n                return;\n            }\n            if (!states.mouseover) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDownMap[keyCode] = true;\n\n            if (keyCode === input.KEY_SHIFT) {\n                canvas.style.cursor = \"move\";\n            }\n        });\n\n        document.addEventListener(\"keyup\", this._documentKeyUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled) || (!scene.input.keyboardEnabled)) {\n                return;\n            }\n            if (!states.mouseover) {\n                return;\n            }\n            const keyCode = e.keyCode;\n            keyDownMap[keyCode] = false;\n\n            if (keyCode === input.KEY_SHIFT) {\n                canvas.style.cursor = null;\n            }\n        });\n\n        this._onTick = scene.on(\"tick\", (e) => {\n\n            if (!(configs.active && configs.pointerEnabled) || (!scene.input.keyboardEnabled)) {\n                return;\n            }\n\n            if (!states.mouseover) {\n                return;\n            }\n\n            const cameraControl = controllers.cameraControl;\n            const elapsedSecs = (e.deltaTime / 1000.0);\n\n            //-------------------------------------------------------------------------------------------------\n            // Keyboard rotation\n            //-------------------------------------------------------------------------------------------------\n\n            if (!configs.planView) {\n\n                const rotateYPos = cameraControl._isKeyDownForAction(cameraControl.ROTATE_Y_POS, keyDownMap);\n                const rotateYNeg = cameraControl._isKeyDownForAction(cameraControl.ROTATE_Y_NEG, keyDownMap);\n                const rotateXPos = cameraControl._isKeyDownForAction(cameraControl.ROTATE_X_POS, keyDownMap);\n                const rotateXNeg = cameraControl._isKeyDownForAction(cameraControl.ROTATE_X_NEG, keyDownMap);\n\n                const orbitDelta = elapsedSecs * configs.keyboardRotationRate;\n\n                if (rotateYPos || rotateYNeg || rotateXPos || rotateXNeg) {\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n\n                    if (rotateYPos) {\n                        updates.rotateDeltaY += orbitDelta;\n\n                    } else if (rotateYNeg) {\n                        updates.rotateDeltaY -= orbitDelta;\n                    }\n\n                    if (rotateXPos) {\n                        updates.rotateDeltaX += orbitDelta;\n\n                    } else if (rotateXNeg) {\n                        updates.rotateDeltaX -= orbitDelta;\n                    }\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n                }\n            }\n\n            //-------------------------------------------------------------------------------------------------\n            // Keyboard panning\n            //-------------------------------------------------------------------------------------------------\n\n            if (!keyDownMap[input.KEY_CTRL] && !keyDownMap[input.KEY_ALT]) {\n\n                const dollyBackwards = cameraControl._isKeyDownForAction(cameraControl.DOLLY_BACKWARDS, keyDownMap);\n                const dollyForwards = cameraControl._isKeyDownForAction(cameraControl.DOLLY_FORWARDS, keyDownMap);\n\n                if (dollyBackwards || dollyForwards) {\n\n                    const dollyDelta = elapsedSecs * configs.keyboardDollyRate;\n\n                    if ((!configs.firstPerson) && configs.followPointer) {\n                        controllers.pivotController.startPivot();\n                    }\n                    if (dollyForwards) {\n                        updates.dollyDelta -= dollyDelta;\n                    } else if (dollyBackwards) {\n                        updates.dollyDelta += dollyDelta;\n                    }\n\n                    if (mouseMovedSinceLastKeyboardDolly) {\n                        states.followPointerDirty = true;\n                        mouseMovedSinceLastKeyboardDolly = false;\n                    }\n                }\n            }\n\n            const panForwards = cameraControl._isKeyDownForAction(cameraControl.PAN_FORWARDS, keyDownMap);\n            const panBackwards = cameraControl._isKeyDownForAction(cameraControl.PAN_BACKWARDS, keyDownMap);\n            const panLeft = cameraControl._isKeyDownForAction(cameraControl.PAN_LEFT, keyDownMap);\n            const panRight = cameraControl._isKeyDownForAction(cameraControl.PAN_RIGHT, keyDownMap);\n            const panUp = cameraControl._isKeyDownForAction(cameraControl.PAN_UP, keyDownMap);\n            const panDown = cameraControl._isKeyDownForAction(cameraControl.PAN_DOWN, keyDownMap);\n\n            const panDelta = (keyDownMap[input.KEY_ALT] ? 0.3 : 1.0) * elapsedSecs * configs.keyboardPanRate; // ALT for slower pan rate\n\n            if (panForwards || panBackwards || panLeft || panRight || panUp || panDown) {\n\n                if ((!configs.firstPerson) && configs.followPointer) {\n                    controllers.pivotController.startPivot();\n                }\n\n                if (panDown) {\n                    updates.panDeltaY += panDelta;\n\n                } else if (panUp) {\n                    updates.panDeltaY += -panDelta;\n                }\n\n                if (panRight) {\n                    updates.panDeltaX += -panDelta;\n\n                } else if (panLeft) {\n                    updates.panDeltaX += panDelta;\n                }\n\n                if (panBackwards) {\n                    updates.panDeltaZ += panDelta;\n\n                } else if (panForwards) {\n                    updates.panDeltaZ += -panDelta;\n                }\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        this._scene.off(this._onTick);\n\n        document.removeEventListener(\"mousemove\", this._documentMouseMoveHandler);\n        document.removeEventListener(\"keydown\", this._documentKeyDownHandler);\n        document.removeEventListener(\"keyup\", this._documentKeyUpHandler);\n    }\n}\n\nexport {KeyboardPanRotateDollyHandler};","import {math} from \"../../math/math.js\";\n\nconst SCALE_DOLLY_EACH_FRAME = 1; // Recalculate dolly speed for eye->target distance on each Nth frame\nconst EPSILON = 0.001;\nconst tempVec3 = math.vec3();\n\n/**\n * Handles camera updates on each \"tick\" that were scheduled by the various controllers.\n *\n * @private\n */\nclass CameraUpdater {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n        const camera = scene.camera;\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const panController = controllers.panController;\n\n        let countDown = SCALE_DOLLY_EACH_FRAME; // Decrements on each tick\n        let dollyDistFactor = 1.0; // Calculated when countDown is zero\n        let followPointerWorldPos = null; // Holds the pointer's World position when configs.followPointer is true\n        \n        this._onTick = scene.on(\"tick\", () => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            let cursorType = \"default\";\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dolly decay\n            //------------------------------------------------------------------------------------  ----------------------\n\n            if (Math.abs(updates.dollyDelta) < EPSILON) {\n                updates.dollyDelta = 0;\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Rotation decay\n            //----------------------------------------------------------------------------------------------------------\n\n            if (Math.abs(updates.rotateDeltaX) < EPSILON) {\n                updates.rotateDeltaX = 0;\n            }\n\n            if (Math.abs(updates.rotateDeltaY) < EPSILON) {\n                updates.rotateDeltaY = 0;\n            }\n\n            if (updates.rotateDeltaX !== 0 || updates.rotateDeltaY !== 0) {\n                updates.dollyDelta = 0;\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dolly speed eye->look scaling\n            //\n            // If pointer is over an object, then dolly speed is proportional to the distance to that object.\n            //\n            // If pointer is not over an object, then dolly speed is proportional to the distance to the last\n            // object the pointer was over. This is so that we can dolly to structures that may have gaps through\n            // which empty background shows, that the pointer may inadvertently be over. In these cases, we don't\n            // want dolly speed wildly varying depending on how accurately the user avoids the gaps with the pointer.\n            //----------------------------------------------------------------------------------------------------------\n\n            if (configs.followPointer) {\n\n                if (--countDown <= 0) {\n\n                    countDown = SCALE_DOLLY_EACH_FRAME;\n\n                    if (updates.dollyDelta !== 0) {\n                        if (updates.rotateDeltaY === 0 && updates.rotateDeltaX === 0) {\n\n                            if (configs.followPointer && states.followPointerDirty) {\n\n                                pickController.pickCursorPos = states.pointerCanvasPos;\n                                pickController.schedulePickSurface = true;\n                                pickController.update();\n\n                                if (pickController.pickResult && pickController.pickResult.worldPos) {\n                                    followPointerWorldPos = pickController.pickResult.worldPos;\n                                    \n                                } else {\n                                    dollyDistFactor = 1.0;\n                                    followPointerWorldPos = null;\n                                }\n\n                                states.followPointerDirty = false;\n                            }\n                        }\n\n                        if (followPointerWorldPos) {\n                            const dist = Math.abs(math.lenVec3(math.subVec3(followPointerWorldPos, scene.camera.eye, tempVec3)));\n                            dollyDistFactor = dist / configs.dollyProximityThreshold;\n                        }\n\n                        if (dollyDistFactor < configs.dollyMinSpeed) {\n                            dollyDistFactor = configs.dollyMinSpeed;\n                        }\n                    }\n                }\n            }\n\n            const dollyDeltaForDist = (updates.dollyDelta * dollyDistFactor);\n\n            //----------------------------------------------------------------------------------------------------------\n            // Rotation\n            //----------------------------------------------------------------------------------------------------------\n\n            if (updates.rotateDeltaY !== 0 || updates.rotateDeltaX !== 0) {\n\n                if ((!configs.firstPerson) && configs.followPointer && pivotController.getPivoting()) {\n                    pivotController.continuePivot(updates.rotateDeltaY, updates.rotateDeltaX);\n                    pivotController.showPivot();\n\n                } else {\n\n                    if (updates.rotateDeltaX !== 0) {\n                        if (configs.firstPerson) {\n                            camera.pitch(-updates.rotateDeltaX);\n                        } else {\n                            camera.orbitPitch(updates.rotateDeltaX);\n                        }\n                    }\n\n                    if (updates.rotateDeltaY !== 0) {\n                        if (configs.firstPerson) {\n                            camera.yaw(updates.rotateDeltaY);\n                        } else {\n                            camera.orbitYaw(updates.rotateDeltaY);\n                        }\n                    }\n                }\n\n                updates.rotateDeltaX *= configs.rotationInertia;\n                updates.rotateDeltaY *= configs.rotationInertia;\n\n                cursorType = \"grabbing\";\n            }\n\n            //----------------------------------------------------------------------------------------------------------\n            // Panning\n            //----------------------------------------------------------------------------------------------------------\n\n            if (Math.abs(updates.panDeltaX) < EPSILON) {\n                updates.panDeltaX = 0;\n            }\n\n            if (Math.abs(updates.panDeltaY) < EPSILON) {\n                updates.panDeltaY = 0;\n            }\n\n            if (Math.abs(updates.panDeltaZ) < EPSILON) {\n                updates.panDeltaZ = 0;\n            }\n\n            if (updates.panDeltaX !== 0 || updates.panDeltaY !== 0 || updates.panDeltaZ !== 0) {\n\n                const vec = math.vec3();\n\n                vec[0] = updates.panDeltaX;\n                vec[1] = updates.panDeltaY;\n                vec[2] = updates.panDeltaZ;\n\n                let verticalEye;\n                let verticalLook;\n\n                if (configs.constrainVertical) {\n\n                    if (camera.xUp) {\n                        verticalEye = camera.eye[0];\n                        verticalLook = camera.look[0];\n                    } else if (camera.yUp) {\n                        verticalEye = camera.eye[1];\n                        verticalLook = camera.look[1];\n                    } else if (camera.zUp) {\n                        verticalEye = camera.eye[2];\n                        verticalLook = camera.look[2];\n                    }\n\n                    camera.pan(vec);\n\n                    const eye = camera.eye;\n                    const look = camera.look;\n\n                    if (camera.xUp) {\n                        eye[0] = verticalEye;\n                        look[0] = verticalLook;\n                    } else if (camera.yUp) {\n                        eye[1] = verticalEye;\n                        look[1] = verticalLook;\n                    } else if (camera.zUp) {\n                        eye[2] = verticalEye;\n                        look[2] = verticalLook;\n                    }\n\n                    camera.eye = eye;\n                    camera.look = look;\n\n                } else {\n                    camera.pan(vec);\n                }\n\n                cursorType = \"grabbing\";\n            }\n\n            updates.panDeltaX *= configs.panInertia;\n            updates.panDeltaY *= configs.panInertia;\n            updates.panDeltaZ *= configs.panInertia;\n\n            //----------------------------------------------------------------------------------------------------------\n            // Dollying\n            //----------------------------------------------------------------------------------------------------------\n\n            if (dollyDeltaForDist !== 0) {\n\n                if (dollyDeltaForDist < 0) {\n                    cursorType = \"zoom-in\";\n                } else {\n                    cursorType = \"zoom-out\";\n                }\n\n                if (configs.firstPerson) {\n\n                    let verticalEye;\n                    let verticalLook;\n\n                    if (configs.constrainVertical) {\n                        if (camera.xUp) {\n                            verticalEye = camera.eye[0];\n                            verticalLook = camera.look[0];\n                        } else if (camera.yUp) {\n                            verticalEye = camera.eye[1];\n                            verticalLook = camera.look[1];\n                        } else if (camera.zUp) {\n                            verticalEye = camera.eye[2];\n                            verticalLook = camera.look[2];\n                        }\n                    }\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToCanvasPos(followPointerWorldPos, states.pointerCanvasPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.pan([0, 0, dollyDeltaForDist]);\n                        camera.ortho.scale = camera.ortho.scale - dollyDeltaForDist;\n                    }\n\n                    if (configs.constrainVertical) {\n                        const eye = camera.eye;\n                        const look = camera.look;\n                        if (camera.xUp) {\n                            eye[0] = verticalEye;\n                            look[0] = verticalLook;\n                        } else if (camera.yUp) {\n                            eye[1] = verticalEye;\n                            look[1] = verticalLook;\n                        } else if (camera.zUp) {\n                            eye[2] = verticalEye;\n                            look[2] = verticalLook;\n                        }\n                        camera.eye = eye;\n                        camera.look = look;\n                    }\n\n                } else if (configs.planView) {\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToCanvasPos(followPointerWorldPos, states.pointerCanvasPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.ortho.scale = camera.ortho.scale + dollyDeltaForDist;\n                        camera.zoom(dollyDeltaForDist);\n                    }\n\n                } else { // Orbiting\n\n                    if (configs.followPointer) {\n                        const dolliedThroughSurface = panController.dollyToCanvasPos(followPointerWorldPos, states.pointerCanvasPos, -dollyDeltaForDist);\n                        if (dolliedThroughSurface) {\n                            states.followPointerDirty = true;\n                        }\n                    } else {\n                        camera.ortho.scale = camera.ortho.scale + dollyDeltaForDist;\n                        camera.zoom(dollyDeltaForDist);\n                    }\n                }\n\n                updates.dollyDelta *= configs.dollyInertia;\n            }\n\n            pickController.fireEvents();\n\n            document.body.style.cursor = cursorType;\n        });\n    }\n\n\n    destroy() {\n        this._scene.off(this._onTick);\n    }\n}\n\nexport {CameraUpdater};","/**\n * @private\n */\nclass MouseMiscHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n\n        const canvas = this._scene.canvas.canvas;\n\n        canvas.addEventListener(\"mouseenter\", this._mouseEnterHandler = () => {\n            states.mouseover = true;\n        });\n\n        canvas.addEventListener(\"mouseleave\", this._mouseLeaveHandler = () => {\n            states.mouseover = false;\n            canvas.style.cursor = null;\n        });\n\n        document.addEventListener(\"mousemove\", this._mouseMoveHandler = (e) => {\n            getCanvasPosFromEvent(e, canvas, states.pointerCanvasPos);\n        });\n\n        canvas.addEventListener(\"mousedown\", this._mouseDownHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n            getCanvasPosFromEvent(e, canvas, states.pointerCanvasPos);\n            states.mouseover = true;\n        });\n\n        canvas.addEventListener(\"mouseup\", this._mouseUpHandler = (e) => {\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n\n        const canvas = this._scene.canvas.canvas;\n\n        document.removeEventListener(\"mousemove\", this._mouseMoveHandler);\n        canvas.removeEventListener(\"mouseenter\", this._mouseEnterHandler);\n        canvas.removeEventListener(\"mouseleave\", this._mouseLeaveHandler);\n        canvas.removeEventListener(\"mousedown\", this._mouseDownHandler);\n        canvas.removeEventListener(\"mouseup\", this._mouseUpHandler);\n    }\n}\n\nfunction getCanvasPosFromEvent(event, canvas, canvasPos) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        const { x, y } = canvas.getBoundingClientRect();\n        canvasPos[0] = event.clientX - x;\n        canvasPos[1] = event.clientY - y;\n    }\n    return canvasPos;\n}\n\nexport {MouseMiscHandler};\n","import {math} from \"../../../math/math.js\";\n\nconst getCanvasPosFromEvent = function (event, canvasPos) {\n    if (!event) {\n        event = window.event;\n        canvasPos[0] = event.x;\n        canvasPos[1] = event.y;\n    } else {\n        let element = event.target;\n        let totalOffsetLeft = 0;\n        let totalOffsetTop = 0;\n        while (element.offsetParent) {\n            totalOffsetLeft += element.offsetLeft;\n            totalOffsetTop += element.offsetTop;\n            element = element.offsetParent;\n        }\n        canvasPos[0] = event.pageX - totalOffsetLeft;\n        canvasPos[1] = event.pageY - totalOffsetTop;\n    }\n    return canvasPos;\n};\n\n/**\n * @private\n */\nclass TouchPanRotateAndDollyHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n\n        const tapStartCanvasPos = math.vec2();\n        const tapCanvasPos0 = math.vec2();\n        const tapCanvasPos1 = math.vec2();\n        const touch0Vec = math.vec2();\n\n        const lastCanvasTouchPosList = [];\n        const canvas = this._scene.canvas.canvas;\n\n        let numTouches = 0;\n        let tapStartTime = -1;\n        let waitForTick = false;\n\n        this._onTick = scene.on(\"tick\", () => {\n            waitForTick = false;\n        });\n\n        canvas.addEventListener(\"touchstart\", this._canvasTouchStartHandler = (event) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            const touches = event.touches;\n            const changedTouches = event.changedTouches;\n\n            states.touchStartTime = Date.now();\n\n            if (touches.length === 1 && changedTouches.length === 1) {\n\n                tapStartTime = states.touchStartTime;\n\n                getCanvasPosFromEvent(touches[0], tapStartCanvasPos);\n\n                if (configs.followPointer) {\n\n                    pickController.pickCursorPos = tapStartCanvasPos;\n                    pickController.schedulePickSurface = true;\n                    pickController.update();\n\n                    if (!configs.planView) {\n\n                        if (pickController.picked && pickController.pickedSurface && pickController.pickResult && pickController.pickResult.worldPos) {\n\n                            pivotController.setPivotPos(pickController.pickResult.worldPos);\n\n                            if (!configs.firstPerson && pivotController.startPivot()) {\n                                pivotController.showPivot();\n                            }\n\n                        } else {\n\n                            if (configs.smartPivot) {\n                                pivotController.setCanvasPivotPos(states.pointerCanvasPos);\n                            } else {\n                                pivotController.setPivotPos(scene.camera.look);\n                            }\n\n                            if (!configs.firstPerson && pivotController.startPivot()) {\n                                pivotController.showPivot();\n                            }\n                        }\n                    }\n                }\n\n            } else {\n                tapStartTime = -1;\n            }\n\n            while (lastCanvasTouchPosList.length < touches.length) {\n                lastCanvasTouchPosList.push(math.vec2());\n            }\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                getCanvasPosFromEvent(touches[i], lastCanvasTouchPosList[i]);\n            }\n\n            numTouches = touches.length;\n        });\n\n        canvas.addEventListener(\"touchmove\", this._canvasTouchMoveHandler = (event) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            if (waitForTick) {\n                // Limit changes detection to one per frame\n                return;\n            }\n\n            waitForTick = true;\n\n            // Scaling drag-rotate to canvas boundary\n\n            const canvasBoundary = scene.canvas.boundary;\n            const canvasWidth = canvasBoundary[2] - canvasBoundary[0];\n            const canvasHeight = canvasBoundary[3] - canvasBoundary[1];\n\n            const touches = event.touches;\n\n            if (event.touches.length !== numTouches) {\n                // Two fingers were pressed, then one of them is removed\n                // We don't want to rotate in this case (weird behavior)\n                return;\n            }\n\n            if (numTouches === 1) {\n\n                getCanvasPosFromEvent(touches[0], tapCanvasPos0);\n\n                //-----------------------------------------------------------------------------------------------\n                // Drag rotation\n                //-----------------------------------------------------------------------------------------------\n\n                math.subVec2(tapCanvasPos0, lastCanvasTouchPosList[0], touch0Vec);\n\n                const xPanDelta = touch0Vec[0];\n                const yPanDelta = touch0Vec[1];\n                \n                if (configs.planView) { // No rotating in plan-view mode\n\n                    const camera = scene.camera;\n\n                    // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                    if (camera.projection === \"perspective\") {\n\n                        const touchPicked = false;\n                        const pickedWorldPos = [0, 0, 0];\n\n                        const depth = Math.abs(touchPicked ? math.lenVec3(math.subVec3(pickedWorldPos, scene.camera.eye, [])) : scene.camera.eyeLookDist);\n                        const targetDistance = depth * Math.tan((camera.perspective.fov / 2) * Math.PI / 180.0);\n\n                        updates.panDeltaX += (xPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY += (yPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n\n                    } else {\n\n                        updates.panDeltaX += 0.5 * camera.ortho.scale * (xPanDelta / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY += 0.5 * camera.ortho.scale * (yPanDelta / canvasHeight) * configs.touchPanRate;\n                    }\n\n                } else {\n                    updates.rotateDeltaY -= (xPanDelta / canvasWidth) * (configs.dragRotationRate * 1.0); // Full horizontal rotation\n                    updates.rotateDeltaX += (yPanDelta / canvasHeight) * (configs.dragRotationRate * 1.5); // Half vertical rotation\n                }\n\n            } else if (numTouches === 2) {\n\n                const touch0 = touches[0];\n                const touch1 = touches[1];\n\n                getCanvasPosFromEvent(touch0, tapCanvasPos0);\n                getCanvasPosFromEvent(touch1, tapCanvasPos1);\n\n                const lastMiddleTouch = math.geometricMeanVec2(lastCanvasTouchPosList[0], lastCanvasTouchPosList[1]);\n                const currentMiddleTouch = math.geometricMeanVec2(tapCanvasPos0, tapCanvasPos1);\n\n                const touchDelta = math.vec2();\n\n                math.subVec2(lastMiddleTouch, currentMiddleTouch, touchDelta);\n\n                const xPanDelta = touchDelta[0];\n                const yPanDelta = touchDelta[1];\n\n                const camera = scene.camera;\n\n                // Dollying\n\n                const d1 = math.distVec2([touch0.pageX, touch0.pageY], [touch1.pageX, touch1.pageY]);\n                const d2 = math.distVec2(lastCanvasTouchPosList[0], lastCanvasTouchPosList[1]);\n\n                const dollyDelta = (d2 - d1) * configs.touchDollyRate;\n\n                updates.dollyDelta = dollyDelta;\n\n                if (Math.abs(dollyDelta) < 1.0) {\n\n                    // We use only canvasHeight here so that aspect ratio does not distort speed\n\n                    if (camera.projection === \"perspective\") {\n                        const pickedWorldPos = pickController.pickResult ? pickController.pickResult.worldPos : scene.center;\n\n                        const depth = Math.abs(math.lenVec3(math.subVec3(pickedWorldPos, scene.camera.eye, [])));\n                        const targetDistance = depth * Math.tan((camera.perspective.fov / 2) * Math.PI / 180.0);\n\n                        updates.panDeltaX -= (xPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY -= (yPanDelta * targetDistance / canvasHeight) * configs.touchPanRate;\n\n                    } else {\n\n                        updates.panDeltaX -= 0.5 * camera.ortho.scale * (xPanDelta / canvasHeight) * configs.touchPanRate;\n                        updates.panDeltaY -= 0.5 * camera.ortho.scale * (yPanDelta / canvasHeight) * configs.touchPanRate;\n                    }\n                }\n\n\n                states.pointerCanvasPos = currentMiddleTouch;\n            }\n\n            for (let i = 0; i < numTouches; ++i) {\n                getCanvasPosFromEvent(touches[i], lastCanvasTouchPosList[i]);\n            }\n        });\n    }\n\n    reset() {\n    }\n\n    destroy() {\n        const canvas = this._scene.canvas.canvas;\n        canvas.removeEventListener(\"touchstart\", this._canvasTouchStartHandler);\n        canvas.removeEventListener(\"touchmove\", this._canvasTouchMoveHandler);\n        this._scene.off(this._onTick);\n    }\n}\n\nexport {TouchPanRotateAndDollyHandler};\n","import {math} from \"../../../math/math.js\";\n\nconst TAP_INTERVAL = 150;\nconst DBL_TAP_INTERVAL = 325;\nconst TAP_DISTANCE_THRESHOLD = 4;\n\n/**\n * @private\n */\nclass TouchPickHandler {\n\n    constructor(scene, controllers, configs, states, updates) {\n\n        this._scene = scene;\n\n        const pickController = controllers.pickController;\n        const pivotController = controllers.pivotController;\n        const cameraControl = controllers.cameraControl;\n\n        let touchStartTime;\n        const activeTouches = [];\n        const tapStartPos = new Float32Array(2);\n        let tapStartTime = -1;\n        let lastTapTime = -1;\n\n        const canvas = this._scene.canvas.canvas;\n\n        const flyCameraTo = (pickResult) => {\n            let pos;\n            if (pickResult && pickResult.worldPos) {\n                pos = pickResult.worldPos\n            }\n            const aabb = pickResult ? pickResult.entity.aabb : scene.aabb;\n            if (pos) { // Fly to look at point, don't change eye->look dist\n                const camera = scene.camera;\n                const diff = math.subVec3(camera.eye, camera.look, []);\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n                // TODO: Option to back off to fit AABB in view\n            } else {// Fly to fit target boundary in view\n                controllers.cameraFlight.flyTo({\n                    aabb: aabb\n                });\n            }\n        };\n\n        canvas.addEventListener(\"touchstart\", this._canvasTouchStartHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const touches = e.touches;\n            const changedTouches = e.changedTouches;\n\n            touchStartTime = Date.now();\n\n            if (touches.length === 1 && changedTouches.length === 1) {\n                tapStartTime = touchStartTime;\n                tapStartPos[0] = touches[0].pageX;\n                tapStartPos[1] = touches[0].pageY;\n            } else {\n                tapStartTime = -1;\n            }\n\n            while (activeTouches.length < touches.length) {\n                activeTouches.push(new Float32Array(2))\n            }\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                activeTouches[i][0] = touches[i].pageX;\n                activeTouches[i][1] = touches[i].pageY;\n            }\n\n            activeTouches.length = touches.length;\n\n            e.stopPropagation();\n\n        }, {passive: true});\n\n\n        canvas.addEventListener(\"touchend\", this._canvasTouchEndHandler = (e) => {\n\n            if (!(configs.active && configs.pointerEnabled)) {\n                return;\n            }\n\n            const currentTime = Date.now();\n            const touches = e.touches;\n            const changedTouches = e.changedTouches;\n\n            const pickedSubs = cameraControl.hasSubs(\"picked\");\n            const pickedNothingSubs = cameraControl.hasSubs(\"pickedNothing\");\n            const pickedSurfaceSubs = cameraControl.hasSubs(\"pickedSurface\");\n            const doublePickedSubs = cameraControl.hasSubs(\"doublePicked\");\n            const doublePickedSurfaceSubs = cameraControl.hasSubs(\"doublePickedSurface\");\n            const doublePickedNothingSubs = cameraControl.hasSubs(\"doublePickedNothing\");\n\n            // process tap\n\n            if (touches.length === 0 && changedTouches.length === 1) {\n\n                if (tapStartTime > -1 && currentTime - tapStartTime < TAP_INTERVAL) {\n\n                    if (lastTapTime > -1 && tapStartTime - lastTapTime < DBL_TAP_INTERVAL) {\n\n                        // Double-tap\n\n                        pickController.pickCursorPos[0] = Math.round(changedTouches[0].clientX);\n                        pickController.pickCursorPos[1] = Math.round(changedTouches[0].clientY);\n                        pickController.schedulePickEntity = true;\n                        pickController.schedulePickSurface = pickedSurfaceSubs;\n\n                        pickController.update();\n\n                        if (pickController.pickResult) {\n\n                            cameraControl.fire(\"doublePicked\", pickController.pickResult);\n\n                            if (pickController.pickedSurface) {\n                                cameraControl.fire(\"doublePickedSurface\", pickController.pickResult);\n                            }\n\n                            if (configs.doublePickFlyTo) {\n                                flyCameraTo(pickController.pickResult);\n                            }\n                        } else {\n                            cameraControl.fire(\"doublePickedNothing\");\n                            if (configs.doublePickFlyTo) {\n                                flyCameraTo();\n                            }\n                        }\n\n                        lastTapTime = -1;\n\n                    } else if (math.distVec2(activeTouches[0], tapStartPos) < TAP_DISTANCE_THRESHOLD) {\n\n                        // Single-tap\n\n                        pickController.pickCursorPos[0] = Math.round(changedTouches[0].clientX);\n                        pickController.pickCursorPos[1] = Math.round(changedTouches[0].clientY);\n                        pickController.schedulePickEntity = true;\n                        pickController.schedulePickSurface = pickedSurfaceSubs;\n\n                        pickController.update();\n\n                        if (pickController.pickResult) {\n\n                            cameraControl.fire(\"picked\", pickController.pickResult);\n\n                            if (pickController.pickedSurface) {\n                                cameraControl.fire(\"pickedSurface\", pickController.pickResult);\n                            }\n\n                        } else {\n                            cameraControl.fire(\"pickedNothing\");\n                        }\n\n                        lastTapTime = currentTime;\n                    }\n\n                    tapStartTime = -1\n                }\n            }\n\n            activeTouches.length = touches.length;\n\n            for (let i = 0, len = touches.length; i < len; ++i) {\n                activeTouches[i][0] = touches[i].pageX;\n                activeTouches[i][1] = touches[i].pageY;\n            }\n\n            e.stopPropagation();\n\n        }, {passive: true});\n\n    }\n\n    reset() {\n        // TODO\n         // tapStartTime = -1;\n         // lastTapTime = -1;\n\n    }\n\n    destroy() {\n        const canvas = this._scene.canvas.canvas;\n        canvas.removeEventListener(\"touchstart\", this._canvasTouchStartHandler);\n        canvas.removeEventListener(\"touchend\", this._canvasTouchEndHandler);\n    }\n}\n\n\nexport {TouchPickHandler};","import {Component} from '../Component.js';\n\nimport {CameraFlightAnimation} from './../camera/CameraFlightAnimation.js';\nimport {PanController} from \"./lib/controllers/PanController.js\";\nimport {PivotController} from \"./lib/controllers/PivotController.js\";\nimport {PickController} from \"./lib/controllers/PickController.js\";\nimport {MousePanRotateDollyHandler} from \"./lib/handlers/MousePanRotateDollyHandler.js\";\nimport {KeyboardAxisViewHandler} from \"./lib/handlers/KeyboardAxisViewHandler.js\";\nimport {MousePickHandler} from \"./lib/handlers/MousePickHandler.js\";\nimport {KeyboardPanRotateDollyHandler} from \"./lib/handlers/KeyboardPanRotateDollyHandler.js\";\nimport {CameraUpdater} from \"./lib/CameraUpdater.js\";\nimport {MouseMiscHandler} from \"./lib/handlers/MouseMiscHandler.js\";\nimport {TouchPanRotateAndDollyHandler} from \"./lib/handlers/TouchPanRotateAndDollyHandler.js\";\nimport {utils} from \"../utils.js\";\nimport {math} from \"../math/math.js\";\nimport {TouchPickHandler} from \"./lib/handlers/TouchPickHandler.js\";\n\n/**\n * @desc Controls the {@link Camera} with user input, and fires events when the user interacts with pickable {@link Entity}s.\n *\n * # Contents\n *\n * * [Overview](#overview)\n * * [Examples](#examples)\n * * [Orbit Mode](#orbit-mode)\n *      + [Following the Pointer in Orbit Mode](#--following-the-pointer-in-orbit-mode--)\n *      + [Showing the Pivot Position](#--showing-the-pivot-position--)\n *      + [Axis-Aligned Views in Orbit Mode](#--axis-aligned-views-in-orbit-mode--)\n *      + [View-Fitting Entitys in Orbit Mode](#--view-fitting-entitys-in-orbit-mode--)\n * * [First-Person Mode](#first-person-mode)\n *      + [Following the Pointer in First-Person Mode](#--following-the-pointer-in-first-person-mode--)\n *      + [Constraining Vertical Position in First-Person Mode](#--constraining-vertical-position-in-first-person-mode--)\n *      + [Axis-Aligned Views in First-Person Mode](#--axis-aligned-views-in-first-person-mode--)\n *      + [View-Fitting Entitys in First-Person Mode](#--view-fitting-entitys-in-first-person-mode--)\n * * [Plan-View Mode](#plan-view-mode)\n *      + [Following the Pointer in Plan-View Mode](#--following-the-pointer-in-plan-view-mode--)\n *      + [Axis-Aligned Views in Plan-View Mode](#--axis-aligned-views-in-plan-view-mode--)\n * * [CameraControl Events](#cameracontrol-events)\n *      + [\"hover\"](#---hover---)\n *      + [\"hoverOff\"](#---hoveroff---)\n *      + [\"hoverEnter\"](#---hoverenter---)\n *      + [\"hoverOut\"](#---hoverout---)\n *      + [\"picked\"](#---picked---)\n *      + [\"pickedSurface\"](#---pickedsurface---)\n *      + [\"pickedNothing\"](#---pickednothing---)\n *      + [\"doublePicked\"](#---doublepicked---)\n *      + [\"doublePickedSurface\"](#---doublepickedsurface---)\n *      + [\"doublePickedNothing\"](#---doublepickednothing---)\n *      + [\"rightClick\"](#---rightclick---)\n * * [Custom Keyboard Mappings](#custom-keyboard-mappings)\n *\n * <br><br>\n *\n * # Overview\n *\n * * Each {@link Viewer} has a ````CameraControl````, located at {@link Viewer#cameraControl}.\n * * {@link CameraControl#navMode} selects the navigation mode:\n *      * ````\"orbit\"```` rotates the {@link Camera} position about the target.\n *      * ````\"firstPerson\"```` rotates the World about the Camera position.\n *      * ````\"planView\"```` never rotates, but still allows to pan and dolly, typically for an axis-aligned view.\n * * {@link CameraControl#followPointer} makes the Camera follow the mouse or touch pointer.\n * * {@link CameraControl#constrainVertical} locks the Camera to its current height when in first-person mode.\n * * ````CameraControl```` fires pick events when we hover, click or tap on an {@link Entity}.\n * <br><br>\n *\n * # Examples\n *\n * * [Orbit Navigation - Duplex Model](https://xeokit.github.io/xeokit-sdk/examples/#CameraControl_orbit_Duplex)\n * * [Orbit Navigation - Holter Tower Model](https://xeokit.github.io/xeokit-sdk/examples/#CameraControl_orbit_HolterTower)\n * * [First-Person Navigation - Duplex Model](https://xeokit.github.io/xeokit-sdk/examples/#CameraControl_firstPerson_Duplex)\n * * [First-Person Navigation - Holter Tower Model](https://xeokit.github.io/xeokit-sdk/examples/#CameraControl_firstPerson_HolterTower)\n * * [Plan-view Navigation - Schependomlaan Model](https://xeokit.github.io/xeokit-sdk/examples/#CameraControl_planView_Schependomlaan)\n * * [Custom Keyboard Mapping](https://xeokit.github.io/xeokit-sdk/examples/#CameraControl_keyMap)\n * <br><br>\n *\n * # Orbit Mode\n *\n * In orbit mode, ````CameraControl```` orbits the {@link Camera} about the target.\n *\n * To enable orbit mode:\n *\n * ````javascript\n * const cameraControl = myViewer.cameraControl;\n * cameraControl.navMode = \"orbit\";\n * ````\n *\n * Then orbit by:\n *\n * * left-dragging the mouse,\n * * tap-dragging the touch pad, and\n * * pressing arrow keys, or ````Q```` and ````E```` on a QWERTY keyboard, or ````A```` and ````E```` on an AZERTY keyboard.\n * <br><br>\n *\n * Dolly forwards and backwards by:\n *\n * * spinning the mouse wheel,\n * * pinching on the touch pad, and\n * * pressing the ````+```` and ````-```` keys, or ````W```` and ````S```` on a QWERTY keyboard, or ````Z```` and ````S```` for AZERTY.\n * <br><br>\n *\n * Pan horizontally and vertically by:\n *\n * * right-dragging the mouse,\n * * left-dragging the mouse with the SHIFT key down,\n * * tap-dragging the touch pad with SHIFT down,\n * * pressing the ````A````, ````D````, ````Z```` and ````X```` keys on a QWERTY keyboard, and\n * * pressing the ````Q````, ````D````, ````W```` and ````X```` keys on an AZERTY keyboard,\n * <br><br>\n *\n * ## Following the Pointer in Orbit Mode\n *\n * When {@link CameraControl#followPointer} is ````true````in orbiting mode, the mouse or touch pointer will dynamically\n * indicate the target that the {@link Camera} will orbit, as well as dolly to and from.\n *\n * Lets ensure that we're in orbit mode, then enable the {@link Camera} to follow the pointer:\n *\n * ````javascript\n * cameraControl.navMode = \"orbit\";\n * cameraControl.followPointer = true;\n * ````\n *\n * ## Smart Pivoting\n *\n * TODO\n *\n * ## Showing the Pivot Position\n *\n * We can configure {@link CameraControl#pivotElement} with an HTML element to indicate the current\n * pivot position. The indicator will appear momentarily each time we move the {@link Camera} while in orbit mode with\n * {@link CameraControl#followPointer} set ````true````.\n *\n * First we'll define some CSS to style our pivot indicator as a black dot with a white border:\n *\n * ````css\n * .camera-pivot-marker {\n *      color: #ffffff;\n *      position: absolute;\n *      width: 25px;\n *      height: 25px;\n *      border-radius: 15px;\n *      border: 2px solid #ebebeb;\n *      background: black;\n *      visibility: hidden;\n *      box-shadow: 5px 5px 15px 1px #000000;\n *      z-index: 10000;\n *      pointer-events: none;\n * }\n * ````\n *\n * Then we'll attach our pivot indicator's HTML element to the ````CameraControl````:\n *\n * ````javascript\n * const pivotElement = document.createRange().createContextualFragment(\"<div class='camera-pivot-marker'></div>\").firstChild;\n *\n * document.body.appendChild(pivotElement);\n *\n * cameraControl.pivotElement = pivotElement;\n * ````\n *\n * ## Axis-Aligned Views in Orbit Mode\n *\n * In orbit mode, we can use keys 1-6 to position the {@link Camera} to look at the center of the {@link Scene} from along each of the\n * six World-space axis. Pressing one of these keys will fly the {@link Camera} to the corresponding axis-aligned view.\n *\n * ## View-Fitting Entitys in Orbit Mode\n *\n * When {@link CameraControl#doublePickFlyTo} is ````true````, we can left-double-click or\n * double-tap (ie. \"double-pick\") an {@link Entity} to fit it to view. This will cause the {@link Camera}\n * to fly to that Entity. Our target then becomes the center of that Entity. If we are currently pivoting,\n * then our pivot position is then also set to the Entity center.\n *\n * Disable that behaviour by setting {@link CameraControl#doublePickFlyTo} ````false````.\n *\n * # First-Person Mode\n *\n * In first-person mode, ````CameraControl```` rotates the World about the {@link Camera} position.\n *\n * To enable first-person mode:\n *\n * ````javascript\n * cameraControl.navMode = \"firstPerson\";\n * ````\n *\n * Then rotate by:\n *\n * * left-dragging the mouse,\n * * tap-dragging the touch pad,\n * * pressing arrow keys, or ````Q```` and ````E```` on a QWERTY keyboard, or ````A```` and ````E```` on an AZERTY keyboard.\n * <br><br>\n *\n * Dolly forwards and backwards by:\n *\n * * spinning the mouse wheel,\n * * pinching on the touch pad, and\n * * pressing the ````+```` and ````-```` keys, or ````W```` and ````S```` on a QWERTY keyboard, or ````Z```` and ````S```` for AZERTY.\n * <br><br>\n *\n * Pan left, right, up and down by:\n *\n * * left-dragging or right-dragging the mouse, and\n * * tap-dragging the touch pad with SHIFT down.\n *\n * Pan forwards, backwards, left, right, up and down by pressing the ````WSADZX```` keys on a QWERTY keyboard,\n * or ````WSQDWX```` keys on an AZERTY keyboard.\n * <br><br>\n *\n * ## Following the Pointer in First-Person Mode\n *\n * When {@link CameraControl#followPointer} is ````true```` in first-person mode, the mouse or touch pointer will dynamically\n * indicate the target to which the {@link Camera} will dolly to and from. In first-person mode, however, the World will always rotate\n * about the {@link Camera} position.\n *\n * Lets ensure that we're in first-person mode, then enable the {@link Camera} to follow the pointer:\n *\n * ````javascript\n * cameraControl.navMode = \"firstPerson\";\n * cameraControl.followPointer = true;\n * ````\n *\n * When the pointer is over empty space, the target will remain the last object that the pointer was over.\n *\n * ## Constraining Vertical Position in First-Person Mode\n *\n * In first-person mode, we can lock the {@link Camera} to its current position on the vertical World axis, which is useful for walk-through navigation:\n *\n * ````javascript\n * cameraControl.constrainVertical = true;\n * ````\n *\n * ## Axis-Aligned Views in First-Person Mode\n *\n * In first-person mode we can use keys 1-6 to position the {@link Camera} to look at the center of\n * the {@link Scene} from along each of the six World-space axis. Pressing one of these keys will fly the {@link Camera} to the\n * corresponding axis-aligned view.\n *\n * ## View-Fitting Entitys in First-Person Mode\n *\n * As in orbit mode, when in first-person mode and {@link CameraControl#doublePickFlyTo} is ````true````, we can double-click\n * or double-tap an {@link Entity} (ie. \"double-picking\") to fit it in view. This will cause the {@link Camera} to fly to\n * that Entity. Our target then becomes the center of that Entity.\n *\n * Disable that behaviour by setting {@link CameraControl#doublePickFlyTo} ````false````.\n *\n * # Plan-View Mode\n *\n * In plan-view mode, ````CameraControl```` pans and rotates the {@link Camera}, without rotating it.\n *\n * To enable plan-view mode:\n *\n * ````javascript\n * cameraControl.navMode = \"planView\";\n * ````\n *\n * Dolly forwards and backwards by:\n *\n * * spinning the mouse wheel,\n * * pinching on the touch pad, and\n * * pressing the ````+```` and ````-```` keys.\n *\n * <br>\n * Pan left, right, up and down by:\n *\n * * left-dragging or right-dragging the mouse, and\n * * tap-dragging the touch pad with SHIFT down.\n *\n * Pan forwards, backwards, left, right, up and down by pressing the ````WSADZX```` keys on a QWERTY keyboard,\n * or ````WSQDWX```` keys on an AZERTY keyboard.\n * <br><br>\n *\n * ## Following the Pointer in Plan-View Mode\n *\n * When {@link CameraControl#followPointer} is ````true```` in plan-view mode, the mouse or touch pointer will dynamically\n * indicate the target to which the {@link Camera} will dolly to and from.  In plan-view mode, however, the {@link Camera} cannot rotate.\n *\n * Lets ensure that we're in plan-view mode, then enable the {@link Camera} to follow the pointer:\n *\n * ````javascript\n * cameraControl.navMode = \"planView\";\n * cameraControl.followPointer = true; // Default\n * ````\n *\n * When the pointer is over empty space, the target will remain the last object that the pointer was over.\n *\n * ## Axis-Aligned Views in Plan-View Mode\n *\n * As in orbit and first-person modes, in plan-view mode we can use keys 1-6 to position the {@link Camera} to look at the center of\n * the {@link Scene} from along each of the six World-space axis. Pressing one of these keys will fly the {@link Camera} to the\n * corresponding axis-aligned view.\n *\n * # CameraControl Events\n *\n * ````CameraControl```` fires events as we interact with {@link Entity}s using mouse or touch input.\n *\n * The following examples demonstrate how to subscribe to those events.\n *\n * The first example shows how to save a handle to a subscription, which we can later use to unsubscribe.\n *\n * ## \"hover\"\n *\n * Event fired when the pointer moves while hovering over an Entity.\n *\n * ````javascript\n * const onHover = cameraControl.on(\"hover\", (e) => {\n *      const entity = e.entity; // Entity\n *      const canvasPos = e.canvasPos; // 2D canvas position\n * });\n * ````\n *\n * To unsubscribe from the event:\n *\n * ````javascript\n * cameraControl.off(onHover);\n * ````\n *\n * ## \"hoverOff\"\n *\n * Event fired when the pointer moves while hovering over empty space.\n *\n * ````javascript\n * cameraControl.on(\"hoverOff\", (e) => {\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"hoverEnter\"\n *\n * Event fired when the pointer moves onto an Entity.\n *\n * ````javascript\n * cameraControl.on(\"hoverEnter\", (e) => {\n *      const entity = e.entity;\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"hoverOut\"\n *\n * Event fired when the pointer moves off an Entity.\n *\n * ````javascript\n * cameraControl.on(\"hoverOut\", (e) => {\n *      const entity = e.entity;\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"picked\"\n *\n * Event fired when we left-click or tap on an Entity.\n *\n * ````javascript\n * cameraControl.on(\"picked\", (e) => {\n *      const entity = e.entity;\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"pickedSurface\"\n *\n * Event fired when we left-click or tap on the surface of an Entity.\n *\n * ````javascript\n * cameraControl.on(\"picked\", (e) => {\n *      const entity = e.entity;\n *      const canvasPos = e.canvasPos;\n *      const worldPos = e.worldPos; // 3D World-space position\n *      const viewPos = e.viewPos; // 3D View-space position\n *      const worldNormal = e.worldNormal; // 3D World-space normal vector\n * });\n * ````\n *\n * ## \"pickedNothing\"\n *\n * Event fired when we left-click or tap on empty space.\n *\n * ````javascript\n * cameraControl.on(\"pickedNothing\", (e) => {\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"doublePicked\"\n *\n * Event fired wwhen we left-double-click or double-tap on an Entity.\n *\n * ````javascript\n * cameraControl.on(\"doublePicked\", (e) => {\n *      const entity = e.entity;\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"doublePickedSurface\"\n *\n * Event fired when we left-double-click or double-tap on the surface of an Entity.\n *\n * ````javascript\n * cameraControl.on(\"doublePickedSurface\", (e) => {\n *      const entity = e.entity;\n *      const canvasPos = e.canvasPos;\n *      const worldPos = e.worldPos;\n *      const viewPos = e.viewPos;\n *      const worldNormal = e.worldNormal;\n * });\n * ````\n *\n * ## \"doublePickedNothing\"\n *\n * Event fired when we left-double-click or double-tap on empty space.\n *\n * ````javascript\n * cameraControl.on(\"doublePickedNothing\", (e) => {\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## \"rightClick\"\n *\n * Event fired when we right-click on the canvas.\n *\n * ````javascript\n * cameraControl.on(\"rightClick\", (e) => {\n *      const event = e.event; // Mouse event\n *      const canvasPos = e.canvasPos;\n * });\n * ````\n *\n * ## Custom Keyboard Mappings\n *\n * We can customize````CameraControl```` key bindings as shown below.\n *\n * In this example, we'll just set the default bindings for a QWERTY keyboard.\n *\n * ````javascript\n * const input = myViewer.scene.input;\n *\n * cameraControl.navMode = \"orbit\";\n * cameraControl.followPointer = true;\n *\n * const keyMap = {};\n *\n * keyMap[cameraControl.PAN_LEFT] = [input.KEY_A];\n * keyMap[cameraControl.PAN_RIGHT] = [input.KEY_D];\n * keyMap[cameraControl.PAN_UP] = [input.KEY_Z];\n * keyMap[cameraControl.PAN_DOWN] = [input.KEY_X];\n * keyMap[cameraControl.DOLLY_FORWARDS] = [input.KEY_W, input.KEY_ADD];\n * keyMap[cameraControl.DOLLY_BACKWARDS] = [input.KEY_S, input.KEY_SUBTRACT];\n * keyMap[cameraControl.ROTATE_X_POS] = [input.KEY_DOWN_ARROW];\n * keyMap[cameraControl.ROTATE_X_NEG] = [input.KEY_UP_ARROW];\n * keyMap[cameraControl.ROTATE_Y_POS] = [input.KEY_LEFT_ARROW];\n * keyMap[cameraControl.ROTATE_Y_NEG] = [input.KEY_RIGHT_ARROW];\n * keyMap[cameraControl.AXIS_VIEW_RIGHT] = [input.KEY_NUM_1];\n * keyMap[cameraControl.AXIS_VIEW_BACK] = [input.KEY_NUM_2];\n * keyMap[cameraControl.AXIS_VIEW_LEFT] = [input.KEY_NUM_3];\n * keyMap[cameraControl.AXIS_VIEW_FRONT] = [input.KEY_NUM_4];\n * keyMap[cameraControl.AXIS_VIEW_TOP] = [input.KEY_NUM_5];\n * keyMap[cameraControl.AXIS_VIEW_BOTTOM] = [input.KEY_NUM_6];\n *\n * cameraControl.keyMap = keyMap;\n * ````\n *\n * We can also just configure default bindings for a specified keyboard layout, like this:\n *\n * ````javascript\n * cameraControl.keyMap = \"qwerty\";\n * ````\n *\n * Then, ````CameraControl```` will internally set {@link CameraControl#keyMap} to the default key map for the QWERTY\n * layout (which is the same set of mappings we set in the previous example). In other words, if we subsequently\n * read {@link CameraControl#keyMap}, it will now be a key map, instead of the \"qwerty\" string value we set it to.\n *\n * Supported layouts are, so far:\n *\n * * ````\"qwerty\"````\n * * ````\"azerty\"````\n */\nclass CameraControl extends Component {\n\n    /**\n     * @private\n     * @constructor\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.PAN_LEFT = 0;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.PAN_RIGHT = 1;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.PAN_UP = 2;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.PAN_DOWN = 3;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.PAN_FORWARDS = 4;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.PAN_BACKWARDS = 5;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.ROTATE_X_POS = 6;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.ROTATE_X_NEG = 7;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.ROTATE_Y_POS = 8;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.ROTATE_Y_NEG = 9;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.DOLLY_FORWARDS = 10;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.DOLLY_BACKWARDS = 11;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.AXIS_VIEW_RIGHT = 12;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.AXIS_VIEW_BACK = 13;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.AXIS_VIEW_LEFT = 14;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.AXIS_VIEW_FRONT = 15;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.AXIS_VIEW_TOP = 16;\n\n        /**\n         * Identifies the XX action.\n         * @final\n         * @type {Number}\n         */\n        this.AXIS_VIEW_BOTTOM = 17;\n\n        this._keyMap = {}; // Maps key codes to the above actions\n\n        this.scene.canvas.canvas.oncontextmenu = (e) => {\n            e.preventDefault();\n        };\n\n        // User-settable CameraControl configurations\n\n        this._configs = {\n\n            // Private\n\n            tapInterval: 150, // Millisecs\n            doubleTapInterval: 325, // Millisecs\n            tapDistanceThreshold: 4, // Pixels\n\n            // General\n\n            active: true,\n            keyboardLayout: \"qwerty\",\n            navMode: \"orbit\",\n            planView: false,\n            firstPerson: false,\n            followPointer: true,\n            doublePickFlyTo: true,\n            panRightClick: true,\n            showPivot: false,\n            pointerEnabled: true,\n            constrainVertical: false,\n            smartPivot: false,\n\n            // Rotation\n\n            dragRotationRate: 360.0,\n            keyboardRotationRate: 90.0,\n            rotationInertia: 0.0,\n\n            // Panning\n\n            keyboardPanRate: 1.0,\n            touchPanRate: 1.0,\n            panInertia: 0.5,\n\n            // Dollying\n\n            keyboardDollyRate: 10,\n            mouseWheelDollyRate: 100,\n            touchDollyRate: 0.2,\n            dollyInertia: 0,\n            dollyProximityThreshold: 30.0,\n            dollyMinSpeed: 0.04\n        };\n\n        // Current runtime state of the CameraControl\n\n        this._states = {\n            pointerCanvasPos: math.vec2(),\n            mouseover: false,\n            followPointerDirty: true,\n            mouseDownClientX: 0,\n            mouseDownClientY: 0,\n            mouseDownCursorX: 0,\n            mouseDownCursorY: 0,\n            touchStartTime: null,\n            activeTouches: [],\n            tapStartPos: math.vec2(),\n            tapStartTime: -1,\n            lastTapTime: -1\n        };\n\n        // Updates for CameraUpdater to process on next Scene \"tick\" event\n\n        this._updates = {\n            rotateDeltaX: 0,\n            rotateDeltaY: 0,\n            panDeltaX: 0,\n            panDeltaY: 0,\n            panDeltaZ: 0,\n            dollyDelta: 0\n        };\n\n        // Controllers to assist input event handlers with controlling the Camera\n\n        const scene = this.scene;\n\n        this._controllers = {\n            cameraControl: this,\n            pickController: new PickController(this, this._configs),\n            pivotController: new PivotController(scene, this._configs),\n            panController: new PanController(scene),\n            cameraFlight: new CameraFlightAnimation(this, {\n                duration: 0.5\n            })\n        };\n\n        // Input event handlers\n\n        this._handlers = [\n            new MouseMiscHandler(this.scene, this._controllers, this._configs, this._states, this._updates),\n            new TouchPanRotateAndDollyHandler(this.scene, this._controllers, this._configs, this._states, this._updates),\n            new MousePanRotateDollyHandler(this.scene, this._controllers, this._configs, this._states, this._updates),\n            new KeyboardAxisViewHandler(this.scene, this._controllers, this._configs, this._states, this._updates),\n            new MousePickHandler(this.scene, this._controllers, this._configs, this._states, this._updates),\n            new TouchPickHandler(this.scene, this._controllers, this._configs, this._states, this._updates),\n            new KeyboardPanRotateDollyHandler(this.scene, this._controllers, this._configs, this._states, this._updates)\n        ];\n\n        // Applies scheduled updates to the Camera on each Scene \"tick\" event\n\n        this._cameraUpdater = new CameraUpdater(this.scene, this._controllers, this._configs, this._states, this._updates);\n\n        // Set initial user configurations\n\n        this.navMode = cfg.navMode;\n        if (cfg.planView) {\n            this.planView = cfg.planView;\n        }\n        this.constrainVertical = cfg.constrainVertical;\n        if (cfg.keyboardLayout) {\n            this.keyboardLayout = cfg.keyboardLayout; // Deprecated\n        } else {\n            this.keyMap = cfg.keyMap;\n        }\n        this.doublePickFlyTo = cfg.doublePickFlyTo;\n        this.panRightClick = cfg.panRightClick;\n        this.active = cfg.active;\n        this.followPointer = cfg.followPointer;\n        this.rotationInertia = cfg.rotationInertia;\n        this.keyboardPanRate = cfg.keyboardPanRate;\n        this.touchPanRate = cfg.touchPanRate;\n        this.keyboardRotationRate = cfg.keyboardRotationRate;\n        this.dragRotationRate = cfg.dragRotationRate;\n        this.touchDollyRate = cfg.touchDollyRate;\n        this.dollyInertia = cfg.dollyInertia;\n        this.dollyProximityThreshold = cfg.dollyProximityThreshold;\n        this.dollyMinSpeed = cfg.dollyMinSpeed;\n        this.panInertia = cfg.panInertia;\n        this.pointerEnabled = true;\n        this.keyboardDollyRate = cfg.keyboardDollyRate;\n        this.mouseWheelDollyRate = cfg.mouseWheelDollyRate;\n    }\n\n    /**\n     * Sets custom mappings of keys to ````CameraControl```` actions.\n     *\n     * See class docs for usage.\n     *\n     * @param {{Number:Number}|String} value Either a set of new key mappings, or a string to select a keyboard layout,\n     * which causes ````CameraControl```` to use the default key mappings for that layout.\n     */\n    set keyMap(value) {\n        value = value || \"qwerty\";\n        if (utils.isString(value)) {\n            const input = this.scene.input;\n            const keyMap = {};\n\n            switch (value) {\n\n                default:\n                    this.error(\"Unsupported value for 'keyMap': \" + value + \" defaulting to 'qwerty'\");\n                // Intentional fall-through to \"qwerty\"\n                case \"qwerty\":\n                    keyMap[this.PAN_LEFT] = [input.KEY_A];\n                    keyMap[this.PAN_RIGHT] = [input.KEY_D];\n                    keyMap[this.PAN_UP] = [input.KEY_Z];\n                    keyMap[this.PAN_DOWN] = [input.KEY_X];\n                    keyMap[this.PAN_BACKWARDS] = [];\n                    keyMap[this.PAN_FORWARDS] = [];\n                    keyMap[this.DOLLY_FORWARDS] = [input.KEY_W, input.KEY_ADD];\n                    keyMap[this.DOLLY_BACKWARDS] = [input.KEY_S, input.KEY_SUBTRACT];\n                    keyMap[this.ROTATE_X_POS] = [input.KEY_DOWN_ARROW];\n                    keyMap[this.ROTATE_X_NEG] = [input.KEY_UP_ARROW];\n                    keyMap[this.ROTATE_Y_POS] = [input.KEY_Q, input.KEY_LEFT_ARROW];\n                    keyMap[this.ROTATE_Y_NEG] = [input.KEY_E, input.KEY_RIGHT_ARROW];\n                    keyMap[this.AXIS_VIEW_RIGHT] = [input.KEY_NUM_1];\n                    keyMap[this.AXIS_VIEW_BACK] = [input.KEY_NUM_2];\n                    keyMap[this.AXIS_VIEW_LEFT] = [input.KEY_NUM_3];\n                    keyMap[this.AXIS_VIEW_FRONT] = [input.KEY_NUM_4];\n                    keyMap[this.AXIS_VIEW_TOP] = [input.KEY_NUM_5];\n                    keyMap[this.AXIS_VIEW_BOTTOM] = [input.KEY_NUM_6];\n                    break;\n\n                case \"azerty\":\n                    keyMap[this.PAN_LEFT] = [input.KEY_Q];\n                    keyMap[this.PAN_RIGHT] = [input.KEY_D];\n                    keyMap[this.PAN_UP] = [input.KEY_W];\n                    keyMap[this.PAN_DOWN] = [input.KEY_X];\n                    keyMap[this.PAN_BACKWARDS] = [];\n                    keyMap[this.PAN_FORWARDS] = [];\n                    keyMap[this.DOLLY_FORWARDS] = [input.KEY_Z, input.KEY_ADD];\n                    keyMap[this.DOLLY_BACKWARDS] = [input.KEY_S, input.KEY_SUBTRACT];\n                    keyMap[this.ROTATE_X_POS] = [input.KEY_DOWN_ARROW];\n                    keyMap[this.ROTATE_X_NEG] = [input.KEY_UP_ARROW];\n                    keyMap[this.ROTATE_Y_POS] = [input.KEY_A, input.KEY_LEFT_ARROW];\n                    keyMap[this.ROTATE_Y_NEG] = [input.KEY_E, input.KEY_RIGHT_ARROW];\n                    keyMap[this.AXIS_VIEW_RIGHT] = [input.KEY_NUM_1];\n                    keyMap[this.AXIS_VIEW_BACK] = [input.KEY_NUM_2];\n                    keyMap[this.AXIS_VIEW_LEFT] = [input.KEY_NUM_3];\n                    keyMap[this.AXIS_VIEW_FRONT] = [input.KEY_NUM_4];\n                    keyMap[this.AXIS_VIEW_TOP] = [input.KEY_NUM_5];\n                    keyMap[this.AXIS_VIEW_BOTTOM] = [input.KEY_NUM_6];\n                    break;\n            }\n\n            this._keyMap = keyMap;\n        } else {\n            const keyMap = value;\n            this._keyMap = keyMap;\n        }\n    }\n\n    /**\n     * Gets custom mappings of keys to {@link CameraControl} actions.\n     *\n     * @returns {{Number:Number}} Current key mappings.\n     */\n    get keyMap() {\n        return this._keyMap;\n    }\n\n    /**\n     * Returns true if any keys configured for the given action are down.\n     * @param action\n     * @param keyDownMap\n     * @private\n     */\n    _isKeyDownForAction(action, keyDownMap) {\n        const keys = this._keyMap[action];\n        if (!keys) {\n            return false;\n        }\n        if (!keyDownMap) {\n            keyDownMap = this.scene.input.keyDown;\n        }\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const key = keys[i];\n            if (keyDownMap[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sets the HTMl element to represent the pivot point when {@link CameraControl#followPointer} is true.\n     *\n     * See class comments for an example.\n     *\n     * @param {HTMLElement} element HTML element representing the pivot point.\n     */\n    set pivotElement(element) {\n        this._controllers.pivotController.setPivotElement(element);\n    }\n\n    /**\n     *  Sets if this ````CameraControl```` is active or not.\n     *\n     * When inactive, the ````CameraControl```` will not react to input.\n     *\n     * Default is ````true````.\n     *\n     * @param {Boolean} value Set ````true```` to activate this ````CameraControl````.\n     */\n    set active(value) {\n        this._configs.active = value !== false;\n    }\n\n    /**\n     * Gets if this ````CameraControl```` is active or not.\n     *\n     * When inactive, the ````CameraControl```` will not react to input.\n     *\n     * Default is ````true````.\n     *\n     * @returns {Boolean} Returns ````true```` if this ````CameraControl```` is active.\n     */\n    get active() {\n        return this._configs.active;\n    }\n\n    /**\n     * Sets the current navigation mode.\n     *\n     * Accepted values are:\n     *\n     * * \"orbit\" - rotation orbits about the current target or pivot point,\n     * * \"firstPerson\" - rotation is about the current eye position,\n     * * \"planView\" - rotation is disabled.\n     *\n     * See class comments for more info.\n     *\n     * @param {String} navMode The navigation mode: \"orbit\", \"firstPerson\" or \"planView\".\n     */\n    set navMode(navMode) {\n        navMode = navMode || \"orbit\";\n        if (navMode !== \"firstPerson\" && navMode !== \"orbit\" && navMode !== \"planView\") {\n            this.error(\"Unsupported value for navMode: \" + navMode + \" - supported values are 'orbit', 'firstPerson' and 'planView' - defaulting to 'orbit'\");\n            navMode = \"orbit\";\n        }\n        this._configs.firstPerson = (navMode === \"firstPerson\");\n        this._configs.planView = (navMode === \"planView\");\n        if (this._configs.firstPerson || this._configs.planView) {\n            this._controllers.pivotController.hidePivot();\n            this._controllers.pivotController.endPivot();\n        }\n        this._configs.navMode = navMode;\n    }\n\n    /**\n     * Gets the current navigation mode.\n     *\n     * @returns {String} The navigation mode: \"orbit\", \"firstPerson\" or \"planView\".\n     */\n    get navMode() {\n        return this._configs.navMode;\n    }\n\n    /**\n     * Sets whether mouse and touch input is enabled.\n     *\n     * Default is ````true````.\n     *\n     * Disabling mouse and touch input on ````CameraControl```` is useful when we want to temporarily use mouse or\n     * touch input to interact with some other 3D control, without disturbing the {@link Camera}.\n     *\n     * @param {Boolean} value Set ````true```` to enable mouse and touch input.\n     */\n    set pointerEnabled(value) {\n        this._reset();\n        this._configs.pointerEnabled = !!value;\n    }\n\n    _reset() {\n        for (let i = 0, len = this._handlers.length; i < len; i++) {\n            const handler = this._handlers[i];\n            if (handler.reset) {\n                handler.reset();\n            }\n        }\n\n        this._updates.panDeltaX = 0;\n        this._updates.panDeltaY = 0;\n        this._updates.rotateDeltaX = 0;\n        this._updates.rotateDeltaY = 0;\n        this._updates.dolyDelta = 0;\n    }\n\n    /**\n     * Gets whether mouse and touch input is enabled.\n     *\n     * Default is ````true````.\n     *\n     * Disabling mouse and touch input on ````CameraControl```` is desirable when we want to temporarily use mouse or\n     * touch input to interact with some other 3D control, without interfering with the {@link Camera}.\n     *\n     * @returns {Boolean} Returns ````true```` if mouse and touch input is enabled.\n     */\n    get pointerEnabled() {\n        return this._configs.pointerEnabled;\n    }\n\n    /**\n     * Sets whether the {@link Camera} follows the mouse/touch pointer.\n     *\n     * In orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n     *\n     * In fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n     *\n     * In plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n     *\n     * Default is ````true````.\n     *\n     * See class comments for more info.\n     *\n     * @param {Boolean} value Set ````true```` to enable the Camera to follow the pointer.\n     */\n    set followPointer(value) {\n        this._configs.followPointer = (value !== false);\n    }\n\n    /**\n     * Sets whether the {@link Camera} follows the mouse/touch pointer.\n     *\n     * In orbiting mode, the Camera will orbit about the pointer, and will dolly to and from the pointer.\n     *\n     * In fly-to mode, the Camera will dolly to and from the pointer, however the World will always rotate about the Camera position.\n     *\n     * In plan-view mode, the Camera will dolly to and from the pointer, however the Camera will not rotate.\n     *\n     * Default is ````true````.\n     *\n     * See class comments for more info.\n     *\n     * @returns {Boolean} Returns ````true```` if the Camera follows the pointer.\n     */\n    get followPointer() {\n        return this._configs.followPointer;\n    }\n\n    /**\n     * Sets the current World-space 3D target position.\n     *\n     * Only applies when {@link CameraControl#followPointer} is ````true````.\n     *\n     * @param {Number[]} worldPos The new World-space 3D target position.\n     */\n    set pivotPos(worldPos) {\n        this._controllers.pivotController.setPivotPos(worldPos);\n    }\n\n    /**\n     * Gets the current World-space 3D pivot position.\n     *\n     * Only applies when {@link CameraControl#followPointer} is ````true````.\n     *\n     * @return {Number[]} worldPos The current World-space 3D pivot position.\n     */\n    get pivotPos() {\n        return this._controllers.pivotController.getPivotPos();\n    }\n\n    /**\n     * @deprecated\n     * @param {Boolean} value Set ````true```` to enable dolly-to-pointer behaviour.\n     */\n    set dollyToPointer(value) {\n        this.warn(\"dollyToPointer property is deprecated - replaced with followPointer\");\n        this.followPointer = value;\n    }\n\n    /**\n     * @deprecated\n     * @returns {Boolean} Returns ````true```` if dolly-to-pointer behaviour is enabled.\n     */\n    get dollyToPointer() {\n        this.warn(\"dollyToPointer property is deprecated - replaced with followPointer\");\n        return this.followPointer;\n    }\n\n    /**\n     * @deprecated\n     * @param {Boolean} value Set ````true```` to enable dolly-to-pointer behaviour.\n     */\n    set panToPointer(value) {\n        this.warn(\"panToPointer property is deprecated - replaced with followPointer\");\n    }\n\n    /**\n     * @deprecated\n     * @returns {Boolean} Returns ````true```` if dolly-to-pointer behaviour is enabled.\n     */\n    get panToPointer() {\n        this.warn(\"panToPointer property is deprecated - replaced with followPointer\");\n        return false;\n    }\n\n    /**\n     * Sets whether this ````CameraControl```` is in plan-view mode.\n     *\n     * When in plan-view mode, rotation is disabled.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl#navMode} instead.\n     *\n     * @param {Boolean} value Set ````true```` to enable plan-view mode.\n     * @deprecated\n     */\n    set planView(value) {\n        this._configs.planView = !!value;\n        this._configs.firstPerson = false;\n        if (this._configs.planView) {\n            this._controllers.pivotController.hidePivot();\n            this._controllers.pivotController.endPivot();\n        }\n        this.warn(\"planView property is deprecated - replaced with navMode\");\n    }\n\n    /**\n     * Gets whether this ````CameraControl```` is in plan-view mode.\n     *\n     * When in plan-view mode, rotation is disabled.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl#navMode} instead.\n     *\n     * @returns {Boolean} Returns ````true```` if plan-view mode is enabled.\n     * @deprecated\n     */\n    get planView() {\n        this.warn(\"planView property is deprecated - replaced with navMode\");\n        return this._configs.planView;\n    }\n\n    /**\n     * Sets whether this ````CameraControl```` is in first-person mode.\n     *\n     * In \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  {@link Camera#eye} rotates about {@link Camera#look}.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl#navMode} instead.\n     *\n     * @param {Boolean} value Set ````true```` to enable first-person mode.\n     * @deprecated\n     */\n    set firstPerson(value) {\n        this.warn(\"firstPerson property is deprecated - replaced with navMode\");\n        this._configs.firstPerson = !!value;\n        this._configs.planView = false;\n        if (this._configs.firstPerson) {\n            this._controllers.pivotController.hidePivot();\n            this._controllers.pivotController.endPivot();\n        }\n    }\n\n    /**\n     * Gets whether this ````CameraControl```` is in first-person mode.\n     *\n     * In \"first person\" mode (disabled by default) the look position rotates about the eye position. Otherwise,  {@link Camera#eye} rotates about {@link Camera#look}.\n     *\n     * Default is ````false````.\n     *\n     * Deprecated - use {@link CameraControl#navMode} instead.\n     *\n     * @returns {Boolean} Returns ````true```` if first-person mode is enabled.\n     * @deprecated\n     */\n    get firstPerson() {\n        this.warn(\"firstPerson property is deprecated - replaced with navMode\");\n        return this._configs.firstPerson;\n    }\n\n    /**\n     * Sets whether to vertically constrain the {@link Camera} position for first-person navigation.\n     *\n     * When set ````true````, this constrains {@link Camera#eye} to its current vertical position.\n     *\n     * Only applies when {@link CameraControl#navMode} is ````\"firstPerson\"````.\n     *\n     * Default is ````false````.\n     *\n     * @param {Boolean} value Set ````true```` to vertically constrain the Camera.\n     */\n    set constrainVertical(value) {\n        this._configs.constrainVertical = !!value;\n    }\n\n    /**\n     * Gets whether to vertically constrain the {@link Camera} position for first-person navigation.\n     *\n     * When set ````true````, this constrains {@link Camera#eye} to its current vertical position.\n     *\n     * Only applies when {@link CameraControl#navMode} is ````\"firstPerson\"````.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} ````true```` when Camera is vertically constrained.\n     */\n    get constrainVertical() {\n        return this._configs.constrainVertical;\n    }\n\n    /**\n     * Sets whether double-picking an {@link Entity} causes the {@link Camera} to fly to its boundary.\n     *\n     * Default is ````false````.\n     *\n     * @param {Boolean} value Set ````true```` to enable double-pick-fly-to mode.\n     */\n    set doublePickFlyTo(value) {\n        this._configs.doublePickFlyTo = value !== false;\n    }\n\n    /**\n     * Gets whether double-picking an {@link Entity} causes the {@link Camera} to fly to its boundary.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when double-pick-fly-to mode is enabled.\n     */\n    get doublePickFlyTo() {\n        return this._configs.doublePickFlyTo;\n    }\n\n    /**\n     * Sets whether either right-clicking (true) or middle-clicking (false) pans the {@link Camera}.\n     *\n     * Default is ````true````.\n     *\n     * @param {Boolean} value Set ````false```` to disable pan on right-click.\n     */\n    set panRightClick(value) {\n        this._configs.panRightClick = value !== false;\n    }\n\n    /**\n     * Gets whether right-clicking pans the {@link Camera}.\n     *\n     * Default is ````true````.\n     *\n     * @returns {Boolean} Returns ````false```` when pan on right-click is disabled.\n     */\n    get panRightClick() {\n        return this._configs.panRightClick;\n    }\n\n    /**\n     * Sets a factor in range ````[0..1]```` indicating how much the {@link Camera} keeps moving after you finish rotating it.\n     *\n     * A value of ````0.0```` causes it to immediately stop, ````0.5```` causes its movement to decay 50% on each tick,\n     * while ````1.0```` causes no decay, allowing it continue moving, by the current rate of rotation.\n     *\n     * You may choose an inertia of zero when you want be able to precisely rotate the Camera,\n     * without interference from inertia. Zero inertia can also mean that less frames are rendered while\n     * you are rotating the Camera.\n     *\n     * Default is ````0.0````.\n     *\n     * Does not apply when {@link CameraControl#navMode} is ````\"planView\"````, which disallows rotation.\n     *\n     * @param {Number} rotationInertia New inertial factor.\n     */\n    set rotationInertia(rotationInertia) {\n        this._configs.rotationInertia = (rotationInertia !== undefined && rotationInertia !== null) ? rotationInertia : 0.0;\n    }\n\n    /**\n     * Gets the rotation inertia factor.\n     *\n     * Default is ````0.0````.\n     *\n     * Does not apply when {@link CameraControl#navMode} is ````\"planView\"````, which disallows rotation.\n     *\n     * @returns {Number} The inertia factor.\n     */\n    get rotationInertia() {\n        return this._configs.rotationInertia;\n    }\n\n    /**\n     * Sets how much the {@link Camera} pans each second with keyboard input.\n     *\n     * Default is ````5.0````, to pan the Camera ````5.0```` World-space units every second that\n     * a panning key is depressed. See the ````CameraControl```` class documentation for which keys control\n     * panning.\n     *\n     * Panning direction is aligned to our Camera's orientation. When we pan horizontally, we pan\n     * to our left and right, when we pan vertically, we pan upwards and downwards, and when we pan forwards\n     * and backwards, we pan along the direction the Camera is pointing.\n     *\n     * Unlike dollying when {@link followPointer} is ````true````, panning does not follow the pointer.\n     *\n     * @param {Number} keyboardPanRate The new keyboard pan rate.\n     */\n    set keyboardPanRate(keyboardPanRate) {\n        this._configs.keyboardPanRate = (keyboardPanRate !== null && keyboardPanRate !== undefined) ? keyboardPanRate : 5.0;\n    }\n\n\n    /**\n     * Sets how fast the camera pans on touch panning\n     *\n     * @param {Number} touchPanRate The new touch pan rate.\n     */\n    set touchPanRate(touchPanRate) {\n        this._configs.touchPanRate = (touchPanRate !== null && touchPanRate !== undefined) ? touchPanRate : 1.0;\n    }\n\n    /**\n     * Gets how fast the {@link Camera} pans on touch panning\n     *\n     * Default is ````1.0````.\n     *\n     * @returns {Number} The current touch pan rate.\n     */\n    get touchPanRate() {\n        return this._configs.touchPanRate;\n    }\n\n    /**\n     * Gets how much the {@link Camera} pans each second with keyboard input.\n     *\n     * Default is ````5.0````.\n     *\n     * @returns {Number} The current keyboard pan rate.\n     */\n    get keyboardPanRate() {\n        return this._configs.keyboardPanRate;\n    }\n\n    /**\n     * Sets how many degrees per second the {@link Camera} rotates/orbits with keyboard input.\n     *\n     * Default is ````90.0````, to rotate/orbit the Camera ````90.0```` degrees every second that\n     * a rotation key is depressed. See the ````CameraControl```` class documentation for which keys control\n     * rotation/orbit.\n     *\n     * @param {Number} keyboardRotationRate The new keyboard rotation rate.\n     */\n    set keyboardRotationRate(keyboardRotationRate) {\n        this._configs.keyboardRotationRate = (keyboardRotationRate !== null && keyboardRotationRate !== undefined) ? keyboardRotationRate : 90.0;\n    }\n\n    /**\n     * Sets how many degrees per second the {@link Camera} rotates/orbits with keyboard input.\n     *\n     * Default is ````90.0````.\n     *\n     * @returns {Number} The current keyboard rotation rate.\n     */\n    get keyboardRotationRate() {\n        return this._configs.keyboardRotationRate;\n    }\n\n    /**\n     * Sets the current drag rotation rate.\n     *\n     * This configures how many degrees the {@link Camera} rotates/orbits for a full sweep of the canvas by mouse or touch dragging.\n     *\n     * For example, a value of ````360.0```` indicates that the ````Camera```` rotates/orbits ````360.0```` degrees horizontally\n     * when we sweep the entire width of the canvas.\n     *\n     * ````CameraControl```` makes vertical rotation half as sensitive as horizontal rotation, so that we don't tend to\n     * flip upside-down. Therefore, a value of ````360.0```` rotates/orbits the ````Camera```` through ````180.0```` degrees\n     * vertically when we sweep the entire height of the canvas.\n     *\n     * Default is ````360.0````.\n     *\n     * @param {Number} dragRotationRate The new drag rotation rate.\n     */\n    set dragRotationRate(dragRotationRate) {\n        this._configs.dragRotationRate = (dragRotationRate !== null && dragRotationRate !== undefined) ? dragRotationRate : 360.0;\n    }\n\n    /**\n     * Gets the current drag rotation rate.\n     *\n     * Default is ````360.0````.\n     *\n     * @returns {Number} The current drag rotation rate.\n     */\n    get dragRotationRate() {\n        return this._configs.dragRotationRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} dollys each second with keyboard input.\n     *\n     * Default is ````15.0````, to dolly the {@link Camera} ````15.0```` World-space units per second while we hold down\n     * the ````+```` and ````-```` keys.\n     *\n     * @param {Number} keyboardDollyRate The new keyboard dolly rate.\n     */\n    set keyboardDollyRate(keyboardDollyRate) {\n        this._configs.keyboardDollyRate = (keyboardDollyRate !== null && keyboardDollyRate !== undefined) ? keyboardDollyRate : 15.0;\n    }\n\n    /**\n     * Gets how much the {@link Camera} dollys each second with keyboard input.\n     *\n     * Default is ````15.0````.\n     *\n     * @returns {Number} The current keyboard dolly rate.\n     */\n    get keyboardDollyRate() {\n        return this._configs.keyboardDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} dollys with touch input.\n     *\n     * Default is ````0.2````\n     *\n     * @param {Number} touchDollyRate The new touch dolly rate.\n     */\n    set touchDollyRate(touchDollyRate) {\n        this._configs.touchDollyRate = (touchDollyRate !== null && touchDollyRate !== undefined) ? touchDollyRate : 0.2;\n    }\n\n    /**\n     * Gets how much the {@link Camera} dollys each second with touch input.\n     *\n     * Default is ````0.2````.\n     *\n     * @returns {Number} The current touch dolly rate.\n     */\n    get touchDollyRate() {\n        return this._configs.touchDollyRate;\n    }\n\n    /**\n     * Sets how much the {@link Camera} dollys each second while the mouse wheel is spinning.\n     *\n     * Default is ````100.0````, to dolly the {@link Camera} ````10.0```` World-space units per second as we spin\n     * the mouse wheel.\n     *\n     * @param {Number} mouseWheelDollyRate The new mouse wheel dolly rate.\n     */\n    set mouseWheelDollyRate(mouseWheelDollyRate) {\n        this._configs.mouseWheelDollyRate = (mouseWheelDollyRate !== null && mouseWheelDollyRate !== undefined) ? mouseWheelDollyRate : 100.0;\n    }\n\n    /**\n     * Gets how much the {@link Camera} dollys each second while the mouse wheel is spinning.\n     *\n     * Default is ````100.0````.\n     *\n     * @returns {Number} The current mouseWheel dolly rate.\n     */\n    get mouseWheelDollyRate() {\n        return this._configs.mouseWheelDollyRate;\n    }\n\n    /**\n     * Sets the dolly inertia factor.\n     *\n     * This factor configures how much the {@link Camera} keeps moving after you finish dollying it.\n     *\n     * This factor is a value in range ````[0..1]````. A value of ````0.0```` causes dollying to immediately stop,\n     * ````0.5```` causes dollying to decay 50% on each animation frame, while ````1.0```` causes no decay, which allows dollying\n     * to continue until further input stops it.\n     *\n     * You might set ````dollyInertia```` to zero when you want be able to precisely position or rotate the Camera,\n     * without interference from inertia. This also means that xeokit renders less frames while dollying the Camera,\n     * which can improve rendering performance.\n     *\n     * Default is ````0````.\n     *\n     * @param {Number} dollyInertia New dolly inertia factor.\n     */\n    set dollyInertia(dollyInertia) {\n        this._configs.dollyInertia = (dollyInertia !== undefined && dollyInertia !== null) ? dollyInertia : 0;\n    }\n\n    /**\n     * Gets the dolly inertia factor.\n     *\n     * Default is ````0````.\n     *\n     * @returns {Number} The current dolly inertia factor.\n     */\n    get dollyInertia() {\n        return this._configs.dollyInertia;\n    }\n\n    /**\n     * Sets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n     *\n     * Default is ````35.0````.\n     *\n     * @param {Number} dollyProximityThreshold New dolly proximity threshold.\n     */\n    set dollyProximityThreshold(dollyProximityThreshold) {\n        this._configs.dollyProximityThreshold = (dollyProximityThreshold !== undefined && dollyProximityThreshold !== null) ? dollyProximityThreshold : 35.0;\n    }\n\n    /**\n     * Gets the proximity to the closest object below which dolly speed decreases, and above which dolly speed increases.\n     *\n     * Default is ````35.0````.\n     *\n     * @returns {Number} The current dolly proximity threshold.\n     */\n    get dollyProximityThreshold() {\n        return this._configs.dollyProximityThreshold;\n    }\n\n    /**\n     * Sets the minimum dolly speed.\n     *\n     * Default is ````0.04````.\n     *\n     * @param {Number} dollyMinSpeed New dolly minimum speed.\n     */\n    set dollyMinSpeed(dollyMinSpeed) {\n        this._configs.dollyMinSpeed = (dollyMinSpeed !== undefined && dollyMinSpeed !== null) ? dollyMinSpeed : 0.04;\n    }\n\n    /**\n     * Gets the minimum dolly speed.\n     *\n     * Default is ````0.04````.\n     *\n     * @returns {Number} The current minimum dolly speed.\n     */\n    get dollyMinSpeed() {\n        return this._configs.dollyMinSpeed;\n    }\n\n    /**\n     * Sets the pan inertia factor.\n     *\n     * This factor configures how much the {@link Camera} keeps moving after you finish panning it.\n     *\n     * This factor is a value in range ````[0..1]````. A value of ````0.0```` causes panning to immediately stop,\n     * ````0.5```` causes panning to decay 50% on each animation frame, while ````1.0```` causes no decay, which allows panning\n     * to continue until further input stops it.\n     *\n     * You might set ````panInertia```` to zero when you want be able to precisely position or rotate the Camera,\n     * without interference from inertia. This also means that xeokit renders less frames while panning the Camera,\n     * wich can improve rendering performance.\n     *\n     * Default is ````0.5````.\n     *\n     * @param {Number} panInertia New pan inertia factor.\n     */\n    set panInertia(panInertia) {\n        this._configs.panInertia = (panInertia !== undefined && panInertia !== null) ? panInertia : 0.5;\n    }\n\n    /**\n     * Gets the pan inertia factor.\n     *\n     * Default is ````0.5````.\n     *\n     * @returns {Number} The current pan inertia factor.\n     */\n    get panInertia() {\n        return this._configs.panInertia;\n    }\n\n    /**\n     * Sets the keyboard layout.\n     *\n     * Supported layouts are:\n     *\n     * * ````\"qwerty\"```` (default)\n     * * ````\"azerty\"````\n     *\n     * @deprecated\n     * @param {String} value Selects the keyboard layout.\n     */\n    set keyboardLayout(value) {\n        // this.warn(\"keyboardLayout property is deprecated - use keyMap property instead\");\n        value = value || \"qwerty\";\n        if (value !== \"qwerty\" && value !== \"azerty\") {\n            this.error(\"Unsupported value for keyboardLayout - defaulting to 'qwerty'\");\n            value = \"qwerty\";\n        }\n        this._configs.keyboardLayout = value;\n        this.keyMap = this._configs.keyboardLayout;\n    }\n\n    /**\n     * Gets the keyboard layout.\n     *\n     * Supported layouts are:\n     *\n     * * ````\"qwerty\"```` (default)\n     * * ````\"azerty\"````\n     *\n     * @deprecated\n     * @returns {String} The current keyboard layout.\n     */\n    get keyboardLayout() {\n        return this._configs.keyboardLayout;\n    }\n\n    /**\n     * Sets whether smart default pivoting is enabled.\n     *\n     * When ````true````, we'll pivot by default about the 3D position of the mouse/touch pointer on an\n     * imaginary sphere that's centered at {@link Camera#eye} and sized to the {@link Scene} boundary.\n     *\n     * When ````false````, we'll pivot by default about {@link Camera#look}.\n     *\n     * Default is ````false````.\n     *\n     * @param {Boolean} enabled Set ````true```` to pivot by default about the selected point on the virtual sphere, or ````false```` to pivot by default about {@link Camera#look}.\n     */\n    set smartPivot(enabled) {\n        this._configs.smartPivot = (enabled !== false);\n    }\n\n    /**\n     * Gets whether smart default pivoting is enabled.\n     *\n     * When ````true````, we'll pivot by default about the 3D position of the mouse/touch pointer on an\n     * imaginary sphere that's centered at {@link Camera#eye} and sized to the {@link Scene} boundary.\n     *\n     * When ````false````, we'll pivot by default about {@link Camera#look}.\n     *\n     * Default is ````false````.\n     *\n     * @returns {Boolean} Returns ````true```` when pivoting by default about the selected point on the virtual sphere, or ````false```` when pivoting by default about {@link Camera#look}.\n     */\n    get smartPivot() {\n        return this._configs.smartPivot;\n    }\n\n    /**\n     * Destroys this ````CameraControl````.\n     * @private\n     */\n    destroy() {\n        this._destroyHandlers();\n        this._destroyControllers();\n        this._cameraUpdater.destroy();\n        super.destroy();\n    }\n\n    _destroyHandlers() {\n        for (let i = 0, len = this._handlers.length; i < len; i++) {\n            const handler = this._handlers[i];\n            if (handler.destroy) {\n                handler.destroy();\n            }\n        }\n    }\n\n    _destroyControllers() {\n        for (let i = 0, len = this._controllers.length; i < len; i++) {\n            const controller = this._controllers[i];\n            if (controller.destroy) {\n                controller.destroy();\n            }\n        }\n    }\n}\n\nexport {\n    CameraControl\n};\n","/**\n * @desc Metadata corresponding to an {@link Entity} that represents a model.\n *\n * An {@link Entity} represents a model when {@link Entity#isModel} is ````true````\n *\n * A MetaModel corresponds to an {@link Entity} by having the same {@link MetaModel#id} as the {@link Entity#id}.\n *\n * A MetaModel is created by {@link MetaScene#createMetaModel} and belongs to a {@link MetaScene}.\n *\n * Each MetaModel is registered by {@link MetaModel#id} in {@link MetaScene#metaModels}.\n *\n * A {@link MetaModel} represents its object structure with a tree of {@link MetaObject}s, with {@link MetaModel#rootMetaObject} referencing the root {@link MetaObject}.\n *\n * @class MetaModel\n */\nclass MetaModel {\n\n    /**\n     * @private\n     */\n    constructor(metaScene, id, projectId, revisionId, author, createdAt, creatingApplication, schema, rootMetaObject) {\n\n        /**\n         * Globally-unique ID.\n         *\n         * MetaModels are registered by ID in {@link MetaScene#metaModels}.\n         *\n         * When this MetaModel corresponds to an {@link Entity} then this ID will match the {@link Entity#id}.\n         *\n         * @property id\n         * @type {String|Number}\n         */\n        this.id = id;\n\n        /**\n         * The project ID\n         * @property projectId\n         * @type {String|Number}\n         */\n        this.projectId = projectId;\n\n        /**\n         * The revision ID, if available.\n         *\n         * Will be undefined if not available.\n         *\n         * @property revisionId\n         * @type {String|Number}\n         */\n        this.revisionId = revisionId;\n\n        /**\n         * The model author, if available.\n         *\n         * Will be undefined if not available.\n         *\n         * @property author\n         * @type {String}\n         */\n        this.author = author;\n\n        /**\n         * The date the model was created, if available.\n         *\n         * Will be undefined if not available.\n         *\n         * @property createdAt\n         * @type {String}\n         */\n        this.createdAt = createdAt;\n\n        /**\n         * The application that created the model, if available.\n         *\n         * Will be undefined if not available.\n         *\n         * @property creatingApplication\n         * @type {String}\n         */\n        this.creatingApplication = creatingApplication;\n\n        /**\n         * The model schema version, if available.\n         *\n         * Will be undefined if not available.\n         *\n         * @property schema\n         * @type {String}\n         */\n        this.schema = schema;\n\n        /**\n         * Metadata on the {@link Scene}.\n         *\n         * @property metaScene\n         * @type {MetaScene}\n         */\n        this.metaScene = metaScene;\n\n        /**\n         * The root {@link MetaObject} in this MetaModel's composition structure hierarchy.\n         *\n         * @property rootMetaObject\n         * @type {MetaObject}\n         */\n        this.rootMetaObject = rootMetaObject;\n    }\n\n    getJSON() {\n\n        var metaObjects = [];\n\n        function visit(metaObject) {\n            var metaObjectCfg = {\n                id: metaObject.id,\n                extId: metaObject.extId,\n                type: metaObject.type,\n                name: metaObject.name\n            };\n            if (metaObject.parent) {\n                metaObjectCfg.parent = metaObject.parent.id;\n            }\n            metaObjects.push(metaObjectCfg);\n            var children = metaObject.children;\n            if (children) {\n                for (var i = 0, len = children.length; i < len; i++) {\n                    visit(children[i]);\n                }\n            }\n        }\n\n        visit(this.rootMetaObject);\n\n        var json = {\n            id: this.id,\n            projectId: this.projectId,\n            revisionId: this.revisionId,\n            metaObjects: metaObjects\n        };\n        return json;\n    }\n}\n\n\nexport {MetaModel};","/**\n * @desc Metadata corresponding to an {@link Entity} that represents an object.\n *\n * An {@link Entity} represents an object when {@link Entity#isObject} is ````true````\n *\n * A MetaObject corresponds to an {@link Entity} by having the same {@link MetaObject#id} as the {@link Entity#id}.\n *\n * A MetaObject is created within {@link MetaScene#createMetaModel} and belongs to a {@link MetaModel}.\n *\n * Each MetaObject is registered by {@link MetaObject#id} in {@link MetaScene#metaObjects}.\n *\n * A {@link MetaModel} represents its object structure with a tree of MetaObjects, with {@link MetaModel#rootMetaObject} referencing\n * the root MetaObject.\n *\n * @class MetaObject\n */\nclass MetaObject {\n\n    constructor(metaModel, id, originalSystemId, name, type, properties, parent, children, external) {\n\n        /**\n         * Model metadata.\n         *\n         * @property metaModel\n         * @type {MetaModel}\n         */\n        this.metaModel = metaModel;\n\n        /**\n         * Globally-unique ID.\n         *\n         * MetaObject instances are registered by this ID in {@link MetaScene#metaObjects}.\n         *\n         * @property id\n         * @type {String|Number}\n         */\n        this.id = id;\n\n        /**\n         * ID of the corresponding object within the originating system, if any.\n         *\n         * @type {String}\n         * @abstract\n         */\n        this.originalSystemId = originalSystemId;\n\n        /**\n         * Human-readable name.\n         *\n         * @property name\n         * @type {String}\n         */\n        this.name = name;\n\n        /**\n         * Type - often an IFC product type.\n         *\n         * @property type\n         * @type {String}\n         */\n        this.type = type;\n\n        if (properties) {\n\n            /**\n             * Arbitrary metadata properties.\n             *\n             * Undefined when no metadata properties are represented.\n             *\n             * @property properties\n             * @type {*}\n             */\n            this.properties = properties;\n        }\n\n        if (parent !== undefined && parent !== null) {\n\n            /**\n             * The parent MetaObject within the structure hierarchy.\n             *\n             * Undefined when this is the root of its structure.\n             *\n             * @property parent\n             * @type {MetaObject}\n             */\n            this.parent = parent;\n        }\n\n        if (children !== undefined && children !== null) {\n\n            /**\n             * Child ObjectMeta instances within the structure hierarchy.\n             *\n             * Undefined when there are no children.\n             *\n             * @property children\n             * @type {Array}\n             */\n            this.children = children;\n        }\n\n        if (external !== undefined && external !== null) {\n\n            /**\n             * External application-specific metadata\n             *\n             * Undefined when there are is no external application-specific metadata.\n             *\n             * @property external\n             * @type {*}\n             */\n            this.external = external;\n        }\n    }\n\n    /**\n     * Gets the {@link MetaObject#id}s of the {@link MetaObject}s within the subtree.\n     *\n     * @returns {String[]} Array of {@link MetaObject#id}s.\n     */\n    getObjectIDsInSubtree() {\n        const objectIds = [];\n\n        function visit(metaObject) {\n            if (!metaObject) {\n                return;\n            }\n            objectIds.push(metaObject.id);\n            const children = metaObject.children;\n            if (children) {\n                for (var i = 0, len = children.length; i < len; i++) {\n                    visit(children[i]);\n                }\n            }\n        }\n\n        visit(this);\n        return objectIds;\n    }\n\n\n    /**\n     * Iterates over the {@link MetaObject}s within the subtree.\n     *\n     * @param {Function} callback Callback fired at each {@link MetaObject}.\n     */\n    withMetaObjectsInSubtree(callback) {\n\n        function visit(metaObject) {\n            if (!metaObject) {\n                return;\n            }\n            callback(metaObject);\n            const children = metaObject.children;\n            if (children) {\n                for (var i = 0, len = children.length; i < len; i++) {\n                    visit(children[i]);\n                }\n            }\n        }\n\n        visit(this);\n    }\n\n    /**\n     * Gets the {@link MetaObject#id}s of the {@link MetaObject}s within the subtree that have the given {@link MetaObject#type}s.\n     *\n     * @param {String[]} types {@link MetaObject#type} values.\n     * @returns {String[]} Array of {@link MetaObject#id}s.\n     */\n    getObjectIDsInSubtreeByType(types) {\n        const mask = {};\n        for (var i = 0, len = types.length; i < len; i++) {\n            mask[types[i]] = types[i];\n        }\n        const objectIds = [];\n\n        function visit(metaObject) {\n            if (!metaObject) {\n                return;\n            }\n            if (mask[metaObject.type]) {\n                objectIds.push(metaObject.id);\n            }\n            const children = metaObject.children;\n            if (children) {\n                for (var i = 0, len = children.length; i < len; i++) {\n                    visit(children[i]);\n                }\n            }\n        }\n\n        visit(this);\n        return objectIds;\n    }\n\n    /**\n     * Returns properties of this MeteObject as JSON.\n     *\n     * @returns {{id: (String|Number), type: String, name: String, parent: (String|Number|Undefined)}}\n     */\n    getJSON() {\n        var json = {\n            id: this.id,\n            type: this.type,\n            name: this.name\n        };\n        if (this.parent) {\n            json.parent = this.parent.id\n        }\n        return json;\n    }\n}\n\nexport {MetaObject};","import {MetaModel} from \"./MetaModel.js\";\nimport {MetaObject} from \"./MetaObject.js\";\nimport {math} from \"../scene/math/math.js\";\n\n/**\n * @desc Metadata corresponding to a {@link Scene}.\n *\n * * Located in {@link Viewer#metaScene}.\n * * Contains {@link MetaModel}s and {@link MetaObject}s.\n * * [Scene Graphs user guide](https://github.com/xeokit/xeokit-sdk/wiki/Scene-Graphs)\n * * [Scene graph example with metadata](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_SceneGraph_metadata)\n */\nclass MetaScene {\n\n    /**\n     * @private\n     */\n    constructor(viewer, scene) {\n\n        /**\n         * The {@link Viewer}.\n         * @property viewer\n         * @type {Viewer}\n         */\n        this.viewer = viewer;\n\n        /**\n         * The {@link Scene}.\n         * @property scene\n         * @type {Scene}\n         */\n        this.scene = scene;\n\n        /**\n         * The {@link MetaModel}s belonging to this MetaScene, each mapped to its {@link MetaModel#modelId}.\n         *\n         * @type {{String:MetaModel}}\n         */\n        this.metaModels = {};\n\n        /**\n         * The {@link MetaObject}s belonging to this MetaScene, each mapped to its {@link MetaObject#id}.\n         *\n         * @type {{String:MetaObject}}\n         */\n        this.metaObjects = {};\n\n        /**\n         * The {@link MetaObject}s belonging to this MetaScene, each mapped to its {@link MetaObject#type}.\n         *\n         * @type {{String:MetaObject}}\n         */\n        this.metaObjectsByType = {};\n\n        /**\n         * Tracks number of MetaObjects of each type.\n         * @private\n         */\n        this._typeCounts = {};\n\n        /**\n         * Subscriptions to events sent with {@link fire}.\n         * @private\n         */\n        this._eventSubs = {};\n    }\n\n    /**\n     * Subscribes to an event fired at this Viewer.\n     *\n     * @param {String} event The event\n     * @param {Function} callback Callback fired on the event\n     */\n    on(event, callback) {\n        let subs = this._eventSubs[event];\n        if (!subs) {\n            subs = [];\n            this._eventSubs[event] = subs;\n        }\n        subs.push(callback);\n    }\n\n    /**\n     * Fires an event at this Viewer.\n     *\n     * @param {String} event Event name\n     * @param {Object} value Event parameters\n     */\n    fire(event, value) {\n        const subs = this._eventSubs[event];\n        if (subs) {\n            for (let i = 0, len = subs.length; i < len; i++) {\n                subs[i](value);\n            }\n        }\n    }\n\n    /**\n     * Unsubscribes from an event fired at this Viewer.\n     * @param event\n     */\n    off(event) { // TODO\n\n    }\n\n    /**\n     * Creates a {@link MetaModel} in this MetaScene.\n     *\n     * @param {String} modelId ID for the new {@link MetaModel}, which will have {@link MetaModel#id} set to this value.\n     * @param {Object} metaModelData Data for the {@link MetaModel}.\n     * @param {Object} [options] Options for creating the {@link MetaModel}.\n     * @param {Object} [options.includeTypes] When provided, only create {@link MetaObject}s with types in this list.\n     * @param {Object} [options.excludeTypes] When provided, never create {@link MetaObject}s with types in this list.\n     * @param {Boolean} [options.globalizeObjectIds=false] Whether to globalize each {@link MetaObject#id}. Set this ````true```` when you need to load multiple instances of the same meta model, to avoid ID clashes between the meta objects in the different instances.\n     * @returns {MetaModel} The new MetaModel.\n     */\n    createMetaModel(modelId, metaModelData, options = {}) {\n\n        const projectId = metaModelData.projectId || \"none\";\n        const revisionId = metaModelData.revisionId || \"none\";\n        const newObjects = metaModelData.metaObjects;\n        const author = metaModelData.author;\n        const createdAt = metaModelData.createdAt;\n        const creatingApplication = metaModelData.creatingApplication;\n        const schema = metaModelData.schema;\n\n        var includeTypes;\n        // if (options.includeTypes) {\n        //     includeTypes = {};\n        //     for (let i = 0, len = options.includeTypes.length; i < len; i++) {\n        //         includeTypes[options.includeTypes[i]] = true;\n        //     }\n        // }\n        //\n        var excludeTypes;\n        // if (options.excludeTypes) {\n        //     excludeTypes = {};\n        //     for (let i = 0, len = options.excludeTypes.length; i < len; i++) {\n        //         includeTypes[options.excludeTypes[i]] = true;\n        //     }\n        // }\n\n        const metaModel = new MetaModel(this, modelId, projectId, revisionId, author, createdAt, creatingApplication, schema, null);\n\n        this.metaModels[modelId] = metaModel;\n\n        for (let i = 0, len = newObjects.length; i < len; i++) {\n            const newObject = newObjects[i];\n            const type = newObject.type;\n            if (excludeTypes && excludeTypes[type]) {\n                continue;\n            }\n            if (includeTypes && !includeTypes[type]) {\n                continue;\n            }\n            const objectId = options.globalizeObjectIds ? math.globalizeObjectId(modelId, newObject.id) : newObject.id;\n            const originalSystemId = newObject.id;\n            const name = newObject.name;\n            const properties = newObject.properties;\n            const parent = null;\n            const children = null;\n            const external = newObject.external;\n            const metaObject = new MetaObject(metaModel, objectId, originalSystemId, name, type, properties, parent, children, external);\n            this.metaObjects[objectId] = metaObject;\n            (this.metaObjectsByType[type] || (this.metaObjectsByType[type] = {}))[objectId] = metaObject;\n            if (this._typeCounts[type] === undefined) {\n                this._typeCounts[type] = 1;\n            } else {\n                this._typeCounts[type]++;\n            }\n        }\n\n        for (let i = 0, len = newObjects.length; i < len; i++) {\n            const newObject = newObjects[i];\n            const objectId = options.globalizeObjectIds ? math.globalizeObjectId(modelId, newObject.id) : newObject.id;\n            const metaObject = this.metaObjects[objectId];\n            if (!metaObject) {\n                continue;\n            }\n            if (newObject.parent === undefined || newObject.parent === null) {\n                metaModel.rootMetaObject = metaObject;\n            } else if (newObject.parent) {\n                const parentId = options.globalizeObjectIds ? math.globalizeObjectId(modelId, newObject.parent) : newObject.parent;\n                let parentMetaObject = this.metaObjects[parentId];\n                if (parentMetaObject) {\n                    metaObject.parent = parentMetaObject;\n                    parentMetaObject.children = parentMetaObject.children || [];\n                    parentMetaObject.children.push(metaObject);\n                }\n            }\n        }\n\n        this.fire(\"metaModelCreated\", modelId);\n        return metaModel;\n    }\n\n    /**\n     * Removes a {@link MetaModel} from this MetaScene.\n     *\n     * Fires a \"metaModelDestroyed\" event with the value of the {@link MetaModel#id}.\n     *\n     * @param {String} id ID of the target {@link MetaModel}.\n     */\n    destroyMetaModel(id) {\n        const metaModel = this.metaModels[id];\n        if (!metaModel) {\n            return;\n        }\n        this._removeMetaModel(metaModel);\n        this.fire(\"metaModelDestroyed\", id);\n    }\n\n    _removeMetaModel(metaModel) {\n        const metaObjects = this.metaObjects;\n        const metaObjectsByType = this.metaObjectsByType;\n        let visit = (metaObject) => {\n            delete metaObjects[metaObject.id];\n            const types = metaObjectsByType[metaObject.type];\n            if (types && types[metaObject.id]) {\n                delete types[metaObject.id];\n                if (--this._typeCounts[metaObject.type] === 0) {\n                    delete this._typeCounts[metaObject.type];\n                    delete metaObjectsByType[metaObject.type];\n                }\n            }\n            const children = metaObject.children;\n            if (children) {\n                for (let i = 0, len = children.length; i < len; i++) {\n                    const childMetaObject = children[i];\n                    visit(childMetaObject);\n                }\n            }\n        };\n        visit(metaModel.rootMetaObject);\n        delete this.metaModels[metaModel.id];\n    }\n\n    /**\n     * Gets the {@link MetaObject#id}s of the {@link MetaObject}s that have the given {@link MetaObject#type}.\n     *\n     * @param {String} type The type.\n     * @returns {String[]} Array of {@link MetaObject#id}s.\n     */\n    getObjectIDsByType(type) {\n        const metaObjects = this.metaObjectsByType[type];\n        return metaObjects ? Object.keys(metaObjects) : [];\n    }\n\n    /**\n     * Gets the {@link MetaObject#id}s of the {@link MetaObject}s within the given subtree.\n     *\n     * @param {String} id  ID of the root {@link MetaObject} of the given subtree.\n     * @param {String[]} [includeTypes] Optional list of types to include.\n     * @param {String[]} [excludeTypes] Optional list of types to exclude.\n     * @returns {String[]} Array of {@link MetaObject#id}s.\n     */\n    getObjectIDsInSubtree(id, includeTypes, excludeTypes) {\n        const list = [];\n        const metaObject = this.metaObjects[id];\n        const includeMask = (includeTypes && includeTypes.length > 0) ? arrayToMap(includeTypes) : null;\n        const excludeMask = (excludeTypes && excludeTypes.length > 0) ? arrayToMap(excludeTypes) : null;\n\n        function visit(metaObject) {\n            if (!metaObject) {\n                return;\n            }\n            var include = true;\n            if (excludeMask && excludeMask[metaObject.type]) {\n                include = false;\n            } else if (includeMask && (!includeMask[metaObject.type])) {\n                include = false;\n            }\n            if (include) {\n                list.push(metaObject.id);\n            }\n            const children = metaObject.children;\n            if (children) {\n                for (var i = 0, len = children.length; i < len; i++) {\n                    visit(children[i]);\n                }\n            }\n        }\n\n        visit(metaObject);\n        return list;\n    }\n\n    /**\n     * Iterates over the {@link MetaObject}s within the subtree.\n     *\n     * @param {String} id ID of root {@link MetaObject}.\n     * @param {Function} callback Callback fired at each {@link MetaObject}.\n     */\n    withMetaObjectsInSubtree(id, callback) {\n        const metaObject = this.metaObjects[id];\n        if (!metaObject) {\n            return;\n        }\n        metaObject.withMetaObjectsInSubtree(callback);\n    }\n}\n\nfunction arrayToMap(array) {\n    const map = {};\n    for (var i = 0, len = array.length; i < len; i++) {\n        map[array[i]] = true;\n    }\n    return map;\n}\n\nexport {MetaScene};","import {Scene} from \"./scene/scene/Scene.js\";\nimport {CameraFlightAnimation} from \"./scene/camera/CameraFlightAnimation.js\";\nimport {CameraControl} from \"./scene/CameraControl/CameraControl.js\";\nimport {MetaScene} from \"./metadata/MetaScene.js\";\nimport {WEBGL_INFO} from \"./scene/webglInfo.js\";\n\n/**\n * The 3D Viewer at the heart of the xeokit SDK.\n *\n * * A Viewer wraps a single {@link Scene}\n * * Add {@link Plugin}s to a Viewer to extend its functionality.\n * * {@link Viewer#metaScene} holds metadata about {@link Model}s in the\n * Viewer's {@link MetaScene}.\n * * Use {@link Viewer#cameraFlight} to fly or jump the {@link Scene}'s\n * {@link Camera} to target positions, boundaries or {@link Entity}s.\n *\n * @public\n */\nclass Viewer {\n\n    /**\n     * @constructor\n     * @param {Object} cfg Viewer configuration.\n     * @param {String} [cfg.id] Optional ID for this Viewer, defaults to the ID of {@link Viewer#scene}, which xeokit automatically generates.\n     * @param {String} [cfg.canvasId]  ID of an existing HTML canvas for the {@link Viewer#scene} - either this or canvasElement is mandatory. When both values are given, the element reference is always preferred to the ID.\n     * @param {HTMLCanvasElement} [cfg.canvasElement] Reference of an existing HTML canvas for the {@link Viewer#scene} - either this or canvasId is mandatory. When both values are given, the element reference is always preferred to the ID.\n     * @param {String} [cfg.spinnerElementId]  ID of existing HTML element to show the {@link Spinner} - internally creates a default element automatically if this is omitted.\n     * @param {Number} [cfg.passes=1] The number of times the {@link Viewer#scene} renders per frame.\n     * @param {Boolean} [cfg.clearEachPass=false] When doing multiple passes per frame, specifies if to clear the canvas before each pass (true) or just before the first pass (false).\n     * @param {Boolean} [cfg.preserveDrawingBuffer=true]  Whether or not to preserve the WebGL drawing buffer. This needs to be ````true```` for {@link Viewer#getSnapshot} to work.\n     * @param {Boolean} [cfg.transparent=true]  Whether or not the canvas is transparent.\n     * @param {Boolean} [cfg.premultipliedAlpha=false]  Whether or not you want alpha composition with premultiplied alpha. Highlighting and selection works best when this is ````false````.\n     * @param {Boolean} [cfg.gammaInput=true]  When true, expects that all textures and colors are premultiplied gamma.\n     * @param {Boolean} [cfg.gammaOutput=false]  Whether or not to render with pre-multiplied gama.\n     * @param {Number} [cfg.gammaFactor=2.2] The gamma factor to use when rendering with pre-multiplied gamma.\n     * @param {Number[]} [cfg.backgroundColor=[1,1,1]] Sets the canvas background color to use when ````transparent```` is false.\n     * @param {Boolean} [cfg.backgroundColorFromAmbientLight=true] When ````transparent```` is false, set this ````true````\n     * to derive the canvas background color from {@link AmbientLight#color}, or ````false```` to set the canvas background to ````backgroundColor````.\n     * @param {String} [cfg.units=\"meters\"] The measurement unit type. Accepted values are ````\"meters\"````, ````\"metres\"````, , ````\"centimeters\"````, ````\"centimetres\"````, ````\"millimeters\"````,  ````\"millimetres\"````, ````\"yards\"````, ````\"feet\"```` and ````\"inches\"````.\n     * @param {Number} [cfg.scale=1] The number of Real-space units in each World-space coordinate system unit.\n     * @param {Number[]} [cfg.origin=[0,0,0]] The Real-space 3D origin, in current measurement units, at which the World-space coordinate origin ````[0,0,0]```` sits.\n     * @param {Boolean} [cfg.saoEnabled=false] Whether to enable Scalable Ambient Obscurance (SAO) effect. See {@link SAO} for more info.\n     * @param {Boolean} [cfg.antialias=true] Whether to enable anti-aliasing.\n     * @throws {String} Throws an exception when both canvasId or canvasElement are missing or they aren't pointing to a valid HTMLCanvasElement.\n     * @param {Boolean} [cfg.alphaDepthMask=true] Whether writing into the depth buffer is enabled or disabled when rendering transparent objects.\n     * @param {Boolean} [cfg.entityOffsetsEnabled=false] Whether to enable {@link Entity#offset}. For best performance, only set this ````true```` when you need to use {@link Entity#offset}.\n     * @param {Boolean} [cfg.logarithmicDepthBufferEnabled=false] Whether to enable logarithmic depth buffer. When this is true,\n     * you can set huge values for {@link Perspective#far} and {@link Ortho#far}, to push the far clipping plane back so\n     * that it does not clip huge models.\n     * @param {Boolean} [cfg.pbrEnabled=false] Whether to enable physically-based rendering.\n     */\n    constructor(cfg) {\n\n        /**\n         * The Viewer's current language setting.\n         * @property language\n         * @type {String}\n         */\n        this.language = \"en\";\n\n        /**\n         * The Viewer's {@link Scene}.\n         * @property scene\n         * @type {Scene}\n         */\n        this.scene = new Scene(this, {\n            canvasId: cfg.canvasId,\n            canvasElement: cfg.canvasElement,\n            webgl2: false,\n            contextAttr: {\n                preserveDrawingBuffer: cfg.preserveDrawingBuffer !== false,\n                premultipliedAlpha: (!!cfg.premultipliedAlpha),\n                antialias: (cfg.antialias !== false)\n            },\n            spinnerElementId: cfg.spinnerElementId,\n            transparent: (cfg.transparent !== false),\n            gammaInput: true,\n            gammaOutput: false,\n            backgroundColor: cfg.backgroundColor,\n            backgroundColorFromAmbientLight: cfg.backgroundColorFromAmbientLight,\n            ticksPerRender: 1,\n            ticksPerOcclusionTest: 20,\n            units: cfg.units,\n            scale: cfg.scale,\n            origin: cfg.origin,\n            saoEnabled: cfg.saoEnabled,\n            alphaDepthMask: (cfg.alphaDepthMask !== false),\n            entityOffsetsEnabled: (!!cfg.entityOffsetsEnabled),\n            logarithmicDepthBufferEnabled: (!!cfg.logarithmicDepthBufferEnabled),\n            pbrEnabled: (!!cfg.pbrEnabled)\n        });\n\n        /**\n         * Metadata about the {@link Scene} and the models and objects within it.\n         * @property metaScene\n         * @type {MetaScene}\n         * @readonly\n         */\n        this.metaScene = new MetaScene(this, this.scene);\n\n        /**\n         * The Viewer's ID.\n         * @property id\n         *\n         * @type {String|Number}\n         */\n        this.id = cfg.id || this.scene.id;\n\n        /**\n         * The Viewer's {@link Camera}. This is also found on {@link Scene#camera}.\n         * @property camera\n         * @type {Camera}\n         */\n        this.camera = this.scene.camera;\n\n        /**\n         * The Viewer's {@link CameraFlightAnimation}, which\n         * is used to fly the {@link Scene}'s {@link Camera} to given targets.\n         * @property cameraFlight\n         * @type {CameraFlightAnimation}\n         */\n        this.cameraFlight = new CameraFlightAnimation(this.scene, {\n            duration: 0.5\n        });\n\n        /**\n         * The Viewer's {@link CameraControl}, which\n         * controls the {@link Scene}'s {@link Camera} with mouse,  touch and keyboard input.\n         * @property cameraControl\n         * @type {CameraControl}\n         */\n        this.cameraControl = new CameraControl(this.scene, {\n            // panToPointer: true,\n            doublePickFlyTo: true\n        });\n\n        this._plugins = [];\n\n        /**\n         * Subscriptions to events sent with {@link fire}.\n         * @private\n         */\n        this._eventSubs = {};\n    }\n\n    /**\n     * Subscribes to an event fired at this Viewer.\n     *\n     * @param {String} event The event\n     * @param {Function} callback Callback fired on the event\n     */\n    on(event, callback) {\n        let subs = this._eventSubs[event];\n        if (!subs) {\n            subs = [];\n            this._eventSubs[event] = subs;\n        }\n        subs.push(callback);\n    }\n\n    /**\n     * Fires an event at this Viewer.\n     *\n     * @param {String} event Event name\n     * @param {Object} value Event parameters\n     */\n    fire(event, value) {\n        const subs = this._eventSubs[event];\n        if (subs) {\n            for (let i = 0, len = subs.length; i < len; i++) {\n                subs[i](value);\n            }\n        }\n    }\n\n    /**\n     * Unsubscribes from an event fired at this Viewer.\n     * @param event\n     */\n    off(event) { // TODO\n\n    }\n\n    /**\n     * Logs a message to the JavaScript developer console, prefixed with the ID of this Viewer.\n     *\n     * @param {String} msg The message\n     */\n    log(msg) {\n        console.log(`[xeokit viewer ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Logs an error message to the JavaScript developer console, prefixed with the ID of this Viewer.\n     *\n     * @param {String} msg The error message\n     */\n    error(msg) {\n        console.error(`[xeokit viewer ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Installs a Plugin.\n     *\n     * @private\n     */\n    addPlugin(plugin) {\n        this._plugins.push(plugin);\n    }\n\n    /**\n     * Uninstalls a Plugin, clearing content from it first.\n     *\n     * @private\n     */\n    removePlugin(plugin) {\n        for (let i = 0, len = this._plugins.length; i < len; i++) {\n            const p = this._plugins[i];\n            if (p === plugin) {\n                if (p.clear) {\n                    p.clear();\n                }\n                this._plugins.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    /**\n     * Sends a message to installed Plugins.\n     *\n     * The message can optionally be accompanied by a value.\n     * @private\n     */\n    sendToPlugins(name, value) {\n        for (let i = 0, len = this._plugins.length; i < len; i++) {\n            const p = this._plugins[i];\n            if (p.send) {\n                p.send(name, value);\n            }\n        }\n    }\n\n    /**\n     * @private\n     * @deprecated\n     */\n    clear() {\n        throw \"Viewer#clear() no longer implemented - use '#sendToPlugins(\\\"clear\\\") instead\";\n    }\n\n    /**\n     * @private\n     * @deprecated\n     */\n    resetView() {\n        throw \"Viewer#resetView() no longer implemented - use CameraMemento & ObjectsMemento classes instead\";\n    }\n\n    /**\n     * Enter snapshot mode.\n     *\n     * Switches rendering to a hidden snapshot canvas.\n     *\n     * Exit snapshot mode using {@link Viewer#endSnapshot}.\n     */\n    beginSnapshot() {\n        if (this._snapshotBegun) {\n            return;\n        }\n        this.scene._renderer.beginSnapshot();\n        this._snapshotBegun = true;\n    }\n\n    /**\n     * Gets a snapshot of this Viewer's {@link Scene} as a Base64-encoded image.\n     *\n     * #### Usage:\n     *\n     * ````javascript\n     * const imageData = viewer.getSnapshot({\n     *    width: 500,\n     *    height: 500,\n     *    format: \"png\"\n     * });\n     * ````\n     * @param {*} [params] Capture options.\n     * @param {Number} [params.width] Desired width of result in pixels - defaults to width of canvas.\n     * @param {Number} [params.height] Desired height of result in pixels - defaults to height of canvas.\n     * @param {String} [params.format=\"jpeg\"] Desired format; \"jpeg\", \"png\" or \"bmp\".\n     * @param {Boolean} [params.includeGizmos=false] When true, will include gizmos like {@link SectionPlane} in the snapshot.\n     * @returns {String} String-encoded image data URI.\n     */\n    getSnapshot(params = {}) {\n\n        const needFinishSnapshot = (!this._snapshotBegun);\n\n        if (!this._snapshotBegun) {\n            this.beginSnapshot();\n        }\n\n        if (!params.includeGizmos) {\n            this.sendToPlugins(\"snapshotStarting\"); // Tells plugins to hide things that shouldn't be in snapshot\n        }\n\n        const resize = (params.width !== undefined && params.height !== undefined);\n        const canvas = this.scene.canvas.canvas;\n        const saveWidth = canvas.clientWidth;\n        const saveHeight = canvas.clientHeight;\n        const saveCssWidth = canvas.style.width;\n        const saveCssHeight = canvas.style.height;\n\n        const width = params.width ? Math.floor(params.width) : canvas.width;\n        const height = params.height ? Math.floor(params.height) : canvas.height;\n\n        if (resize) {\n            canvas.style.width = width + \"px\";\n            canvas.style.height = height + \"px\";\n        }\n\n        this.scene._renderer.renderSnapshot();\n\n        const imageDataURI = this.scene._renderer.readSnapshot(params);\n\n        if (resize) {\n            canvas.style.width = saveCssWidth;\n            canvas.style.height = saveCssHeight;\n            canvas.width = saveWidth;\n            canvas.height = saveHeight;\n\n            this.scene.glRedraw();\n        }\n\n        if (!params.includeGizmos) {\n            this.sendToPlugins(\"snapshotFinished\");\n        }\n\n        if (needFinishSnapshot) {\n            this.endSnapshot();\n        }\n\n        return imageDataURI;\n    }\n\n    /**\n     * Exits snapshot mode.\n     *\n     * Switches rendering back to the main canvas.\n     *\n     */\n    endSnapshot() {\n        if (!this._snapshotBegun) {\n            return;\n        }\n        this.scene._renderer.endSnapshot();\n        this.scene._renderer.render({force: true});\n        this._snapshotBegun = false;\n    }\n\n    /** Destroys this Viewer.\n     */\n    destroy() {\n        const plugins = this._plugins.slice(); // Array will modify as we delete plugins\n        for (let i = 0, len = plugins.length; i < len; i++) {\n            const plugin = plugins[i];\n            plugin.destroy();\n        }\n        this.scene.destroy();\n    }\n}\n\nexport {Viewer}\n","import {math} from \"../../math/math.js\";\n\n/**\n * @private\n * @implements Pickable\n */\nclass PerformanceMesh {\n\n    constructor(model, id, color, opacity, layer = null, portionId = 0) {\n\n        /**\n         * The PerformanceModel that contains this PerformanceModelMesh.\n         *\n         * A PerformanceModelMesh always belongs to exactly one PerformanceModel.\n         *\n         * @property model\n         * @type {PerformanceModel}\n         * @final\n         */\n        this.model = model;\n\n        /**\n         * The PerformanceNode that contains this PerformanceModelMesh.\n         *\n         * A PerformanceModelMesh always belongs to exactly one PerformanceNode.\n         *\n         * @property object\n         * @type {PerformanceNode}\n         * @final\n         */\n        this.object = null;\n\n        /**\n         * The PerformanceNode that contains this PerformanceModelMesh.\n         *\n         * A PerformanceModelMesh always belongs to exactly one PerformanceNode.\n         *\n         * @property object\n         * @type {PerformanceNode}\n         * @final\n         */\n        this.parent = null;\n\n        /**\n         * ID of this PerformanceModelMesh, unique within the xeokit.Scene.\n         *\n         * @property id\n         * @type {String}\n         * @final\n         */\n        this.id = id;\n\n        /**\n         *\n         * @type {Number}\n         * @private\n         */\n        this.pickId = this.model.scene._renderer.getPickID(this);\n\n        /**\n         * World-space 3D axis-aligned bounding box (AABB).\n         *\n         * Represented by a six-element Float64Array containing the min/max extents of the\n         * axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n         *\n         * @property aabb\n         * @final\n         * @type {Float64Array}\n         */\n        this.aabb = math.AABB3();\n\n        this._layer = layer;\n        this._portionId = portionId;\n\n        this._color = [color[0], color[1], color[2], opacity]; // [0..255]\n        this._colorize = [color[0], color[1], color[2], opacity]; // [0..255]\n        this._colorizing = false;\n\n        this._transparent = (opacity < 255);\n\n        this.numTriangles = 0;\n\n        /**\n         * 3D origin of the PerformanceMesh's vertex positions, if they are in relative-to-center (RTC) coordinates.\n         *\n         * When this is defined, then the positions are RTC, which means that they are relative to this position.\n         *\n         * @property rtcCenter\n         * @type {Float64Array}\n         */\n        this.rtcCenter = null;\n    }\n\n    /**\n     * @private\n     */\n    _finalize(entityFlags) {\n        this._layer.initFlags(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setVisible(entityFlags) {\n        this._layer.setVisible(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setColor(color) {\n        this._color[0] = color[0];\n        this._color[1] = color[1];\n        this._color[2] = color[2];\n        if (!this._colorizing) {\n            this._layer.setColor(this._portionId, this._color, false);\n        }\n    }\n\n    /** @private */\n    _setColorize(colorize) {\n        const setOpacity = false;\n        if (colorize) {\n            this._colorize[0] = colorize[0];\n            this._colorize[1] = colorize[1];\n            this._colorize[2] = colorize[2];\n            this._layer.setColor(this._portionId, this._colorize, setOpacity);\n            this._colorizing = true;\n        } else {\n            this._layer.setColor(this._portionId, this._color, setOpacity);\n            this._colorizing = false;\n        }\n    }\n\n    /** @private */\n    _setOpacity(opacity, entityFlags) {\n        const newTransparent = (opacity < 255);\n        const lastTransparent = this._transparent;\n        const changingTransparency = (lastTransparent !== newTransparent);\n        this._color[3] = opacity;\n        this._colorize[3] = opacity;\n        this._transparent = newTransparent;\n        if (this._colorizing) {\n            this._layer.setColor(this._portionId, this._colorize);\n        } else {\n            this._layer.setColor(this._portionId, this._color);\n        }\n        if (changingTransparency) {\n            this._layer.setTransparent(this._portionId, entityFlags, newTransparent);\n        }\n    }\n\n    /**\n     * @private\n     */\n    _setOffset(offset) {\n        this._layer.setOffset(this._portionId, offset);\n    }\n\n    /**\n     * @private\n     */\n    _setHighlighted(entityFlags) {\n        this._layer.setHighlighted(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setXRayed(entityFlags) {\n        this._layer.setXRayed(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setSelected(entityFlags) {\n        this._layer.setSelected(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setEdges(entityFlags) {\n        this._layer.setEdges(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setClippable(entityFlags) {\n        this._layer.setClippable(this._portionId, entityFlags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setCollidable(entityFlags) {\n        this._layer.setCollidable(this._portionId, entityFlags);\n    }\n\n    /**\n     * @private\n     */\n    _setPickable(flags) {\n        this._layer.setPickable(this._portionId, flags, this._transparent);\n    }\n\n    /**\n     * @private\n     */\n    _setCulled(flags) {\n        this._layer.setCulled(this._portionId, flags, this._transparent);\n    }\n\n    /** @private */\n    canPickTriangle() {\n        return false;\n    }\n\n    /** @private */\n    drawPickTriangles(renderFlags, frameCtx) {\n        // NOP\n    }\n\n    /** @private */\n    pickTriangleSurface(pickResult) {\n        // NOP\n    }\n\n    /** @private */\n    canPickWorldPos() {\n        return true;\n    }\n\n    /** @private */\n    drawPickDepths(frameCtx) {\n        this.model.drawPickDepths(frameCtx);\n    }\n\n    /** @private */\n    drawPickNormals(frameCtx) {\n        this.model.drawPickNormals(frameCtx);\n    }\n\n    /**\n     * @private\n     * @returns {PerformanceNode}\n     */\n    delegatePickedEntity() {\n        return this.parent;\n    }\n\n    /**\n     * @private\n     */\n    _destroy() {\n        this.model.scene._renderer.putPickID(this.pickId);\n    }\n}\n\nexport {PerformanceMesh};","/**\n * @private\n * @type {{PICKABLE: number, CLIPPABLE: number, BACKFACES: number, VISIBLE: number, SELECTED: number, OUTLINED: number, CULLED: number, RECEIVE_SHADOW: number, COLLIDABLE: number, XRAYED: number, CAST_SHADOW: number, EDGES: number, HIGHLIGHTED: number}}\n */\nconst ENTITY_FLAGS = {\n    VISIBLE: 1,\n    CULLED: 1 << 2,\n    PICKABLE: 1 << 3,\n    CLIPPABLE: 1 << 4,\n    COLLIDABLE: 1 << 5,\n    CAST_SHADOW: 1 << 6,\n    RECEIVE_SHADOW: 1 << 7,\n    XRAYED: 1 << 8,\n    HIGHLIGHTED: 1 << 9,\n    SELECTED: 1 << 10,\n    EDGES: 1 << 11,\n    BACKFACES: 1 << 12,\n    TRANSPARENT: 1 << 13\n};\n\nexport {ENTITY_FLAGS};","import {ENTITY_FLAGS} from './ENTITY_FLAGS.js';\nimport {math} from \"../../math/math.js\";\n\nconst tempFloatRGB = new Float32Array([0, 0, 0]);\nconst tempIntRGB = new Uint16Array([0, 0, 0]);\n\n/**\n * @private\n */\nclass PerformanceNode {\n\n    /**\n     * @private\n     */\n    constructor(model, isObject, id, meshes, flags, aabb) {\n\n        this._isObject = isObject;\n\n        /**\n         * The {@link Scene} that contains this PerformanceNode.\n         *\n         * @property scene\n         * @type {Scene}\n         * @final\n         */\n        this.scene = model.scene;\n\n        /**\n         * The PerformanceModel that contains this PerformanceNode.\n         * @property model\n         * @type {PerformanceModel}\n         * @final\n         */\n        this.model = model;\n\n        /**\n         * The PerformanceModelMesh instances contained by this PerformanceNode\n         * @property meshes\n         * @type {{Array of PerformanceModelMesh}}\n         * @final\n         */\n        this.meshes = meshes;\n\n        this._numTriangles = 0;\n\n        for (var i = 0, len = this.meshes.length; i < len; i++) {  // TODO: tidier way? Refactor?\n            const mesh = this.meshes[i];\n            mesh.parent = this;\n            this._numTriangles += mesh.numTriangles;\n        }\n\n        /**\n         * ID of this PerformanceNode, unique within the {@link Scene}.\n         * @property id\n         * @type {String|Number}\n         * @final\n         */\n        this.id = id;\n\n        /**\n         * ID of the corresponding object within the originating system.\n         *\n         * @type {String}\n         * @abstract\n         */\n        this.originalSystemId = math.unglobalizeObjectId(model.id, id);\n\n        this._flags = flags;\n        this._aabb = aabb;\n        this._offsetAABB = math.AABB3(aabb);\n\n        this._offset = math.vec3();\n\n        if (this._isObject) {\n            model.scene._registerObject(this);\n        }\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Entity members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that PerformanceNode is an {@link Entity}.\n     * @type {Boolean}\n     */\n    get isEntity() {\n        return true;\n    }\n\n    /**\n     * Always returns ````false```` because a PerformanceNode can never represent a model.\n     *\n     * @type {Boolean}\n     */\n    get isModel() {\n        return false;\n    }\n\n    /**\n     * Returns ````true```` if this PerformanceNode represents an object.\n     *\n     * When ````true```` the PerformanceNode will be registered by {@link PerformanceNode#id} in\n     * {@link Scene#objects} and may also have a {@link MetaObject} with matching {@link MetaObject#id}.\n     *\n     * @type {Boolean}\n     */\n    get isObject() {\n        return this._isObject;\n    }\n\n    /**\n     * World-space 3D axis-aligned bounding box (AABB) of this PerformanceNode.\n     *\n     * Represented by a six-element Float64Array containing the min/max extents of the\n     * axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * @type {Float64Array}\n     */\n    get aabb() {\n        return this._offsetAABB;\n    }\n\n    /**\n     * The approximate number of triangles in this PerformanceNode.\n     *\n     * @type {Number}\n     */\n    get numTriangles() {\n        return this._numTriangles;\n    }\n\n    /**\n     * Sets if this PerformanceNode is visible.\n     *\n     * Only rendered when {@link PerformanceNode#visible} is ````true```` and {@link PerformanceNode#culled} is ````false````.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#visible} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#visibleObjects}.\n     *\n     * @type {Boolean}\n     */\n    set visible(visible) {\n        if (!!(this._flags & ENTITY_FLAGS.VISIBLE) === visible) {\n            return; // Redundant update\n        }\n        if (visible) {\n            this._flags = this._flags | ENTITY_FLAGS.VISIBLE;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.VISIBLE;\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setVisible(this._flags);\n        }\n        if (this._isObject) {\n            this.model.scene._objectVisibilityUpdated(this);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceNode is visible.\n     *\n     * Only rendered when {@link PerformanceNode#visible} is ````true```` and {@link PerformanceNode#culled} is ````false````.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#visible} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#visibleObjects}.\n     *\n     * @type {Boolean}\n     */\n    get visible() {\n        return this._getFlag(ENTITY_FLAGS.VISIBLE);\n    }\n\n    _getFlag(flag) {\n        return !!(this._flags & flag);\n    }\n\n    /**\n     * Sets if this PerformanceNode is highlighted.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#highlighted} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#highlightedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set highlighted(highlighted) {\n        if (!!(this._flags & ENTITY_FLAGS.HIGHLIGHTED) === highlighted) {\n            return; // Redundant update\n        }\n        if (highlighted) {\n            this._flags = this._flags | ENTITY_FLAGS.HIGHLIGHTED;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.HIGHLIGHTED;\n        }\n        for (var i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setHighlighted(this._flags);\n        }\n        if (this._isObject) {\n            this.model.scene._objectHighlightedUpdated(this);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceNode is highlighted.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#highlighted} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#highlightedObjects}.\n     *\n     * @type {Boolean}\n     */\n    get highlighted() {\n        return this._getFlag(ENTITY_FLAGS.HIGHLIGHTED);\n    }\n\n    /**\n     * Sets if this PerformanceNode is xrayed.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#xrayed} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#xrayedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set xrayed(xrayed) {\n        if (!!(this._flags & ENTITY_FLAGS.XRAYED) === xrayed) {\n            return; // Redundant update\n        }\n        if (xrayed) {\n            this._flags = this._flags | ENTITY_FLAGS.XRAYED;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.XRAYED;\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setXRayed(this._flags);\n        }\n        if (this._isObject) {\n            this.model.scene._objectXRayedUpdated(this);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceNode is xrayed.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#xrayed} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#xrayedObjects}.\n     *\n     * @type {Boolean}\n     */\n    get xrayed() {\n        return this._getFlag(ENTITY_FLAGS.XRAYED);\n    }\n\n    /**\n     * Gets if this PerformanceNode is selected.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#selected} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#selectedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set selected(selected) {\n        if (!!(this._flags & ENTITY_FLAGS.SELECTED) === selected) {\n            return; // Redundant update\n        }\n        if (selected) {\n            this._flags = this._flags | ENTITY_FLAGS.SELECTED;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.SELECTED;\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setSelected(this._flags);\n        }\n        if (this._isObject) {\n            this.model.scene._objectSelectedUpdated(this);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Sets if this PerformanceNode is selected.\n     *\n     * When both {@link PerformanceNode#isObject} and {@link PerformanceNode#selected} are ````true```` the PerformanceNode will be\n     * registered by {@link PerformanceNode#id} in {@link Scene#selectedObjects}.\n     *\n     * @type {Boolean}\n     */\n    get selected() {\n        return this._getFlag(ENTITY_FLAGS.SELECTED);\n    }\n\n    /**\n     * Sets if this PerformanceNode's edges are enhanced.\n     *\n     * @type {Boolean}\n     */\n    set edges(edges) {\n        if (!!(this._flags & ENTITY_FLAGS.EDGES) === edges) {\n            return; // Redundant update\n        }\n        if (edges) {\n            this._flags = this._flags | ENTITY_FLAGS.EDGES;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.EDGES;\n        }\n        for (var i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setEdges(this._flags);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceNode's edges are enhanced.\n     *\n     * @type {Boolean}\n     */\n    get edges() {\n        return this._getFlag(ENTITY_FLAGS.EDGES);\n    }\n\n    /**\n     * Sets if this PerformanceNode is culled.\n     *\n     * Only rendered when {@link PerformanceNode#visible} is ````true```` and {@link PerformanceNode#culled} is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set culled(culled) {\n        if (!!(this._flags & ENTITY_FLAGS.CULLED) === culled) {\n            return; // Redundant update\n        }\n        if (culled) {\n            this._flags = this._flags | ENTITY_FLAGS.CULLED;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.CULLED;\n        }\n        for (var i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setCulled(this._flags);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceNode is culled.\n     *\n     * Only rendered when {@link PerformanceNode#visible} is ````true```` and {@link PerformanceNode#culled} is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get culled() {\n        return this._getFlag(ENTITY_FLAGS.CULLED);\n    }\n\n    /**\n     * Sets if this PerformanceNode is clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#sectionPlanes}.\n     *\n     * @type {Boolean}\n     */\n    set clippable(clippable) {\n        if ((!!(this._flags & ENTITY_FLAGS.CLIPPABLE)) === clippable) {\n            return; // Redundant update\n        }\n        if (clippable) {\n            this._flags = this._flags | ENTITY_FLAGS.CLIPPABLE;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.CLIPPABLE;\n        }\n        for (var i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setClippable(this._flags);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceNode is clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#sectionPlanes}.\n     *\n     * @type {Boolean}\n     */\n    get clippable() {\n        return this._getFlag(ENTITY_FLAGS.CLIPPABLE);\n    }\n\n    /**\n     * Sets if this PerformanceNode is included in boundary calculations.\n     *\n     * @type {Boolean}\n     */\n    set collidable(collidable) {\n        if (!!(this._flags & ENTITY_FLAGS.COLLIDABLE) === collidable) {\n            return; // Redundant update\n        }\n        if (collidable) {\n            this._flags = this._flags | ENTITY_FLAGS.COLLIDABLE;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.COLLIDABLE;\n        }\n        for (var i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setCollidable(this._flags);\n        }\n    }\n\n    /**\n     * Gets if this PerformanceNode is included in boundary calculations.\n     *\n     * @type {Boolean}\n     */\n    get collidable() {\n        return this._getFlag(ENTITY_FLAGS.COLLIDABLE);\n    }\n\n    /**\n     * Sets if this PerformanceNode is pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    set pickable(pickable) {\n        if (!!(this._flags & ENTITY_FLAGS.PICKABLE) === pickable) {\n            return; // Redundant update\n        }\n        if (pickable) {\n            this._flags = this._flags | ENTITY_FLAGS.PICKABLE;\n        } else {\n            this._flags = this._flags & ~ENTITY_FLAGS.PICKABLE;\n        }\n        for (var i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setPickable(this._flags);\n        }\n    }\n\n    /**\n     * Gets if this PerformanceNode is pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    get pickable() {\n        return this._getFlag(ENTITY_FLAGS.PICKABLE);\n    }\n\n    /**\n     * Sets the PerformanceNode's RGB colorize color.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    set colorize(color) { // [0..1, 0..1, 0..1]\n        if (color) {\n            tempIntRGB[0] = Math.floor(color[0] * 255.0); // Quantize\n            tempIntRGB[1] = Math.floor(color[1] * 255.0);\n            tempIntRGB[2] = Math.floor(color[2] * 255.0);\n            for (let i = 0, len = this.meshes.length; i < len; i++) {\n                this.meshes[i]._setColorize(tempIntRGB);\n            }\n        } else {\n            for (let i = 0, len = this.meshes.length; i < len; i++) {\n                this.meshes[i]._setColorize(null);\n            }\n        }\n        if (this._isObject) {\n            const colorized = (!!color);\n            this.scene._objectColorizeUpdated(this, colorized);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets the PerformanceNode's RGB colorize color.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    get colorize() { // [0..1, 0..1, 0..1]\n        if (this.meshes.length === 0) {\n            return null;\n        }\n        const colorize = this.meshes[0]._colorize;\n        tempFloatRGB[0] = colorize[0] / 255.0; // Unquantize\n        tempFloatRGB[1] = colorize[1] / 255.0;\n        tempFloatRGB[2] = colorize[2] / 255.0;\n        return tempFloatRGB;\n    }\n\n    /**\n     * Sets the PerformanceNode's opacity factor, multiplies by the PerformanceNode's rendered fragment alphas.\n     *\n     * This is a factor in range ````[0..1]````.\n     *\n     * @type {Number}\n     */\n    set opacity(opacity) {\n        if (this.meshes.length === 0) {\n            return;\n        }\n        const opacityUpdated = (opacity !== null && opacity !== undefined);\n        const lastOpacityQuantized = this.meshes[0]._colorize[3];\n        let opacityQuantized = 255;\n        if (opacityUpdated) {\n            if (opacity < 0) {\n                opacity = 0;\n            } else if (opacity > 1) {\n                opacity = 1;\n            }\n            opacityQuantized = Math.floor(opacity * 255.0); // Quantize\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        } else {\n            opacityQuantized = 255.0;\n            if (lastOpacityQuantized === opacityQuantized) {\n                return;\n            }\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setOpacity(opacityQuantized, this._flags);\n        }\n        if (this._isObject) {\n            this.scene._objectOpacityUpdated(this, opacityUpdated);\n        }\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets the PerformanceNode's opacity factor.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * @type {Number}\n     */\n    get opacity() {\n        if (this.meshes.length > 0) {\n            return (this.meshes[0]._colorize[3] / 255.0);\n        } else {\n            return 1.0;\n        }\n    }\n\n    /**\n     * Sets the PerformanceNode's 3D World-space offset.\n     *\n     * The offset dynamically translates the PerformanceNode in World-space.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * Provide a null or undefined value to reset to the default value.\n     *\n     * @type {Number[]}\n     */\n    set offset(offset) {\n        if (offset) {\n            this._offset[0] = offset[0];\n            this._offset[1] = offset[1];\n            this._offset[2] = offset[2];\n        } else {\n            this._offset[0] = 0;\n            this._offset[1] = 0;\n            this._offset[2] = 0;\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._setOffset(this._offset);\n        }\n        this._offsetAABB[0] = this._aabb[0] + this._offset[0];\n        this._offsetAABB[1] = this._aabb[1] + this._offset[1];\n        this._offsetAABB[2] = this._aabb[2] + this._offset[2];\n        this._offsetAABB[3] = this._aabb[3] + this._offset[0];\n        this._offsetAABB[4] = this._aabb[4] + this._offset[1];\n        this._offsetAABB[5] = this._aabb[5] + this._offset[2];\n        this.scene._aabbDirty = true;\n        this.scene._objectOffsetUpdated(this, offset);\n        this.model._aabbDirty = true;\n        this.model.glRedraw();\n    }\n\n    /**\n     * Gets the PerformanceNode's 3D World-space offset.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get offset() {\n        return this._offset;\n    }\n\n    /**\n     * Sets if to this PerformanceNode casts shadows.\n     *\n     * @type {Boolean}\n     */\n    set castsShadow(pickable) { // TODO\n\n    }\n\n    /**\n     * Gets if this PerformanceNode casts shadows.\n     *\n     * @type {Boolean}\n     */\n    get castsShadow() { // TODO\n        return false;\n    }\n\n    /**\n     * Whether or not this PerformanceNode can have shadows cast upon it\n     *\n     * @type {Boolean}\n     */\n    set receivesShadow(pickable) { // TODO\n\n    }\n\n    /**\n     * Whether or not this PerformanceNode can have shadows cast upon it\n     *\n     * @type {Boolean}\n     */\n    get receivesShadow() { // TODO\n        return false;\n    }\n\n    /**\n     * Gets if Scalable Ambient Obscurance (SAO) will apply to this PerformanceNode.\n     *\n     * SAO is configured by the Scene's {@link SAO} component.\n     *\n     * @type {Boolean}\n     * @abstract\n     */\n    get saoEnabled() {\n        return this.model.saoEnabled;\n    }\n\n    _finalize() {\n        const scene = this.model.scene;\n        if (this._isObject) {\n            if (this.visible) {\n                scene._objectVisibilityUpdated(this);\n            }\n            if (this.highlighted) {\n                scene._objectHighlightedUpdated(this);\n            }\n            if (this.xrayed) {\n                scene._objectXRayedUpdated(this);\n            }\n            if (this.selected) {\n                scene._objectSelectedUpdated(this);\n            }\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._finalize(this._flags);\n        }\n    }\n\n    _destroy() { // Called by PerformanceModel\n        const scene = this.model.scene;\n        if (this._isObject) {\n            scene._deregisterObject(this);\n            if (this.visible) {\n                scene._objectVisibilityUpdated(this, false);\n            }\n            if (this.xrayed) {\n                scene._objectXRayedUpdated(this);\n            }\n            if (this.selected) {\n                scene._objectSelectedUpdated(this);\n            }\n            if (this.highlighted) {\n                scene._objectHighlightedUpdated(this);\n            }\n            this.scene._objectColorizeUpdated(this, false);\n            this.scene._objectOpacityUpdated(this, false);\n            this.scene._objectOffsetUpdated(this, false);\n        }\n        for (let i = 0, len = this.meshes.length; i < len; i++) {\n            this.meshes[i]._destroy();\n        }\n        scene._aabbDirty = true;\n    }\n\n}\n\nexport {PerformanceNode};","/**\n * Provides scratch memory for methods like TrianglesBatchingLayer setFlags() and setColors(),\n * so they don't need to allocate temporary arrays that need garbage collection.\n *\n * @private\n */\nclass ScratchMemory {\n\n    constructor() {\n        this._uint8Arrays = {};\n        this._float32Arrays = {};\n    }\n\n    _clear() {\n        this._uint8Arrays = {};\n        this._float32Arrays = {};\n    }\n\n    getUInt8Array(len) {\n        let uint8Array = this._uint8Arrays[len];\n        if (!uint8Array) {\n            uint8Array = new Uint8Array(len);\n            this._uint8Arrays[len] = uint8Array;\n        }\n        return uint8Array;\n    }\n\n    getFloat32Array(len) {\n        let float32Array = this._float32Arrays[len];\n        if (!float32Array) {\n            float32Array = new Float32Array(len);\n            this._float32Arrays[len] = float32Array;\n        }\n        return float32Array;\n    }\n}\n\nconst batchingLayerScratchMemory = new ScratchMemory();\n\nlet countUsers = 0;\n\n/**\n * @private\n */\nfunction getScratchMemory() {\n    countUsers++;\n    return batchingLayerScratchMemory;\n}\n\n/**\n * @private\n */\nfunction putScratchMemory() {\n    if (countUsers === 0) {\n        return;\n    }\n    countUsers--;\n    if (countUsers === 0) {\n        batchingLayerScratchMemory._clear();\n    }\n}\n\nexport {getScratchMemory, putScratchMemory};","/**\n * @private\n */\nconst RENDER_PASSES = {\n\n    // Skipped - suppress rendering\n\n    NOT_RENDERED: 0,\n\n    // Normal rendering - mutually exclusive modes\n\n    COLOR_OPAQUE: 1,\n    COLOR_TRANSPARENT: 2,\n\n    // Emphasis silhouette rendering - mutually exclusive modes\n\n    SILHOUETTE_HIGHLIGHTED: 3,\n    SILHOUETTE_SELECTED: 4,\n    SILHOUETTE_XRAYED: 5,\n\n    // Edges rendering - mutually exclusive modes\n\n    EDGES_COLOR_OPAQUE: 6,\n    EDGES_COLOR_TRANSPARENT: 7,\n    EDGES_HIGHLIGHTED: 8,\n    EDGES_SELECTED: 9,\n    EDGES_XRAYED: 10,\n\n    // Picking\n\n    PICK: 11\n};\n\nexport {RENDER_PASSES};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec4 = math.vec4();\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingColorRenderer {\n\n    constructor(scene, withSAO) {\n        this._scene = scene;\n        this._withSAO = withSAO;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        const scene = this._scene;\n        return [scene._lightsState.getHash(), scene._sectionPlanesState.getHash(), (this._withSAO ? \"sao\" : \"nosao\")].join(\";\");\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const scene = this._scene;\n        const camera = scene.camera;\n        const model = batchingLayer.model;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aNormal) {\n            this._aNormal.bindArrayBuffer(state.normalsBuf);\n        }\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const lightsState = scene._lightsState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uLightAmbient = program.getLocation(\"lightAmbient\");\n        this._uLightColor = [];\n        this._uLightDir = [];\n        this._uLightPos = [];\n        this._uLightAttenuation = [];\n\n        const lights = lightsState.lights;\n        let light;\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n            light = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = null;\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    break;\n                case \"point\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = null;\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n                case \"spot\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n            }\n        }\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (this._withSAO) {\n            this._uOcclusionTexture = \"uOcclusionTexture\";\n            this._uSAOParams = program.getLocation(\"uSAOParams\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const lights = scene._lightsState.lights;\n        const project = scene.camera.project;\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix)\n\n        if (this._uLightAmbient) {\n            gl.uniform4fv(this._uLightAmbient, scene._lightsState.getAmbientColorAndIntensity());\n        }\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n\n            const light = lights[i];\n\n            if (this._uLightColor[i]) {\n                gl.uniform4f(this._uLightColor[i], light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (this._uLightPos[i]) {\n                gl.uniform3fv(this._uLightPos[i], light.pos);\n                if (this._uLightAttenuation[i]) {\n                    gl.uniform1f(this._uLightAttenuation[i], light.attenuation);\n                }\n            }\n            if (this._uLightDir[i]) {\n                gl.uniform3fv(this._uLightDir[i], light.dir);\n            }\n        }\n\n        if (this._withSAO) {\n            const sao = scene.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                gl.uniform4fv(this._uSAOParams, tempVec4);\n                this._program.bindTexture(this._uOcclusionTexture, frameCtx.occlusionTexture, 0);\n            }\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const lightsState = scene._lightsState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        let light;\n        const src = [];\n\n        src.push(\"// Triangles batching draw vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 worldNormalMatrix;\");\n\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"uniform vec4 lightAmbient;\");\n\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"vec4 worldNormal =  worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); \");\n\n        src.push(\"vec3 viewNormal = normalize((viewNormalMatrix * worldNormal).xyz);\");\n\n        src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n        src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n\n        src.push(\"float lambertian = 1.0;\");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = -normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = -normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n\n        src.push(\"vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));\");\n        src.push(\"vColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);\");\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching draw fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        if (this._withSAO) {\n            src.push(\"uniform sampler2D uOcclusionTexture;\");\n            src.push(\"uniform vec4      uSAOParams;\");\n\n            src.push(\"const float       packUpscale = 256. / 255.;\");\n            src.push(\"const float       unpackDownScale = 255. / 256.;\");\n            src.push(\"const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n            src.push(\"const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );\");\n\n            src.push(\"float unpackRGBToFloat( const in vec4 v ) {\");\n            src.push(\"    return dot( v, unPackFactors );\");\n            src.push(\"}\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n                src.push(\"  if (dist > 0.0) { \");\n                src.push(\"      discard;\")\n                src.push(\"  }\");\n            src.push(\"}\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n\n        if (this._withSAO) {\n            // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n            // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n            src.push(\"   float viewportWidth     = uSAOParams[0];\");\n            src.push(\"   float viewportHeight    = uSAOParams[1];\");\n            src.push(\"   float blendCutoff       = uSAOParams[2];\");\n            src.push(\"   float blendFactor       = uSAOParams[3];\");\n            src.push(\"   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\");\n            src.push(\"   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture2D(uOcclusionTexture, uv))) * blendFactor;\");\n            src.push(\"   gl_FragColor            = vec4(vColor.rgb * ambient, 1.0);\");\n        } else {\n            src.push(\"   gl_FragColor            = vColor;\");\n        }\n\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst defaultColor = new Float32Array([1, 1, 1]);\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingSilhouetteRenderer {\n\n    constructor(scene, primitiveType) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, defaultColor);\n        }\n\n        const viewMat = (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix;\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMat);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uColor = program.getLocation(\"color\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n\n        const src = [];\n\n        src.push(\"// Triangles batching silhouette vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        src.push(\"uniform vec4 color;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.y = NOT_RENDERED | SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | SILHOUETTE_XRAYED\n        // renderPass = SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n\n        src.push(`if (int(flags.y) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"} else {\");\n\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        let i;\n        let len;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching silhouette fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"uniform vec4 color;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = color;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingSilhouetteRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\n\nconst tempVec3a = math.vec3();\nconst defaultColor = new Float32Array([0,0,0,1]);\n\n/**\n * @private\n */\nclass TrianglesBatchingEdgesRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(batchingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.EDGES_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const edgeColor = material.edgeColor;\n            const edgeAlpha = material.edgeAlpha;\n            gl.uniform4f(this._uColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n\n        } else if (renderPass === RENDER_PASSES.EDGES_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const edgeColor = material.edgeColor;\n            const edgeAlpha = material.edgeAlpha;\n            gl.uniform4f(this._uColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n\n        } else if (renderPass === RENDER_PASSES.EDGES_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const edgeColor = material.edgeColor;\n            const edgeAlpha = material.edgeAlpha;\n            gl.uniform4f(this._uColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, defaultColor);\n        }\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n        state.edgeIndicesBuf.bind();\n\n        gl.drawElements(gl.LINES, state.edgeIndicesBuf.numItems, state.edgeIndicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uColor = program.getLocation(\"color\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const project = scene.camera.project;\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Batched geometry edges drawing vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n        src.push(\"uniform vec4 color;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n\n        // flags.z = NOT_RENDERED | EDGES_COLOR_OPAQUE | EDGES_COLOR_TRANSPARENT | EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n        // renderPass = EDGES_COLOR_OPAQUE | EDGES_COLOR_TRANSPARENT | EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n\n        src.push(`if (int(flags.z) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n            src.push(\"  vFlags2 = flags2;\");\n        }\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"vColor = vec4(color.r, color.g, color.b, color.a);\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry edges drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = vColor;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingEdgesRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingEdgesColorRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(batchingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n        state.edgeIndicesBuf.bind();\n\n        gl.drawElements(gl.LINES, state.edgeIndicesBuf.numItems, state.edgeIndicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const project = scene.camera.project;\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Batched geometry edges drawing vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec4 color;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n\n        // flags.z = NOT_RENDERED | EDGES_COLOR_OPAQUE | EDGES_COLOR_TRANSPARENT | EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n        // renderPass = EDGES_COLOR_OPAQUE | EDGES_COLOR_TRANSPARENT\n\n        src.push(`if (int(flags.z) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n            src.push(\"  vFlags2 = flags2;\");\n        }\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        //src.push(\"vColor = vec4(float(color.r-100.0) / 255.0, float(color.g-100.0) / 255.0, float(color.b-100.0) / 255.0, float(color.a) / 255.0);\");\n        src.push(\"vColor = vec4(float(color.r*0.5) / 255.0, float(color.g*0.5) / 255.0, float(color.b*0.5) / 255.0, float(color.a) / 255.0);\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry edges drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = vColor;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingEdgesColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingPickMeshRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(batchingLayer);\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const viewMatrix = rtcCenter ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMatrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(camera.project.far + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        if (this._aPickColor) {\n            this._aPickColor.bindArrayBuffer(state.pickColorsBuf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aPickColor = program.getAttribute(\"pickColor\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program.bind();\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Batched geometry picking vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"attribute vec4 pickColor;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vPickColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"      vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);\");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry picking fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vPickColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"   gl_FragColor = vPickColor; \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingPickMeshRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingPickDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const viewMatrix = rtcCenter ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMatrix);\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        gl.uniform1f(this._uPickZNear, frameCtx.pickZNear);\n        gl.uniform1f(this._uPickZFar, frameCtx.pickZFar);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(frameCtx.pickZFar + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        //=============================================================\n        // TODO: Use drawElements count and offset to draw only one entity\n        //=============================================================\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._uPickZNear = program.getLocation(\"pickZNear\");\n        this._uPickZFar = program.getLocation(\"pickZFar\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        this._program.bind();\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Triangles batching pick depth vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vViewPosition = viewPosition;\");\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Triangles batching pick depth fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        src.push(\"uniform float pickZNear;\");\n        src.push(\"uniform float pickZFar;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"vec4 packDepth(const in float depth) {\");\n        src.push(\"  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\");\n        src.push(\"  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\");\n        src.push(\"  vec4 res = fract(depth * bitShift);\");\n        src.push(\"  res -= res.xxyz * bitMask;\");\n        src.push(\"  return res;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));\");\n        src.push(\"    gl_FragColor = packDepth(zNormalizedDepth); \");  // Must be linear depth\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingPickDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingPickNormalsRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(batchingLayer);\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const viewMatrix = rtcCenter ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMatrix);\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(camera.project.far + 1.0) / Math.LN2);  // TODO: Far should be from projection matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        //=============================================================\n        // TODO: Use drawElements count and offset to draw only one entity\n        //=============================================================\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aNormal) {\n            this._aNormal.bindArrayBuffer(state.normalsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        this._program.bind();\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching pick normals vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec3 vWorldNormal;\");\n        src.push(\"void main(void) {\");\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"      vec3 worldNormal =  octDecode(normal.xy); \");\n        src.push(\"      vWorldNormal = worldNormal;\");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching pick normals fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec3 vWorldNormal;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    gl_FragColor = vec4((vWorldNormal * 0.5) + 0.5, 1.0);\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingPickNormalsRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingOcclusionRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const camera = scene.camera;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(batchingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching occlusion vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\")\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n        // Only opaque objects can be occluders\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching occlusion fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); \"); // Occluders are blue\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingOcclusionRenderer};","import {stats} from \"../../../../../stats.js\"\nimport {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._allocate();\n        this._hash = this._getHash();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles batching depth vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec2 vHighPrecisionZW;\");\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"vHighPrecisionZW = gl_Position.zw;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = (sectionPlanesState.sectionPlanes.length > 0);\n        const src = [];\n        src.push(\"// Triangles batching depth fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"const float   packUpScale = 256. / 255.;\");\n        src.push(\"const float   unpackDownscale = 255. / 256.;\");\n        src.push(\"const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n        src.push(\"const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );\");\n        src.push(\"const float   shiftRight8 = 1.0 / 256.;\");\n\n        src.push(\"vec4 packDepthToRGBA( const in float v ) {\");\n        src.push(\"    vec4 r = vec4( fract( v * packFactors ), v );\");\n        src.push(\"    r.yzw -= r.xyz * shiftRight8;\");\n        src.push(\"    return r * packUpScale;\");\n        src.push(\"}\");\n        src.push(\"varying vec2 vHighPrecisionZW;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n            src.push(\"    gl_FragColor = vec4(vec3(1.0 - fragCoordZ), 1.0); \");\n        } else {\n            src.push(\"    gl_FragColor = packDepthToRGBA(fragCoordZ); \"); // Must be linear depth\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n        stats.memory.programs--;\n    }\n}\n\nexport {TrianglesBatchingDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesBatchingNormalsRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(batchingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(batchingLayer);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        this._aNormal.bindArrayBuffer(state.normalsBuf);\n        this._aColor.bindArrayBuffer(state.colorsBuf);// Needed for masking out transparent entities using alpha channel\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            this._aFlags2 = program.getAttribute(\"flags2\");\n        }\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry normals vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 worldNormalMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\");\n\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition   = viewMatrix * worldPosition; \");\n        src.push(\"      vec4 worldNormal    = worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"      vec3 viewNormal     = normalize((viewNormalMatrix * worldNormal).xyz);\");\n        if (clipping) {\n            src.push(\"      vWorldPosition  = worldPosition;\");\n            src.push(\"      vFlags2         = flags2;\");\n        }\n        src.push(\"      vViewNormal = viewNormal;\");\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = (sectionPlanesState.sectionPlanes.length > 0);\n        const src = [];\n        src.push(\"// Batched geometry normals fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"vec3 packNormalToRGB( const in vec3 normal ) {\");\n        src.push(\"    return normalize( normal ) * 0.5 + 0.5;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingNormalsRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * Renders BatchingLayer fragment depths to a shadow map.\n *\n * @private\n */\nclass TrianglesBatchingShadowRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer) {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        if (!this._program) {\n            this._allocate();\n        }\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n        if (scene.logarithmicDepthBufferEnabled) {\n            gl.uniform1f(this._uZFar, scene.camera.project.far)\n        }\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        if (this._aColor) { // Needed for masking out transparent entities using alpha channel\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n        }\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n        state.indicesBuf.bind();\n\n        // TODO: Section planes need to be set if RTC center has changed since last RTC center recorded on frameCtx\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            const rtcCenter = batchingLayer._state.rtcCenter;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n        this._program = new Program(gl, this._buildShader());\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n        const program = this._program;\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uShadowViewMatrix = program.getLocation(\"shadowViewMatrix\");\n        this._uShadowProjMatrix = program.getLocation(\"shadowProjMatrix\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uZFar = program.getLocation(\"zFar\");\n        }\n        this._uSectionPlanes = [];\n        const sectionPlanes = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n    }\n\n    _bindProgram(frameCtx) {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        program.bind();\n        gl.uniformMatrix4fv(this._uShadowViewMatrix, false, frameCtx.shadowViewMatrix);\n        gl.uniformMatrix4fv(this._uShadowProjMatrix, false, frameCtx.shadowProjMatrix);\n        this._lastLightId = null;\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry shadow vertex shader\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform mat4 shadowViewMatrix;\");\n        src.push(\"uniform mat4 shadowProjMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"void main(void) {\");\n        src.push(\"  bool visible        = (float(flags.x) > 0.0);\");\n        src.push(\"  bool transparent    = ((float(color.a) / 255.0) < 1.0);\");\n        src.push(\"  if (!visible || transparent) {\");\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\");\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = shadowViewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"      vViewPosition = viewPosition;\");\n        src.push(\"      gl_Position = shadowProjMatrix * viewPosition;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = (sectionPlanesState.sectionPlanes.length > 0);\n        const src = [];\n        src.push(\"// Batched geometry shadow fragment shader\");\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n\n        src.push(\"vec4 encodeFloat( const in float v ) {\");\n        src.push(\"  const vec4 bitShift = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);\");\n        src.push(\"  const vec4 bitMask = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\");\n        src.push(\"  vec4 comp = fract(v * bitShift);\");\n        src.push(\"  comp -= comp.xxyz * bitMask;\");\n        src.push(\"  return comp;\");\n        src.push(\"}\");\n\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        src.push(\"    gl_FragColor = encodeFloat( gl_FragCoord.z); \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingShadowRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec4 = math.vec4();\nconst tempVec3a = math.vec3();\n\nconst TEXTURE_DECODE_FUNCS = {\n    \"linear\": \"linearToLinear\",\n    \"sRGB\": \"sRGBToLinear\",\n    \"gamma\": \"gammaToLinear\"\n};\n\n/**\n * @private\n */\nclass TrianglesBatchingColorQualityRenderer {\n\n    constructor(scene, withSAO) {\n        this._scene = scene;\n        this._withSAO = withSAO;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        const scene = this._scene;\n        return [scene.gammaOutput, scene._lightsState.getHash(), scene._sectionPlanesState.getHash(), (this._withSAO ? \"sao\" : \"nosao\")].join(\";\");\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const scene = this._scene;\n        const camera = scene.camera;\n        const model = batchingLayer.model;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aNormal) {\n            this._aNormal.bindArrayBuffer(state.normalsBuf);\n        }\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n        }\n\n        if (this._aMetallicRoughness) {\n            this._aMetallicRoughness.bindArrayBuffer(state.metallicRoughnessBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const lightsState = scene._lightsState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uGammaFactor = program.getLocation(\"gammaFactor\");\n\n        this._uLightAmbient = program.getLocation(\"lightAmbient\");\n        this._uLightColor = [];\n        this._uLightDir = [];\n        this._uLightPos = [];\n        this._uLightAttenuation = [];\n\n        const lights = lightsState.lights;\n        let light;\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n            light = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = null;\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    break;\n                case \"point\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = null;\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n                case \"spot\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n            }\n        }\n\n        if (lightsState.reflectionMaps.length > 0) {\n            this._uReflectionMap = \"reflectionMap\";\n        }\n\n        if (lightsState.lightMaps.length > 0) {\n            this._uLightMap = \"lightMap\";\n        }\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aMetallicRoughness = program.getAttribute(\"metallicRoughness\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (this._withSAO) {\n            this._uOcclusionTexture = \"uOcclusionTexture\";\n            this._uSAOParams = program.getLocation(\"uSAOParams\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const maxTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const lightsState = scene._lightsState;\n        const lights = lightsState.lights;\n        const project = scene.camera.project;\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix)\n\n        if (this._uLightAmbient) {\n            gl.uniform4fv(this._uLightAmbient, scene._lightsState.getAmbientColorAndIntensity());\n        }\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n\n            const light = lights[i];\n\n            if (this._uLightColor[i]) {\n                gl.uniform4f(this._uLightColor[i], light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (this._uLightPos[i]) {\n                gl.uniform3fv(this._uLightPos[i], light.pos);\n                if (this._uLightAttenuation[i]) {\n                    gl.uniform1f(this._uLightAttenuation[i], light.attenuation);\n                }\n            }\n            if (this._uLightDir[i]) {\n                gl.uniform3fv(this._uLightDir[i], light.dir);\n            }\n        }\n\n        if (lightsState.reflectionMaps.length > 0 && lightsState.reflectionMaps[0].texture && this._uReflectionMap) {\n            program.bindTexture(this._uReflectionMap, lightsState.reflectionMaps[0].texture, frameCtx.textureUnit);\n            frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n            frameCtx.bindTexture++;\n        }\n\n        if (lightsState.lightMaps.length > 0 && lightsState.lightMaps[0].texture && this._uLightMap) {\n            program.bindTexture(this._uLightMap, lightsState.lightMaps[0].texture, frameCtx.textureUnit);\n            frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n            frameCtx.bindTexture++;\n        }\n\n        if (this._withSAO) {\n            const sao = scene.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                gl.uniform4fv(this._uSAOParams, tempVec4);\n                this._program.bindTexture(this._uOcclusionTexture, frameCtx.occlusionTexture, frameCtx.textureUnit);\n                frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                frameCtx.bindTexture++;\n            }\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        if (this._uGammaFactor) {\n            gl.uniform1f(this._uGammaFactor, scene.gammaFactor);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const lightsState = scene._lightsState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const clippingCaps = sectionPlanesState.clippingCaps;\n\n        const src = [];\n\n        src.push(\"// Triangles batching quality draw vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec2 metallicRoughness;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 worldNormalMatrix;\");\n\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"varying vec2 vMetallicRoughness;\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"varying vec3 vWorldNormal;\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            if (clippingCaps) {\n                src.push(\"varying vec4 vClipPosition;\");\n            }\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"vec4 worldNormal =  worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"vec3 viewNormal = normalize((viewNormalMatrix * worldNormal).xyz);\");\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n            if (clippingCaps) {\n                src.push(\"vClipPosition = clipPos;\");\n            }\n        }\n\n        src.push(\"vViewPosition = viewPosition;\");\n        src.push(\"vViewNormal = viewNormal;\");\n        src.push(\"vColor = color;\");\n        src.push(\"vMetallicRoughness = metallicRoughness;\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"vWorldNormal = worldNormal.xyz;\");\n        }\n\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n\n        const scene = this._scene;\n        const gammaOutput = scene.gammaOutput; // If set, then it expects that all textures and colors need to be outputted in premultiplied gamma. Default is false.\n        const sectionPlanesState = scene._sectionPlanesState;\n        const lightsState = scene._lightsState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const clippingCaps = sectionPlanesState.clippingCaps;\n        const src = [];\n\n        src.push(\"// Triangles batching quality draw fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"varying vec2 vMetallicRoughness;\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"varying vec3 vWorldNormal;\");\n        }\n\n        src.push(\"uniform mat4 viewMatrix;\");\n\n        if (lightsState.reflectionMaps.length > 0) {\n            src.push(\"uniform samplerCube reflectionMap;\");\n        }\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"uniform samplerCube lightMap;\");\n        }\n\n        src.push(\"uniform vec4 lightAmbient;\");\n\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n\n        if (this._withSAO) {\n            src.push(\"uniform sampler2D uOcclusionTexture;\");\n            src.push(\"uniform vec4      uSAOParams;\");\n\n            src.push(\"const float       packUpscale = 256. / 255.;\");\n            src.push(\"const float       unpackDownScale = 255. / 256.;\");\n            src.push(\"const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n            src.push(\"const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );\");\n\n            src.push(\"float unpackRGBAToDepth( const in vec4 v ) {\");\n            src.push(\"    return dot( v, unPackFactors );\");\n            src.push(\"}\");\n        }\n\n        src.push(\"uniform float gammaFactor;\");\n        src.push(\"vec4 linearToLinear( in vec4 value ) {\");\n        src.push(\"  return value;\");\n        src.push(\"}\");\n        src.push(\"vec4 sRGBToLinear( in vec4 value ) {\");\n        src.push(\"  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\");\n        src.push(\"}\");\n        src.push(\"vec4 gammaToLinear( in vec4 value) {\");\n        src.push(\"  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\");\n        src.push(\"}\");\n        if (gammaOutput) {\n            src.push(\"vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\");\n            src.push(\"  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n            src.push(\"}\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            if (clippingCaps) {\n                src.push(\"varying vec4 vClipPosition;\");\n            }\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n\n        // CONSTANT DEFINITIONS\n\n        src.push(\"#define PI 3.14159265359\");\n        src.push(\"#define RECIPROCAL_PI 0.31830988618\");\n        src.push(\"#define RECIPROCAL_PI2 0.15915494\");\n        src.push(\"#define EPSILON 1e-6\");\n\n        src.push(\"#define saturate(a) clamp( a, 0.0, 1.0 )\");\n\n        // UTILITY DEFINITIONS\n\n        src.push(\"vec3 inverseTransformDirection(in vec3 dir, in mat4 matrix) {\");\n        src.push(\"   return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\");\n        src.push(\"}\");\n\n        // STRUCTURES\n\n        src.push(\"struct IncidentLight {\");\n        src.push(\"   vec3 color;\");\n        src.push(\"   vec3 direction;\");\n        src.push(\"};\");\n\n        src.push(\"struct ReflectedLight {\");\n        src.push(\"   vec3 diffuse;\");\n        src.push(\"   vec3 specular;\");\n        src.push(\"};\");\n\n        src.push(\"struct Geometry {\");\n        src.push(\"   vec3 position;\");\n        src.push(\"   vec3 viewNormal;\");\n        src.push(\"   vec3 worldNormal;\");\n        src.push(\"   vec3 viewEyeDir;\");\n        src.push(\"};\");\n\n        src.push(\"struct Material {\");\n        src.push(\"   vec3    diffuseColor;\");\n        src.push(\"   float   specularRoughness;\");\n        src.push(\"   vec3    specularColor;\");\n        src.push(\"   float   shine;\"); // Only used for Phong\n        src.push(\"};\");\n\n        // IRRADIANCE EVALUATION\n\n        src.push(\"float GGXRoughnessToBlinnExponent(const in float ggxRoughness) {\");\n        src.push(\"   float r = ggxRoughness + 0.0001;\");\n        src.push(\"   return (2.0 / (r * r) - 2.0);\");\n        src.push(\"}\");\n\n        src.push(\"float getSpecularMIPLevel(const in float blinnShininessExponent, const in int maxMIPLevel) {\");\n        src.push(\"   float maxMIPLevelScalar = float( maxMIPLevel );\");\n        src.push(\"   float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( ( blinnShininessExponent * blinnShininessExponent ) + 1.0 );\");\n        src.push(\"   return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\");\n        src.push(\"}\");\n\n        if (lightsState.reflectionMaps.length > 0) {\n            src.push(\"vec3 getLightProbeIndirectRadiance(const in vec3 reflectVec, const in float blinnShininessExponent, const in int maxMIPLevel) {\");\n            src.push(\"   float mipLevel = 0.5 * getSpecularMIPLevel(blinnShininessExponent, maxMIPLevel);\"); //TODO: a random factor - fix this\n            src.push(\"   vec3 envMapColor = \" + TEXTURE_DECODE_FUNCS[lightsState.reflectionMaps[0].encoding] + \"(textureCube(reflectionMap, reflectVec, mipLevel)).rgb;\");\n            src.push(\"  return envMapColor;\");\n            src.push(\"}\");\n        }\n\n        // SPECULAR BRDF EVALUATION\n\n        src.push(\"vec3 F_Schlick(const in vec3 specularColor, const in float dotLH) {\");\n        src.push(\"   float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\");\n        src.push(\"   return ( 1.0 - specularColor ) * fresnel + specularColor;\");\n        src.push(\"}\");\n\n        src.push(\"float G_GGX_Smith(const in float alpha, const in float dotNL, const in float dotNV) {\");\n        src.push(\"   float a2 = ( alpha * alpha );\");\n        src.push(\"   float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );\");\n        src.push(\"   float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );\");\n        src.push(\"   return 1.0 / ( gl * gv );\");\n        src.push(\"}\");\n\n        src.push(\"float G_GGX_SmithCorrelated(const in float alpha, const in float dotNL, const in float dotNV) {\");\n        src.push(\"   float a2 = ( alpha * alpha );\");\n        src.push(\"   float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );\");\n        src.push(\"   float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );\");\n        src.push(\"   return 0.5 / max( gv + gl, EPSILON );\");\n        src.push(\"}\");\n\n        src.push(\"float D_GGX(const in float alpha, const in float dotNH) {\");\n        src.push(\"   float a2 = ( alpha * alpha );\");\n        src.push(\"   float denom = ( dotNH * dotNH) * ( a2 - 1.0 ) + 1.0;\");\n        src.push(\"   return RECIPROCAL_PI * a2 / ( denom * denom);\");\n        src.push(\"}\");\n\n        src.push(\"vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight, const in Geometry geometry, const in vec3 specularColor, const in float roughness) {\");\n        src.push(\"   float alpha = ( roughness * roughness );\");\n        src.push(\"   vec3 halfDir = normalize( incidentLight.direction + geometry.viewEyeDir );\");\n        src.push(\"   float dotNL = saturate( dot( geometry.viewNormal, incidentLight.direction ) );\");\n        src.push(\"   float dotNV = saturate( dot( geometry.viewNormal, geometry.viewEyeDir ) );\");\n        src.push(\"   float dotNH = saturate( dot( geometry.viewNormal, halfDir ) );\");\n        src.push(\"   float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\");\n        src.push(\"   vec3  F = F_Schlick( specularColor, dotLH );\");\n        src.push(\"   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\");\n        src.push(\"   float D = D_GGX( alpha, dotNH );\");\n        src.push(\"   return F * (G * D);\");\n        src.push(\"}\");\n\n        src.push(\"vec3 BRDF_Specular_GGX_Environment(const in Geometry geometry, const in vec3 specularColor, const in float roughness) {\");\n        src.push(\"   float dotNV = saturate(dot(geometry.viewNormal, geometry.viewEyeDir));\");\n        src.push(\"   const vec4 c0 = vec4( -1, -0.0275, -0.572,  0.022);\");\n        src.push(\"   const vec4 c1 = vec4(  1,  0.0425,   1.04, -0.04);\");\n        src.push(\"   vec4 r = roughness * c0 + c1;\");\n        src.push(\"   float a004 = min(r.x * r.x, exp2(-9.28 * dotNV)) * r.x + r.y;\");\n        src.push(\"   vec2 AB    = vec2(-1.04, 1.04) * a004 + r.zw;\");\n        src.push(\"   return specularColor * AB.x + AB.y;\");\n        src.push(\"}\");\n\n        if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n\n            src.push(\"void computePBRLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n\n            if (lightsState.lightMaps.length > 0) {\n                src.push(\"   vec3 irradiance = \" + TEXTURE_DECODE_FUNCS[lightsState.lightMaps[0].encoding] + \"(textureCube(lightMap, geometry.worldNormal)).rgb;\");\n                src.push(\"   irradiance *= PI;\");\n                src.push(\"   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);\");\n                src.push(\"   reflectedLight.diffuse +=  irradiance * diffuseBRDFContrib;\");\n            }\n\n            if (lightsState.reflectionMaps.length > 0) {\n                src.push(\"   vec3 reflectVec             = reflect(geometry.viewEyeDir, geometry.viewNormal);\");\n                src.push(\"   reflectVec                  = inverseTransformDirection(reflectVec, viewMatrix);\");\n                src.push(\"   float blinnExpFromRoughness = GGXRoughnessToBlinnExponent(material.specularRoughness);\");\n                src.push(\"   vec3 radiance               = getLightProbeIndirectRadiance(reflectVec, blinnExpFromRoughness, 8);\");\n                src.push(\"   vec3 specularBRDFContrib    = BRDF_Specular_GGX_Environment(geometry, material.specularColor, material.specularRoughness);\");\n                src.push(\"   reflectedLight.specular     += radiance * specularBRDFContrib;\");\n            }\n\n            src.push(\"}\");\n        }\n\n        // MAIN LIGHTING COMPUTATION FUNCTION\n\n        src.push(\"void computePBRLighting(const in IncidentLight incidentLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n        src.push(\"   float dotNL     = saturate(dot(geometry.viewNormal, incidentLight.direction));\");\n        src.push(\"   vec3 irradiance = dotNL * incidentLight.color * PI;\");\n        src.push(\"   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);\");\n        src.push(\"   reflectedLight.specular += irradiance * BRDF_Specular_GGX(incidentLight, geometry, material.specularColor, material.specularRoughness);\");\n        src.push(\"}\");\n\n        src.push(\"void main(void) {\");\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            if (clippingCaps) {\n                src.push(\"  if (dist > (0.002 * vClipPosition.w)) {\");\n                src.push(\"      discard;\");\n                src.push(\"  }\");\n                src.push(\"  if (dist > 0.0) { \");\n                src.push(\"      gl_FragColor=vec4(1.0, 0.0, 0.0, 1.0);\");\n                if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                    src.push(\"  gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n                }\n                src.push(\"  return;\");\n                src.push(\"}\");\n            } else {\n                src.push(\"  if (dist > 0.0) { \");\n                src.push(\"      discard;\")\n                src.push(\"  }\");\n            }\n            src.push(\"}\");\n        }\n\n        src.push(\"IncidentLight  light;\");\n        src.push(\"Material       material;\");\n        src.push(\"Geometry       geometry;\");\n        src.push(\"ReflectedLight reflectedLight = ReflectedLight(vec3(0.0,0.0,0.0), vec3(0.0,0.0,0.0));\");\n\n        src.push(\"vec3 rgb = (vec3(float(vColor.r) / 255.0, float(vColor.g) / 255.0, float(vColor.b) / 255.0));\");\n        src.push(\"float alpha = float(vColor.a) / 255.0;\");\n\n        src.push(\"vec3  diffuseColor = rgb;\");\n        src.push(\"float specularF0 = 1.0;\");\n        src.push(\"float metallic = float(vMetallicRoughness.r) / 255.0;\");\n        src.push(\"float roughness = float(vMetallicRoughness.g) / 255.0;\");\n        src.push(\"float dielectricSpecular = 0.16 * specularF0 * specularF0;\");\n\n        src.push(\"material.diffuseColor      = diffuseColor * (1.0 - dielectricSpecular) * (1.0 - metallic);\");\n        src.push(\"material.specularRoughness = clamp(roughness, 0.04, 1.0);\");\n        src.push(\"material.specularColor     = mix(vec3(dielectricSpecular), diffuseColor, metallic);\");\n\n        src.push(\"geometry.position      = vViewPosition.xyz;\");\n        src.push(\"geometry.viewNormal    = -normalize(vViewNormal);\");\n        src.push(\"geometry.viewEyeDir    = normalize(vViewPosition.xyz);\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"geometry.worldNormal   = normalize(vWorldNormal);\");\n        }\n\n        if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n            src.push(\"computePBRLightMapping(geometry, material, reflectedLight);\");\n        }\n\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"light.direction =  normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"light.direction =  normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"light.direction =  normalize(lightPos\" + i + \" - vViewPosition.xyz);\");\n                } else {\n                    src.push(\"light.direction =  normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"light.direction =  normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"light.direction =  normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n\n            src.push(\"light.color =  lightColor\" + i + \".rgb * lightColor\" + i + \".a;\"); // a is intensity\n\n            src.push(\"computePBRLighting(light, geometry, material, reflectedLight);\");\n        }\n\n        src.push(\"vec3 outgoingLight = (lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedLight.diffuse) + (reflectedLight.specular);\");\n\n        src.push(\"vec4 fragColor;\");\n\n        if (this._withSAO) {\n            // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n            // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n            src.push(\"   float viewportWidth     = uSAOParams[0];\");\n            src.push(\"   float viewportHeight    = uSAOParams[1];\");\n            src.push(\"   float blendCutoff       = uSAOParams[2];\");\n            src.push(\"   float blendFactor       = uSAOParams[3];\");\n            src.push(\"   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\");\n            src.push(\"   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;\");\n            src.push(\"   fragColor               = vec4(outgoingLight.rgb * ambient, alpha);\");\n        } else {\n            src.push(\"   fragColor            = vec4(outgoingLight.rgb, alpha);\");\n        }\n\n        if (gammaOutput) {\n            src.push(\"fragColor = linearToGamma(fragColor, gammaFactor);\");\n        }\n\n        src.push(\"gl_FragColor = fragColor;\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesBatchingColorQualityRenderer};","import {TrianglesBatchingColorRenderer} from \"./renderers/TrianglesBatchingColorRenderer.js\";\nimport {TrianglesBatchingSilhouetteRenderer} from \"./renderers/TrianglesBatchingSilhouetteRenderer.js\";\nimport {TrianglesBatchingEdgesRenderer} from \"./renderers/TrianglesBatchingEdgesRenderer.js\";\nimport {TrianglesBatchingEdgesColorRenderer} from \"./renderers/TrianglesBatchingEdgesColorRenderer.js\";\nimport {TrianglesBatchingPickMeshRenderer} from \"./renderers/TrianglesBatchingPickMeshRenderer.js\";\nimport {TrianglesBatchingPickDepthRenderer} from \"./renderers/TrianglesBatchingPickDepthRenderer.js\";\nimport {TrianglesBatchingPickNormalsRenderer} from \"./renderers/TrianglesBatchingPickNormalsRenderer.js\";\nimport {TrianglesBatchingOcclusionRenderer} from \"./renderers/TrianglesBatchingOcclusionRenderer.js\";\nimport {TrianglesBatchingDepthRenderer} from \"./renderers/TrianglesBatchingDepthRenderer.js\";\nimport {TrianglesBatchingNormalsRenderer} from \"./renderers/TrianglesBatchingNormalsRenderer.js\";\nimport {TrianglesBatchingShadowRenderer} from \"./renderers/TrianglesBatchingShadowRenderer.js\";\nimport {TrianglesBatchingColorQualityRenderer} from \"./renderers/TrianglesBatchingColorQualityRenderer.js\";\n\n/**\n * @private\n */\nclass TrianglesBatchingRenderers {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    _compile() {\n        if (this._colorRenderer && (!this._colorRenderer.getValid())) {\n            this._colorRenderer.destroy();\n            this._colorRenderer = null;\n        }\n        if (this._colorRendererWithSAO && (!this._colorRendererWithSAO.getValid())) {\n            this._colorRendererWithSAO.destroy();\n            this._colorRendererWithSAO = null;\n        }\n        if (this._colorQualityRenderer && (!this._colorQualityRenderer.getValid())) {\n            this._colorQualityRenderer.destroy();\n            this._colorQualityRenderer = null;\n        }\n        if (this._colorQualityRendererWithSAO && (!this._colorQualityRendererWithSAO.getValid())) {\n            this._colorQualityRendererWithSAO.destroy();\n            this._colorQualityRendererWithSAO = null;\n        }\n        if (this._depthRenderer && (!this._depthRenderer.getValid())) {\n            this._depthRenderer.destroy();\n            this._depthRenderer = null;\n        }\n        if (this._normalsRenderer && (!this._normalsRenderer.getValid())) {\n            this._normalsRenderer.destroy();\n            this._normalsRenderer = null;\n        }\n        if (this._silhouetteRenderer && (!this._silhouetteRenderer.getValid())) {\n            this._silhouetteRenderer.destroy();\n            this._silhouetteRenderer = null;\n        }\n        if (this._edgesRenderer && (!this._edgesRenderer.getValid())) {\n            this._edgesRenderer.destroy();\n            this._edgesRenderer = null;\n        }\n        if (this._edgesColorRenderer && (!this._edgesColorRenderer.getValid())) {\n            this._edgesColorRenderer.destroy();\n            this._edgesColorRenderer = null;\n        }\n        if (this._pickMeshRenderer && (!this._pickMeshRenderer.getValid())) {\n            this._pickMeshRenderer.destroy();\n            this._pickMeshRenderer = null;\n        }\n        if (this._pickDepthRenderer && (!this._pickDepthRenderer.getValid())) {\n            this._pickDepthRenderer.destroy();\n            this._pickDepthRenderer = null;\n        }\n        if (this._pickNormalsRenderer && this._pickNormalsRenderer.getValid() === false) {\n            this._pickNormalsRenderer.destroy();\n            this._pickNormalsRenderer = null;\n        }\n        if (this._occlusionRenderer && this._occlusionRenderer.getValid() === false) {\n            this._occlusionRenderer.destroy();\n            this._occlusionRenderer = null;\n        }\n        if (this._shadowRenderer && (!this._shadowRenderer.getValid())) {\n            this._shadowRenderer.destroy();\n            this._shadowRenderer = null;\n        }\n    }\n\n    get colorRenderer() {\n        if (!this._colorRenderer) {\n            this._colorRenderer = new TrianglesBatchingColorRenderer(this._scene, false);\n        }\n        return this._colorRenderer;\n    }\n\n    get colorRendererWithSAO() {\n        if (!this._colorRendererWithSAO) {\n            this._colorRendererWithSAO = new TrianglesBatchingColorRenderer(this._scene, true);\n        }\n        return this._colorRendererWithSAO;\n    }\n\n    get colorQualityRenderer() {\n        if (!this._colorQualityRenderer) {\n            this._colorQualityRenderer = new TrianglesBatchingColorQualityRenderer(this._scene, false);\n        }\n        return this._colorQualityRenderer;\n    }\n\n    get colorQualityRendererWithSAO() {\n        if (!this._colorQualityRendererWithSAO) {\n            this._colorQualityRendererWithSAO = new TrianglesBatchingColorQualityRenderer(this._scene, true);\n        }\n        return this._colorQualityRendererWithSAO;\n    }\n\n    get silhouetteRenderer() {\n        if (!this._silhouetteRenderer) {\n            this._silhouetteRenderer = new TrianglesBatchingSilhouetteRenderer(this._scene);\n        }\n        return this._silhouetteRenderer;\n    }\n\n    get depthRenderer() {\n        if (!this._depthRenderer) {\n            this._depthRenderer = new TrianglesBatchingDepthRenderer(this._scene);\n        }\n        return this._depthRenderer;\n    }\n\n    get normalsRenderer() {\n        if (!this._normalsRenderer) {\n            this._normalsRenderer = new TrianglesBatchingNormalsRenderer(this._scene);\n        }\n        return this._normalsRenderer;\n    }\n\n    get edgesRenderer() {\n        if (!this._edgesRenderer) {\n            this._edgesRenderer = new TrianglesBatchingEdgesRenderer(this._scene);\n        }\n        return this._edgesRenderer;\n    }\n\n    get edgesColorRenderer() {\n        if (!this._edgesColorRenderer) {\n            this._edgesColorRenderer = new TrianglesBatchingEdgesColorRenderer(this._scene);\n        }\n        return this._edgesColorRenderer;\n    }\n\n    get pickMeshRenderer() {\n        if (!this._pickMeshRenderer) {\n            this._pickMeshRenderer = new TrianglesBatchingPickMeshRenderer(this._scene);\n        }\n        return this._pickMeshRenderer;\n    }\n\n    get pickNormalsRenderer() {\n        if (!this._pickNormalsRenderer) {\n            this._pickNormalsRenderer = new TrianglesBatchingPickNormalsRenderer(this._scene);\n        }\n        return this._pickNormalsRenderer;\n    }\n\n    get pickDepthRenderer() {\n        if (!this._pickDepthRenderer) {\n            this._pickDepthRenderer = new TrianglesBatchingPickDepthRenderer(this._scene);\n        }\n        return this._pickDepthRenderer;\n    }\n\n    get occlusionRenderer() {\n        if (!this._occlusionRenderer) {\n            this._occlusionRenderer = new TrianglesBatchingOcclusionRenderer(this._scene);\n        }\n        return this._occlusionRenderer;\n    }\n\n    get shadowRenderer() {\n        if (!this._shadowRenderer) {\n            this._shadowRenderer = new TrianglesBatchingShadowRenderer(this._scene);\n        }\n        return this._shadowRenderer;\n    }\n\n    _destroy() {\n        if (this._colorRenderer) {\n            this._colorRenderer.destroy();\n        }\n        if (this._colorRendererWithSAO) {\n            this._colorRendererWithSAO.destroy();\n        }\n        if (this._colorQualityRenderer) {\n            this._colorQualityRenderer.destroy();\n        }\n        if (this._colorQualityRendererWithSAO) {\n            this._colorQualityRendererWithSAO.destroy();\n        }\n        if (this._depthRenderer) {\n            this._depthRenderer.destroy();\n        }\n        if (this._normalsRenderer) {\n            this._normalsRenderer.destroy();\n        }\n        if (this._silhouetteRenderer) {\n            this._silhouetteRenderer.destroy();\n        }\n        if (this._edgesRenderer) {\n            this._edgesRenderer.destroy();\n        }\n        if (this._edgesColorRenderer) {\n            this._edgesColorRenderer.destroy();\n        }\n        if (this._pickMeshRenderer) {\n            this._pickMeshRenderer.destroy();\n        }\n        if (this._pickDepthRenderer) {\n            this._pickDepthRenderer.destroy();\n        }\n        if (this._pickNormalsRenderer) {\n            this._pickNormalsRenderer.destroy();\n        }\n        if (this._occlusionRenderer) {\n            this._occlusionRenderer.destroy();\n        }\n        if (this._shadowRenderer) {\n            this._shadowRenderer.destroy();\n        }\n    }\n}\n\nconst cachdRenderers = {};\n\nfunction getBatchingRenderers(scene) {\n    const sceneId = scene.id;\n    let batchingRenderers = cachdRenderers[sceneId];\n    if (!batchingRenderers) {\n        batchingRenderers = new TrianglesBatchingRenderers(scene);\n        cachdRenderers[sceneId] = batchingRenderers;\n        batchingRenderers._compile();\n        scene.on(\"compile\", () => {\n            batchingRenderers._compile();\n        });\n        scene.on(\"destroyed\", () => {\n            delete cachdRenderers[sceneId];\n            batchingRenderers._destroy();\n        });\n    }\n    return batchingRenderers;\n}\n\nexport {getBatchingRenderers};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\n\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\n/**\n * @private\n */\nclass TrianglesBatchingBuffer {\n\n    constructor(maxGeometryBatchSize = 5000000) {\n\n        if (bigIndicesSupported) {\n            if (maxGeometryBatchSize > 5000000) {\n                maxGeometryBatchSize = 5000000;\n            }\n        } else {\n            if (maxGeometryBatchSize > 65530) {\n                maxGeometryBatchSize = 65530;\n            }\n        }\n\n        this.maxVerts = maxGeometryBatchSize;\n        this.maxIndices = maxGeometryBatchSize * 3; // Rough rule-of-thumb\n        this.positions = [];\n        this.colors = [];\n        this.metallicRoughness = [];\n        this.normals = [];\n        this.pickColors = [];\n        this.flags = [];\n        this.flags2 = [];\n        this.offsets = [];\n        this.indices = [];\n        this.edgeIndices = [];\n    }\n}\n\nexport {TrianglesBatchingBuffer};","import {math} from \"../../math/math.js\";\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\nconst translate = math.mat4();\nconst scale = math.mat4();\n\nfunction quantizePositions(positions, aabb, positionsDecodeMatrix) { // http://cg.postech.ac.kr/research/mesh_comp_mobile/mesh_comp_mobile_conference.pdf\n    const lenPositions = positions.length;\n    const quantizedPositions = new Uint16Array(lenPositions);\n    const xmin = aabb[0];\n    const ymin = aabb[1];\n    const zmin = aabb[2];\n    const xwid = aabb[3] - xmin;\n    const ywid = aabb[4] - ymin;\n    const zwid = aabb[5] - zmin;\n    // const maxInt = 2000000;\n    const maxInt = 65525;\n    const xMultiplier = maxInt / xwid;\n    const yMultiplier = maxInt / ywid;\n    const zMultiplier = maxInt / zwid;\n    for (let i = 0; i < lenPositions; i += 3) {\n        quantizedPositions[i + 0] = Math.floor((positions[i + 0] - xmin) * xMultiplier);\n        quantizedPositions[i + 1] = Math.floor((positions[i + 1] - ymin) * yMultiplier);\n        quantizedPositions[i + 2] = Math.floor((positions[i + 2] - zmin) * zMultiplier);\n    }\n    math.identityMat4(translate);\n    math.translationMat4v(aabb, translate);\n    math.identityMat4(scale);\n    math.scalingMat4v([xwid / maxInt, ywid / maxInt, zwid / maxInt], scale);\n    math.mulMat4(translate, scale, positionsDecodeMatrix);\n    return quantizedPositions;\n}\n\nfunction transformAndOctEncodeNormals(worldNormalMatrix, normals, lenNormals, compressedNormals, lenCompressedNormals) {\n    // http://jcgt.org/published/0003/02/01/\n    let oct, dec, best, currentCos, bestCos;\n    let i, ei;\n    let localNormal = new Float32Array([0, 0, 0, 0]);\n    let worldNormal = new Float32Array([0, 0, 0, 0]);\n    for (i = 0; i < lenNormals; i += 3) {\n        localNormal[0] = normals[i];\n        localNormal[1] = normals[i + 1];\n        localNormal[2] = normals[i + 2];\n\n        math.transformVec3(worldNormalMatrix, localNormal, worldNormal);\n        math.normalizeVec3(worldNormal, worldNormal);\n\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeVec3(worldNormal, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(worldNormal, dec);\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeVec3(worldNormal, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(worldNormal, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[lenCompressedNormals + i + 0] = best[0];\n        compressedNormals[lenCompressedNormals + i + 1] = best[1];\n        compressedNormals[lenCompressedNormals + i + 2] = 0.0; // Unused\n    }\n    lenCompressedNormals += lenNormals;\n    return lenCompressedNormals;\n}\n\n\nfunction octEncodeNormals(normals) { // http://jcgt.org/published/0003/02/01/\n    const lenNormals = normals.length;\n    const compressedNormals = new Int8Array(lenNormals)\n    let oct, dec, best, currentCos, bestCos;\n    for (let i = 0; i < lenNormals; i += 3) {\n        // Test various combinations of ceil and floor to minimize rounding errors\n        best = oct = octEncodeNormal(normals, i, \"floor\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = bestCos = dot(normals, i, dec);\n        oct = octEncodeNormal(normals, i, \"ceil\", \"floor\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"floor\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        oct = octEncodeNormal(normals, i, \"ceil\", \"ceil\");\n        dec = octDecodeVec2(oct);\n        currentCos = dot(normals, i, dec);\n        if (currentCos > bestCos) {\n            best = oct;\n            bestCos = currentCos;\n        }\n        compressedNormals[i + 0] = best[0];\n        compressedNormals[i + 1] = best[1];\n        compressedNormals[i + 2] = 0.0; // Unused\n    }\n    return new Int8Array(compressedNormals)\n}\n\nfunction octEncodeVec3(p, xfunc, yfunc) { // Oct-encode single normal vector in 2 bytes\n    let x = p[0] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    let y = p[1] / (Math.abs(p[0]) + Math.abs(p[1]) + Math.abs(p[2]));\n    if (p[2] < 0) {\n        let tempx = x;\n        let tempy = y;\n        tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    return new Int8Array([\n        Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)),\n        Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))\n    ]);\n}\n\n/**\n * @private\n */\nfunction octEncodeNormal(array, i, xfunc, yfunc) { // Oct-encode single normal vector in 2 bytes\n    let x = array[i] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    let y = array[i + 1] / (Math.abs(array[i]) + Math.abs(array[i + 1]) + Math.abs(array[i + 2]));\n    if (array[i + 2] < 0) {\n        let tempx = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        let tempy = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n        x = tempx;\n        y = tempy;\n    }\n    return new Int8Array([\n        Math[xfunc](x * 127.5 + (x < 0 ? -1 : 0)),\n        Math[yfunc](y * 127.5 + (y < 0 ? -1 : 0))\n    ]);\n}\n\nfunction octDecodeVec2(oct) { // Decode an oct-encoded normal\n    let x = oct[0];\n    let y = oct[1];\n    x /= x < 0 ? 127 : 128;\n    y /= y < 0 ? 127 : 128;\n    const z = 1 - Math.abs(x) - Math.abs(y);\n    if (z < 0) {\n        x = (1 - Math.abs(y)) * (x >= 0 ? 1 : -1);\n        y = (1 - Math.abs(x)) * (y >= 0 ? 1 : -1);\n    }\n    const length = Math.sqrt(x * x + y * y + z * z);\n    return [\n        x / length,\n        y / length,\n        z / length\n    ];\n}\n\nfunction dot(p, vec3) { // Dot product of a normal in an array against a candidate decoding\n    return p[0] * vec3[0] + p[1] * vec3[1] + p[2] * vec3[2];\n}\n\nexport {\n    quantizePositions,\n    octEncodeNormals,\n    transformAndOctEncodeNormals,\n    octEncodeVec3,\n    octDecodeVec2\n\n};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\nimport {ENTITY_FLAGS} from '../../ENTITY_FLAGS.js';\nimport {RENDER_PASSES} from '../../RENDER_PASSES.js';\n\nimport {math} from \"../../../../math/math.js\";\nimport {RenderState} from \"../../../../webgl/RenderState.js\";\nimport {ArrayBuf} from \"../../../../webgl/ArrayBuf.js\";\nimport {geometryCompressionUtils} from \"../../../../math/geometryCompressionUtils.js\";\nimport {getBatchingRenderers} from \"./TrianglesBatchingRenderers.js\";\nimport {TrianglesBatchingBuffer} from \"./TrianglesBatchingBuffer.js\";\nimport {quantizePositions, transformAndOctEncodeNormals} from \"../../compression.js\";\n\nconst tempMat4 = math.mat4();\nconst tempMat4b = math.mat4();\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\nconst tempOBB3 = math.OBB3();\n\n/**\n * @private\n */\nclass TrianglesBatchingLayer {\n\n    /**\n     * @param model\n     * @param cfg\n     * @param cfg.layerIndex\n     * @param cfg.positionsDecodeMatrix\n     * @param cfg.maxGeometryBatchSize\n     * @param cfg.rtcCenter\n     * @param cfg.scratchMemory\n     * @param cfg.solid\n     */\n    constructor(model, cfg) {\n\n        /**\n         * State sorting key.\n         * @type {string}\n         */\n        this.sortId = \"TrianglesBatchingLayer\" + cfg.solid ? \"-solid\" : \"-surface\";\n\n        /**\n         * Index of this TrianglesBatchingLayer in {@link PerformanceModel#_layerList}.\n         * @type {Number}\n         */\n        this.layerIndex = cfg.layerIndex;\n\n        this._batchingRenderers = getBatchingRenderers(model.scene);\n        this.model = model;\n        this._buffer = new TrianglesBatchingBuffer(cfg.maxGeometryBatchSize);\n        this._scratchMemory = cfg.scratchMemory;\n\n        this._state = new RenderState({\n            positionsBuf: null,\n            offsetsBuf: null,\n            normalsBuf: null,\n            colorsBuf: null,\n            metallicRoughnessBuf: null,\n            flagsBuf: null,\n            flags2Buf: null,\n            indicesBuf: null,\n            edgeIndicesBuf: null,\n            positionsDecodeMatrix: math.mat4(),\n            rtcCenter: null\n        });\n\n        // These counts are used to avoid unnecessary render passes\n        this._numPortions = 0;\n        this._numVisibleLayerPortions = 0;\n        this._numTransparentLayerPortions = 0;\n        this._numXRayedLayerPortions = 0;\n        this._numSelectedLayerPortions = 0;\n        this._numHighlightedLayerPortions = 0;\n        this._numClippableLayerPortions = 0;\n        this._numEdgesLayerPortions = 0;\n        this._numPickableLayerPortions = 0;\n        this._numCulledLayerPortions = 0;\n\n        this._modelAABB = math.collapseAABB3(); // Model-space AABB\n        this._portions = [];\n\n        this._finalized = false;\n        this._positionsDecodeMatrix = cfg.positionsDecodeMatrix;\n        this._preCompressed = (!!this._positionsDecodeMatrix);\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n        }\n\n        /**\n         * The axis-aligned World-space boundary of this TrianglesBatchingLayer's positions.\n         * @type {*|Float64Array}\n         */\n        this.aabb = math.collapseAABB3();\n\n        /**\n         * When true, this layer contains solid triangle meshes, otherwise this layer contains surface triangle meshes\n         * @type {boolean}\n         */\n        this.solid = !!cfg.solid;\n    }\n\n    /**\n     * Tests if there is room for another portion in this TrianglesBatchingLayer.\n     *\n     * @param lenPositions Number of positions we'd like to create in the portion.\n     * @param lenIndices Number of indices we'd like to create in this portion.\n     * @returns {boolean} True if OK to create another portion.\n     */\n    canCreatePortion(lenPositions, lenIndices) {\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n        return ((this._buffer.positions.length + lenPositions) < (this._buffer.maxVerts * 3) && (this._buffer.indices.length + lenIndices) < (this._buffer.maxIndices));\n    }\n\n    /**\n     * Creates a new portion within this TrianglesBatchingLayer, returns the new portion ID.\n     *\n     * Gives the portion the specified geometry, color and matrix.\n     *\n     * @param cfg.positions Flat float Local-space positions array.\n     * @param [cfg.normals] Flat float normals array.\n     * @param [cfg.colors] Flat float colors array.\n     * @param cfg.indices  Flat int indices array.\n     * @param [cfg.edgeIndices] Flat int edges indices array.\n     * @param cfg.color Quantized RGB color [0..255,0..255,0..255,0..255]\n     * @param cfg.metallic Metalness factor [0..255]\n     * @param cfg.roughness Roughness factor [0..255]\n     * @param cfg.opacity Opacity [0..255]\n     * @param [cfg.meshMatrix] Flat float 4x4 matrix\n     * @param [cfg.worldMatrix] Flat float 4x4 matrix\n     * @param cfg.worldAABB Flat float AABB World-space AABB\n     * @param cfg.pickColor Quantized pick color\n     * @returns {number} Portion ID\n     */\n    createPortion(cfg) {\n\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n\n        const positions = cfg.positions;\n        const normals = cfg.normals;\n        const indices = cfg.indices;\n        const edgeIndices = cfg.edgeIndices;\n        const color = cfg.color;\n        const metallic = cfg.metallic;\n        const roughness = cfg.roughness;\n        const colors = cfg.colors;\n        const opacity = cfg.opacity;\n        const meshMatrix = cfg.meshMatrix;\n        const worldMatrix = cfg.worldMatrix;\n        const worldAABB = cfg.worldAABB;\n        const pickColor = cfg.pickColor;\n\n        const buffer = this._buffer;\n        const positionsIndex = buffer.positions.length;\n        const vertsIndex = positionsIndex / 3;\n        const numVerts = positions.length / 3;\n        const lenPositions = positions.length;\n\n        if (this._preCompressed) {\n\n            for (let i = 0, len = positions.length; i < len; i++) {\n                buffer.positions.push(positions[i]);\n            }\n\n            const bounds = geometryCompressionUtils.getPositionsBounds(positions);\n\n            const min = geometryCompressionUtils.decompressPosition(bounds.min, this._positionsDecodeMatrix, []);\n            const max = geometryCompressionUtils.decompressPosition(bounds.max, this._positionsDecodeMatrix, []);\n\n            worldAABB[0] = min[0];\n            worldAABB[1] = min[1];\n            worldAABB[2] = min[2];\n            worldAABB[3] = max[0];\n            worldAABB[4] = max[1];\n            worldAABB[5] = max[2];\n\n            if (worldMatrix) {\n                math.AABB3ToOBB3(worldAABB, tempOBB3);\n                math.transformOBB3(worldMatrix, tempOBB3);\n                math.OBB3ToAABB3(tempOBB3, worldAABB);\n            }\n\n        } else {\n\n            const positionsBase = buffer.positions.length;\n\n            for (let i = 0, len = positions.length; i < len; i++) {\n                buffer.positions.push(positions[i]);\n            }\n\n            if (meshMatrix) {\n\n                for (let i = positionsBase, len = positionsBase + lenPositions; i < len; i += 3) {\n\n                    tempVec4a[0] = buffer.positions[i + 0];\n                    tempVec4a[1] = buffer.positions[i + 1];\n                    tempVec4a[2] = buffer.positions[i + 2];\n\n                    math.transformPoint4(meshMatrix, tempVec4a, tempVec4b);\n\n                    buffer.positions[i + 0] = tempVec4b[0];\n                    buffer.positions[i + 1] = tempVec4b[1];\n                    buffer.positions[i + 2] = tempVec4b[2];\n\n                    math.expandAABB3Point3(this._modelAABB, tempVec4b);\n\n                    if (worldMatrix) {\n                        math.transformPoint4(worldMatrix, tempVec4b, tempVec4c);\n                        math.expandAABB3Point3(worldAABB, tempVec4c);\n                    } else {\n                        math.expandAABB3Point3(worldAABB, tempVec4b);\n                    }\n                }\n\n            } else {\n\n                for (let i = positionsBase, len = positionsBase + lenPositions; i < len; i += 3) {\n\n                    tempVec4a[0] = buffer.positions[i + 0];\n                    tempVec4a[1] = buffer.positions[i + 1];\n                    tempVec4a[2] = buffer.positions[i + 2];\n\n                    math.expandAABB3Point3(this._modelAABB, tempVec4a);\n\n                    if (worldMatrix) {\n                        math.transformPoint4(worldMatrix, tempVec4a, tempVec4b);\n                        math.expandAABB3Point3(worldAABB, tempVec4b);\n                    } else {\n                        math.expandAABB3Point3(worldAABB, tempVec4a);\n                    }\n                }\n            }\n        }\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            worldAABB[0] += rtcCenter[0];\n            worldAABB[1] += rtcCenter[1];\n            worldAABB[2] += rtcCenter[2];\n            worldAABB[3] += rtcCenter[0];\n            worldAABB[4] += rtcCenter[1];\n            worldAABB[5] += rtcCenter[2];\n        }\n\n        math.expandAABB3(this.aabb, worldAABB);\n\n        if (normals) {\n\n            if (this._preCompressed) {\n\n                for (let i = 0, len = normals.length; i < len; i++) {\n                    buffer.normals.push(normals[i]);\n                }\n\n            } else {\n\n                const worldNormalMatrix = tempMat4;\n\n                if (meshMatrix) {\n                    math.inverseMat4(math.transposeMat4(meshMatrix, tempMat4b), worldNormalMatrix); // Note: order of inverse and transpose doesn't matter\n\n                } else {\n                    math.identityMat4(worldNormalMatrix, worldNormalMatrix);\n                }\n\n                transformAndOctEncodeNormals(worldNormalMatrix, normals, normals.length, buffer.normals, buffer.normals.length);\n            }\n        }\n\n        if (colors) {\n\n            for (let i = 0, len = colors.length; i < len; i += 3) {\n                buffer.colors.push(colors[i] * 255);\n                buffer.colors.push(colors[i + 1] * 255);\n                buffer.colors.push(colors[i + 2] * 255);\n                buffer.colors.push(255);\n            }\n\n        } else if (color) {\n\n            const r = color[0]; // Color is pre-quantized by PerformanceModel\n            const g = color[1];\n            const b = color[2];\n            const a = opacity;\n\n            const metallicValue = (metallic !== null && metallic !== undefined) ? metallic : 0;\n            const roughnessValue = (roughness !== null && roughness !== undefined) ? roughness : 255;\n\n            for (let i = 0; i < numVerts; i++) {\n\n                buffer.colors.push(r);\n                buffer.colors.push(g);\n                buffer.colors.push(b);\n                buffer.colors.push(a);\n\n                buffer.metallicRoughness.push(metallicValue);\n                buffer.metallicRoughness.push(roughnessValue);\n            }\n        }\n\n        if (indices) {\n            for (let i = 0, len = indices.length; i < len; i++) {\n                buffer.indices.push(indices[i] + vertsIndex);\n            }\n        }\n\n        if (edgeIndices) {\n            for (let i = 0, len = edgeIndices.length; i < len; i++) {\n                buffer.edgeIndices.push(edgeIndices[i] + vertsIndex);\n            }\n        }\n\n        {\n            const pickColorsBase = buffer.pickColors.length;\n            const lenPickColors = numVerts * 4;\n            for (let i = pickColorsBase, len = pickColorsBase + lenPickColors; i < len; i += 4) {\n                buffer.pickColors.push(pickColor[0]);\n                buffer.pickColors.push(pickColor[1]);\n                buffer.pickColors.push(pickColor[2]);\n                buffer.pickColors.push(pickColor[3]);\n            }\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            for (let i = 0; i < numVerts; i++) {\n                buffer.offsets.push(0);\n                buffer.offsets.push(0);\n                buffer.offsets.push(0);\n            }\n        }\n\n        const portionId = this._portions.length / 2;\n\n        this._portions.push(vertsIndex);\n        this._portions.push(numVerts);\n\n        this._numPortions++;\n        this.model.numPortions++;\n\n        return portionId;\n    }\n\n    /**\n     * Builds batch VBOs from appended geometries.\n     * No more portions can then be created.\n     */\n    finalize() {\n\n        if (this._finalized) {\n            this.model.error(\"Already finalized\");\n            return;\n        }\n\n        const state = this._state;\n        const gl = this.model.scene.canvas.gl;\n        const buffer = this._buffer;\n\n        if (buffer.positions.length > 0) {\n            if (this._preCompressed) {\n                state.positionsDecodeMatrix = this._positionsDecodeMatrix;\n                const positions = new Uint16Array(buffer.positions);\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, buffer.positions.length, 3, gl.STATIC_DRAW);\n            } else {\n                const quantizedPositions = quantizePositions(buffer.positions, this._modelAABB, state.positionsDecodeMatrix); // BOTTLENECK\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, quantizedPositions, buffer.positions.length, 3, gl.STATIC_DRAW);\n            }\n        }\n\n        if (buffer.normals.length > 0) {\n            const normals = new Int8Array(buffer.normals);\n            let normalized = true; // For oct encoded UInts\n            //let normalized = false; // For scaled\n            state.normalsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, normals, buffer.normals.length, 3, gl.STATIC_DRAW, normalized);\n        }\n\n        if (buffer.colors.length > 0) {\n            const colors = new Uint8Array(buffer.colors);\n            let normalized = false;\n            state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, colors, buffer.colors.length, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n\n        if (buffer.metallicRoughness.length > 0) {\n            const metallicRoughness = new Uint8Array(buffer.metallicRoughness);\n            let normalized = false;\n            state.metallicRoughnessBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, metallicRoughness, buffer.metallicRoughness.length, 2, gl.STATIC_DRAW, normalized);\n        }\n\n        if (buffer.colors.length > 0) { // Because we build flags arrays here, get their length from the colors array\n            const flagsLength = buffer.colors.length;\n            const flags = new Uint8Array(flagsLength);\n            const flags2 = new Uint8Array(flagsLength);\n            let notNormalized = false;\n            let normalized = true;\n            state.flagsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, flags, flags.length, 4, gl.DYNAMIC_DRAW, notNormalized);\n            state.flags2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, flags2, flags2.length, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n\n        if (buffer.pickColors.length > 0) {\n            const pickColors = new Uint8Array(buffer.pickColors);\n            let normalized = false;\n            state.pickColorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, pickColors, buffer.pickColors.length, 4, gl.STATIC_DRAW, normalized);\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            if (buffer.offsets.length > 0) {\n                const offsets = new Float32Array(buffer.offsets);\n                state.offsetsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, offsets, buffer.offsets.length, 3, gl.DYNAMIC_DRAW);\n            }\n        }\n\n        const bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\n        if (buffer.indices.length > 0) {\n            const indices = bigIndicesSupported ? new Uint32Array(buffer.indices) : new Uint16Array(buffer.indices);\n            state.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, indices, buffer.indices.length, 1, gl.STATIC_DRAW);\n        }\n        if (buffer.edgeIndices.length > 0) {\n            const edgeIndices = bigIndicesSupported ? new Uint32Array(buffer.edgeIndices) : new Uint16Array(buffer.edgeIndices);\n            state.edgeIndicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, edgeIndices, buffer.edgeIndices.length, 1, gl.STATIC_DRAW);\n        }\n\n        this._buffer = null;\n        this._finalized = true;\n    }\n\n    initFlags(portionId, flags, meshTransparent) {\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        }\n        if (meshTransparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n        this._setFlags2(portionId, flags);\n    }\n\n    setVisible(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        } else {\n            this._numVisibleLayerPortions--;\n            this.model.numVisibleLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setHighlighted(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        } else {\n            this._numHighlightedLayerPortions--;\n            this.model.numHighlightedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setXRayed(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        } else {\n            this._numXRayedLayerPortions--;\n            this.model.numXRayedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setSelected(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        } else {\n            this._numSelectedLayerPortions--;\n            this.model.numSelectedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setEdges(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        } else {\n            this._numEdgesLayerPortions--;\n            this.model.numEdgesLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setClippable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        } else {\n            this._numClippableLayerPortions--;\n            this.model.numClippableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags);\n    }\n\n    setCulled(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        } else {\n            this._numCulledLayerPortions--;\n            this.model.numCulledLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setCollidable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n    }\n\n    setPickable(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        } else {\n            this._numPickableLayerPortions--;\n            this.model.numPickableLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setColor(portionId, color) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstColor = vertexBase * 4;\n        const lenColor = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenColor);\n        const r = color[0];\n        const g = color[1];\n        const b = color[2];\n        const a = color[3];\n        for (let i = 0; i < lenColor; i += 4) {\n            tempArray[i + 0] = r;\n            tempArray[i + 1] = g;\n            tempArray[i + 2] = b;\n            tempArray[i + 3] = a;\n        }\n        this._state.colorsBuf.setData(tempArray, firstColor, lenColor);\n    }\n\n    setTransparent(portionId, flags, transparent) {\n        if (transparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        } else {\n            this._numTransparentLayerPortions--;\n            this.model.numTransparentLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    _setFlags(portionId, flags, transparent) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstFlag = vertexBase * 4;\n        const lenFlags = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenFlags);\n\n        const visible = !!(flags & ENTITY_FLAGS.VISIBLE);\n        const xrayed = !!(flags & ENTITY_FLAGS.XRAYED);\n        const highlighted = !!(flags & ENTITY_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & ENTITY_FLAGS.SELECTED);\n        const edges = !!(flags & ENTITY_FLAGS.EDGES);\n        const pickable = !!(flags & ENTITY_FLAGS.PICKABLE);\n        const culled = !!(flags & ENTITY_FLAGS.CULLED);\n\n        // Color\n\n        let f0;\n        if (!visible || culled || xrayed) { // Highlight & select are layered on top of color - not mutually exclusive\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (transparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n\n        // Silhouette\n\n        let f1;\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Edges\n\n        let f2 = 0;\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (transparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Pick\n\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED;\n\n        for (let i = 0; i < lenFlags; i += 4) {\n            tempArray[i + 0] = f0; // x - normal fill\n            tempArray[i + 1] = f1; // y - emphasis fill\n            tempArray[i + 2] = f2; // z - edges\n            tempArray[i + 3] = f3; // w - pick\n        }\n\n        this._state.flagsBuf.setData(tempArray, firstFlag, lenFlags);\n    }\n\n    _setFlags2(portionId, flags) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstFlag = vertexBase * 4;\n        const lenFlags = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenFlags);\n\n        const clippable = !!(flags & ENTITY_FLAGS.CLIPPABLE) ? 255 : 0;\n\n        for (let i = 0; i < lenFlags; i += 4) {\n            tempArray[i + 0] = clippable;\n        }\n\n        this._state.flags2Buf.setData(tempArray, firstFlag, lenFlags);\n    }\n\n    setOffset(portionId, offset) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (!this.model.scene.entityOffsetsEnabled) {\n            this.model.error(\"Entity#offset not enabled for this Viewer\"); // See Viewer entityOffsetsEnabled\n            return;\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstOffset = vertexBase * 3;\n        const lenOffsets = numVerts * 3;\n        const tempArray = this._scratchMemory.getFloat32Array(lenOffsets);\n        const x = offset[0];\n        const y = offset[1];\n        const z = offset[2];\n        for (let i = 0; i < lenOffsets; i += 3) {\n            tempArray[i + 0] = x;\n            tempArray[i + 1] = y;\n            tempArray[i + 2] = z;\n        }\n        this._state.offsetsBuf.setData(tempArray, firstOffset, lenOffsets);\n    }\n\n    // ---------------------- COLOR RENDERING -----------------------------------\n\n    drawColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (frameCtx.withSAO && this.model.saoEnabled) {\n            if (frameCtx.pbrEnabled && this.model.pbrEnabled) {\n                if (this._batchingRenderers.colorQualityRendererWithSAO) {\n                    this._batchingRenderers.colorQualityRendererWithSAO.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            } else {\n                if (this._batchingRenderers.colorRendererWithSAO) {\n                    this._batchingRenderers.colorRendererWithSAO.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            }\n        } else {\n            if (frameCtx.pbrEnabled && this.model.pbrEnabled) {\n                if (this._batchingRenderers.colorQualityRenderer) {\n                    this._batchingRenderers.colorQualityRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            } else {\n                if (this._batchingRenderers.colorRenderer) {\n                    this._batchingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            }\n        }\n    }\n\n    _updateBackfaceCull(renderFlags, frameCtx) {\n        const backfaces = this.model.backfaces || (!this.solid) || renderFlags.sectioned;\n        if (frameCtx.backfaces !== backfaces) {\n            const gl = frameCtx.gl;\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n    }\n\n    drawColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === 0 || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (frameCtx.pbrEnabled && this.model.pbrEnabled) {\n            if (this._batchingRenderers.colorQualityRenderer) {\n                this._batchingRenderers.colorQualityRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n        } else {\n            if (this._batchingRenderers.colorRenderer) {\n                this._batchingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n        }\n    }\n\n    // ---------------------- RENDERING SAO POST EFFECT TARGETS --------------\n\n    drawDepth(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.depthRenderer) {\n            this._batchingRenderers.depthRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE); // Assume whatever post-effect uses depth (eg SAO) does not apply to transparent objects\n        }\n    }\n\n    drawNormals(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.normalsRenderer) {\n            this._batchingRenderers.normalsRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);  // Assume whatever post-effect uses normals (eg SAO) does not apply to transparent objects\n        }\n    }\n\n    // ---------------------- SILHOUETTE RENDERING -----------------------------------\n\n    drawSilhouetteXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.silhouetteRenderer) {\n            this._batchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.silhouetteRenderer) {\n            this._batchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n        }\n    }\n\n    drawSilhouetteSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.silhouetteRenderer) {\n            this._batchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_SELECTED);\n        }\n    }\n\n    // ---------------------- EDGES RENDERING -----------------------------------\n\n    drawEdgesColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numEdgesLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.edgesColorRenderer) {\n            this._batchingRenderers.edgesColorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_COLOR_OPAQUE);\n        }\n    }\n\n    drawEdgesColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numEdgesLayerPortions === 0 || this._numTransparentLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.edgesColorRenderer) {\n            this._batchingRenderers.edgesColorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_COLOR_TRANSPARENT);\n        }\n    }\n\n    drawEdgesHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.edgesRenderer) {\n            this._batchingRenderers.edgesRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_HIGHLIGHTED);\n        }\n    }\n\n    drawEdgesSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.edgesRenderer) {\n            this._batchingRenderers.edgesRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_SELECTED);\n        }\n    }\n\n    drawEdgesXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.edgesRenderer) {\n            this._batchingRenderers.edgesRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_XRAYED);\n        }\n    }\n\n    // ---------------------- OCCLUSION CULL RENDERING -----------------------------------\n\n    drawOcclusion(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.occlusionRenderer) {\n            this._batchingRenderers.occlusionRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    // ---------------------- SHADOW BUFFER RENDERING -----------------------------------\n\n    drawShadow(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.shadowRenderer) {\n            this._batchingRenderers.shadowRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    //---- PICKING ----------------------------------------------------------------------------------------------------\n\n    drawPickMesh(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.pickMeshRenderer) {\n            this._batchingRenderers.pickMeshRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickDepths(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.pickDepthRenderer) {\n            this._batchingRenderers.pickDepthRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickNormals(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._batchingRenderers.pickNormalsRenderer) {\n            this._batchingRenderers.pickNormalsRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    destroy() {\n        const state = this._state;\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n            state.positionsBuf = null;\n        }\n        if (state.offsetsBuf) {\n            state.offsetsBuf.destroy();\n            state.offsetsBuf = null;\n        }\n        if (state.normalsBuf) {\n            state.normalsBuf.destroy();\n            state.normalsBuf = null;\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n            state.colorsBuf = null;\n        }\n        if (state.metallicRoughnessBuf) {\n            state.metallicRoughnessBuf.destroy();\n            state.metallicRoughnessBuf = null;\n        }\n        if (state.flagsBuf) {\n            state.flagsBuf.destroy();\n            state.flagsBuf = null;\n        }\n        if (state.flags2Buf) {\n            state.flags2Buf.destroy();\n            state.flags2Buf = null;\n        }\n        if (state.pickColorsBuf) {\n            state.pickColorsBuf.destroy();\n            state.pickColorsBuf = null;\n        }\n        if (state.indicesBuf) {\n            state.indicesBuf.destroy();\n            state.indicessBuf = null;\n        }\n        if (state.edgeIndicesBuf) {\n            state.edgeIndicesBuf.destroy();\n            state.edgeIndicessBuf = null;\n        }\n        state.destroy();\n    }\n}\n\nexport {TrianglesBatchingLayer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec4 = math.vec4();\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingColorRenderer {\n\n    constructor(scene, withSAO) {\n        this._scene = scene;\n        this._withSAO = withSAO;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        const scene = this._scene;\n        return [scene._lightsState.getHash(), scene._sectionPlanesState.getHash(), (this._withSAO ? \"sao\" : \"nosao\")].join(\";\");\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aModelNormalMatrixCol0.bindArrayBuffer(state.modelNormalMatrixCol0Buf);\n        this._aModelNormalMatrixCol1.bindArrayBuffer(state.modelNormalMatrixCol1Buf);\n        this._aModelNormalMatrixCol2.bindArrayBuffer(state.modelNormalMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aNormal.bindArrayBuffer(state.normalsBuf);\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const lightsState = scene._lightsState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uLightAmbient = program.getLocation(\"lightAmbient\");\n        this._uLightColor = [];\n        this._uLightDir = [];\n        this._uLightPos = [];\n        this._uLightAttenuation = [];\n\n        const lights = lightsState.lights;\n        let light;\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n            light = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = null;\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    break;\n                case \"point\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = null;\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n                case \"spot\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n            }\n        }\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aOffset = program.getAttribute(\"offset\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._aModelNormalMatrixCol0 = program.getAttribute(\"modelNormalMatrixCol0\");\n        this._aModelNormalMatrixCol1 = program.getAttribute(\"modelNormalMatrixCol1\");\n        this._aModelNormalMatrixCol2 = program.getAttribute(\"modelNormalMatrixCol2\");\n\n        this._uOcclusionTexture = \"uOcclusionTexture\";\n        this._uSAOParams = program.getLocation(\"uSAOParams\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const lightsState = scene._lightsState;\n        const lights = lightsState.lights;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (this._uLightAmbient) {\n            gl.uniform4fv(this._uLightAmbient, scene._lightsState.getAmbientColorAndIntensity());\n        }\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light = lights[i];\n            if (this._uLightColor[i]) {\n                gl.uniform4f(this._uLightColor[i], light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (this._uLightPos[i]) {\n                gl.uniform3fv(this._uLightPos[i], light.pos);\n                if (this._uLightAttenuation[i]) {\n                    gl.uniform1f(this._uLightAttenuation[i], light.attenuation);\n                }\n            }\n            if (this._uLightDir[i]) {\n                gl.uniform3fv(this._uLightDir[i], light.dir);\n            }\n        }\n\n        if (this._withSAO) {\n            const sao = scene.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                gl.uniform4fv(this._uSAOParams, tempVec4);\n                this._program.bindTexture(this._uOcclusionTexture, frameCtx.occlusionTexture, 0);\n            }\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const lightsState = scene._lightsState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        let i;\n        let len;\n        let light;\n        const src = [];\n\n        src.push(\"// Instancing geometry drawing vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec2 normal;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"attribute vec4 modelNormalMatrixCol0;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol1;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 worldNormalMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"uniform vec4 lightAmbient;\");\n\n        for (i = 0, len = lightsState.lights.length; i < len; i++) {\n            light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE | COLOR_TRANSPARENT\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);\");\n        src.push(\"vec3 viewNormal = normalize(vec4(viewNormalMatrix * worldNormal).xyz);\");\n\n        src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n        src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n\n        src.push(\"float lambertian = 1.0;\");\n        for (i = 0, len = lightsState.lights.length; i < len; i++) {\n            light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = -normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = -normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n\n        src.push(\"vec3 rgb = (vec3(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0));\");\n        src.push(\"vColor =  vec4((lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedColor * rgb), float(color.a) / 255.0);\");\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        let i;\n        let len;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"uniform float logDepthBufFC;\");\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (this._withSAO) {\n            src.push(\"uniform sampler2D uOcclusionTexture;\");\n            src.push(\"uniform vec4      uSAOParams;\");\n\n            src.push(\"const float       packUpscale = 256. / 255.;\");\n            src.push(\"const float       unpackDownScale = 255. / 256.;\");\n            src.push(\"const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n            src.push(\"const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );\");\n\n            src.push(\"float unpackRGBToFloat( const in vec4 v ) {\");\n            src.push(\"    return dot( v, unPackFactors );\");\n            src.push(\"}\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { \");\n            src.push(\"      discard;\")\n            src.push(\"  }\");\n            src.push(\"}\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n\n        // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n        // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n\n        if (this._withSAO) {\n            src.push(\"   float viewportWidth     = uSAOParams[0];\");\n            src.push(\"   float viewportHeight    = uSAOParams[1];\");\n            src.push(\"   float blendCutoff       = uSAOParams[2];\");\n            src.push(\"   float blendFactor       = uSAOParams[3];\");\n            src.push(\"   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\");\n            src.push(\"   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBToFloat(texture2D(uOcclusionTexture, uv))) * blendFactor;\");\n            src.push(\"   gl_FragColor            = vec4(vColor.rgb * ambient, 1.0);\");\n        } else {\n            src.push(\"    gl_FragColor           = vColor;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingSilhouetteRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer.model.scene);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, math.vec3([1, 1, 1]));\n        }\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf, gl.UNSIGNED_BYTE, true);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0); // TODO: Is this needed\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uColor = program.getLocation(\"color\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Instancing fill vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"uniform vec4 color;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.y = NOT_RENDERED | SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n        // renderPass = SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n\n        src.push(`if (int(flags.y) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing fill fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"uniform vec4 color;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = color;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingSilhouetteRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\nconst defaultColor = new Float32Array([0,0,0,1]);\n\n/**\n * @private\n */\nclass TrianglesInstancingEdgesRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.EDGES_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const edgeColor = material.edgeColor;\n            const edgeAlpha = material.edgeAlpha;\n            gl.uniform4f(this._uColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n\n        } else if (renderPass === RENDER_PASSES.EDGES_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const edgeColor = material.edgeColor;\n            const edgeAlpha = material.edgeAlpha;\n            gl.uniform4f(this._uColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n\n        } else if (renderPass === RENDER_PASSES.EDGES_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const edgeColor = material.edgeColor;\n            const edgeAlpha = material.edgeAlpha;\n            gl.uniform4f(this._uColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, defaultColor);\n        }\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.edgeIndicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.LINES, state.edgeIndicesBuf.numItems, state.edgeIndicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0); // TODO: Is this needed\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n\n        if (this._aFlags) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        }\n\n        if (this._aFlags2) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n    }\n\n    _allocate() {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uColor = program.getLocation(\"color\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles instancing edges vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"uniform vec4 color;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.z = NOT_RENDERED | EDGES_COLOR_OPAQUE | EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n        // renderPass = EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n\n        src.push(`if (int(flags.z) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"vColor = vec4(color.r, color.g, color.b, color.a);\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry edges drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = vColor;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingEdgesRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingEdgesColorRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.edgeIndicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.LINES, state.edgeIndicesBuf.numItems, state.edgeIndicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0); // TODO: Is this needed\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n\n        if (this._aFlags) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        }\n\n        if (this._aFlags2) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n    }\n\n    _allocate() {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Triangles instancing edges vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec4 color;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.z = NOT_RENDERED | EDGES_COLOR_OPAQUE | EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n        // renderPass = EDGES_HIGHLIGHTED | EDGES_XRAYED | EDGES_SELECTED\n\n        src.push(`if (int(flags.z) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n     //   src.push(\"vColor = vec4(float(color.r-100.0) / 255.0, float(color.g-100.0) / 255.0, float(color.b-100.0) / 255.0, float(color.a) / 255.0);\");\n        src.push(\"vColor = vec4(float(color.r*0.5) / 255.0, float(color.g*0.5) / 255.0, float(color.b*0.5) / 255.0, float(color.a) / 255.0);\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry edges drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = vColor;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingEdgesColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingPickMeshRenderer {\n\n    constructor(scene) {\n\n        this._scene = scene;\n        this._hash = this._getHash();\n\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const rtcPickViewMatrix = (rtcCenter) ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, rtcPickViewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(camera.project.far + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPickColor.bindArrayBuffer(state.pickColorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aPickColor.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        // Cleanup\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aPickColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aPickColor = program.getAttribute(\"pickColor\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n\n        program.bind();\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Instancing geometry picking vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 pickColor;\");\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vPickColor;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"  vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);\");\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n            src.push(\"  vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry picking fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vPickColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = vPickColor; \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingPickMeshRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingPickDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        const camera = scene.camera;\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const rtcPickViewMatrix = (rtcCenter) ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, rtcPickViewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        gl.uniform1f(this._uPickZNear, frameCtx.pickZNear);\n        gl.uniform1f(this._uPickZFar, frameCtx.pickZFar);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(frameCtx.pickZFar + 1.0) / Math.LN2); // TODO: Far from pick project matrix\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        // Cleanup\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uPickZNear = program.getLocation(\"pickZNear\");\n        this._uPickZFar = program.getLocation(\"pickZFar\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        this._program.bind();\n\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Instancing geometry depth vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\")\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n            src.push(\"  vFlags2 = flags2;\");\n        }\n        src.push(\"  vViewPosition = viewPosition;\");\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry depth fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        src.push(\"uniform float pickZNear;\");\n        src.push(\"uniform float pickZFar;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"vec4 packDepth(const in float depth) {\");\n        src.push(\"  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\");\n        src.push(\"  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\");\n        src.push(\"  vec4 res = fract(depth * bitShift);\");\n        src.push(\"  res -= res.xxyz * bitMask;\");\n        src.push(\"  return res;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));\");\n        src.push(\"    gl_FragColor = packDepth(zNormalizedDepth); \"); // Must be linear depth\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingPickDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingPickNormalsRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        // In practice, these binds will only happen once per frame\n        // because we pick normals on a single previously-picked mesh\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const rtcPickViewMatrix = (rtcCenter) ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, rtcPickViewMatrix);\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(camera.project.far + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aModelNormalMatrixCol0.bindArrayBuffer(state.modelNormalMatrixCol0Buf);\n        this._aModelNormalMatrixCol1.bindArrayBuffer(state.modelNormalMatrixCol1Buf);\n        this._aModelNormalMatrixCol2.bindArrayBuffer(state.modelNormalMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aNormal.bindArrayBuffer(state.normalsBuf);\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._aModelNormalMatrixCol0 = program.getAttribute(\"modelNormalMatrixCol0\");\n        this._aModelNormalMatrixCol1 = program.getAttribute(\"modelNormalMatrixCol1\");\n        this._aModelNormalMatrixCol2 = program.getAttribute(\"modelNormalMatrixCol2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        this._program.bind();\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry normals vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec2 normal;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol0;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol1;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol2;\");\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\")\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec3 vWorldNormal;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"  vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"  vec3 worldNormal = vec3(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2));\");\n        src.push(\"  vWorldNormal = worldNormal;\");\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Batched geometry normals fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec3 vWorldNormal;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    gl_FragColor = vec4((vWorldNormal * 0.5) + 0.5, 1.0);\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingPickNormalsRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingOcclusionRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n        }\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        // Cleanup\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        if (this._aColor) {\n            instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        }\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing occlusion vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\");\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing occlusion fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        src.push(\"   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); \"); // Occluders are blue\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingOcclusionRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry depth drawing vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\");\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec2 vHighPrecisionZW;\");\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"vHighPrecisionZW = gl_Position.zw;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        let i;\n        let len;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry depth drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"uniform float logDepthBufFC;\");\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        if (!WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n\n            src.push(\"const float   packUpScale = 256. / 255.;\");\n            src.push(\"const float   unpackDownscale = 255. / 256.;\");\n            src.push(\"const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n            src.push(\"const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );\");\n            src.push(\"const float   shiftRight8 = 1.0 / 256.;\");\n\n            src.push(\"vec4 packDepthToRGBA( const in float v ) {\");\n            src.push(\"    vec4 r = vec4( fract( v * packFactors ), v );\");\n            src.push(\"    r.yzw -= r.xyz * shiftRight8;\");\n            src.push(\"    return r * packUpScale;\");\n            src.push(\"}\");\n        }\n        src.push(\"varying vec2 vHighPrecisionZW;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"WEBGL_depth_texture\"]) {\n            src.push(\"    gl_FragColor = vec4(vec3(1.0 - fragCoordZ), 1.0); \");\n        } else {\n            src.push(\"    gl_FragColor = packDepthToRGBA(fragCoordZ); \"); // Must be linear depth\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass TrianglesInstancingNormalsRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aNormal.bindArrayBuffer(state.normalsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n\n        if (this._aFlags2) {\n            this._aFlags2 = program.getAttribute(\"flags2\");\n        }\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry normals drawing vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\");\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 worldNormalMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\");\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"  vec4 worldNormal    = worldNormalMatrix * vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"  vec3 viewNormal     = normalize((viewNormalMatrix * worldNormal).xyz);\");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"  vViewNormal = viewNormal;\");\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry depth drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"vec3 packNormalToRGB( const in vec3 normal ) {\");\n        src.push(\"    return normalize( normal ) * 0.5 + 0.5;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingNormalsRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * Renders InstancingLayer fragment depths to a shadow map.\n *\n * @private\n */\nclass TrianglesInstancingShadowRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._lastLightId = null;\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer( frameCtx, instancingLayer) {\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx, instancingLayer);\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        // TODO: Section planes need to be set if RTC center has changed since last RTC center recorded on frameCtx\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            const rtcCenter = instancingLayer._state.rtcCenter;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n        this._program = new Program(gl, this._buildShader());\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n        const program = this._program;\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uShadowViewMatrix = program.getLocation(\"shadowViewMatrix\");\n        this._uShadowProjMatrix = program.getLocation(\"shadowProjMatrix\");\n        this._uSectionPlanes = [];\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n    }\n\n    _bindProgram(frameCtx, instancingLayer) {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        program.bind();\n        gl.uniformMatrix4fv(this._uShadowViewMatrix, false, frameCtx.shadowViewMatrix);\n        gl.uniformMatrix4fv(this._uShadowProjMatrix, false, frameCtx.shadowProjMatrix);\n        this._lastLightId = null;\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry shadow drawing vertex shader\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\");\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 shadowViewMatrix;\");\n        src.push(\"uniform mat4 shadowProjMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n        src.push(\"bool visible      = (float(flags.x) > 0.0);\");\n        src.push(\"bool transparent  = ((float(color.a) / 255.0) < 1.0);\");\n        src.push(`if (!visible || transparent) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = shadowViewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"  gl_Position = shadowProjMatrix * viewPosition;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry depth drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"vec3 packNormalToRGB( const in vec3 normal ) {\");\n        src.push(\"    return normalize( normal ) * 0.5 + 0.5;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingShadowRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec4 = math.vec4();\nconst tempVec3a = math.vec3();\n\nconst TEXTURE_DECODE_FUNCS = {\n    \"linear\": \"linearToLinear\",\n    \"sRGB\": \"sRGBToLinear\",\n    \"gamma\": \"gammaToLinear\"\n};\n\n/**\n * @private\n */\nclass TrianglesInstancingColorQualityRenderer {\n\n    constructor(scene, withSAO) {\n        this._scene = scene;\n        this._withSAO = withSAO;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        const scene = this._scene;\n        return [scene.gammaOutput, scene._lightsState.getHash(), scene._sectionPlanesState.getHash(), (this._withSAO ? \"sao\" : \"nosao\")].join(\";\");\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = this._scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uWorldNormalMatrix, false, model.worldNormalMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aModelNormalMatrixCol0.bindArrayBuffer(state.modelNormalMatrixCol0Buf);\n        this._aModelNormalMatrixCol1.bindArrayBuffer(state.modelNormalMatrixCol1Buf);\n        this._aModelNormalMatrixCol2.bindArrayBuffer(state.modelNormalMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aNormal.bindArrayBuffer(state.normalsBuf);\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        this._aMetallicRoughness.bindArrayBuffer(state.metallicRoughnessBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aMetallicRoughness.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.TRIANGLES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelNormalMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aMetallicRoughness.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const lightsState = scene._lightsState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uWorldNormalMatrix = program.getLocation(\"worldNormalMatrix\");\n\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uGammaFactor = program.getLocation(\"gammaFactor\");\n\n        this._uLightAmbient = program.getLocation(\"lightAmbient\");\n        this._uLightColor = [];\n        this._uLightDir = [];\n        this._uLightPos = [];\n        this._uLightAttenuation = [];\n\n        const lights = lightsState.lights;\n        let light;\n\n        for (var i = 0, len = lights.length; i < len; i++) {\n            light = lights[i];\n            switch (light.type) {\n                case \"dir\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = null;\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    break;\n                case \"point\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = null;\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n                case \"spot\":\n                    this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                    this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                    this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                    this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                    break;\n            }\n        }\n\n        if (lightsState.reflectionMaps.length > 0) {\n            this._uReflectionMap = \"reflectionMap\";\n        }\n\n        if (lightsState.lightMaps.length > 0) {\n            this._uLightMap = \"lightMap\";\n        }\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aNormal = program.getAttribute(\"normal\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aMetallicRoughness = program.getAttribute(\"metallicRoughness\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aOffset = program.getAttribute(\"offset\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._aModelNormalMatrixCol0 = program.getAttribute(\"modelNormalMatrixCol0\");\n        this._aModelNormalMatrixCol1 = program.getAttribute(\"modelNormalMatrixCol1\");\n        this._aModelNormalMatrixCol2 = program.getAttribute(\"modelNormalMatrixCol2\");\n\n        this._uOcclusionTexture = \"uOcclusionTexture\";\n        this._uSAOParams = program.getLocation(\"uSAOParams\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const maxTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const lightsState = scene._lightsState;\n        const lights = lightsState.lights;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (this._uLightAmbient) {\n            gl.uniform4fv(this._uLightAmbient, scene._lightsState.getAmbientColorAndIntensity());\n        }\n\n        for (let i = 0, len = lights.length; i < len; i++) {\n            const light = lights[i];\n            if (this._uLightColor[i]) {\n                gl.uniform4f(this._uLightColor[i], light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (this._uLightPos[i]) {\n                gl.uniform3fv(this._uLightPos[i], light.pos);\n                if (this._uLightAttenuation[i]) {\n                    gl.uniform1f(this._uLightAttenuation[i], light.attenuation);\n                }\n            }\n            if (this._uLightDir[i]) {\n                gl.uniform3fv(this._uLightDir[i], light.dir);\n            }\n        }\n\n        if (lightsState.reflectionMaps.length > 0 && lightsState.reflectionMaps[0].texture && this._uReflectionMap) {\n            this._program.bindTexture(this._uReflectionMap, lightsState.reflectionMaps[0].texture, frameCtx.textureUnit);\n            frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n            frameCtx.bindTexture++;\n        }\n\n        if (lightsState.lightMaps.length > 0 && lightsState.lightMaps[0].texture && this._uLightMap) {\n            this._program.bindTexture(this._uLightMap, lightsState.lightMaps[0].texture, frameCtx.textureUnit);\n            frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n            frameCtx.bindTexture++;\n        }\n\n        if (this._withSAO) {\n            const sao = scene.sao;\n            const saoEnabled = sao.possible;\n            if (saoEnabled) {\n                const viewportWidth = gl.drawingBufferWidth;\n                const viewportHeight = gl.drawingBufferHeight;\n                tempVec4[0] = viewportWidth;\n                tempVec4[1] = viewportHeight;\n                tempVec4[2] = sao.blendCutoff;\n                tempVec4[3] = sao.blendFactor;\n                gl.uniform4fv(this._uSAOParams, tempVec4);\n                this._program.bindTexture(this._uOcclusionTexture, frameCtx.occlusionTexture, frameCtx.textureUnit);\n                frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                frameCtx.bindTexture++;\n            }\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        if (this._uGammaFactor) {\n            gl.uniform1f(this._uGammaFactor, scene.gammaFactor);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const lightsState = scene._lightsState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const clippingCaps = sectionPlanesState.clippingCaps;\n        const src = [];\n\n        src.push(\"// Instancing geometry quality drawing vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec2 normal;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec2 metallicRoughness;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"attribute vec4 modelNormalMatrixCol0;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol1;\");\n        src.push(\"attribute vec4 modelNormalMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 worldNormalMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"vec3 octDecode(vec2 oct) {\");\n        src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n        src.push(\"    if (v.z < 0.0) {\");\n        src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n        src.push(\"    }\");\n        src.push(\"    return normalize(v);\");\n        src.push(\"}\");\n\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"varying vec2 vMetallicRoughness;\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"varying vec3 vWorldNormal;\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            if (clippingCaps) {\n                src.push(\"varying vec4 vClipPosition;\");\n            }\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE | COLOR_TRANSPARENT\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"vec4 modelNormal = vec4(octDecode(normal.xy), 0.0); \");\n        src.push(\"vec4 worldNormal = worldNormalMatrix * vec4(dot(modelNormal, modelNormalMatrixCol0), dot(modelNormal, modelNormalMatrixCol1), dot(modelNormal, modelNormalMatrixCol2), 0.0);\");\n        src.push(\"vec3 viewNormal = vec4(viewNormalMatrix * worldNormal).xyz;\");\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n            if (clippingCaps) {\n                src.push(\"vClipPosition = clipPos;\");\n            }\n        }\n\n        src.push(\"vViewPosition = viewPosition;\");\n        src.push(\"vViewNormal = viewNormal;\");\n        src.push(\"vColor = color;\");\n        src.push(\"vMetallicRoughness = metallicRoughness;\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"vWorldNormal = worldNormal.xyz;\");\n        }\n\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n\n        const scene = this._scene;\n        const gammaOutput = scene.gammaOutput; // If set, then it expects that all textures and colors need to be outputted in premultiplied gamma. Default is false.\n        const sectionPlanesState = scene._sectionPlanesState;\n        const lightsState = scene._lightsState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const clippingCaps = sectionPlanesState.clippingCaps;\n        const src = [];\n\n        src.push(\"// Instancing geometry quality drawing fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"uniform float logDepthBufFC;\");\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (this._withSAO) {\n            src.push(\"uniform sampler2D uOcclusionTexture;\");\n            src.push(\"uniform vec4      uSAOParams;\");\n\n            src.push(\"const float       packUpscale = 256. / 255.;\");\n            src.push(\"const float       unpackDownScale = 255. / 256.;\");\n            src.push(\"const vec3        packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n            src.push(\"const vec4        unPackFactors = unpackDownScale / vec4( packFactors, 1. );\");\n\n            src.push(\"float unpackRGBAToDepth( const in vec4 v ) {\");\n            src.push(\"    return dot( v, unPackFactors );\");\n            src.push(\"}\");\n        }\n\n        if (lightsState.reflectionMaps.length > 0) {\n            src.push(\"uniform samplerCube reflectionMap;\");\n        }\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"uniform samplerCube lightMap;\");\n        }\n\n        src.push(\"uniform vec4 lightAmbient;\");\n\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n\n        src.push(\"uniform float gammaFactor;\");\n        src.push(\"vec4 linearToLinear( in vec4 value ) {\");\n        src.push(\"  return value;\");\n        src.push(\"}\");\n        src.push(\"vec4 sRGBToLinear( in vec4 value ) {\");\n        src.push(\"  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\");\n        src.push(\"}\");\n        src.push(\"vec4 gammaToLinear( in vec4 value) {\");\n        src.push(\"  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\");\n        src.push(\"}\");\n        if (gammaOutput) {\n            src.push(\"vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\");\n            src.push(\"  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n            src.push(\"}\");\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            if (clippingCaps) {\n                src.push(\"varying vec4 vClipPosition;\");\n            }\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"varying vec2 vMetallicRoughness;\");\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"varying vec3 vWorldNormal;\");\n        }\n\n        src.push(\"uniform mat4 viewMatrix;\");\n\n        // CONSTANT DEFINITIONS\n\n        src.push(\"#define PI 3.14159265359\");\n        src.push(\"#define RECIPROCAL_PI 0.31830988618\");\n        src.push(\"#define RECIPROCAL_PI2 0.15915494\");\n        src.push(\"#define EPSILON 1e-6\");\n\n        src.push(\"#define saturate(a) clamp( a, 0.0, 1.0 )\");\n\n        // UTILITY DEFINITIONS\n\n        src.push(\"vec3 inverseTransformDirection(in vec3 dir, in mat4 matrix) {\");\n        src.push(\"   return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\");\n        src.push(\"}\");\n\n        // STRUCTURES\n\n        src.push(\"struct IncidentLight {\");\n        src.push(\"   vec3 color;\");\n        src.push(\"   vec3 direction;\");\n        src.push(\"};\");\n\n        src.push(\"struct ReflectedLight {\");\n        src.push(\"   vec3 diffuse;\");\n        src.push(\"   vec3 specular;\");\n        src.push(\"};\");\n\n        src.push(\"struct Geometry {\");\n        src.push(\"   vec3 position;\");\n        src.push(\"   vec3 viewNormal;\");\n        src.push(\"   vec3 worldNormal;\");\n        src.push(\"   vec3 viewEyeDir;\");\n        src.push(\"};\");\n\n        src.push(\"struct Material {\");\n        src.push(\"   vec3    diffuseColor;\");\n        src.push(\"   float   specularRoughness;\");\n        src.push(\"   vec3    specularColor;\");\n        src.push(\"   float   shine;\"); // Only used for Phong\n        src.push(\"};\");\n\n        // IRRADIANCE EVALUATION\n\n        src.push(\"float GGXRoughnessToBlinnExponent(const in float ggxRoughness) {\");\n        src.push(\"   float r = ggxRoughness + 0.0001;\");\n        src.push(\"   return (2.0 / (r * r) - 2.0);\");\n        src.push(\"}\");\n\n        src.push(\"float getSpecularMIPLevel(const in float blinnShininessExponent, const in int maxMIPLevel) {\");\n        src.push(\"   float maxMIPLevelScalar = float( maxMIPLevel );\");\n        src.push(\"   float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( ( blinnShininessExponent * blinnShininessExponent ) + 1.0 );\");\n        src.push(\"   return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\");\n        src.push(\"}\");\n\n        if (lightsState.reflectionMaps.length > 0) {\n            src.push(\"vec3 getLightProbeIndirectRadiance(const in vec3 reflectVec, const in float blinnShininessExponent, const in int maxMIPLevel) {\");\n            src.push(\"   float mipLevel = 0.5 * getSpecularMIPLevel(blinnShininessExponent, maxMIPLevel);\"); //TODO: a random factor - fix this\n            src.push(\"   vec3 envMapColor = \" + TEXTURE_DECODE_FUNCS[lightsState.reflectionMaps[0].encoding] + \"(textureCube(reflectionMap, reflectVec, mipLevel)).rgb;\");\n            src.push(\"  return envMapColor;\");\n            src.push(\"}\");\n        }\n\n        // SPECULAR BRDF EVALUATION\n\n        src.push(\"vec3 F_Schlick(const in vec3 specularColor, const in float dotLH) {\");\n        src.push(\"   float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\");\n        src.push(\"   return ( 1.0 - specularColor ) * fresnel + specularColor;\");\n        src.push(\"}\");\n\n        src.push(\"float G_GGX_Smith(const in float alpha, const in float dotNL, const in float dotNV) {\");\n        src.push(\"   float a2 = ( alpha * alpha );\");\n        src.push(\"   float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );\");\n        src.push(\"   float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );\");\n        src.push(\"   return 1.0 / ( gl * gv );\");\n        src.push(\"}\");\n\n        src.push(\"float G_GGX_SmithCorrelated(const in float alpha, const in float dotNL, const in float dotNV) {\");\n        src.push(\"   float a2 = ( alpha * alpha );\");\n        src.push(\"   float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );\");\n        src.push(\"   float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );\");\n        src.push(\"   return 0.5 / max( gv + gl, EPSILON );\");\n        src.push(\"}\");\n\n        src.push(\"float D_GGX(const in float alpha, const in float dotNH) {\");\n        src.push(\"   float a2 = ( alpha * alpha );\");\n        src.push(\"   float denom = ( dotNH * dotNH) * ( a2 - 1.0 ) + 1.0;\");\n        src.push(\"   return RECIPROCAL_PI * a2 / ( denom * denom);\");\n        src.push(\"}\");\n\n        src.push(\"vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight, const in Geometry geometry, const in vec3 specularColor, const in float roughness) {\");\n        src.push(\"   float alpha = ( roughness * roughness );\");\n        src.push(\"   vec3 halfDir = normalize( incidentLight.direction + geometry.viewEyeDir );\");\n        src.push(\"   float dotNL = saturate( dot( geometry.viewNormal, incidentLight.direction ) );\");\n        src.push(\"   float dotNV = saturate( dot( geometry.viewNormal, geometry.viewEyeDir ) );\");\n        src.push(\"   float dotNH = saturate( dot( geometry.viewNormal, halfDir ) );\");\n        src.push(\"   float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\");\n        src.push(\"   vec3  F = F_Schlick( specularColor, dotLH );\");\n        src.push(\"   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\");\n        src.push(\"   float D = D_GGX( alpha, dotNH );\");\n        src.push(\"   return F * (G * D);\");\n        src.push(\"}\");\n\n        src.push(\"vec3 BRDF_Specular_GGX_Environment(const in Geometry geometry, const in vec3 specularColor, const in float roughness) {\");\n        src.push(\"   float dotNV = saturate(dot(geometry.viewNormal, geometry.viewEyeDir));\");\n        src.push(\"   const vec4 c0 = vec4( -1, -0.0275, -0.572,  0.022);\");\n        src.push(\"   const vec4 c1 = vec4(  1,  0.0425,   1.04, -0.04);\");\n        src.push(\"   vec4 r = roughness * c0 + c1;\");\n        src.push(\"   float a004 = min(r.x * r.x, exp2(-9.28 * dotNV)) * r.x + r.y;\");\n        src.push(\"   vec2 AB    = vec2(-1.04, 1.04) * a004 + r.zw;\");\n        src.push(\"   return specularColor * AB.x + AB.y;\");\n        src.push(\"}\");\n\n        if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n\n            src.push(\"void computePBRLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n\n            if (lightsState.lightMaps.length > 0) {\n                src.push(\"   vec3 irradiance = \" + TEXTURE_DECODE_FUNCS[lightsState.lightMaps[0].encoding] + \"(textureCube(lightMap, geometry.worldNormal)).rgb;\");\n                src.push(\"   irradiance *= PI;\");\n                src.push(\"   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);\");\n                src.push(\"   reflectedLight.diffuse += irradiance * diffuseBRDFContrib;\");\n            }\n\n            if (lightsState.reflectionMaps.length > 0) {\n                src.push(\"   vec3 reflectVec             = reflect(geometry.viewEyeDir, geometry.viewNormal);\");\n                src.push(\"   reflectVec                  = inverseTransformDirection(reflectVec, viewMatrix);\");\n                src.push(\"   float blinnExpFromRoughness = GGXRoughnessToBlinnExponent(material.specularRoughness);\");\n                src.push(\"   vec3 radiance               = getLightProbeIndirectRadiance(reflectVec, blinnExpFromRoughness, 8);\");\n                src.push(\"   vec3 specularBRDFContrib    = BRDF_Specular_GGX_Environment(geometry, material.specularColor, material.specularRoughness);\");\n                src.push(\"   reflectedLight.specular     += radiance * specularBRDFContrib;\");\n            }\n\n            src.push(\"}\");\n        }\n\n        // MAIN LIGHTING COMPUTATION FUNCTION\n\n        src.push(\"void computePBRLighting(const in IncidentLight incidentLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n        src.push(\"   float dotNL     = saturate(dot(geometry.viewNormal, incidentLight.direction));\");\n        src.push(\"   vec3 irradiance = dotNL * incidentLight.color * PI;\");\n        src.push(\"   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);\");\n        src.push(\"   reflectedLight.specular += irradiance * BRDF_Specular_GGX(incidentLight, geometry, material.specularColor, material.specularRoughness);\");\n        src.push(\"}\");\n\n        src.push(\"void main(void) {\");\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            if (clippingCaps) {\n                src.push(\"  if (dist > (0.002 * vClipPosition.w)) {\");\n                src.push(\"      discard;\");\n                src.push(\"  }\");\n                src.push(\"  if (dist > 0.0) { \");\n                src.push(\"      gl_FragColor=vec4(1.0, 0.0, 0.0, 1.0);\");\n                if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                    src.push(\"  gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n                }\n                src.push(\"  return;\");\n                src.push(\"}\");\n            } else {\n                src.push(\"  if (dist > 0.0) { \");\n                src.push(\"      discard;\")\n                src.push(\"  }\");\n            }\n            src.push(\"}\");\n        }\n\n        src.push(\"IncidentLight  light;\");\n        src.push(\"Material       material;\");\n        src.push(\"Geometry       geometry;\");\n        src.push(\"ReflectedLight reflectedLight = ReflectedLight(vec3(0.0,0.0,0.0), vec3(0.0,0.0,0.0));\");\n\n        src.push(\"vec3 rgb = (vec3(float(vColor.r) / 255.0, float(vColor.g) / 255.0, float(vColor.b) / 255.0));\");\n        src.push(\"float alpha = float(vColor.a) / 255.0;\");\n\n        src.push(\"vec3  diffuseColor = rgb;\");\n        src.push(\"float specularF0 = 1.0;\");\n        src.push(\"float metallic = float(vMetallicRoughness.r) / 255.0;\");\n        src.push(\"float roughness = float(vMetallicRoughness.g) / 255.0;\");\n        src.push(\"float dielectricSpecular = 0.16 * specularF0 * specularF0;\");\n\n        src.push(\"material.diffuseColor      = diffuseColor * (1.0 - dielectricSpecular) * (1.0 - metallic);\");\n        src.push(\"material.specularRoughness = clamp(roughness, 0.04, 1.0);\");\n        src.push(\"material.specularColor     = mix(vec3(dielectricSpecular), diffuseColor, metallic);\");\n\n        src.push(\"geometry.position      = vViewPosition.xyz;\");\n        src.push(\"geometry.viewNormal    = -normalize(vViewNormal);\");\n        src.push(\"geometry.viewEyeDir    = normalize(vViewPosition.xyz);\");\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"geometry.worldNormal   = normalize(vWorldNormal);\");\n        }\n\n        if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n            src.push(\"computePBRLightMapping(geometry, material, reflectedLight);\");\n        }\n\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n\n            const light = lightsState.lights[i];\n\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"light.direction = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"light.direction = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"light.direction = normalize(lightPos\" + i + \" - vViewPosition.xyz);\");\n                } else {\n                    src.push(\"light.direction = normalize((viewMatrix * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"light.direction = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"light.direction = normalize((viewMatrix * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n\n            src.push(\"light.color =  lightColor\" + i + \".rgb * lightColor\" + i + \".a;\"); // a is intensity\n\n            src.push(\"computePBRLighting(light, geometry, material, reflectedLight);\");\n        }\n\n        src.push(\"vec3 outgoingLight = (lightAmbient.rgb * lightAmbient.a * rgb) + (reflectedLight.diffuse) + (reflectedLight.specular);\");\n\n        src.push(\"vec4 fragColor;\");\n\n        if (this._withSAO) {\n            // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n            // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n            src.push(\"   float viewportWidth     = uSAOParams[0];\");\n            src.push(\"   float viewportHeight    = uSAOParams[1];\");\n            src.push(\"   float blendCutoff       = uSAOParams[2];\");\n            src.push(\"   float blendFactor       = uSAOParams[3];\");\n            src.push(\"   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\");\n            src.push(\"   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;\");\n            src.push(\"   fragColor            = vec4(outgoingLight.rgb * ambient, alpha);\");\n        } else {\n            src.push(\"   fragColor            = vec4(outgoingLight.rgb, alpha);\");\n        }\n\n        if (gammaOutput) {\n            src.push(\"fragColor = linearToGamma(fragColor, gammaFactor);\");\n        }\n\n        src.push(\"gl_FragColor = fragColor;\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {TrianglesInstancingColorQualityRenderer};","import {TrianglesInstancingColorRenderer} from \"./renderers/TrianglesInstancingColorRenderer.js\";\nimport {TrianglesInstancingSilhouetteRenderer} from \"./renderers/TrianglesInstancingSilhouetteRenderer.js\";\nimport {TrianglesInstancingEdgesRenderer} from \"./renderers/TrianglesInstancingEdgesRenderer.js\";\nimport {TrianglesInstancingEdgesColorRenderer} from \"./renderers/TrianglesInstancingEdgesColorRenderer.js\";\nimport {TrianglesInstancingPickMeshRenderer} from \"./renderers/TrianglesInstancingPickMeshRenderer.js\";\nimport {TrianglesInstancingPickDepthRenderer} from \"./renderers/TrianglesInstancingPickDepthRenderer.js\";\nimport {TrianglesInstancingPickNormalsRenderer} from \"./renderers/TrianglesInstancingPickNormalsRenderer.js\";\nimport {TrianglesInstancingOcclusionRenderer} from \"./renderers/TrianglesInstancingOcclusionRenderer.js\";\nimport {TrianglesInstancingDepthRenderer} from \"./renderers/TrianglesInstancingDepthRenderer.js\";\nimport {TrianglesInstancingNormalsRenderer} from \"./renderers/TrianglesInstancingNormalsRenderer.js\";\nimport {TrianglesInstancingShadowRenderer} from \"./renderers/TrianglesInstancingShadowRenderer.js\";\nimport {TrianglesInstancingColorQualityRenderer} from \"./renderers/TrianglesInstancingColorQualityRenderer.js\";\n\n/**\n * @private\n */\nclass TrianglesInstancingRenderers {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    _compile() {\n        if (this._colorRenderer && (!this._colorRenderer.getValid())) {\n            this._colorRenderer.destroy();\n            this._colorRenderer = null;\n        }\n        if (this._colorRendererWithSAO && (!this._colorRendererWithSAO.getValid())) {\n            this._colorRendererWithSAO.destroy();\n            this._colorRendererWithSAO = null;\n        }\n        if (this._colorQualityRenderer && (!this._colorQualityRenderer.getValid())) {\n            this._colorQualityRenderer.destroy();\n            this._colorQualityRenderer = null;\n        }\n        if (this._colorQualityRendererWithSAO && (!this._colorQualityRendererWithSAO.getValid())) {\n            this._colorQualityRendererWithSAO.destroy();\n            this._colorQualityRendererWithSAO = null;\n        }\n        if (this._depthRenderer && (!this._depthRenderer.getValid())) {\n            this._depthRenderer.destroy();\n            this._depthRenderer = null;\n        }\n        if (this._normalsRenderer && (!this._normalsRenderer.getValid())) {\n            this._normalsRenderer.destroy();\n            this._normalsRenderer = null;\n        }\n        if (this._silhouetteRenderer && (!this._silhouetteRenderer.getValid())) {\n            this._silhouetteRenderer.destroy();\n            this._silhouetteRenderer = null;\n        }\n        if (this._edgesRenderer && (!this._edgesRenderer.getValid())) {\n            this._edgesRenderer.destroy();\n            this._edgesRenderer = null;\n        }\n        if (this._edgesColorRenderer && (!this._edgesColorRenderer.getValid())) {\n            this._edgesColorRenderer.destroy();\n            this._edgesColorRenderer = null;\n        }\n        if (this._pickMeshRenderer && (!this._pickMeshRenderer.getValid())) {\n            this._pickMeshRenderer.destroy();\n            this._pickMeshRenderer = null;\n        }\n        if (this._pickDepthRenderer && (!this._pickDepthRenderer.getValid())) {\n            this._pickDepthRenderer.destroy();\n            this._pickDepthRenderer = null;\n        }\n        if (this._pickNormalsRenderer && this._pickNormalsRenderer.getValid() === false) {\n            this._pickNormalsRenderer.destroy();\n            this._pickNormalsRenderer = null;\n        }\n        if (this._occlusionRenderer && this._occlusionRenderer.getValid() === false) {\n            this._occlusionRenderer.destroy();\n            this._occlusionRenderer = null;\n        }\n        if (this._shadowRenderer && (!this._shadowRenderer.getValid())) {\n            this._shadowRenderer.destroy();\n            this._shadowRenderer = null;\n        }\n    }\n\n    get colorRenderer() {\n        if (!this._colorRenderer) {\n            this._colorRenderer = new TrianglesInstancingColorRenderer(this._scene, false);\n        }\n        return this._colorRenderer;\n    }\n\n    get colorRendererWithSAO() {\n        if (!this._colorRendererWithSAO) {\n            this._colorRendererWithSAO = new TrianglesInstancingColorRenderer(this._scene, true);\n        }\n        return this._colorRendererWithSAO;\n    }\n\n    get colorQualityRenderer() {\n        if (!this._colorQualityRenderer) {\n            this._colorQualityRenderer = new TrianglesInstancingColorQualityRenderer(this._scene, false);\n        }\n        return this._colorQualityRenderer;\n    }\n\n    get colorQualityRendererWithSAO() {\n        if (!this._colorQualityRendererWithSAO) {\n            this._colorQualityRendererWithSAO = new TrianglesInstancingColorQualityRenderer(this._scene, true);\n        }\n        return this._colorQualityRendererWithSAO;\n    }\n\n    get silhouetteRenderer() {\n        if (!this._silhouetteRenderer) {\n            this._silhouetteRenderer = new TrianglesInstancingSilhouetteRenderer(this._scene);\n        }\n        return this._silhouetteRenderer;\n    }\n\n    get depthRenderer() {\n        if (!this._depthRenderer) {\n            this._depthRenderer = new TrianglesInstancingDepthRenderer(this._scene);\n        }\n        return this._depthRenderer;\n    }\n\n    get normalsRenderer() {\n        if (!this._normalsRenderer) {\n            this._normalsRenderer = new TrianglesInstancingNormalsRenderer(this._scene);\n        }\n        return this._normalsRenderer;\n    }\n\n    get edgesRenderer() {\n        if (!this._edgesRenderer) {\n            this._edgesRenderer = new TrianglesInstancingEdgesRenderer(this._scene);\n        }\n        return this._edgesRenderer;\n    }\n\n    get edgesColorRenderer() {\n        if (!this._edgesColorRenderer) {\n            this._edgesColorRenderer = new TrianglesInstancingEdgesColorRenderer(this._scene);\n        }\n        return this._edgesColorRenderer;\n    }\n\n    get pickMeshRenderer() {\n        if (!this._pickMeshRenderer) {\n            this._pickMeshRenderer = new TrianglesInstancingPickMeshRenderer(this._scene);\n        }\n        return this._pickMeshRenderer;\n    }\n\n    get pickNormalsRenderer() {\n        if (!this._pickNormalsRenderer) {\n            this._pickNormalsRenderer = new TrianglesInstancingPickNormalsRenderer(this._scene);\n        }\n        return this._pickNormalsRenderer;\n    }\n\n    get pickDepthRenderer() {\n        if (!this._pickDepthRenderer) {\n            this._pickDepthRenderer = new TrianglesInstancingPickDepthRenderer(this._scene);\n        }\n        return this._pickDepthRenderer;\n    }\n\n    get occlusionRenderer() {\n        if (!this._occlusionRenderer) {\n            this._occlusionRenderer = new TrianglesInstancingOcclusionRenderer(this._scene);\n        }\n        return this._occlusionRenderer;\n    }\n\n    get shadowRenderer() {\n        if (!this._shadowRenderer) {\n            this._shadowRenderer = new TrianglesInstancingShadowRenderer(this._scene);\n        }\n        return this._shadowRenderer;\n    }\n\n    _destroy() {\n        if (this._colorRenderer) {\n            this._colorRenderer.destroy();\n        }\n        if (this._colorRendererWithSAO) {\n            this._colorRendererWithSAO.destroy();\n        }\n        if (this._colorQualityRenderer) {\n            this._colorQualityRenderer.destroy();\n        }\n        if (this._colorQualityRendererWithSAO) {\n            this._colorQualityRendererWithSAO.destroy();\n        }\n        if (this._depthRenderer) {\n            this._depthRenderer.destroy();\n        }\n        if (this._normalsRenderer) {\n            this._normalsRenderer.destroy();\n        }\n        if (this._silhouetteRenderer) {\n            this._silhouetteRenderer.destroy();\n        }\n        if (this._edgesRenderer) {\n            this._edgesRenderer.destroy();\n        }\n        if (this._edgesColorRenderer) {\n            this._edgesColorRenderer.destroy();\n        }\n        if (this._pickMeshRenderer) {\n            this._pickMeshRenderer.destroy();\n        }\n        if (this._pickDepthRenderer) {\n            this._pickDepthRenderer.destroy();\n        }\n        if (this._pickNormalsRenderer) {\n            this._pickNormalsRenderer.destroy();\n        }\n        if (this._occlusionRenderer) {\n            this._occlusionRenderer.destroy();\n        }\n        if (this._shadowRenderer) {\n            this._shadowRenderer.destroy();\n        }\n    }\n}\n\nconst cachedRenderers = {};\n\nfunction getInstancingRenderers(scene) {\n    const sceneId = scene.id;\n    let instancingRenderers = cachedRenderers[sceneId];\n    if (!instancingRenderers) {\n        instancingRenderers = new TrianglesInstancingRenderers(scene);\n        cachedRenderers[sceneId] = instancingRenderers;\n        instancingRenderers._compile();\n        scene.on(\"compile\", () => {\n            instancingRenderers._compile();\n        });\n        scene.on(\"destroyed\", () => {\n            delete cachedRenderers[sceneId];\n            instancingRenderers._destroy();\n        });\n    }\n    return instancingRenderers;\n}\n\nexport {getInstancingRenderers};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\nimport {ENTITY_FLAGS} from '../../ENTITY_FLAGS.js';\nimport {RENDER_PASSES} from '../../RENDER_PASSES.js';\n\nimport {math} from \"../../../../math/math.js\";\nimport {buildEdgeIndices} from '../../../../math/buildEdgeIndices.js';\nimport {RenderState} from \"../../../../webgl/RenderState.js\";\nimport {ArrayBuf} from \"../../../../webgl/ArrayBuf.js\";\nimport {geometryCompressionUtils} from \"../../../../math/geometryCompressionUtils.js\";\nimport {getInstancingRenderers} from \"./TrianglesInstancingRenderers.js\";\nimport {quantizePositions, octEncodeNormals} from \"../../compression.js\";\n\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\nconst tempUint8Vec4 = new Uint8Array(4);\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\nconst tempVec3fa = new Float32Array(3);\n\n/**\n * @private\n */\nclass TrianglesInstancingLayer {\n\n    /**\n     * @param model\n     * @param cfg\n     * @param cfg.layerIndex\n     * @param cfg.positions Flat float Local-space positions array.\n     * @param [cfg.normals] Flat float normals array.\n     * @param cfg.indices Flat int indices array.\n     * @param [cfg.edgeIndices] Flat int edges indices array.\n     * @param cfg.edgeThreshold\n     * @param cfg.rtcCenter\n     * @params cfg.solid\n     */\n    constructor(model, cfg) {\n\n        /**\n         * State sorting key.\n         * @type {string}\n         */\n        this.sortId = \"TrianglesInstancingLayer\" + cfg.solid ? \"-solid\" : \"-surface\";\n\n        /**\n         * Index of this InstancingLayer in PerformanceModel#_layerList\n         * @type {Number}\n         */\n        this.layerIndex = cfg.layerIndex;\n\n        this._instancingRenderers = getInstancingRenderers(model.scene);\n        this.model = model;\n        this._aabb = math.collapseAABB3();\n\n        const stateCfg = {\n            positionsDecodeMatrix: math.mat4(),\n            numInstances: 0,\n            obb: math.OBB3(),\n            rtcCenter: null\n        };\n\n        const preCompressed = (!!cfg.positionsDecodeMatrix);\n        const gl = this.model.scene.canvas.gl;\n\n        if (cfg.positions) {\n\n            if (preCompressed) {\n\n                let normalized = false;\n                stateCfg.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, cfg.positions, cfg.positions.length, 3, gl.STATIC_DRAW, normalized);\n                stateCfg.positionsDecodeMatrix.set(cfg.positionsDecodeMatrix);\n\n                let localAABB = math.collapseAABB3();\n                math.expandAABB3Points3(localAABB, cfg.positions);\n                geometryCompressionUtils.decompressAABB(localAABB, stateCfg.positionsDecodeMatrix);\n                math.AABB3ToOBB3(localAABB, stateCfg.obb);\n\n            } else {\n\n                let lenPositions = cfg.positions.length;\n                let localAABB = math.collapseAABB3();\n                math.expandAABB3Points3(localAABB, cfg.positions);\n                math.AABB3ToOBB3(localAABB, stateCfg.obb);\n                const quantizedPositions = quantizePositions(cfg.positions, localAABB, stateCfg.positionsDecodeMatrix);\n                let normalized = false;\n                stateCfg.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, quantizedPositions, lenPositions, 3, gl.STATIC_DRAW, normalized);\n            }\n        }\n\n        if (cfg.normals) {\n\n            if (preCompressed) {\n\n                const normalized = true; // For oct-encoded UInt8\n                stateCfg.normalsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, cfg.normals, cfg.normals.length, 3, gl.STATIC_DRAW, normalized);\n\n            } else {\n\n                const compressedNormals = octEncodeNormals(cfg.normals);\n                const normalized = true; // For oct-encoded UInt8\n                stateCfg.normalsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, compressedNormals, compressedNormals.length, 3, gl.STATIC_DRAW, normalized);\n            }\n        }\n\n        if (cfg.indices) {\n            stateCfg.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, bigIndicesSupported ? new Uint32Array(cfg.indices) : new Uint16Array(cfg.indices), cfg.indices.length, 1, gl.STATIC_DRAW);\n        }\n\n        let edgeIndices = cfg.edgeIndices;\n        if (!edgeIndices) {\n            edgeIndices = buildEdgeIndices(cfg.positions, cfg.indices, null, cfg.edgeThreshold || 10);\n        }\n        stateCfg.edgeIndicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, bigIndicesSupported ? new Uint32Array(edgeIndices) : new Uint16Array(edgeIndices), edgeIndices.length, 1, gl.STATIC_DRAW);\n\n\n        this._state = new RenderState(stateCfg);\n\n        // These counts are used to avoid unnecessary render passes\n        this._numPortions = 0;\n        this._numVisibleLayerPortions = 0;\n        this._numTransparentLayerPortions = 0;\n        this._numXRayedLayerPortions = 0;\n        this._numHighlightedLayerPortions = 0;\n        this._numSelectedLayerPortions = 0;\n        this._numClippableLayerPortions = 0;\n        this._numEdgesLayerPortions = 0;\n        this._numPickableLayerPortions = 0;\n        this._numCulledLayerPortions = 0;\n\n        /** @private */\n        this.numIndices = (cfg.indices) ? cfg.indices.length / 3 : 0;\n\n        // Vertex arrays\n        this._colors = [];\n        this._metallicRoughness = [];\n        this._pickColors = [];\n        this._offsets = [];\n\n        // Modeling matrix per instance, array for each column\n        this._modelMatrixCol0 = [];\n        this._modelMatrixCol1 = [];\n        this._modelMatrixCol2 = [];\n\n        // Modeling normal matrix per instance, array for each column\n        this._modelNormalMatrixCol0 = [];\n        this._modelNormalMatrixCol1 = [];\n        this._modelNormalMatrixCol2 = [];\n\n        this._portions = [];\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n        }\n\n        this._finalized = false;\n\n        /**\n         * The axis-aligned World-space boundary of this InstancingLayer's positions.\n         * @type {*|Float64Array}\n         */\n        this.aabb = math.collapseAABB3();\n\n        /**\n         * When true, this layer contains solid triangle meshes, otherwise this layer contains surface triangle meshes\n         * @type {boolean}\n         */\n        this.solid = !!cfg.solid;\n    }\n\n    /**\n     * Creates a new portion within this InstancingLayer, returns the new portion ID.\n     *\n     * The portion will instance this InstancingLayer's geometry.\n     *\n     * Gives the portion the specified color and matrix.\n     *\n     * @param cfg Portion params\n     * @param cfg.color Color [0..255,0..255,0..255]\n     * @param cfg.metallic Metalness factor [0..255]\n     * @param cfg.roughness Roughness factor [0..255]\n     * @param cfg.opacity Opacity [0..255].\n     * @param cfg.meshMatrix Flat float 4x4 matrix.\n     * @param [cfg.worldMatrix] Flat float 4x4 matrix.\n     * @param cfg.worldAABB Flat float AABB.\n     * @param cfg.pickColor Quantized pick color\n     * @returns {number} Portion ID.\n     */\n    createPortion(cfg) {\n\n        const color = cfg.color;\n        const metallic = cfg.metallic;\n        const roughness = cfg.roughness;\n        const opacity = cfg.opacity;\n        const meshMatrix = cfg.meshMatrix;\n        const worldMatrix = cfg.worldMatrix;\n        const worldAABB = cfg.aabb;\n        const pickColor = cfg.pickColor;\n\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n\n        // TODO: find AABB for portion by transforming the geometry local AABB by the given meshMatrix?\n\n        const r = color[0]; // Color is pre-quantized by PerformanceModel\n        const g = color[1];\n        const b = color[2];\n        const a = color[3];\n\n        this._colors.push(r);\n        this._colors.push(g);\n        this._colors.push(b);\n        this._colors.push(opacity);\n\n        this._metallicRoughness.push((metallic !== null && metallic !== undefined) ? metallic : 0);\n        this._metallicRoughness.push((roughness !== null && roughness !== undefined) ? roughness : 255);\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            this._offsets.push(0);\n            this._offsets.push(0);\n            this._offsets.push(0);\n        }\n\n        this._modelMatrixCol0.push(meshMatrix[0]);\n        this._modelMatrixCol0.push(meshMatrix[4]);\n        this._modelMatrixCol0.push(meshMatrix[8]);\n        this._modelMatrixCol0.push(meshMatrix[12]);\n\n        this._modelMatrixCol1.push(meshMatrix[1]);\n        this._modelMatrixCol1.push(meshMatrix[5]);\n        this._modelMatrixCol1.push(meshMatrix[9]);\n        this._modelMatrixCol1.push(meshMatrix[13]);\n\n        this._modelMatrixCol2.push(meshMatrix[2]);\n        this._modelMatrixCol2.push(meshMatrix[6]);\n        this._modelMatrixCol2.push(meshMatrix[10]);\n        this._modelMatrixCol2.push(meshMatrix[14]);\n\n        // Note: order of inverse and transpose doesn't matter\n\n        let transposedMat = math.transposeMat4(meshMatrix, math.mat4()); // TODO: Use cached matrix\n        let normalMatrix = math.inverseMat4(transposedMat);\n\n        this._modelNormalMatrixCol0.push(normalMatrix[0]);\n        this._modelNormalMatrixCol0.push(normalMatrix[4]);\n        this._modelNormalMatrixCol0.push(normalMatrix[8]);\n        this._modelNormalMatrixCol0.push(normalMatrix[12]);\n\n        this._modelNormalMatrixCol1.push(normalMatrix[1]);\n        this._modelNormalMatrixCol1.push(normalMatrix[5]);\n        this._modelNormalMatrixCol1.push(normalMatrix[9]);\n        this._modelNormalMatrixCol1.push(normalMatrix[13]);\n\n        this._modelNormalMatrixCol2.push(normalMatrix[2]);\n        this._modelNormalMatrixCol2.push(normalMatrix[6]);\n        this._modelNormalMatrixCol2.push(normalMatrix[10]);\n        this._modelNormalMatrixCol2.push(normalMatrix[14]);\n\n        // Per-vertex pick colors\n\n        this._pickColors.push(pickColor[0]);\n        this._pickColors.push(pickColor[1]);\n        this._pickColors.push(pickColor[2]);\n        this._pickColors.push(pickColor[3]);\n\n        // Expand AABB\n\n        math.collapseAABB3(worldAABB);\n        const obb = this._state.obb;\n        const lenPositions = obb.length;\n        for (let i = 0; i < lenPositions; i += 4) {\n            tempVec4a[0] = obb[i + 0];\n            tempVec4a[1] = obb[i + 1];\n            tempVec4a[2] = obb[i + 2];\n            math.transformPoint4(meshMatrix, tempVec4a, tempVec4b);\n            if (worldMatrix) {\n                math.transformPoint4(worldMatrix, tempVec4b, tempVec4c);\n                math.expandAABB3Point3(worldAABB, tempVec4c);\n            } else {\n                math.expandAABB3Point3(worldAABB, tempVec4b);\n            }\n        }\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            worldAABB[0] += rtcCenter[0];\n            worldAABB[1] += rtcCenter[1];\n            worldAABB[2] += rtcCenter[2];\n            worldAABB[3] += rtcCenter[0];\n            worldAABB[4] += rtcCenter[1];\n            worldAABB[5] += rtcCenter[2];\n        }\n\n        math.expandAABB3(this.aabb, worldAABB);\n\n        this._state.numInstances++;\n\n        const portionId = this._portions.length;\n        this._portions.push({});\n\n        this._numPortions++;\n        this.model.numPortions++;\n\n        return portionId;\n    }\n\n    finalize() {\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n        const gl = this.model.scene.canvas.gl;\n        const colorsLength = this._colors.length;\n        const flagsLength = colorsLength;\n        if (colorsLength > 0) {\n            let notNormalized = false;\n            this._state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(this._colors), this._colors.length, 4, gl.DYNAMIC_DRAW, notNormalized);\n            this._colors = []; // Release memory\n        }\n        if (this._metallicRoughness.length > 0) {\n            const metallicRoughness = new Uint8Array(this._metallicRoughness);\n            let normalized = false;\n            this._state.metallicRoughnessBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, metallicRoughness, this._metallicRoughness.length, 2, gl.STATIC_DRAW, normalized);\n        }\n        if (flagsLength > 0) {\n            // Because we only build flags arrays here, \n            // get their length from the colors array\n            let notNormalized = false;\n            let normalized = true;\n            this._state.flagsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(flagsLength), flagsLength, 4, gl.DYNAMIC_DRAW, notNormalized);\n            this._state.flags2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(flagsLength), flagsLength, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n        if (this.model.scene.entityOffsetsEnabled) {\n            if (this._offsets.length > 0) {\n                const notNormalized = false;\n                this._state.offsetsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._offsets), this._offsets.length, 3, gl.DYNAMIC_DRAW, notNormalized);\n                this._offsets = []; // Release memory\n            }\n        }\n        if (this._modelMatrixCol0.length > 0) {\n\n            const normalized = false;\n\n            this._state.modelMatrixCol0Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol0), this._modelMatrixCol0.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelMatrixCol1Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol1), this._modelMatrixCol1.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelMatrixCol2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol2), this._modelMatrixCol2.length, 4, gl.STATIC_DRAW, normalized);\n            this._modelMatrixCol0 = [];\n            this._modelMatrixCol1 = [];\n            this._modelMatrixCol2 = [];\n\n            this._state.modelNormalMatrixCol0Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelNormalMatrixCol0), this._modelNormalMatrixCol0.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelNormalMatrixCol1Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelNormalMatrixCol1), this._modelNormalMatrixCol1.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelNormalMatrixCol2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelNormalMatrixCol2), this._modelNormalMatrixCol2.length, 4, gl.STATIC_DRAW, normalized);\n            this._modelNormalMatrixCol0 = [];\n            this._modelNormalMatrixCol1 = [];\n            this._modelNormalMatrixCol2 = [];\n        }\n        if (this._pickColors.length > 0) {\n            const normalized = false;\n            this._state.pickColorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(this._pickColors), this._pickColors.length, 4, gl.STATIC_DRAW, normalized);\n            this._pickColors = []; // Release memory\n        }\n        this._finalized = true;\n    }\n\n    // The following setters are called by PerformanceMesh, in turn called by PerformanceNode, only after the layer is finalized.\n    // It's important that these are called after finalize() in order to maintain integrity of counts like _numVisibleLayerPortions etc.\n\n    initFlags(portionId, flags, meshTransparent) {\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        }\n        if (meshTransparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n        this._setFlags2(portionId, flags);\n    }\n\n    setVisible(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        } else {\n            this._numVisibleLayerPortions--;\n            this.model.numVisibleLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setHighlighted(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        } else {\n            this._numHighlightedLayerPortions--;\n            this.model.numHighlightedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setXRayed(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        } else {\n            this._numXRayedLayerPortions--;\n            this.model.numXRayedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setSelected(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        } else {\n            this._numSelectedLayerPortions--;\n            this.model.numSelectedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setEdges(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        } else {\n            this._numEdgesLayerPortions--;\n            this.model.numEdgesLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setClippable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        } else {\n            this._numClippableLayerPortions--;\n            this.model.numClippableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags);\n    }\n\n    setCollidable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n    }\n\n    setPickable(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        } else {\n            this._numPickableLayerPortions--;\n            this.model.numPickableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags, meshTransparent);\n    }\n\n    setCulled(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        } else {\n            this._numCulledLayerPortions--;\n            this.model.numCulledLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setColor(portionId, color) { // RGBA color is normalized as ints\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        tempUint8Vec4[0] = color[0];\n        tempUint8Vec4[1] = color[1];\n        tempUint8Vec4[2] = color[2];\n        tempUint8Vec4[3] = color[3];\n        this._state.colorsBuf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    setTransparent(portionId, flags, transparent) {\n        if (transparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        } else {\n            this._numTransparentLayerPortions--;\n            this.model.numTransparentLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    // setMatrix(portionId, matrix) {\n    //\n    //     if (!this._finalized) {\n    //         throw \"Not finalized\";\n    //     }\n    //\n    //     var offset = portionId * 4;\n    //\n    //     tempFloat32Vec4[0] = matrix[0];\n    //     tempFloat32Vec4[1] = matrix[4];\n    //     tempFloat32Vec4[2] = matrix[8];\n    //     tempFloat32Vec4[3] = matrix[12];\n    //\n    //     this._state.modelMatrixCol0Buf.setData(tempFloat32Vec4, offset, 4);\n    //\n    //     tempFloat32Vec4[0] = matrix[1];\n    //     tempFloat32Vec4[1] = matrix[5];\n    //     tempFloat32Vec4[2] = matrix[9];\n    //     tempFloat32Vec4[3] = matrix[13];\n    //\n    //     this._state.modelMatrixCol1Buf.setData(tempFloat32Vec4, offset, 4);\n    //\n    //     tempFloat32Vec4[0] = matrix[2];\n    //     tempFloat32Vec4[1] = matrix[6];\n    //     tempFloat32Vec4[2] = matrix[10];\n    //     tempFloat32Vec4[3] = matrix[14];\n    //\n    //     this._state.modelMatrixCol2Buf.setData(tempFloat32Vec4, offset, 4);\n    // }\n\n    _setFlags(portionId, flags, meshTransparent) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const visible = !!(flags & ENTITY_FLAGS.VISIBLE);\n        const xrayed = !!(flags & ENTITY_FLAGS.XRAYED);\n        const highlighted = !!(flags & ENTITY_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & ENTITY_FLAGS.SELECTED);\n        const edges = !!(flags & ENTITY_FLAGS.EDGES);\n        const pickable = !!(flags & ENTITY_FLAGS.PICKABLE);\n        const culled = !!(flags & ENTITY_FLAGS.CULLED);\n\n        // Normal fill\n\n        let f0;\n        if (!visible || culled || xrayed) { // Highlight & select are layered on top of color - not mutually exclusive\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (meshTransparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n\n        // Emphasis fill\n\n        let f1;\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Edges\n\n        let f2 = 0;\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (meshTransparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Pick\n\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED;\n\n        tempUint8Vec4[0] = f0; // x - normal fill\n        tempUint8Vec4[1] = f1; // y - emphasis fill\n        tempUint8Vec4[2] = f2; // z - edges\n        tempUint8Vec4[3] = f3; // w - pick\n\n        this._state.flagsBuf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    _setFlags2(portionId, flags) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const clippable = !!(flags & ENTITY_FLAGS.CLIPPABLE) ? 255 : 0;\n        tempUint8Vec4[0] = clippable;\n\n        this._state.flags2Buf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    setOffset(portionId, offset) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (!this.model.scene.entityOffsetsEnabled) {\n            this.model.error(\"Entity#offset not enabled for this Viewer\"); // See Viewer entityOffsetsEnabled\n            return;\n        }\n        tempVec3fa[0] = offset[0];\n        tempVec3fa[1] = offset[1];\n        tempVec3fa[2] = offset[2];\n        this._state.offsetsBuf.setData(tempVec3fa, portionId * 3, 3);\n    }\n\n    // ---------------------- COLOR RENDERING -----------------------------------\n\n    drawColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (frameCtx.withSAO && this.model.saoEnabled) {\n            if (frameCtx.pbrEnabled && this.model.pbrEnabled) {\n                if (this._instancingRenderers.colorQualityRendererWithSAO) {\n                    this._instancingRenderers.colorQualityRendererWithSAO.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            } else {\n                if (this._instancingRenderers.colorRendererWithSAO) {\n                    this._instancingRenderers.colorRendererWithSAO.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            }\n        } else {\n            if (frameCtx.pbrEnabled && this.model.pbrEnabled) {\n                if (this._instancingRenderers.colorQualityRenderer) {\n                    this._instancingRenderers.colorQualityRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            } else {\n                if (this._instancingRenderers.colorRenderer) {\n                    this._instancingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n                }\n            }\n        }\n    }\n\n    _updateBackfaceCull(renderFlags, frameCtx) {\n        const backfaces = this.model.backfaces || (!this.solid) || renderFlags.sectioned;\n        if (frameCtx.backfaces !== backfaces) {\n            const gl = frameCtx.gl;\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n    }\n\n    drawColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === 0 || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (frameCtx.pbrEnabled && this.model.pbrEnabled) {\n            if (this._instancingRenderers.colorQualityRenderer) {\n                this._instancingRenderers.colorQualityRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n        } else {\n            if (this._instancingRenderers.colorRenderer) {\n                this._instancingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n            }\n        }\n    }\n\n    // ---------------------- RENDERING SAO POST EFFECT TARGETS --------------\n\n    drawDepth(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.depthRenderer) {\n            this._instancingRenderers.depthRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE); // Assume whatever post-effect uses depth (eg SAO) does not apply to transparent objects\n        }\n    }\n\n    drawNormals(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.normalsRenderer) {\n            this._instancingRenderers.normalsRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE); // Assume whatever post-effect uses normals (eg SAO) does not apply to transparent objects\n        }\n    }\n\n    // ---------------------- SILHOUETTE RENDERING -----------------------------------\n\n    drawSilhouetteXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.silhouetteRenderer) {\n            this._instancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.silhouetteRenderer) {\n            this._instancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n        }\n    }\n\n    drawSilhouetteSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.silhouetteRenderer) {\n            this._instancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_SELECTED);\n        }\n    }\n\n    // ---------------------- EDGES RENDERING -----------------------------------\n\n    drawEdgesColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numEdgesLayerPortions === 0) {\n            return;\n        }\n        if (this._instancingRenderers.edgesColorRenderer) {\n            this._instancingRenderers.edgesColorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_COLOR_OPAQUE);\n        }\n    }\n\n    drawEdgesColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numEdgesLayerPortions === 0) {\n            return;\n        }\n        if (this._instancingRenderers.edgesColorRenderer) {\n            this._instancingRenderers.edgesColorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_COLOR_TRANSPARENT);\n        }\n    }\n\n    drawEdgesXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        if (this._instancingRenderers.edgesRenderer) {\n            this._instancingRenderers.edgesRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_XRAYED);\n        }\n    }\n\n    drawEdgesHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        if (this._instancingRenderers.edgesRenderer) {\n            this._instancingRenderers.edgesRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_HIGHLIGHTED);\n        }\n    }\n\n    drawEdgesSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        if (this._instancingRenderers.edgesRenderer) {\n            this._instancingRenderers.edgesRenderer.drawLayer(frameCtx, this, RENDER_PASSES.EDGES_SELECTED);\n        }\n    }\n\n    // ---------------------- OCCLUSION CULL RENDERING -----------------------------------\n\n    drawOcclusion(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.occlusionRenderer) {\n            // Only opaque, filled objects can be occluders\n            this._instancingRenderers.occlusionRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    // ---------------------- SHADOW BUFFER RENDERING -----------------------------------\n\n    drawShadow(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.shadowRenderer) {\n            this._instancingRenderers.shadowRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    //---- PICKING ----------------------------------------------------------------------------------------------------\n\n    drawPickMesh(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.pickMeshRenderer) {\n            this._instancingRenderers.pickMeshRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickDepths(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.pickDepthRenderer) {\n            this._instancingRenderers.pickDepthRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickNormals(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        this._updateBackfaceCull(renderFlags, frameCtx);\n        if (this._instancingRenderers.pickNormalsRenderer) {\n            this._instancingRenderers.pickNormalsRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n\n    destroy() {\n        const state = this._state;\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n            state.positionsBuf = null;\n        }\n        if (state.normalsBuf) {\n            state.normalsBuf.destroy();\n            state.normalsBuf = null;\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n            state.colorsBuf = null;\n        }\n        if (state.metallicRoughnessBuf) {\n            state.metallicRoughnessBuf.destroy();\n            state.metallicRoughnessBuf = null;\n        }\n        if (state.flagsBuf) {\n            state.flagsBuf.destroy();\n            state.flagsBuf = null;\n        }\n        if (state.flags2Buf) {\n            state.flags2Buf.destroy();\n            state.flags2Buf = null;\n        }\n        if (state.offsetsBuf) {\n            state.offsetsBuf.destroy();\n            state.offsetsBuf = null;\n        }\n        if (state.modelMatrixCol0Buf) {\n            state.modelMatrixCol0Buf.destroy();\n            state.modelMatrixCol0Buf = null;\n        }\n        if (state.modelMatrixCol1Buf) {\n            state.modelMatrixCol1Buf.destroy();\n            state.modelMatrixCol1Buf = null;\n        }\n        if (state.modelMatrixCol2Buf) {\n            state.modelMatrixCol2Buf.destroy();\n            state.modelMatrixCol2Buf = null;\n        }\n        if (state.modelNormalMatrixCol0Buf) {\n            state.modelNormalMatrixCol0Buf.destroy();\n            state.modelNormalMatrixCol0Buf = null;\n        }\n        if (state.modelNormalMatrixCol1Buf) {\n            state.modelNormalMatrixCol1Buf.destroy();\n            state.modelNormalMatrixCol1Buf = null;\n        }\n        if (state.modelNormalMatrixCol2Buf) {\n            state.modelNormalMatrixCol2Buf.destroy();\n            state.modelNormalMatrixCol2Buf = null;\n        }\n        if (state.indicesBuf) {\n            state.indicesBuf.destroy();\n            state.indicessBuf = null;\n        }\n        if (state.edgeIndicesBuf) {\n            state.edgeIndicesBuf.destroy();\n            state.edgeIndicessBuf = null;\n        }\n        if (state.pickColorsBuf) {\n            state.pickColorsBuf.destroy();\n            state.pickColorsBuf = null;\n        }\n        state.destroy();\n    }\n}\n\nexport {TrianglesInstancingLayer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass LinesBatchingColorRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const scene = this._scene;\n        const camera = scene.camera;\n        const model = batchingLayer.model;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.lineWidth(scene.linesMaterial.lineWidth);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.LINES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const project = scene.camera.project;\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix)\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Lines batching color vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"} else {\");\n        src.push(\"vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0, float(color.a) / 255.0);\");\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Lines batching color fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        src.push(\"   gl_FragColor            = vColor;\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {LinesBatchingColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst defaultColor = new Float32Array([1, 1, 1]);\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass LinesBatchingSilhouetteRenderer {\n\n    constructor(scene, primitiveType) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, batchingLayer, renderPass) {\n\n        const model = batchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = batchingLayer._state;\n        const rtcCenter = batchingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, defaultColor);\n        }\n\n        const viewMat = (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix;\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMat);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.lineWidth(scene.linesMaterial.lineWidth);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = batchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, batchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        state.indicesBuf.bind();\n\n        gl.drawElements(gl.LINES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uColor = program.getLocation(\"color\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n\n        const src = [];\n\n        src.push(\"// Lines batching silhouette vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        src.push(\"uniform vec4 color;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.y = NOT_RENDERED | SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | SILHOUETTE_XRAYED\n        // renderPass = SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n\n        src.push(`if (int(flags.y) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"} else {\");\n\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Lines batching silhouette fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"uniform vec4 color;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = color;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {LinesBatchingSilhouetteRenderer};","import {LinesBatchingColorRenderer} from \"./renderers/LinesBatchingColorRenderer.js\";\nimport {LinesBatchingSilhouetteRenderer} from \"./renderers/LinesBatchingSilhouetteRenderer.js\";\n\n/**\n * @private\n */\nclass LinesBatchingRenderers {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    _compile() {\n        if (this._colorRenderer && (!this._colorRenderer.getValid())) {\n            this._colorRenderer.destroy();\n            this._colorRenderer = null;\n        }\n        if (this._silhouetteRenderer && (!this._silhouetteRenderer.getValid())) {\n            this._silhouetteRenderer.destroy();\n            this._silhouetteRenderer = null;\n        }\n    }\n\n    get colorRenderer() {\n        if (!this._colorRenderer) {\n            this._colorRenderer = new LinesBatchingColorRenderer(this._scene, false);\n        }\n        return this._colorRenderer;\n    }\n\n    get silhouetteRenderer() {\n        if (!this._silhouetteRenderer) {\n            this._silhouetteRenderer = new LinesBatchingSilhouetteRenderer(this._scene);\n        }\n        return this._silhouetteRenderer;\n    }\n\n    _destroy() {\n        if (this._colorRenderer) {\n            this._colorRenderer.destroy();\n        }\n        if (this._silhouetteRenderer) {\n            this._silhouetteRenderer.destroy();\n        }\n    }\n}\n\nconst cachedRenderers = {};\n\nfunction getBatchingRenderers(scene) {\n    const sceneId = scene.id;\n    let batchingRenderers = cachedRenderers[sceneId];\n    if (!batchingRenderers) {\n        batchingRenderers = new LinesBatchingRenderers(scene);\n        cachedRenderers[sceneId] = batchingRenderers;\n        batchingRenderers._compile();\n        scene.on(\"compile\", () => {\n            batchingRenderers._compile();\n        });\n        scene.on(\"destroyed\", () => {\n            delete cachedRenderers[sceneId];\n            batchingRenderers._destroy();\n        });\n    }\n    return batchingRenderers;\n}\n\nexport {getBatchingRenderers};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\n\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\n/**\n * @private\n */\nclass LinesBatchingBuffer {\n\n    constructor(maxGeometryBatchSize = 5000000) {\n\n        if (bigIndicesSupported) {\n            if (maxGeometryBatchSize > 5000000) {\n                maxGeometryBatchSize = 5000000;\n            }\n        } else {\n            if (maxGeometryBatchSize > 65530) {\n                maxGeometryBatchSize = 65530;\n            }\n        }\n\n        this.maxVerts = maxGeometryBatchSize;\n        this.maxIndices = maxGeometryBatchSize * 3; // Rough rule-of-thumb\n        this.positions = [];\n        this.colors = [];\n        this.flags = [];\n        this.flags2 = [];\n        this.offsets = [];\n        this.indices = [];\n    }\n}\n\nexport {LinesBatchingBuffer};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\nimport {ENTITY_FLAGS} from '../../ENTITY_FLAGS.js';\nimport {RENDER_PASSES} from '../../RENDER_PASSES.js';\n\nimport {math} from \"../../../../math/math.js\";\nimport {RenderState} from \"../../../../webgl/RenderState.js\";\nimport {ArrayBuf} from \"../../../../webgl/ArrayBuf.js\";\nimport {geometryCompressionUtils} from \"../../../../math/geometryCompressionUtils.js\";\nimport {getBatchingRenderers} from \"./LinesBatchingRenderers.js\";\nimport {LinesBatchingBuffer} from \"./LinesBatchingBuffer.js\";\nimport {quantizePositions} from \"../../compression.js\";\n\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\nconst tempOBB3 = math.OBB3();\n\n/**\n * @private\n */\nclass LinesBatchingLayer {\n\n    /**\n     * @param model\n     * @param cfg\n     * @param cfg.layerIndex\n     * @param cfg.positionsDecodeMatrix\n     * @param cfg.maxGeometryBatchSize\n     * @param cfg.rtcCenter\n     * @param cfg.scratchMemory\n     */\n    constructor(model, cfg) {\n\n        /**\n         * Index of this LinesBatchingLayer in {@link PerformanceModel#_layerList}.\n         * @type {Number}\n         */\n        this.layerIndex = cfg.layerIndex;\n\n        this._batchingRenderers = getBatchingRenderers(model.scene);\n        this.model = model;\n        this._buffer = new LinesBatchingBuffer(cfg.maxGeometryBatchSize);\n        this._scratchMemory = cfg.scratchMemory;\n\n        this._state = new RenderState({\n            positionsBuf: null,\n            offsetsBuf: null,\n            colorsBuf: null,\n            flagsBuf: null,\n            flags2Buf: null,\n            indicesBuf: null,\n            positionsDecodeMatrix: math.mat4(),\n            rtcCenter: null\n        });\n\n        // These counts are used to avoid unnecessary render passes\n        this._numPortions = 0;\n        this._numVisibleLayerPortions = 0;\n        this._numTransparentLayerPortions = 0;\n        this._numXRayedLayerPortions = 0;\n        this._numSelectedLayerPortions = 0;\n        this._numHighlightedLayerPortions = 0;\n        this._numClippableLayerPortions = 0;\n        this._numEdgesLayerPortions = 0;\n        this._numPickableLayerPortions = 0;\n        this._numCulledLayerPortions = 0;\n\n        this._modelAABB = math.collapseAABB3(); // Model-space AABB\n        this._portions = [];\n\n        this._finalized = false;\n        this._positionsDecodeMatrix = cfg.positionsDecodeMatrix;\n        this._preCompressed = (!!this._positionsDecodeMatrix);\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n        }\n\n        /**\n         * The axis-aligned World-space boundary of this LinesBatchingLayer's positions.\n         * @type {*|Float64Array}\n         */\n        this.aabb = math.collapseAABB3();\n    }\n\n    /**\n     * Tests if there is room for another portion in this LinesBatchingLayer.\n     *\n     * @param lenPositions Number of positions we'd like to create in the portion.\n     * @param lenIndices Number of indices we'd like to create in this portion.\n     * @returns {boolean} True if OK to create another portion.\n     */\n    canCreatePortion(lenPositions, lenIndices) {\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n        return ((this._buffer.positions.length + lenPositions) < (this._buffer.maxVerts * 3) && (this._buffer.indices.length + lenIndices) < (this._buffer.maxIndices));\n    }\n\n    /**\n     * Creates a new portion within this LinesBatchingLayer, returns the new portion ID.\n     *\n     * Gives the portion the specified geometry, color and matrix.\n     *\n     * @param cfg.positions Flat float Local-space positions array.\n     * @param cfg.indices  Flat int indices array.\n     * @param cfg.color Quantized RGB color [0..255,0..255,0..255,0..255]\n     * @param cfg.opacity Opacity [0..255]\n     * @param [cfg.meshMatrix] Flat float 4x4 matrix\n     * @param [cfg.worldMatrix] Flat float 4x4 matrix\n     * @param cfg.worldAABB Flat float AABB World-space AABB\n     * @param cfg.pickColor Quantized pick color\n     * @returns {number} Portion ID\n     */\n    createPortion(cfg) {\n\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n\n        const positions = cfg.positions;\n        const indices = cfg.indices;\n        const color = cfg.color;\n        const opacity = cfg.opacity;\n        const meshMatrix = cfg.meshMatrix;\n        const worldMatrix = cfg.worldMatrix;\n        const worldAABB = cfg.worldAABB;\n        const pickColor = cfg.pickColor;\n\n        const buffer = this._buffer;\n        const positionsIndex = buffer.positions.length;\n        const vertsIndex = positionsIndex / 3;\n        const numVerts = positions.length / 3;\n        const lenPositions = positions.length;\n\n        if (this._preCompressed) {\n\n            for (let i = 0, len = positions.length; i < len; i++) {\n                buffer.positions.push(positions[i]);\n            }\n\n            const bounds = geometryCompressionUtils.getPositionsBounds(positions);\n\n            const min = geometryCompressionUtils.decompressPosition(bounds.min, this._positionsDecodeMatrix, []);\n            const max = geometryCompressionUtils.decompressPosition(bounds.max, this._positionsDecodeMatrix, []);\n\n            worldAABB[0] = min[0];\n            worldAABB[1] = min[1];\n            worldAABB[2] = min[2];\n            worldAABB[3] = max[0];\n            worldAABB[4] = max[1];\n            worldAABB[5] = max[2];\n\n            if (worldMatrix) {\n                math.AABB3ToOBB3(worldAABB, tempOBB3);\n                math.transformOBB3(worldMatrix, tempOBB3);\n                math.OBB3ToAABB3(tempOBB3, worldAABB);\n            }\n\n        } else {\n\n            const positionsBase = buffer.positions.length;\n\n            for (let i = 0, len = positions.length; i < len; i++) {\n                buffer.positions.push(positions[i]);\n            }\n\n            if (meshMatrix) {\n\n                for (let i = positionsBase, len = positionsBase + lenPositions; i < len; i += 3) {\n\n                    tempVec4a[0] = buffer.positions[i + 0];\n                    tempVec4a[1] = buffer.positions[i + 1];\n                    tempVec4a[2] = buffer.positions[i + 2];\n\n                    math.transformPoint4(meshMatrix, tempVec4a, tempVec4b);\n\n                    buffer.positions[i + 0] = tempVec4b[0];\n                    buffer.positions[i + 1] = tempVec4b[1];\n                    buffer.positions[i + 2] = tempVec4b[2];\n\n                    math.expandAABB3Point3(this._modelAABB, tempVec4b);\n\n                    if (worldMatrix) {\n                        math.transformPoint4(worldMatrix, tempVec4b, tempVec4c);\n                        math.expandAABB3Point3(worldAABB, tempVec4c);\n                    } else {\n                        math.expandAABB3Point3(worldAABB, tempVec4b);\n                    }\n                }\n\n            } else {\n\n                for (let i = positionsBase, len = positionsBase + lenPositions; i < len; i += 3) {\n\n                    tempVec4a[0] = buffer.positions[i + 0];\n                    tempVec4a[1] = buffer.positions[i + 1];\n                    tempVec4a[2] = buffer.positions[i + 2];\n\n                    math.expandAABB3Point3(this._modelAABB, tempVec4a);\n\n                    if (worldMatrix) {\n                        math.transformPoint4(worldMatrix, tempVec4a, tempVec4b);\n                        math.expandAABB3Point3(worldAABB, tempVec4b);\n                    } else {\n                        math.expandAABB3Point3(worldAABB, tempVec4a);\n                    }\n                }\n            }\n        }\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            worldAABB[0] += rtcCenter[0];\n            worldAABB[1] += rtcCenter[1];\n            worldAABB[2] += rtcCenter[2];\n            worldAABB[3] += rtcCenter[0];\n            worldAABB[4] += rtcCenter[1];\n            worldAABB[5] += rtcCenter[2];\n        }\n\n        math.expandAABB3(this.aabb, worldAABB);\n\n        if (color) {\n\n            const r = color[0]; // Color is pre-quantized by PerformanceModel\n            const g = color[1];\n            const b = color[2];\n            const a = opacity;\n\n            for (let i = 0; i < numVerts; i++) {\n                buffer.colors.push(r);\n                buffer.colors.push(g);\n                buffer.colors.push(b);\n                buffer.colors.push(a);\n            }\n        }\n\n        if (indices) {\n            for (let i = 0, len = indices.length; i < len; i++) {\n                buffer.indices.push(indices[i] + vertsIndex);\n            }\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            for (let i = 0; i < numVerts; i++) {\n                buffer.offsets.push(0);\n                buffer.offsets.push(0);\n                buffer.offsets.push(0);\n            }\n        }\n\n        const portionId = this._portions.length / 2;\n\n        this._portions.push(vertsIndex);\n        this._portions.push(numVerts);\n\n        this._numPortions++;\n        this.model.numPortions++;\n\n        return portionId;\n    }\n\n    /**\n     * Builds batch VBOs from appended geometries.\n     * No more portions can then be created.\n     */\n    finalize() {\n\n        if (this._finalized) {\n            this.model.error(\"Already finalized\");\n            return;\n        }\n\n        const state = this._state;\n        const gl = this.model.scene.canvas.gl;\n        const buffer = this._buffer;\n\n        if (buffer.positions.length > 0) {\n            if (this._preCompressed) {\n                state.positionsDecodeMatrix = this._positionsDecodeMatrix;\n                const positions = new Uint16Array(buffer.positions);\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, buffer.positions.length, 3, gl.STATIC_DRAW);\n            } else {\n                const positions = new Float32Array(buffer.positions);\n                const quantizedPositions = quantizePositions(positions, this._modelAABB,  state.positionsDecodeMatrix);\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, quantizedPositions, buffer.positions.length, 3, gl.STATIC_DRAW);\n            }\n        }\n\n        if (buffer.colors.length > 0) {\n            const colors = new Uint8Array(buffer.colors);\n            let normalized = false;\n            state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, colors, buffer.colors.length, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n\n        if (buffer.colors.length > 0) { // Because we build flags arrays here, get their length from the colors array\n            const flagsLength = buffer.colors.length;\n            const flags = new Uint8Array(flagsLength);\n            const flags2 = new Uint8Array(flagsLength);\n            let notNormalized = false;\n            let normalized = true;\n            state.flagsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, flags, flags.length, 4, gl.DYNAMIC_DRAW, notNormalized);\n            state.flags2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, flags2, flags2.length, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            if (buffer.offsets.length > 0) {\n                const offsets = new Float32Array(buffer.offsets);\n                state.offsetsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, offsets, buffer.offsets.length, 3, gl.DYNAMIC_DRAW);\n            }\n        }\n\n        const bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\n        if (buffer.indices.length > 0) {\n            const indices = bigIndicesSupported ? new Uint32Array(buffer.indices) : new Uint16Array(buffer.indices);\n            state.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, indices, buffer.indices.length, 1, gl.STATIC_DRAW);\n        }\n\n        this._buffer = null;\n        this._finalized = true;\n    }\n\n    initFlags(portionId, flags, meshTransparent) {\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        }\n        if (meshTransparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n        this._setFlags2(portionId, flags);\n    }\n\n    setVisible(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        } else {\n            this._numVisibleLayerPortions--;\n            this.model.numVisibleLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setHighlighted(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        } else {\n            this._numHighlightedLayerPortions--;\n            this.model.numHighlightedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setXRayed(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        } else {\n            this._numXRayedLayerPortions--;\n            this.model.numXRayedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setSelected(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        } else {\n            this._numSelectedLayerPortions--;\n            this.model.numSelectedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setEdges(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        } else {\n            this._numEdgesLayerPortions--;\n            this.model.numEdgesLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setClippable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        } else {\n            this._numClippableLayerPortions--;\n            this.model.numClippableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags);\n    }\n\n    setCulled(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        } else {\n            this._numCulledLayerPortions--;\n            this.model.numCulledLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setCollidable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n    }\n\n    setPickable(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        } else {\n            this._numPickableLayerPortions--;\n            this.model.numPickableLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setColor(portionId, color) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstColor = vertexBase * 4;\n        const lenColor = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenColor);\n        const r = color[0];\n        const g = color[1];\n        const b = color[2];\n        const a = color[3];\n        for (let i = 0; i < lenColor; i += 4) {\n            tempArray[i + 0] = r;\n            tempArray[i + 1] = g;\n            tempArray[i + 2] = b;\n            tempArray[i + 3] = a;\n        }\n        this._state.colorsBuf.setData(tempArray, firstColor, lenColor);\n    }\n\n    setTransparent(portionId, flags, transparent) {\n        if (transparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        } else {\n            this._numTransparentLayerPortions--;\n            this.model.numTransparentLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    _setFlags(portionId, flags, transparent) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstFlag = vertexBase * 4;\n        const lenFlags = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenFlags);\n\n        const visible = !!(flags & ENTITY_FLAGS.VISIBLE);\n        const xrayed = !!(flags & ENTITY_FLAGS.XRAYED);\n        const highlighted = !!(flags & ENTITY_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & ENTITY_FLAGS.SELECTED);\n        const edges = !!(flags & ENTITY_FLAGS.EDGES);\n        const pickable = !!(flags & ENTITY_FLAGS.PICKABLE);\n        const culled = !!(flags & ENTITY_FLAGS.CULLED);\n\n        // Color\n\n        let f0;\n        if (!visible || culled || xrayed) {\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (transparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n\n        // Silhouette\n\n        let f1;\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Pick\n\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED;\n\n        for (let i = 0; i < lenFlags; i += 4) {\n            tempArray[i + 0] = f0; // x - color\n            tempArray[i + 1] = f1; // y - silhouette - select/highlight/xray\n            tempArray[i + 2] = 0; // z - edges\n            tempArray[i + 3] = f3; // w - pickable\n        }\n\n        this._state.flagsBuf.setData(tempArray, firstFlag, lenFlags);\n    }\n\n    _setFlags2(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstFlag = vertexBase * 4;\n        const lenFlags = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenFlags);\n        const clippable = !!(flags & ENTITY_FLAGS.CLIPPABLE) ? 255 : 0;\n        for (let i = 0; i < lenFlags; i += 4) {\n            tempArray[i + 0] = clippable;\n        }\n        this._state.flags2Buf.setData(tempArray, firstFlag, lenFlags);\n    }\n\n    setOffset(portionId, offset) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (!this.model.scene.entityOffsetsEnabled) {\n            this.model.error(\"Entity#offset not enabled for this Viewer\"); // See Viewer entityOffsetsEnabled\n            return;\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstOffset = vertexBase * 3;\n        const lenOffsets = numVerts * 3;\n        const tempArray = this._scratchMemory.getFloat32Array(lenOffsets);\n        const x = offset[0];\n        const y = offset[1];\n        const z = offset[2];\n        for (let i = 0; i < lenOffsets; i += 3) {\n            tempArray[i + 0] = x;\n            tempArray[i + 1] = y;\n            tempArray[i + 2] = z;\n        }\n        this._state.offsetsBuf.setData(tempArray, firstOffset, lenOffsets);\n    }\n\n    //-- RENDERING ----------------------------------------------------------------------------------------------\n\n    drawColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._batchingRenderers.colorRenderer) {\n            this._batchingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    drawColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === 0 || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._batchingRenderers.colorRenderer) {\n            this._batchingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n        }\n    }\n\n    drawDepth(renderFlags, frameCtx) {\n    }\n\n    drawNormals(renderFlags, frameCtx) {\n    }\n\n    drawSilhouetteXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.silhouetteRenderer) {\n            this._batchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.silhouetteRenderer) {\n            this._batchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n        }\n    }\n\n    drawSilhouetteSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        if (this._batchingRenderers.silhouetteRenderer) {\n            this._batchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_SELECTED);\n        }\n    }\n\n    drawEdgesColorOpaque(renderFlags, frameCtx) {\n    }\n\n    drawEdgesColorTransparent(renderFlags, frameCtx) {\n    }\n\n    drawEdgesHighlighted(renderFlags, frameCtx) {\n    }\n\n    drawEdgesSelected(renderFlags, frameCtx) {\n    }\n\n    drawEdgesXRayed(renderFlags, frameCtx) {\n    }\n\n    drawPickMesh(frameCtx) {\n    }\n\n    drawPickDepths(frameCtx) {\n    }\n\n    drawPickNormals(frameCtx) {\n    }\n\n    drawOcclusion(frameCtx) {\n    }\n\n    drawShadow(frameCtx) {\n    }\n\n    destroy() {\n        const state = this._state;\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n            state.positionsBuf = null;\n        }\n        if (state.offsetsBuf) {\n            state.offsetsBuf.destroy();\n            state.offsetsBuf = null;\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n            state.colorsBuf = null;\n        }\n        if (state.flagsBuf) {\n            state.flagsBuf.destroy();\n            state.flagsBuf = null;\n        }\n        if (state.flags2Buf) {\n            state.flags2Buf.destroy();\n            state.flags2Buf = null;\n        }\n        if (state.indicesBuf) {\n            state.indicesBuf.destroy();\n            state.indicessBuf = null;\n        }\n        state.destroy();\n    }\n}\n\nexport {LinesBatchingLayer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass LinesInstancingColorRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.lineWidth(scene.linesMaterial.lineWidth);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.LINES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aOffset = program.getAttribute(\"offset\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uOcclusionTexture = \"uOcclusionTexture\";\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n        this._program.bind();\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Lines instancing color vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"uniform vec4 lightAmbient;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE | COLOR_TRANSPARENT\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0,  float(color.a) / 255.0);\");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        let i;\n        let len;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Lines instancing color fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"uniform float logDepthBufFC;\");\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n\n        // Doing SAO blend in the main solid fill draw shader just so that edge lines can be drawn over the top\n        // Would be more efficient to defer this, then render lines later, using same depth buffer for Z-reject\n\n        if (this._withSAO) {\n            src.push(\"   float viewportWidth     = uSAOParams[0];\");\n            src.push(\"   float viewportHeight    = uSAOParams[1];\");\n            src.push(\"   float blendCutoff       = uSAOParams[2];\");\n            src.push(\"   float blendFactor       = uSAOParams[3];\");\n            src.push(\"   vec2 uv                 = vec2(gl_FragCoord.x / viewportWidth, gl_FragCoord.y / viewportHeight);\");\n            src.push(\"   float ambient           = smoothstep(blendCutoff, 1.0, unpackRGBAToDepth(texture2D(uOcclusionTexture, uv))) * blendFactor;\");\n            src.push(\"   gl_FragColor            = vec4(vColor.rgb * ambient, vColor.a);\");\n        } else {\n            src.push(\"    gl_FragColor           = vColor;\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {LinesInstancingColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass LinesInstancingSilhouetteRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n\n        if (!this._program) {\n            this._allocate(instancingLayer.model.scene);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, math.vec3([1, 1, 1]));\n        }\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.lineWidth(scene.linesMaterial.lineWidth);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf, gl.UNSIGNED_BYTE, true);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        state.indicesBuf.bind();\n\n        instanceExt.drawElementsInstancedANGLE(gl.LINES, state.indicesBuf.numItems, state.indicesBuf.itemType, 0, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0); // TODO: Is this needed\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uColor = program.getLocation(\"color\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Lines instancing silhouette vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"uniform vec4 color;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.y = NOT_RENDERED | SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n        // renderPass = SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n\n        src.push(`if (int(flags.y) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Lines instancing silhouette fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"uniform vec4 color;\");\n        src.push(\"void main(void) {\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = color;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {LinesInstancingSilhouetteRenderer};","import {LinesInstancingColorRenderer} from \"./renderers/LinesInstancingColorRenderer.js\";\nimport {LinesInstancingSilhouetteRenderer} from \"./renderers/LinesInstancingSilhouetteRenderer.js\";\n\n/**\n * @private\n */\nclass LinesInstancingRenderers {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    _compile() {\n        if (this._colorRenderer && (!this._colorRenderer.getValid())) {\n            this._colorRenderer.destroy();\n            this._colorRenderer = null;\n        }\n        if (this._silhouetteRenderer && (!this._silhouetteRenderer.getValid())) {\n            this._silhouetteRenderer.destroy();\n            this._silhouetteRenderer = null;\n        }\n    }\n\n    get colorRenderer() {\n        if (!this._colorRenderer) {\n            this._colorRenderer = new LinesInstancingColorRenderer(this._scene);\n        }\n        return this._colorRenderer;\n    }\n\n    get silhouetteRenderer() {\n        if (!this._silhouetteRenderer) {\n            this._silhouetteRenderer = new LinesInstancingSilhouetteRenderer(this._scene);\n        }\n        return this._silhouetteRenderer;\n    }\n\n    _destroy() {\n        if (this._colorRenderer) {\n            this._colorRenderer.destroy();\n        }\n        if (this._silhouetteRenderer) {\n            this._silhouetteRenderer.destroy();\n        }\n    }\n}\n\nconst cachedRenderers = {};\n\nfunction getInstancingRenderers(scene) {\n    const sceneId = scene.id;\n    let instancingRenderers = cachedRenderers[sceneId];\n    if (!instancingRenderers) {\n        instancingRenderers = new LinesInstancingRenderers(scene);\n        cachedRenderers[sceneId] = instancingRenderers;\n        instancingRenderers._compile();\n        scene.on(\"compile\", () => {\n            instancingRenderers._compile();\n        });\n        scene.on(\"destroyed\", () => {\n            delete cachedRenderers[sceneId];\n            instancingRenderers._destroy();\n        });\n    }\n    return instancingRenderers;\n}\n\nexport {getInstancingRenderers};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\nimport {ENTITY_FLAGS} from '../../ENTITY_FLAGS.js';\nimport {RENDER_PASSES} from '../../RENDER_PASSES.js';\n\nimport {math} from \"../../../../math/math.js\";\nimport {RenderState} from \"../../../../webgl/RenderState.js\";\nimport {ArrayBuf} from \"../../../../webgl/ArrayBuf.js\";\nimport {geometryCompressionUtils} from \"../../../../math/geometryCompressionUtils.js\";\nimport {getInstancingRenderers} from \"./LinesInstancingRenderers.js\";\nimport {quantizePositions} from \"../../compression.js\";\n\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\nconst tempUint8Vec4 = new Uint8Array(4);\n\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\n\nconst tempVec3fa = new Float32Array(3);\n\n/**\n * @private\n */\nclass LinesInstancingLayer {\n\n    /**\n     * @param model\n     * @param cfg\n     * @param cfg.layerIndex\n     * @param cfg.positions Flat float Local-space positions array.\n     * @param cfg.indices Flat int indices array.\n     * @param cfg.rtcCenter\n     */\n    constructor(model, cfg) {\n\n        /**\n         * State sorting key.\n         * @type {string}\n         */\n        this.sortId = \"LinesInstancingLayer\";\n\n        /**\n         * Index of this InstancingLayer in PerformanceModel#_layerList\n         * @type {Number}\n         */\n        this.layerIndex = cfg.layerIndex;\n\n        this._linesInstancingRenderers = getInstancingRenderers(model.scene);\n        this.model = model;\n        this._aabb = math.collapseAABB3();\n\n        const gl = model.scene.canvas.gl;\n\n        const stateCfg = {\n            positionsDecodeMatrix: math.mat4(),\n            numInstances: 0,\n            obb: math.OBB3(),\n            rtcCenter: null\n        };\n\n        const preCompressed = (!!cfg.positionsDecodeMatrix);\n\n        if (cfg.positions) {\n\n            if (preCompressed) {\n\n                let normalized = false;\n                stateCfg.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, cfg.positions, cfg.positions.length, 3, gl.STATIC_DRAW, normalized);\n                stateCfg.positionsDecodeMatrix.set(cfg.positionsDecodeMatrix);\n\n                let localAABB = math.collapseAABB3();\n                math.expandAABB3Points3(localAABB, cfg.positions);\n                geometryCompressionUtils.decompressAABB(localAABB, stateCfg.positionsDecodeMatrix);\n                math.AABB3ToOBB3(localAABB, stateCfg.obb);\n\n            } else {\n\n                let lenPositions = cfg.positions.length;\n                let localAABB = math.collapseAABB3();\n                math.expandAABB3Points3(localAABB, cfg.positions);\n                math.AABB3ToOBB3(localAABB, stateCfg.obb);\n                const quantizedPositions = quantizePositions(cfg.positions, localAABB, stateCfg.positionsDecodeMatrix);\n                let normalized = false;\n                stateCfg.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, quantizedPositions, lenPositions, 3, gl.STATIC_DRAW, normalized);\n            }\n        }\n\n        if (cfg.indices) {\n            stateCfg.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, bigIndicesSupported ? new Uint32Array(cfg.indices) : new Uint16Array(cfg.indices), cfg.indices.length, 1, gl.STATIC_DRAW);\n        }\n\n        this._state = new RenderState(stateCfg);\n\n        // These counts are used to avoid unnecessary render passes\n        this._numPortions = 0;\n        this._numVisibleLayerPortions = 0;\n        this._numTransparentLayerPortions = 0;\n        this._numXRayedLayerPortions = 0;\n        this._numHighlightedLayerPortions = 0;\n        this._numSelectedLayerPortions = 0;\n        this._numClippableLayerPortions = 0;\n        this._numEdgesLayerPortions = 0;\n        this._numPickableLayerPortions = 0;\n        this._numCulledLayerPortions = 0;\n\n        /** @private */\n        this.numIndices = (cfg.indices) ? cfg.indices.length / 3 : 0;\n\n        // Vertex arrays\n        this._colors = [];\n        this._offsets = [];\n\n        // Modeling matrix per instance, array for each column\n        this._modelMatrixCol0 = [];\n        this._modelMatrixCol1 = [];\n        this._modelMatrixCol2 = [];\n\n        this._portions = [];\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n        }\n\n        this._finalized = false;\n\n        /**\n         * The axis-aligned World-space boundary of this InstancingLayer's positions.\n         * @type {*|Float64Array}\n         */\n        this.aabb = math.collapseAABB3();\n    }\n\n    /**\n     * Creates a new portion within this InstancingLayer, returns the new portion ID.\n     *\n     * The portion will instance this InstancingLayer's geometry.\n     *\n     * Gives the portion the specified color and matrix.\n     *\n     * @param cfg Portion params\n     * @param cfg.color Color [0..255,0..255,0..255]\n     * @param cfg.opacity Opacity [0..255].\n     * @param cfg.meshMatrix Flat float 4x4 matrix.\n     * @param [cfg.worldMatrix] Flat float 4x4 matrix.\n     * @param cfg.aabb Flat float AABB.\n     * @returns {number} Portion ID.\n     */\n    createPortion(cfg) {\n\n        const color = cfg.color;\n        const opacity = cfg.opacity;\n        const meshMatrix = cfg.meshMatrix;\n        const worldMatrix = cfg.worldMatrix;\n        const worldAABB = cfg.aabb;\n\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n\n        // TODO: find AABB for portion by transforming the geometry local AABB by the given meshMatrix?\n\n        const r = color[0]; // Color is pre-quantized by PerformanceModel\n        const g = color[1];\n        const b = color[2];\n        const a = color[3];\n\n        this._colors.push(r);\n        this._colors.push(g);\n        this._colors.push(b);\n        this._colors.push(opacity);\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            this._offsets.push(0);\n            this._offsets.push(0);\n            this._offsets.push(0);\n        }\n\n        this._modelMatrixCol0.push(meshMatrix[0]);\n        this._modelMatrixCol0.push(meshMatrix[4]);\n        this._modelMatrixCol0.push(meshMatrix[8]);\n        this._modelMatrixCol0.push(meshMatrix[12]);\n\n        this._modelMatrixCol1.push(meshMatrix[1]);\n        this._modelMatrixCol1.push(meshMatrix[5]);\n        this._modelMatrixCol1.push(meshMatrix[9]);\n        this._modelMatrixCol1.push(meshMatrix[13]);\n\n        this._modelMatrixCol2.push(meshMatrix[2]);\n        this._modelMatrixCol2.push(meshMatrix[6]);\n        this._modelMatrixCol2.push(meshMatrix[10]);\n        this._modelMatrixCol2.push(meshMatrix[14]);\n\n        // Expand AABB\n\n        math.collapseAABB3(worldAABB);\n        const obb = this._state.obb;\n        const lenPositions = obb.length;\n        for (let i = 0; i < lenPositions; i += 4) {\n            tempVec4a[0] = obb[i + 0];\n            tempVec4a[1] = obb[i + 1];\n            tempVec4a[2] = obb[i + 2];\n            math.transformPoint4(meshMatrix, tempVec4a, tempVec4b);\n            if (worldMatrix) {\n                math.transformPoint4(worldMatrix, tempVec4b, tempVec4c);\n                math.expandAABB3Point3(worldAABB, tempVec4c);\n            } else {\n                math.expandAABB3Point3(worldAABB, tempVec4b);\n            }\n        }\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            worldAABB[0] += rtcCenter[0];\n            worldAABB[1] += rtcCenter[1];\n            worldAABB[2] += rtcCenter[2];\n            worldAABB[3] += rtcCenter[0];\n            worldAABB[4] += rtcCenter[1];\n            worldAABB[5] += rtcCenter[2];\n        }\n\n        math.expandAABB3(this.aabb, worldAABB);\n\n        this._state.numInstances++;\n\n        const portionId = this._portions.length;\n        this._portions.push({});\n\n        this._numPortions++;\n        this.model.numPortions++;\n\n        return portionId;\n    }\n\n    finalize() {\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n        const gl = this.model.scene.canvas.gl;\n        const colorsLength = this._colors.length;\n        const flagsLength = colorsLength;\n        if (colorsLength > 0) {\n            let notNormalized = false;\n            this._state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(this._colors), this._colors.length, 4, gl.DYNAMIC_DRAW, notNormalized);\n            this._colors = []; // Release memory\n        }\n        if (flagsLength > 0) {\n            // Because we only build flags arrays here, \n            // get their length from the colors array\n            let notNormalized = false;\n            let normalized = true;\n            this._state.flagsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(flagsLength), flagsLength, 4, gl.DYNAMIC_DRAW, notNormalized);\n            this._state.flags2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(flagsLength), flagsLength, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n        if (this.model.scene.entityOffsetsEnabled) {\n            if (this._offsets.length > 0) {\n                const notNormalized = false;\n                this._state.offsetsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._offsets), this._offsets.length, 3, gl.DYNAMIC_DRAW, notNormalized);\n                this._offsets = []; // Release memory\n            }\n        }\n        if (this._modelMatrixCol0.length > 0) {\n            const normalized = false;\n            this._state.modelMatrixCol0Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol0), this._modelMatrixCol0.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelMatrixCol1Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol1), this._modelMatrixCol1.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelMatrixCol2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol2), this._modelMatrixCol2.length, 4, gl.STATIC_DRAW, normalized);\n            this._modelMatrixCol0 = [];\n            this._modelMatrixCol1 = [];\n            this._modelMatrixCol2 = [];\n        }\n        this._finalized = true;\n    }\n\n    // The following setters are called by PerformanceMesh, in turn called by PerformanceNode, only after the layer is finalized.\n    // It's important that these are called after finalize() in order to maintain integrity of counts like _numVisibleLayerPortions etc.\n\n    initFlags(portionId, flags, meshTransparent) {\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        }\n        if (meshTransparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n        this._setFlags2(portionId, flags);\n    }\n\n    setVisible(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        } else {\n            this._numVisibleLayerPortions--;\n            this.model.numVisibleLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setHighlighted(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        } else {\n            this._numHighlightedLayerPortions--;\n            this.model.numHighlightedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setXRayed(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        } else {\n            this._numXRayedLayerPortions--;\n            this.model.numXRayedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setSelected(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        } else {\n            this._numSelectedLayerPortions--;\n            this.model.numSelectedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setEdges(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        } else {\n            this._numEdgesLayerPortions--;\n            this.model.numEdgesLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setClippable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        } else {\n            this._numClippableLayerPortions--;\n            this.model.numClippableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags);\n    }\n\n    setCollidable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n    }\n\n    setPickable(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        } else {\n            this._numPickableLayerPortions--;\n            this.model.numPickableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags, meshTransparent);\n    }\n\n    setCulled(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        } else {\n            this._numCulledLayerPortions--;\n            this.model.numCulledLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setColor(portionId, color) { // RGBA color is normalized as ints\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        tempUint8Vec4[0] = color[0];\n        tempUint8Vec4[1] = color[1];\n        tempUint8Vec4[2] = color[2];\n        tempUint8Vec4[3] = color[3];\n        this._state.colorsBuf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    setTransparent(portionId, flags, transparent) {\n        if (transparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        } else {\n            this._numTransparentLayerPortions--;\n            this.model.numTransparentLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    _setFlags(portionId, flags, meshTransparent) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const visible = !!(flags & ENTITY_FLAGS.VISIBLE);\n        const xrayed = !!(flags & ENTITY_FLAGS.XRAYED);\n        const highlighted = !!(flags & ENTITY_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & ENTITY_FLAGS.SELECTED);\n        const edges = !!(flags & ENTITY_FLAGS.EDGES);\n        const pickable = !!(flags & ENTITY_FLAGS.PICKABLE);\n        const culled = !!(flags & ENTITY_FLAGS.CULLED);\n\n        // Normal fill\n\n        let f0;\n        if (!visible || culled || xrayed) {\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (meshTransparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n\n        // Emphasis fill\n\n        let f1;\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Edges\n\n        let f2 = 0;\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (meshTransparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Pick\n\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED;\n\n        tempUint8Vec4[0] = f0; // x - normal fill\n        tempUint8Vec4[1] = f1; // y - emphasis fill\n        tempUint8Vec4[2] = f2; // z - edges\n        tempUint8Vec4[3] = f3; // w - pick\n\n        this._state.flagsBuf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    _setFlags2(portionId, flags) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const clippable = !!(flags & ENTITY_FLAGS.CLIPPABLE) ? 255 : 0;\n        tempUint8Vec4[0] = clippable;\n\n        this._state.flags2Buf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    setOffset(portionId, offset) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (!this.model.scene.entityOffsetsEnabled) {\n            this.model.error(\"Entity#offset not enabled for this Viewer\"); // See Viewer entityOffsetsEnabled\n            return;\n        }\n        tempVec3fa[0] = offset[0];\n        tempVec3fa[1] = offset[1];\n        tempVec3fa[2] = offset[2];\n        this._state.offsetsBuf.setData(tempVec3fa, portionId * 3, 3);\n    }\n\n    // ---------------------- NORMAL RENDERING -----------------------------------\n\n    drawColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n\n        if (this._linesInstancingRenderers.colorRenderer) {\n            this._linesInstancingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    drawColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === 0 || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._linesInstancingRenderers.colorRenderer) {\n            this._linesInstancingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n        }\n    }\n\n    // ---------------------- RENDERING SAO POST EFFECT TARGETS --------------\n\n    drawDepth(renderFlags, frameCtx) {\n    }\n\n    drawNormals(renderFlags, frameCtx) {\n    }\n\n    // ---------------------- EMPHASIS RENDERING -----------------------------------\n\n    drawSilhouetteXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        if (this._linesInstancingRenderers.silhouetteRenderer) {\n            this._linesInstancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        if (this._linesInstancingRenderers.silhouetteRenderer) {\n            this._linesInstancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n        }\n    }\n\n    drawSilhouetteSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        if (this._linesInstancingRenderers.silhouetteRenderer) {\n            this._linesInstancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_SELECTED);\n        }\n    }\n\n    // ---------------------- EDGES RENDERING -----------------------------------\n\n    drawEdgesColorOpaque(renderFlags, frameCtx) {\n    }\n\n    drawEdgesColorTransparent(renderFlags, frameCtx) {\n    }\n\n    drawEdgesXRayed(renderFlags, frameCtx) {\n    }\n\n    drawEdgesHighlighted(renderFlags, frameCtx) {\n    }\n\n    drawEdgesSelected(renderFlags, frameCtx) {\n    }\n\n    // ---------------------- OCCLUSION CULL RENDERING -----------------------------------\n\n    drawOcclusion(renderFlags, frameCtx) {\n    }\n\n    // ---------------------- SHADOW BUFFER RENDERING -----------------------------------\n\n    drawShadow(renderFlags, frameCtx) {\n    }\n\n    //---- PICKING ----------------------------------------------------------------------------------------------------\n\n    drawPickMesh(renderFlags, frameCtx) {\n    }\n\n    drawPickDepths(renderFlags, frameCtx) {\n    }\n\n    drawPickNormals(renderFlags, frameCtx) {\n    }\n\n\n    destroy() {\n        const state = this._state;\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n            state.positionsBuf = null;\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n            state.colorsBuf = null;\n        }\n        if (state.flagsBuf) {\n            state.flagsBuf.destroy();\n            state.flagsBuf = null;\n        }\n        if (state.flags2Buf) {\n            state.flags2Buf.destroy();\n            state.flags2Buf = null;\n        }\n        if (state.offsetsBuf) {\n            state.offsetsBuf.destroy();\n            state.offsetsBuf = null;\n        }\n        if (state.modelMatrixCol0Buf) {\n            state.modelMatrixCol0Buf.destroy();\n            state.modelMatrixCol0Buf = null;\n        }\n        if (state.modelMatrixCol1Buf) {\n            state.modelMatrixCol1Buf.destroy();\n            state.modelMatrixCol1Buf = null;\n        }\n        if (state.modelMatrixCol2Buf) {\n            state.modelMatrixCol2Buf.destroy();\n            state.modelMatrixCol2Buf = null;\n        }\n        if (state.indicesBuf) {\n            state.indicesBuf.destroy();\n            state.indicessBuf = null;\n        }\n        state.destroy();\n    }\n}\n\nexport {LinesInstancingLayer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsBatchingColorRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, pointsBatchingLayer, renderPass) {\n\n        const scene = this._scene;\n        const camera = scene.camera;\n        const model = pointsBatchingLayer.model;\n        const gl = scene.canvas.gl;\n        const state = pointsBatchingLayer._state;\n        const rtcCenter = pointsBatchingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = pointsBatchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, pointsBatchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        gl.drawArrays(gl.POINTS, 0, state.positionsBuf.numItems);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader(scene));\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        const project = scene.camera.project;\n\n        program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix)\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial;\n        const src = [];\n\n        src.push(\"// Points batching color vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"uniform mat4 worldMatrix;\");\n\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0, float(color.a) / 255.0);\");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n\n        src.push(\"// Points batching color fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        src.push(\"   gl_FragColor = vColor;\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsBatchingColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst defaultColor = new Float32Array([1, 1, 1]);\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsBatchingSilhouetteRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, pointsBatchingLayer, renderPass) {\n\n        const model = pointsBatchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = pointsBatchingLayer._state;\n        const rtcCenter = pointsBatchingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, defaultColor);\n        }\n\n        const viewMat = (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix;\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMat);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = pointsBatchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, pointsBatchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        gl.drawArrays(gl.POINTS, 0, state.positionsBuf.numItems);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uColor = program.getLocation(\"color\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points batching silhouette vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        src.push(\"uniform vec4 color;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.y = NOT_RENDERED | SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | SILHOUETTE_XRAYED\n        // renderPass = SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n\n        src.push(`if (int(flags.y) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"} else {\");\n\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        let i;\n        let len;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points batching silhouette vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"uniform vec4 color;\");\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"  if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = color;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsBatchingSilhouetteRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsBatchingPickMeshRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + (this._scene.pointsMaterial.hash);\n    }\n\n    drawLayer(frameCtx, pointsBatchingLayer, renderPass) {\n\n        const model = pointsBatchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = pointsBatchingLayer._state;\n        const rtcCenter = pointsBatchingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate(pointsBatchingLayer);\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const viewMatrix = rtcCenter ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMatrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(camera.project.far + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = pointsBatchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, pointsBatchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        if (this._aPickColor) {\n            this._aPickColor.bindArrayBuffer(state.pickColorsBuf);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        gl.drawArrays(gl.POINTS, 0, state.positionsBuf.numItems);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aPickColor = program.getAttribute(\"pickColor\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        this._program.bind();\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points batching pick mesh vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"attribute vec4 pickColor;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vPickColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        src.push(\"      vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);\");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"gl_PointSize += 10.0;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points batching pick mesh vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vPickColor;\");\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"   gl_FragColor = vPickColor; \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsBatchingPickMeshRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsBatchingPickDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + (this._scene.pointsMaterial.hash);\n    }\n\n    drawLayer(frameCtx, pointsBatchingLayer, renderPass) {\n\n        const model = pointsBatchingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = pointsBatchingLayer._state;\n        const rtcCenter = pointsBatchingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate();\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const viewMatrix = rtcCenter ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, viewMatrix);\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        gl.uniform1f(this._uPickZNear, frameCtx.pickZNear);\n        gl.uniform1f(this._uPickZFar, frameCtx.pickZFar);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(frameCtx.pickZFar + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = pointsBatchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        //=============================================================\n        // TODO: Use drawElements count and offset to draw only one entity\n        //=============================================================\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, pointsBatchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(state.flagsBuf);\n        }\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        gl.drawArrays(gl.POINTS, 0, state.positionsBuf.numItems);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._uPickZNear = program.getLocation(\"pickZNear\");\n        this._uPickZFar = program.getLocation(\"pickZFar\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        this._program.bind();\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points batched pick depth vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vViewPosition = viewPosition;\");\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"gl_PointSize += 10.0;\");\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points batched pick depth fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        src.push(\"uniform float pickZNear;\");\n        src.push(\"uniform float pickZFar;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"vec4 packDepth(const in float depth) {\");\n        src.push(\"  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\");\n        src.push(\"  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\");\n        src.push(\"  vec4 res = fract(depth * bitShift);\");\n        src.push(\"  res -= res.xxyz * bitMask;\");\n        src.push(\"  return res;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));\");\n        src.push(\"    gl_FragColor = packDepth(zNormalizedDepth); \");  // Must be linear depth\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsBatchingPickDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsBatchingOcclusionRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + (this._scene.pointsMaterial.hash);\n    }\n\n    drawLayer(frameCtx, pointsBatchingLayer, renderPass) {\n\n        const model = pointsBatchingLayer.model;\n        const scene = model.scene;\n        const gl = scene.canvas.gl;\n        const state = pointsBatchingLayer._state;\n        const camera = scene.camera;\n        const rtcCenter = pointsBatchingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate(pointsBatchingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = pointsBatchingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, pointsBatchingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        gl.drawArrays(gl.POINTS, 0, state.positionsBuf.numItems);\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n        src.push(\"// Points batching occlusion vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n        // Only opaque objects can be occluders\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"  } else {\");\n        src.push(\"      vec4 worldPosition = worldMatrix * (positionsDecodeMatrix * vec4(position, 1.0)); \");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"      vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"      vWorldPosition = worldPosition;\");\n            src.push(\"      vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"  gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"  }\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points batching occlusion fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"      float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"      if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"          dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"      }\");\n            }\n            src.push(\"      if (dist > 0.0) { discard; }\");\n            src.push(\"  }\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); \"); // Occluders are blue\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsBatchingOcclusionRenderer};","import {PointsBatchingColorRenderer} from \"./renderers/PointsBatchingColorRenderer.js\";\nimport {PointsBatchingSilhouetteRenderer} from \"./renderers/PointsBatchingSilhouetteRenderer.js\";\nimport {PointsBatchingPickMeshRenderer} from \"./renderers/PointsBatchingPickMeshRenderer.js\";\nimport {PointsBatchingPickDepthRenderer} from \"./renderers/PointsBatchingPickDepthRenderer.js\";\nimport {PointsBatchingOcclusionRenderer} from \"./renderers/PointsBatchingOcclusionRenderer.js\";\n\n/**\n * @private\n */\nclass PointsBatchingRenderers {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    _compile() {\n        if (this._colorRenderer && (!this._colorRenderer.getValid())) {\n            this._colorRenderer.destroy();\n            this._colorRenderer = null;\n        }\n        if (this._silhouetteRenderer && (!this._silhouetteRenderer.getValid())) {\n            this._silhouetteRenderer.destroy();\n            this._silhouetteRenderer = null;\n        }\n        if (this._pickMeshRenderer && (!this._pickMeshRenderer.getValid())) {\n            this._pickMeshRenderer.destroy();\n            this._pickMeshRenderer = null;\n        }\n        if (this._pickDepthRenderer && (!this._pickDepthRenderer.getValid())) {\n            this._pickDepthRenderer.destroy();\n            this._pickDepthRenderer = null;\n        }\n        if (this._occlusionRenderer && this._occlusionRenderer.getValid() === false) {\n            this._occlusionRenderer.destroy();\n            this._occlusionRenderer = null;\n        }\n    }\n\n    get colorRenderer() {\n        if (!this._colorRenderer) {\n            this._colorRenderer = new PointsBatchingColorRenderer(this._scene);\n        }\n        return this._colorRenderer;\n    }\n\n    get silhouetteRenderer() {\n        if (!this._silhouetteRenderer) {\n            this._silhouetteRenderer = new PointsBatchingSilhouetteRenderer(this._scene);\n        }\n        return this._silhouetteRenderer;\n    }\n\n    get pickMeshRenderer() {\n        if (!this._pickMeshRenderer) {\n            this._pickMeshRenderer = new PointsBatchingPickMeshRenderer(this._scene);\n        }\n        return this._pickMeshRenderer;\n    }\n\n    get pickDepthRenderer() {\n        if (!this._pickDepthRenderer) {\n            this._pickDepthRenderer = new PointsBatchingPickDepthRenderer(this._scene);\n        }\n        return this._pickDepthRenderer;\n    }\n\n    get occlusionRenderer() {\n        if (!this._occlusionRenderer) {\n            this._occlusionRenderer = new PointsBatchingOcclusionRenderer(this._scene);\n        }\n        return this._occlusionRenderer;\n    }\n\n    _destroy() {\n        if (this._colorRenderer) {\n            this._colorRenderer.destroy();\n        }\n        if (this._silhouetteRenderer) {\n            this._silhouetteRenderer.destroy();\n        }\n        if (this._pickMeshRenderer) {\n            this._pickMeshRenderer.destroy();\n        }\n        if (this._pickDepthRenderer) {\n            this._pickDepthRenderer.destroy();\n        }\n        if (this._occlusionRenderer) {\n            this._occlusionRenderer.destroy();\n        }\n    }\n}\n\nconst cachedRenderers = {};\n\nfunction getPointsBatchingRenderers(scene) {\n    const sceneId = scene.id;\n    let renderers = cachedRenderers[sceneId];\n    if (!renderers) {\n        renderers = new PointsBatchingRenderers(scene);\n        cachedRenderers[sceneId] = renderers;\n        renderers._compile();\n        scene.on(\"compile\", () => {\n            renderers._compile();\n        });\n        scene.on(\"destroyed\", () => {\n            delete cachedRenderers[sceneId];\n            renderers._destroy();\n        });\n    }\n    return renderers;\n}\n\nexport {getPointsBatchingRenderers};","import {WEBGL_INFO} from \"../../../../webglInfo.js\";\n\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\n\n/**\n * @private\n */\nclass PointsBatchingBuffer {\n\n    constructor(maxGeometryBatchSize = 5000000) {\n\n        if (bigIndicesSupported) {\n            if (maxGeometryBatchSize > 5000000) {\n                maxGeometryBatchSize = 5000000;\n            }\n        } else {\n            if (maxGeometryBatchSize > 65530) {\n                maxGeometryBatchSize = 65530;\n            }\n        }\n\n        this.maxVerts = maxGeometryBatchSize;\n        this.maxIndices = maxGeometryBatchSize * 3; // Rough rule-of-thumb\n        this.positions = [];\n        this.colors = [];\n        this.pickColors = [];\n        this.flags = [];\n        this.flags2 = [];\n        this.offsets = [];\n    }\n}\n\nexport {PointsBatchingBuffer};","import {ENTITY_FLAGS} from '../../ENTITY_FLAGS.js';\nimport {RENDER_PASSES} from '../../RENDER_PASSES.js';\n\nimport {math} from \"../../../../math/math.js\";\nimport {RenderState} from \"../../../../webgl/RenderState.js\";\nimport {ArrayBuf} from \"../../../../webgl/ArrayBuf.js\";\nimport {geometryCompressionUtils} from \"../../../../math/geometryCompressionUtils.js\";\nimport {getPointsBatchingRenderers} from \"./PointsBatchingRenderers.js\";\nimport {PointsBatchingBuffer} from \"./PointsBatchingBuffer.js\";\nimport {quantizePositions} from \"../../compression.js\";\n\nconst tempVec3a = math.vec4();\nconst tempVec3b = math.vec4();\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\nconst tempOBB3 = math.OBB3();\n\n/**\n * @private\n */\nclass PointsBatchingLayer {\n\n    /**\n     * @param model\n     * @param cfg\n     * @param cfg.layerIndex\n     * @param cfg.positionsDecodeMatrix\n     * @param cfg.maxGeometryBatchSize\n     * @param cfg.rtcCenter\n     * @param cfg.scratchMemory\n     */\n    constructor(model, cfg) {\n\n        /**\n         * State sorting key.\n         * @type {string}\n         */\n        this.sortId = \"PointsBatchingLayer\";\n\n        /**\n         * Index of this PointCloudLayer in {@link PerformanceModel#_layerList}.\n         * @type {Number}\n         */\n        this.layerIndex = cfg.layerIndex;\n\n        this._pointsBatchingRenderers = getPointsBatchingRenderers(model.scene);\n        this.model = model;\n        this._buffer = new PointsBatchingBuffer(cfg.maxGeometryBatchSize);\n        this._scratchMemory = cfg.scratchMemory;\n\n        this._state = new RenderState({\n            positionsBuf: null,\n            offsetsBuf: null,\n            colorsBuf: null,\n            flagsBuf: null,\n            flags2Buf: null,\n            positionsDecodeMatrix: math.mat4(),\n            rtcCenter: null\n        });\n\n        // These counts are used to avoid unnecessary render passes\n        this._numPortions = 0;\n        this._numVisibleLayerPortions = 0;\n        this._numTransparentLayerPortions = 0;\n        this._numXRayedLayerPortions = 0;\n        this._numSelectedLayerPortions = 0;\n        this._numHighlightedLayerPortions = 0;\n        this._numClippableLayerPortions = 0;\n        this._numPickableLayerPortions = 0;\n        this._numCulledLayerPortions = 0;\n\n        this._modelAABB = math.collapseAABB3(); // Model-space AABB\n        this._portions = [];\n\n        this._finalized = false;\n        this._positionsDecodeMatrix = cfg.positionsDecodeMatrix;\n        this._preCompressed = (!!this._positionsDecodeMatrix);\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n        }\n\n        /**\n         * The axis-aligned World-space boundary of this PointCloudLayer's positions.\n         * @type {*|Float64Array}\n         */\n        this.aabb = math.collapseAABB3();\n    }\n\n    /**\n     * Tests if there is room for another portion in this PointCloudLayer.\n     *\n     * @param lenPositions Number of positions we'd like to create in the portion.\n     * @returns {boolean} True if OK to create another portion.\n     */\n    canCreatePortion(lenPositions) {\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n        return ((this._buffer.positions.length + lenPositions) < (this._buffer.maxVerts * 3));\n    }\n\n    /**\n     * Creates a new portion within this PointCloudLayer, returns the new portion ID.\n     *\n     * Gives the portion the specified geometry, color and matrix.\n     *\n     * @param cfg.positions Flat float Local-space positions array.\n     * @param [cfg.colors] Flat float colors array.\n     * @param cfg.color Quantized RGB color [0..255,0..255,0..255,0..255]\n     * @param cfg.opacity Opacity [0..255]\n     * @param [cfg.meshMatrix] Flat float 4x4 matrix\n     * @param [cfg.worldMatrix] Flat float 4x4 matrix\n     * @param cfg.worldAABB Flat float AABB World-space AABB\n     * @param cfg.pickColor Quantized pick color\n     * @returns {number} Portion ID\n     */\n    createPortion(cfg) {\n\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n\n        const positions = cfg.positions;\n        const color = cfg.color;\n        const colors = cfg.colors;\n        const opacity = cfg.opacity;\n        const meshMatrix = cfg.meshMatrix;\n        const worldMatrix = cfg.worldMatrix;\n        const worldAABB = cfg.worldAABB;\n        const pickColor = cfg.pickColor;\n\n        const buffer = this._buffer;\n        const positionsIndex = buffer.positions.length;\n        const vertsIndex = positionsIndex / 3;\n        const numVerts = positions.length / 3;\n        const lenPositions = positions.length;\n\n        if (this._preCompressed) {\n\n            for (let i = 0, len = positions.length; i < len; i++) {\n                buffer.positions.push(positions[i]);\n            }\n\n            const bounds = geometryCompressionUtils.getPositionsBounds(positions);\n\n            const min = geometryCompressionUtils.decompressPosition(bounds.min, this._positionsDecodeMatrix, tempVec3a);\n            const max = geometryCompressionUtils.decompressPosition(bounds.max, this._positionsDecodeMatrix, tempVec3b);\n\n            worldAABB[0] = min[0];\n            worldAABB[1] = min[1];\n            worldAABB[2] = min[2];\n            worldAABB[3] = max[0];\n            worldAABB[4] = max[1];\n            worldAABB[5] = max[2];\n\n            if (worldMatrix) {\n                math.AABB3ToOBB3(worldAABB, tempOBB3);\n                math.transformOBB3(worldMatrix, tempOBB3);\n                math.OBB3ToAABB3(tempOBB3, worldAABB);\n            }\n\n        } else {\n\n            const positionsBase = buffer.positions.length;\n\n            for (let i = 0, len = positions.length; i < len; i++) {\n                buffer.positions.push(positions[i]);\n            }\n\n            if (meshMatrix) {\n\n                for (let i = positionsBase, len = positionsBase + lenPositions; i < len; i += 3) {\n\n                    tempVec4a[0] = buffer.positions[i + 0];\n                    tempVec4a[1] = buffer.positions[i + 1];\n                    tempVec4a[2] = buffer.positions[i + 2];\n\n                    math.transformPoint4(meshMatrix, tempVec4a, tempVec4b);\n\n                    buffer.positions[i + 0] = tempVec4b[0];\n                    buffer.positions[i + 1] = tempVec4b[1];\n                    buffer.positions[i + 2] = tempVec4b[2];\n\n                    math.expandAABB3Point3(this._modelAABB, tempVec4b);\n\n                    if (worldMatrix) {\n                        math.transformPoint4(worldMatrix, tempVec4b, tempVec4c);\n                        math.expandAABB3Point3(worldAABB, tempVec4c);\n                    } else {\n                        math.expandAABB3Point3(worldAABB, tempVec4b);\n                    }\n                }\n\n            } else {\n\n                for (let i = positionsBase, len = positionsBase + lenPositions; i < len; i += 3) {\n\n                    tempVec4a[0] = buffer.positions[i + 0];\n                    tempVec4a[1] = buffer.positions[i + 1];\n                    tempVec4a[2] = buffer.positions[i + 2];\n\n                    math.expandAABB3Point3(this._modelAABB, tempVec4a);\n\n                    if (worldMatrix) {\n                        math.transformPoint4(worldMatrix, tempVec4a, tempVec4b);\n                        math.expandAABB3Point3(worldAABB, tempVec4b);\n                    } else {\n                        math.expandAABB3Point3(worldAABB, tempVec4a);\n                    }\n                }\n            }\n        }\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            worldAABB[0] += rtcCenter[0];\n            worldAABB[1] += rtcCenter[1];\n            worldAABB[2] += rtcCenter[2];\n            worldAABB[3] += rtcCenter[0];\n            worldAABB[4] += rtcCenter[1];\n            worldAABB[5] += rtcCenter[2];\n        }\n\n        math.expandAABB3(this.aabb, worldAABB);\n\n        if (colors) {\n\n            for (let i = 0, len = colors.length; i < len; i += 3) {\n                buffer.colors.push(colors[i] * 255);\n                buffer.colors.push(colors[i + 1] * 255);\n                buffer.colors.push(colors[i + 2] * 255);\n                buffer.colors.push(255);\n            }\n\n        } else if (color) {\n\n            const r = color[0]; // Color is pre-quantized by PerformanceModel\n            const g = color[1];\n            const b = color[2];\n            const a = opacity;\n\n            for (let i = 0; i < numVerts; i++) {\n                buffer.colors.push(r);\n                buffer.colors.push(g);\n                buffer.colors.push(b);\n                buffer.colors.push(a);\n            }\n        }\n\n        {\n            const pickColorsBase = buffer.pickColors.length;\n            const lenPickColors = numVerts * 4;\n            for (let i = pickColorsBase, len = pickColorsBase + lenPickColors; i < len; i += 4) {\n                buffer.pickColors.push(pickColor[0]);\n                buffer.pickColors.push(pickColor[1]);\n                buffer.pickColors.push(pickColor[2]);\n                buffer.pickColors.push(pickColor[3]);\n            }\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            for (let i = 0; i < numVerts; i++) {\n                buffer.offsets.push(0);\n                buffer.offsets.push(0);\n                buffer.offsets.push(0);\n            }\n        }\n\n        const portionId = this._portions.length / 2;\n\n        this._portions.push(vertsIndex);\n        this._portions.push(numVerts);\n\n        this._numPortions++;\n        this.model.numPortions++;\n\n        return portionId;\n    }\n\n    /**\n     * Builds batch VBOs from appended geometries.\n     * No more portions can then be created.\n     */\n    finalize() {\n\n        if (this._finalized) {\n            this.model.error(\"Already finalized\");\n            return;\n        }\n\n        const state = this._state;\n        const gl = this.model.scene.canvas.gl;\n        const buffer = this._buffer;\n\n        if (buffer.positions.length > 0) {\n            if (this._preCompressed) {\n                state.positionsDecodeMatrix = this._positionsDecodeMatrix;\n                const positions = new Uint16Array(buffer.positions);\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, buffer.positions.length, 3, gl.STATIC_DRAW);\n            } else {\n                const positions = new Float32Array(buffer.positions);\n                const quantizedPositions = quantizePositions(positions, this._modelAABB,  state.positionsDecodeMatrix);\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, quantizedPositions, buffer.positions.length, 3, gl.STATIC_DRAW);\n            }\n        }\n\n        if (buffer.colors.length > 0) {\n            const colors = new Uint8Array(buffer.colors);\n            let normalized = false;\n            state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, colors, buffer.colors.length, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n\n        if (buffer.colors.length > 0) { // Because we build flags arrays here, get their length from the colors array\n            const flagsLength = buffer.colors.length;\n            const flags = new Uint8Array(flagsLength);\n            const flags2 = new Uint8Array(flagsLength);\n            let notNormalized = false;\n            let normalized = true;\n            state.flagsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, flags, flags.length, 4, gl.DYNAMIC_DRAW, notNormalized);\n            state.flags2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, flags2, flags2.length, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n\n        if (buffer.pickColors.length > 0) {\n            const pickColors = new Uint8Array(buffer.pickColors);\n            let normalized = false;\n            state.pickColorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, pickColors, buffer.pickColors.length, 4, gl.STATIC_DRAW, normalized);\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            if (buffer.offsets.length > 0) {\n                const offsets = new Float32Array(buffer.offsets);\n                state.offsetsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, offsets, buffer.offsets.length, 3, gl.DYNAMIC_DRAW);\n            }\n        }\n\n        this._buffer = null;\n        this._finalized = true;\n    }\n\n    initFlags(portionId, flags, meshTransparent) {\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        }\n        if (meshTransparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n        this._setFlags2(portionId, flags);\n    }\n\n    setVisible(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        } else {\n            this._numVisibleLayerPortions--;\n            this.model.numVisibleLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setHighlighted(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        } else {\n            this._numHighlightedLayerPortions--;\n            this.model.numHighlightedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setXRayed(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        } else {\n            this._numXRayedLayerPortions--;\n            this.model.numXRayedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setSelected(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        } else {\n            this._numSelectedLayerPortions--;\n            this.model.numSelectedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setEdges(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        // Not applicable to point clouds\n    }\n\n    setClippable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        } else {\n            this._numClippableLayerPortions--;\n            this.model.numClippableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags);\n    }\n\n    setCulled(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        } else {\n            this._numCulledLayerPortions--;\n            this.model.numCulledLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setCollidable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n    }\n\n    setPickable(portionId, flags, transparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        } else {\n            this._numPickableLayerPortions--;\n            this.model.numPickableLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    setColor(portionId, color) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstColor = vertexBase * 4;\n        const lenColor = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenColor);\n        const r = color[0];\n        const g = color[1];\n        const b = color[2];\n        const a = color[3];\n        for (let i = 0; i < lenColor; i += 4) {\n            tempArray[i + 0] = r;\n            tempArray[i + 1] = g;\n            tempArray[i + 2] = b;\n            tempArray[i + 3] = a;\n        }\n        this._state.colorsBuf.setData(tempArray, firstColor, lenColor);\n    }\n\n    setTransparent(portionId, flags, transparent) {\n        if (transparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        } else {\n            this._numTransparentLayerPortions--;\n            this.model.numTransparentLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    _setFlags(portionId, flags, transparent) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstFlag = vertexBase * 4;\n        const lenFlags = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenFlags);\n\n        const visible = !!(flags & ENTITY_FLAGS.VISIBLE);\n        const xrayed = !!(flags & ENTITY_FLAGS.XRAYED);\n        const highlighted = !!(flags & ENTITY_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & ENTITY_FLAGS.SELECTED);\n        const pickable = !!(flags & ENTITY_FLAGS.PICKABLE);\n        const culled = !!(flags & ENTITY_FLAGS.CULLED);\n\n        // Normal fill\n\n        let f0;\n        if (!visible || culled || xrayed) {\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (transparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n\n        // Emphasis fill\n\n        let f1;\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Pick\n\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED;\n\n        for (let i = 0; i < lenFlags; i += 4) {\n            tempArray[i + 0] = f0; // x - normal fill\n            tempArray[i + 1] = f1; // y - emphasis fill\n            tempArray[i + 2] = 0; // z - edges - don't care\n            tempArray[i + 3] = f3; // w - pick\n        }\n\n        this._state.flagsBuf.setData(tempArray, firstFlag, lenFlags);\n    }\n\n    _setFlags2(portionId, flags) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstFlag = vertexBase * 4;\n        const lenFlags = numVerts * 4;\n        const tempArray = this._scratchMemory.getUInt8Array(lenFlags);\n\n        const clippable = !!(flags & ENTITY_FLAGS.CLIPPABLE) ? 255 : 0;\n\n        for (let i = 0; i < lenFlags; i += 4) {\n            tempArray[i + 0] = clippable;\n        }\n\n        this._state.flags2Buf.setData(tempArray, firstFlag, lenFlags);\n    }\n\n    setOffset(portionId, offset) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (!this.model.scene.entityOffsetsEnabled) {\n            this.model.error(\"Entity#offset not enabled for this Viewer\"); // See Viewer entityOffsetsEnabled\n            return;\n        }\n        const portionsIdx = portionId * 2;\n        const vertexBase = this._portions[portionsIdx];\n        const numVerts = this._portions[portionsIdx + 1];\n        const firstOffset = vertexBase * 3;\n        const lenOffsets = numVerts * 3;\n        const tempArray = this._scratchMemory.getFloat32Array(lenOffsets);\n        const x = offset[0];\n        const y = offset[1];\n        const z = offset[2];\n        for (let i = 0; i < lenOffsets; i += 3) {\n            tempArray[i + 0] = x;\n            tempArray[i + 1] = y;\n            tempArray[i + 2] = z;\n        }\n        this._state.offsetsBuf.setData(tempArray, firstOffset, lenOffsets);\n    }\n\n    //-- NORMAL RENDERING ----------------------------------------------------------------------------------------------\n\n    drawColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.colorRenderer) {\n            this._pointsBatchingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    drawColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === 0 || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.colorRenderer) {\n            this._pointsBatchingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n        }\n    }\n\n    // -- RENDERING SAO POST EFFECT TARGETS ----------------------------------------------------------------------------\n\n    drawDepth(renderFlags, frameCtx) {\n    }\n\n    drawNormals(renderFlags, frameCtx) {\n    }\n\n    // -- EMPHASIS RENDERING -------------------------------------------------------------------------------------------\n\n    drawSilhouetteXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.silhouetteRenderer) {\n            this._pointsBatchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.silhouetteRenderer) {\n            this._pointsBatchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n        }\n    }\n\n    drawSilhouetteSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.silhouetteRenderer) {\n            this._pointsBatchingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_SELECTED);\n        }\n    }\n\n    //-- EDGES RENDERING -----------------------------------------------------------------------------------------------\n\n    drawEdgesColorOpaque(renderFlags, frameCtx) {\n    }\n\n    drawEdgesColorTransparent(renderFlags, frameCtx) {\n    }\n\n    drawEdgesHighlighted(renderFlags, frameCtx) {\n    }\n\n    drawEdgesSelected(renderFlags, frameCtx) {\n    }\n\n    drawEdgesXRayed(renderFlags, frameCtx) {\n    }\n\n    //---- PICKING ----------------------------------------------------------------------------------------------------\n\n    drawPickMesh(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.pickMeshRenderer) {\n            this._pointsBatchingRenderers.pickMeshRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickDepths(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.pickDepthRenderer) {\n            this._pointsBatchingRenderers.pickDepthRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickNormals(renderFlags, frameCtx) {\n    }\n\n    //---- OCCLUSION TESTING -------------------------------------------------------------------------------------------\n\n    drawOcclusion(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsBatchingRenderers.occlusionRenderer) {\n            this._pointsBatchingRenderers.occlusionRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    //---- SHADOWS -----------------------------------------------------------------------------------------------------\n\n    drawShadow(renderFlags, frameCtx) {\n    }\n\n    destroy() {\n        const state = this._state;\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n            state.positionsBuf = null;\n        }\n        if (state.offsetsBuf) {\n            state.offsetsBuf.destroy();\n            state.offsetsBuf = null;\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n            state.colorsBuf = null;\n        }\n        if (state.flagsBuf) {\n            state.flagsBuf.destroy();\n            state.flagsBuf = null;\n        }\n        if (state.flags2Buf) {\n            state.flags2Buf.destroy();\n            state.flags2Buf = null;\n        }\n        if (state.pickColorsBuf) {\n            state.pickColorsBuf.destroy();\n            state.pickColorsBuf = null;\n        }\n        state.destroy();\n    }\n}\n\nexport {PointsBatchingLayer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsInstancingColorRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems/3, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aOffset = program.getAttribute(\"offset\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uOcclusionTexture = \"uOcclusionTexture\";\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points instancing color vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vColor;\");\n\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE | COLOR_TRANSPARENT\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition =  positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"vColor = vec4(float(color.r) / 255.0, float(color.g) / 255.0, float(color.b) / 255.0, float(color.a) / 255.0);\");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points instancing color fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"uniform float logDepthBufFC;\");\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vColor;\");\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        src.push(\"   gl_FragColor = vColor;\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingColorRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {RENDER_PASSES} from \"../../../RENDER_PASSES.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsInstancingSilhouetteRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate(instancingLayer.model.scene);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        if (renderPass === RENDER_PASSES.SILHOUETTE_XRAYED) {\n            const material = scene.xrayMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_HIGHLIGHTED) {\n            const material = scene.highlightMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else if (renderPass === RENDER_PASSES.SILHOUETTE_SELECTED) {\n            const material = scene.selectedMaterial._state;\n            const fillColor = material.fillColor;\n            const fillAlpha = material.fillAlpha;\n            gl.uniform4f(this._uColor, fillColor[0], fillColor[1], fillColor[2], fillAlpha);\n\n        } else {\n            gl.uniform4fv(this._uColor, math.vec3([1, 1, 1]));\n        }\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf, gl.UNSIGNED_BYTE, true);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf, gl.UNSIGNED_BYTE, true);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0); // TODO: Is this needed\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) {\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uColor = program.getLocation(\"color\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if ( scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points instancing silhouette vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        src.push(\"uniform vec4 color;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"void main(void) {\");\n\n        // flags.y = NOT_RENDERED | SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n        // renderPass = SILHOUETTE_HIGHLIGHTED | SILHOUETTE_SELECTED | | SILHOUETTE_XRAYED\n\n        src.push(`if (int(flags.y) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n        src.push(\"vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points instancing silhouette fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"uniform vec4 color;\");\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = color;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingSilhouetteRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsInstancingPickMeshRenderer {\n\n    constructor(scene) {\n\n        this._scene = scene;\n        this._hash = this._getHash();\n\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx);\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const rtcPickViewMatrix = (rtcCenter) ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, rtcPickViewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(camera.project.far + 1.0) / Math.LN2); // TODO: Far from pick project matrix?\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPickColor.bindArrayBuffer(state.pickColorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aPickColor.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems, state.numInstances);\n\n        // Cleanup\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aPickColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aPickColor = program.getAttribute(\"pickColor\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram(frameCtx) {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n\n        program.bind();\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points instancing pick mesh vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 pickColor;\");\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"varying vec4 vPickColor;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n\n\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        src.push(\"  vPickColor = vec4(float(pickColor.r) / 255.0, float(pickColor.g) / 255.0, float(pickColor.b) / 255.0, float(pickColor.a) / 255.0);\");\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n            src.push(\"  vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points instancing pick mesh fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vPickColor;\");\n        src.push(\"void main(void) {\");\n\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"gl_FragColor = vPickColor; \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingPickMeshRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsInstancingPickDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate(instancingLayer);\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        const camera = scene.camera;\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniform1i(this._uPickInvisible, frameCtx.pickInvisible);\n\n        const pickViewMatrix = frameCtx.pickViewMatrix || camera.viewMatrix;\n        const rtcPickViewMatrix = (rtcCenter) ? createRTCViewMat(pickViewMatrix, rtcCenter) : pickViewMatrix;\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, rtcPickViewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n        gl.uniform1f(this._uPickZNear, frameCtx.pickZNear);\n        gl.uniform1f(this._uPickZFar, frameCtx.pickZFar);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(frameCtx.pickZFar + 1.0) / Math.LN2); // TODO: Far from pick project matrix\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems, state.numInstances);\n\n        // Cleanup\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPickInvisible = program.getLocation(\"pickInvisible\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uPickZNear = program.getLocation(\"pickZNear\");\n        this._uPickZFar = program.getLocation(\"pickZFar\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n        this._program.bind();\n\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points instancing pick depth vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n\n        src.push(\"attribute vec3 position;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform bool pickInvisible;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\")\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"void main(void) {\");\n\n        // flags.w = NOT_RENDERED | PICK\n        // renderPass = PICK\n\n        src.push(`if (int(flags.w) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n            src.push(\"  vFlags2 = flags2;\");\n        }\n        src.push(\"  vViewPosition = viewPosition;\");\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points instancing pick depth fragment shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n\n        src.push(\"uniform float pickZNear;\");\n        src.push(\"uniform float pickZFar;\");\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec4 vViewPosition;\");\n        src.push(\"vec4 packDepth(const in float depth) {\");\n        src.push(\"  const vec4 bitShift = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);\");\n        src.push(\"  const vec4 bitMask  = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);\");\n        src.push(\"  vec4 res = fract(depth * bitShift);\");\n        src.push(\"  res -= res.xxyz * bitMask;\");\n        src.push(\"  return res;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    float zNormalizedDepth = abs((pickZNear + vViewPosition.z) / (pickZFar - pickZNear));\");\n        src.push(\"    gl_FragColor = packDepth(zNormalizedDepth); \"); // Must be linear depth\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingPickDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsInstancingOcclusionRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(state.colorsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n        }\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems, state.numInstances);\n\n        // Cleanup\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        if (this._aColor) {\n            instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        }\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n        this._uSectionPlanes = [];\n\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n\n        src.push(\"// Points instancing occlusion vertex shader\");\n\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n\n        src.push(\"attribute vec4 modelMatrixCol0;\"); // Modeling matrix\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"      gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\");\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"  vWorldPosition = worldPosition;\");\n        }\n\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points instancing occlusion vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"void main(void) {\");\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        src.push(\"   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); \"); // Occluders are blue\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingOcclusionRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\nimport {WEBGL_INFO} from \"../../../../../webglInfo.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nclass PointsInstancingDepthRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash() + this._scene.pointsMaterial.hash;\n    }\n\n    drawLayer(frameCtx, instancingLayer, renderPass) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const camera = scene.camera;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n        const rtcCenter = instancingLayer._state.rtcCenter;\n        const pointsMaterial = scene.pointsMaterial._state;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram();\n        }\n\n        gl.uniform1i(this._uRenderPass, renderPass);\n\n        gl.uniformMatrix4fv(this._uWorldMatrix, false, model.worldMatrix);\n        gl.uniformMatrix4fv(this._uViewMatrix, false, (rtcCenter) ? createRTCViewMat(camera.viewMatrix, rtcCenter) : camera.viewMatrix);\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        gl.uniform1f(this._uPointSize, pointsMaterial.pointSize);\n        const nearPlaneHeight = (scene.camera.projection === \"ortho\") ? 1.0 : (gl.drawingBufferHeight / (2 * Math.tan(0.5 * scene.camera.perspective.fov * Math.PI / 180.0)));\n        gl.uniform1f(this._uNearPlaneHeight, nearPlaneHeight);\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n\n        this._program = new Program(gl, this._buildShader());\n\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n\n        const program = this._program;\n\n        this._uRenderPass = program.getLocation(\"renderPass\");\n\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uWorldMatrix = program.getLocation(\"worldMatrix\");\n        this._uViewMatrix = program.getLocation(\"viewMatrix\");\n        this._uProjMatrix = program.getLocation(\"projMatrix\");\n\n        this._uSectionPlanes = [];\n\n        for (let i = 0, len = scene._sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n\n        this._uPointSize = program.getLocation(\"pointSize\");\n        this._uNearPlaneHeight = program.getLocation(\"nearPlaneHeight\");\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n        }\n    }\n\n    _bindProgram() {\n\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const project = scene.camera.project;\n\n        this._program.bind();\n\n        gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n            gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n        }\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const pointsMaterial = scene.pointsMaterial._state;\n        const src = [];\n        src.push(\"// Points instancing depth vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"uniform int renderPass;\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\");\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 worldMatrix;\");\n        src.push(\"uniform mat4 viewMatrix;\");\n        src.push(\"uniform mat4 projMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n\n        src.push(\"uniform float pointSize;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"uniform float nearPlaneHeight;\");\n        }\n\n        if (scene.logarithmicDepthBufferEnabled) {\n            src.push(\"uniform float logDepthBufFC;\");\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n\n        // flags.x = NOT_RENDERED | COLOR_OPAQUE | COLOR_TRANSPARENT\n        // renderPass = COLOR_OPAQUE\n\n        src.push(`if (int(flags.x) != renderPass) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = worldMatrix * vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = viewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n            } else {\n                src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n                src.push(\"clipPos.z *= clipPos.w;\");\n            }\n        }\n        src.push(\"gl_Position = clipPos;\");\n        if (pointsMaterial.perspectivePoints) {\n            src.push(\"gl_PointSize = (nearPlaneHeight * pointSize) / clipPos.w;\");\n            src.push(\"gl_PointSize = max(gl_PointSize, \" + Math.floor(pointsMaterial.minPerspectivePointSize) + \".0);\");\n            src.push(\"gl_PointSize = min(gl_PointSize, \" + Math.floor(pointsMaterial.maxPerspectivePointSize) + \".0);\");\n        } else {\n            src.push(\"gl_PointSize = pointSize;\");\n        }\n        src.push(\"}\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        let i;\n        let len;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Points instancing depth vertex shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled) {\n            if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n                src.push(\"uniform float logDepthBufFC;\");\n                src.push(\"varying float vFragDepth;\");\n            }\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n\n        src.push(\"const float   packUpScale = 256. / 255.;\");\n        src.push(\"const float   unpackDownscale = 255. / 256.;\");\n        src.push(\"const vec3    packFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\");\n        src.push(\"const vec4    unpackFactors = unpackDownscale / vec4( packFactors, 1. );\");\n        src.push(\"const float   shiftRight8 = 1.0 / 256.;\");\n\n        src.push(\"vec4 packDepthToRGBA( const in float v ) {\");\n        src.push(\"    vec4 r = vec4( fract( v * packFactors ), v );\");\n        src.push(\"    r.yzw -= r.xyz * shiftRight8;\");\n        src.push(\"    return r * packUpScale;\");\n        src.push(\"}\");\n\n        src.push(\"void main(void) {\");\n\n        if (scene.pointsMaterial.roundPoints) {\n            src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n            src.push(\"  float r = dot(cxy, cxy);\");\n            src.push(\"  if (r > 1.0) {\");\n            src.push(\"       discard;\");\n            src.push(\"  }\");\n        }\n\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        src.push(\"    gl_FragColor = packDepthToRGBA( gl_FragCoord.z); \"); // Must be linear depth\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingDepthRenderer};","import {Program} from \"../../../../../webgl/Program.js\";\nimport {createRTCViewMat, getPlaneRTCPos} from \"../../../../../math/rtcCoords.js\";\nimport {math} from \"../../../../../math/math.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * Renders InstancingLayer fragment depths to a shadow map.\n *\n * @private\n */\nclass PointsInstancingShadowRenderer {\n\n    constructor(scene) {\n        this._scene = scene;\n        this._hash = this._getHash();\n        this._lastLightId = null;\n        this._allocate();\n    }\n\n    getValid() {\n        return this._hash === this._getHash();\n    };\n\n    _getHash() {\n        return this._scene._sectionPlanesState.getHash();\n    }\n\n    drawLayer( frameCtx, instancingLayer) {\n\n        const model = instancingLayer.model;\n        const scene = model.scene;\n        const gl = scene.canvas.gl;\n        const state = instancingLayer._state;\n        const instanceExt = this._instanceExt;\n\n        if (!this._program) {\n            this._allocate();\n            if (this.errors) {\n                return;\n            }\n        }\n\n        if (frameCtx.lastProgramId !== this._program.id) {\n            frameCtx.lastProgramId = this._program.id;\n            this._bindProgram(frameCtx, instancingLayer);\n        }\n\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, instancingLayer._state.positionsDecodeMatrix);\n\n        this._aModelMatrixCol0.bindArrayBuffer(state.modelMatrixCol0Buf);\n        this._aModelMatrixCol1.bindArrayBuffer(state.modelMatrixCol1Buf);\n        this._aModelMatrixCol2.bindArrayBuffer(state.modelMatrixCol2Buf);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 1);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 1);\n\n        this._aPosition.bindArrayBuffer(state.positionsBuf);\n\n        if (this._aOffset) {\n            this._aOffset.bindArrayBuffer(state.offsetsBuf);\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 1);\n        }\n\n        this._aColor.bindArrayBuffer(state.colorsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 1);\n\n        this._aFlags.bindArrayBuffer(state.flagsBuf);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 1);\n\n        if (this._aFlags2) {\n            this._aFlags2.bindArrayBuffer(state.flags2Buf);\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 1);\n        }\n\n        // TODO: Section planes need to be set if RTC center has changed since last RTC center recorded on frameCtx\n\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const baseIndex = instancingLayer.layerIndex * numSectionPlanes;\n            const renderFlags = model.renderFlags;\n            const rtcCenter = instancingLayer._state.rtcCenter;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[baseIndex + sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    if (rtcCenter) {\n                        const rtcSectionPlanePos = getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a);\n                        gl.uniform3fv(sectionPlaneUniforms.pos, rtcSectionPlanePos);\n                    } else {\n                        gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n                    }\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n\n        gl.uniform1f(this._uPointSize, 10);\n\n        instanceExt.drawArraysInstancedANGLE(gl.POINTS, 0, state.positionsBuf.numItems, state.numInstances);\n\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol0.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol1.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aModelMatrixCol2.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aColor.location, 0);\n        instanceExt.vertexAttribDivisorANGLE(this._aFlags.location, 0);\n\n        if (this._aFlags2) { // Won't be in shader when not clipping\n            instanceExt.vertexAttribDivisorANGLE(this._aFlags2.location, 0);\n        }\n\n        if (this._aOffset) {\n            instanceExt.vertexAttribDivisorANGLE(this._aOffset.location, 0);\n        }\n    }\n\n    _allocate() {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const sectionPlanesState = scene._sectionPlanesState;\n        this._program = new Program(gl, this._buildShader());\n        if (this._program.errors) {\n            this.errors = this._program.errors;\n            return;\n        }\n        this._instanceExt = gl.getExtension(\"ANGLE_instanced_arrays\");\n        const program = this._program;\n        this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n        this._uShadowViewMatrix = program.getLocation(\"shadowViewMatrix\");\n        this._uShadowProjMatrix = program.getLocation(\"shadowProjMatrix\");\n        this._uSectionPlanes = [];\n        const clips = sectionPlanesState.sectionPlanes;\n        for (let i = 0, len = clips.length; i < len; i++) {\n            this._uSectionPlanes.push({\n                active: program.getLocation(\"sectionPlaneActive\" + i),\n                pos: program.getLocation(\"sectionPlanePos\" + i),\n                dir: program.getLocation(\"sectionPlaneDir\" + i)\n            });\n        }\n        this._aPosition = program.getAttribute(\"position\");\n        this._aOffset = program.getAttribute(\"offset\");\n        this._aColor = program.getAttribute(\"color\");\n        this._aFlags = program.getAttribute(\"flags\");\n        this._aFlags2 = program.getAttribute(\"flags2\");\n        this._aModelMatrixCol0 = program.getAttribute(\"modelMatrixCol0\");\n        this._aModelMatrixCol1 = program.getAttribute(\"modelMatrixCol1\");\n        this._aModelMatrixCol2 = program.getAttribute(\"modelMatrixCol2\");\n        this._uPointSize = program.getLocation(\"pointSize\");\n    }\n\n    _bindProgram(frameCtx, instancingLayer) {\n        const scene = this._scene;\n        const gl = scene.canvas.gl;\n        const program = this._program;\n        program.bind();\n        gl.uniformMatrix4fv(this._uShadowViewMatrix, false, frameCtx.shadowViewMatrix);\n        gl.uniformMatrix4fv(this._uShadowProjMatrix, false, frameCtx.shadowProjMatrix);\n        this._lastLightId = null;\n    }\n\n    _buildShader() {\n        return {\n            vertex: this._buildVertexShader(),\n            fragment: this._buildFragmentShader()\n        };\n    }\n\n    _buildVertexShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry shadow drawing vertex shader\");\n        src.push(\"attribute vec3 position;\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"attribute vec3 offset;\");\n        }\n        src.push(\"attribute vec4 color;\");\n        src.push(\"attribute vec4 flags;\");\n        src.push(\"attribute vec4 flags2;\");\n        src.push(\"attribute vec4 modelMatrixCol0;\");\n        src.push(\"attribute vec4 modelMatrixCol1;\");\n        src.push(\"attribute vec4 modelMatrixCol2;\");\n        src.push(\"uniform mat4 shadowViewMatrix;\");\n        src.push(\"uniform mat4 shadowProjMatrix;\");\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n        src.push(\"uniform float pointSize;\");\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n        }\n        src.push(\"void main(void) {\");\n        src.push(\"bool visible      = (float(flags.x) > 0.0);\");\n        src.push(\"bool transparent  = ((float(color.a) / 255.0) < 1.0);\");\n        src.push(`if (!visible || transparent) {`);\n        src.push(\"   gl_Position = vec4(0.0, 0.0, 0.0, 0.0);\"); // Cull vertex\n        src.push(\"} else {\");\n        src.push(\"  vec4 worldPosition = positionsDecodeMatrix * vec4(position, 1.0); \");\n        src.push(\"  worldPosition = vec4(dot(worldPosition, modelMatrixCol0), dot(worldPosition, modelMatrixCol1), dot(worldPosition, modelMatrixCol2), 1.0);\");\n        if (scene.entityOffsetsEnabled) {\n            src.push(\"      worldPosition.xyz = worldPosition.xyz + offset;\");\n        }\n        src.push(\"  vec4 viewPosition  = shadowViewMatrix * worldPosition; \");\n\n        if (clipping) {\n            src.push(\"vWorldPosition = worldPosition;\");\n            src.push(\"vFlags2 = flags2;\");\n        }\n        src.push(\"  gl_Position = shadowProjMatrix * viewPosition;\");\n        src.push(\"}\");\n        src.push(\"gl_PointSize = pointSize;\");\n        src.push(\"}\");\n        return src;\n    }\n\n    _buildFragmentShader() {\n        const scene = this._scene;\n        const sectionPlanesState = scene._sectionPlanesState;\n        const clipping = sectionPlanesState.sectionPlanes.length > 0;\n        const src = [];\n        src.push(\"// Instancing geometry depth drawing fragment shader\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"#extension GL_EXT_frag_depth : enable\");\n        }\n        src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n        src.push(\"precision highp float;\");\n        src.push(\"precision highp int;\");\n        src.push(\"#else\");\n        src.push(\"precision mediump float;\");\n        src.push(\"precision mediump int;\");\n        src.push(\"#endif\");\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"uniform float logDepthBufFC;\");\n            src.push(\"varying float vFragDepth;\");\n        }\n        if (clipping) {\n            src.push(\"varying vec4 vWorldPosition;\");\n            src.push(\"varying vec4 vFlags2;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n                src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n            }\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n        src.push(\"vec3 packNormalToRGB( const in vec3 normal ) {\");\n        src.push(\"    return normalize( normal ) * 0.5 + 0.5;\");\n        src.push(\"}\");\n        src.push(\"void main(void) {\");\n        src.push(\"  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n        src.push(\"  float r = dot(cxy, cxy);\");\n        src.push(\"  if (r > 1.0) {\");\n        src.push(\"       discard;\");\n        src.push(\"  }\");\n        if (clipping) {\n            src.push(\"  bool clippable = (float(vFlags2.x) > 0.0);\");\n            src.push(\"  if (clippable) {\");\n            src.push(\"  float dist = 0.0;\");\n            for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n                src.push(\"if (sectionPlaneActive\" + i + \") {\");\n                src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n                src.push(\"}\");\n            }\n            src.push(\"if (dist > 0.0) { discard; }\");\n            src.push(\"}\");\n        }\n        if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n        }\n        src.push(\"    gl_FragColor = vec4(packNormalToRGB(vViewNormal), 1.0); \");\n        src.push(\"}\");\n        return src;\n    }\n\n    webglContextRestored() {\n        this._program = null;\n    }\n\n    destroy() {\n        if (this._program) {\n            this._program.destroy();\n        }\n        this._program = null;\n    }\n}\n\nexport {PointsInstancingShadowRenderer};","import {PointsInstancingColorRenderer} from \"./renderers/PointsInstancingColorRenderer.js\";\nimport {PointsInstancingSilhouetteRenderer} from \"./renderers/PointsInstancingSilhouetteRenderer.js\";\nimport {PointsInstancingPickMeshRenderer} from \"./renderers/PointsInstancingPickMeshRenderer.js\";\nimport {PointsInstancingPickDepthRenderer} from \"./renderers/PointsInstancingPickDepthRenderer.js\";\nimport {PointsInstancingOcclusionRenderer} from \"./renderers/PointsInstancingOcclusionRenderer.js\";\nimport {PointsInstancingDepthRenderer} from \"./renderers/PointsInstancingDepthRenderer.js\";\nimport {PointsInstancingShadowRenderer} from \"./renderers/PointsInstancingShadowRenderer.js\";\n\n/**\n * @private\n */\nclass PointsInstancingRenderers {\n\n    constructor(scene) {\n        this._scene = scene;\n    }\n\n    _compile() {\n        if (this._colorRenderer && (!this._colorRenderer.getValid())) {\n            this._colorRenderer.destroy();\n            this._colorRenderer = null;\n        }\n        if (this._depthRenderer && (!this._depthRenderer.getValid())) {\n            this._depthRenderer.destroy();\n            this._depthRenderer = null;\n        }\n        if (this._silhouetteRenderer && (!this._silhouetteRenderer.getValid())) {\n            this._silhouetteRenderer.destroy();\n            this._silhouetteRenderer = null;\n        }\n        if (this._pickMeshRenderer && (!this._pickMeshRenderer.getValid())) {\n            this._pickMeshRenderer.destroy();\n            this._pickMeshRenderer = null;\n        }\n        if (this._pickDepthRenderer && (!this._pickDepthRenderer.getValid())) {\n            this._pickDepthRenderer.destroy();\n            this._pickDepthRenderer = null;\n        }\n        if (this._occlusionRenderer && this._occlusionRenderer.getValid() === false) {\n            this._occlusionRenderer.destroy();\n            this._occlusionRenderer = null;\n        }\n        if (this._shadowRenderer && (!this._shadowRenderer.getValid())) {\n            this._shadowRenderer.destroy();\n            this._shadowRenderer = null;\n        }\n    }\n\n    get colorRenderer() {\n        if (!this._colorRenderer) {\n            this._colorRenderer = new PointsInstancingColorRenderer(this._scene, false);\n        }\n        return this._colorRenderer;\n    }\n\n    get silhouetteRenderer() {\n        if (!this._silhouetteRenderer) {\n            this._silhouetteRenderer = new PointsInstancingSilhouetteRenderer(this._scene);\n        }\n        return this._silhouetteRenderer;\n    }\n\n    get depthRenderer() {\n        if (!this._depthRenderer) {\n            this._depthRenderer = new PointsInstancingDepthRenderer(this._scene);\n        }\n        return this._depthRenderer;\n    }\n\n    get pickMeshRenderer() {\n        if (!this._pickMeshRenderer) {\n            this._pickMeshRenderer = new PointsInstancingPickMeshRenderer(this._scene);\n        }\n        return this._pickMeshRenderer;\n    }\n\n    get pickDepthRenderer() {\n        if (!this._pickDepthRenderer) {\n            this._pickDepthRenderer = new PointsInstancingPickDepthRenderer(this._scene);\n        }\n        return this._pickDepthRenderer;\n    }\n\n    get occlusionRenderer() {\n        if (!this._occlusionRenderer) {\n            this._occlusionRenderer = new PointsInstancingOcclusionRenderer(this._scene);\n        }\n        return this._occlusionRenderer;\n    }\n\n    get shadowRenderer() {\n        if (!this._shadowRenderer) {\n            this._shadowRenderer = new PointsInstancingShadowRenderer(this._scene);\n        }\n        return this._shadowRenderer;\n    }\n\n    _destroy() {\n        if (this._colorRenderer) {\n            this._colorRenderer.destroy();\n        }\n        if (this._depthRenderer) {\n            this._depthRenderer.destroy();\n        }\n        if (this._silhouetteRenderer) {\n            this._silhouetteRenderer.destroy();\n        }\n        if (this._pickMeshRenderer) {\n            this._pickMeshRenderer.destroy();\n        }\n        if (this._pickDepthRenderer) {\n            this._pickDepthRenderer.destroy();\n        }\n        if (this._occlusionRenderer) {\n            this._occlusionRenderer.destroy();\n        }\n        if (this._shadowRenderer) {\n            this._shadowRenderer.destroy();\n        }\n    }\n}\n\nconst cachedRenderers = {};\n\nfunction getPointsInstancingRenderers(scene) {\n    const sceneId = scene.id;\n    let instancingRenderers = cachedRenderers[sceneId];\n    if (!instancingRenderers) {\n        instancingRenderers = new PointsInstancingRenderers(scene);\n        cachedRenderers[sceneId] = instancingRenderers;\n        instancingRenderers._compile();\n        scene.on(\"compile\", () => {\n            instancingRenderers._compile();\n        });\n        scene.on(\"destroyed\", () => {\n            delete cachedRenderers[sceneId];\n            instancingRenderers._destroy();\n        });\n    }\n    return instancingRenderers;\n}\n\nexport {getPointsInstancingRenderers};","import {ENTITY_FLAGS} from '../../ENTITY_FLAGS.js';\nimport {RENDER_PASSES} from '../../RENDER_PASSES.js';\n\nimport {math} from \"../../../../math/math.js\";\nimport {RenderState} from \"../../../../webgl/RenderState.js\";\nimport {ArrayBuf} from \"../../../../webgl/ArrayBuf.js\";\nimport {geometryCompressionUtils} from \"../../../../math/geometryCompressionUtils.js\";\nimport {getPointsInstancingRenderers} from \"./PointsInstancingRenderers.js\";\nimport {quantizePositions} from \"../../compression.js\";\n\nconst tempUint8Vec4 = new Uint8Array(4);\nconst tempVec4a = math.vec4([0, 0, 0, 1]);\nconst tempVec4b = math.vec4([0, 0, 0, 1]);\nconst tempVec4c = math.vec4([0, 0, 0, 1]);\nconst tempVec3fa = new Float32Array(3);\n\n/**\n * @private\n */\nclass PointsInstancingLayer {\n\n    /**\n     * @param model\n     * @param cfg\n     * @param cfg.layerIndex\n     * @param cfg.positions Flat float Local-space positions array.\n     * @param cfg.rtcCenter\n     */\n    constructor(model, cfg) {\n\n        /**\n         * State sorting key.\n         * @type {string}\n         */\n        this.sortId = \"PointsInstancingLayer\";\n\n        /**\n         * Index of this InstancingLayer in PerformanceModel#_layerList\n         * @type {Number}\n         */\n        this.layerIndex = cfg.layerIndex;\n\n        this._pointsInstancingRenderers = getPointsInstancingRenderers(model.scene);\n        this.model = model;\n        this._aabb = math.collapseAABB3();\n\n        const gl = model.scene.canvas.gl;\n\n        const stateCfg = {\n            positionsDecodeMatrix: math.mat4(),\n            numInstances: 0,\n            obb: math.OBB3(),\n            rtcCenter: null\n        };\n\n        const preCompressed = (!!cfg.positionsDecodeMatrix);\n\n        if (cfg.positions) {\n\n            if (preCompressed) {\n\n                let normalized = false;\n                stateCfg.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, cfg.positions, cfg.positions.length, 3, gl.STATIC_DRAW, normalized);\n                stateCfg.positionsDecodeMatrix.set(cfg.positionsDecodeMatrix);\n\n                let localAABB = math.collapseAABB3();\n                math.expandAABB3Points3(localAABB, cfg.positions);\n                geometryCompressionUtils.decompressAABB(localAABB, stateCfg.positionsDecodeMatrix);\n                math.AABB3ToOBB3(localAABB, stateCfg.obb);\n\n            } else {\n\n                let lenPositions = cfg.positions.length;\n                let localAABB = math.collapseAABB3();\n                math.expandAABB3Points3(localAABB, cfg.positions);\n                math.AABB3ToOBB3(localAABB, stateCfg.obb);\n                const quantizedPositions = quantizePositions(cfg.positions, localAABB, stateCfg.positionsDecodeMatrix);\n                let normalized = false;\n                stateCfg.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, quantizedPositions, lenPositions, 3, gl.STATIC_DRAW, normalized);\n            }\n        }\n\n        if (cfg.colors) {\n            const colors = cfg.colors;\n            const compressedColors = new Uint8Array((colors.length / 3) * 4);\n            for (let i = 0, j = 0, len = colors.length; i < len; i += 3, j += 4) {\n                compressedColors[i + 0] = colors[j + 0] * 255;\n                compressedColors[j + 1] = colors[i + 1] * 255;\n                compressedColors[j + 2] = colors[i + 2] * 255;\n                compressedColors[j + 3] = 255;\n            }\n            let notNormalized = false;\n            stateCfg.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, compressedColors, compressedColors.length, 4, gl.STATIC_DRAW, notNormalized);\n        }\n\n        this._state = new RenderState(stateCfg);\n\n        // These counts are used to avoid unnecessary render passes\n        this._numPortions = 0;\n        this._numVisibleLayerPortions = 0;\n        this._numTransparentLayerPortions = 0;\n        this._numXRayedLayerPortions = 0;\n        this._numHighlightedLayerPortions = 0;\n        this._numSelectedLayerPortions = 0;\n        this._numClippableLayerPortions = 0;\n        this._numEdgesLayerPortions = 0;\n        this._numPickableLayerPortions = 0;\n        this._numCulledLayerPortions = 0;\n\n        // Vertex arrays\n        this._pickColors = [];\n        this._offsets = [];\n\n        // Modeling matrix per instance, array for each column\n        this._modelMatrixCol0 = [];\n        this._modelMatrixCol1 = [];\n        this._modelMatrixCol2 = [];\n\n        this._portions = [];\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n        }\n\n        this._finalized = false;\n\n        /**\n         * The axis-aligned World-space boundary of this InstancingLayer's positions.\n         * @type {*|Float64Array}\n         */\n        this.aabb = math.collapseAABB3();\n    }\n\n    /**\n     * Creates a new portion within this InstancingLayer, returns the new portion ID.\n     *\n     * The portion will instance this InstancingLayer's geometry.\n     *\n     * Gives the portion the specified color and matrix.\n     *\n     * @param cfg Portion params\n     * @param cfg.meshMatrix Flat float 4x4 matrix.\n     * @param [cfg.worldMatrix] Flat float 4x4 matrix.\n     * @param cfg.aabb Flat float AABB.\n     * @param cfg.pickColor Quantized pick color\n     * @returns {number} Portion ID.\n     */\n    createPortion(cfg) {\n\n        const meshMatrix = cfg.meshMatrix;\n        const worldMatrix = cfg.worldMatrix;\n        const worldAABB = cfg.aabb;\n        const pickColor = cfg.pickColor;\n\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n\n        if (this.model.scene.entityOffsetsEnabled) {\n            this._offsets.push(0);\n            this._offsets.push(0);\n            this._offsets.push(0);\n        }\n\n        this._modelMatrixCol0.push(meshMatrix[0]);\n        this._modelMatrixCol0.push(meshMatrix[4]);\n        this._modelMatrixCol0.push(meshMatrix[8]);\n        this._modelMatrixCol0.push(meshMatrix[12]);\n\n        this._modelMatrixCol1.push(meshMatrix[1]);\n        this._modelMatrixCol1.push(meshMatrix[5]);\n        this._modelMatrixCol1.push(meshMatrix[9]);\n        this._modelMatrixCol1.push(meshMatrix[13]);\n\n        this._modelMatrixCol2.push(meshMatrix[2]);\n        this._modelMatrixCol2.push(meshMatrix[6]);\n        this._modelMatrixCol2.push(meshMatrix[10]);\n        this._modelMatrixCol2.push(meshMatrix[14]);\n\n        // Per-vertex pick colors\n\n        this._pickColors.push(pickColor[0]);\n        this._pickColors.push(pickColor[1]);\n        this._pickColors.push(pickColor[2]);\n        this._pickColors.push(pickColor[3]);\n\n        // Expand AABB\n\n        math.collapseAABB3(worldAABB);\n        const obb = this._state.obb;\n        const lenPositions = obb.length;\n        for (let i = 0; i < lenPositions; i += 4) {\n            tempVec4a[0] = obb[i + 0];\n            tempVec4a[1] = obb[i + 1];\n            tempVec4a[2] = obb[i + 2];\n            math.transformPoint4(meshMatrix, tempVec4a, tempVec4b);\n            if (worldMatrix) {\n                math.transformPoint4(worldMatrix, tempVec4b, tempVec4c);\n                math.expandAABB3Point3(worldAABB, tempVec4c);\n            } else {\n                math.expandAABB3Point3(worldAABB, tempVec4b);\n            }\n        }\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            worldAABB[0] += rtcCenter[0];\n            worldAABB[1] += rtcCenter[1];\n            worldAABB[2] += rtcCenter[2];\n            worldAABB[3] += rtcCenter[0];\n            worldAABB[4] += rtcCenter[1];\n            worldAABB[5] += rtcCenter[2];\n        }\n\n        math.expandAABB3(this.aabb, worldAABB);\n\n        this._state.numInstances++;\n\n        const portionId = this._portions.length;\n        this._portions.push({});\n\n        this._numPortions++;\n        this.model.numPortions++;\n\n        return portionId;\n    }\n\n    finalize() {\n        if (this._finalized) {\n            throw \"Already finalized\";\n        }\n        const gl = this.model.scene.canvas.gl;\n        const flagsLength = this._pickColors.length;\n        if (flagsLength > 0) {\n            // Because we only build flags arrays here, \n            // get their length from the colors array\n            let notNormalized = false;\n            let normalized = true;\n            this._state.flagsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(flagsLength), flagsLength, 4, gl.DYNAMIC_DRAW, notNormalized);\n            this._state.flags2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(flagsLength), flagsLength, 4, gl.DYNAMIC_DRAW, normalized);\n        }\n        if (this.model.scene.entityOffsetsEnabled) {\n            if (this._offsets.length > 0) {\n                const notNormalized = false;\n                this._state.offsetsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._offsets), this._offsets.length, 3, gl.DYNAMIC_DRAW, notNormalized);\n                this._offsets = []; // Release memory\n            }\n        }\n        if (this._modelMatrixCol0.length > 0) {\n            const normalized = false;\n            this._state.modelMatrixCol0Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol0), this._modelMatrixCol0.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelMatrixCol1Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol1), this._modelMatrixCol1.length, 4, gl.STATIC_DRAW, normalized);\n            this._state.modelMatrixCol2Buf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Float32Array(this._modelMatrixCol2), this._modelMatrixCol2.length, 4, gl.STATIC_DRAW, normalized);\n            this._modelMatrixCol0 = [];\n            this._modelMatrixCol1 = [];\n            this._modelMatrixCol2 = [];\n        }\n        if (this._pickColors.length > 0) {\n            const normalized = false;\n            this._state.pickColorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, new Uint8Array(this._pickColors), this._pickColors.length, 4, gl.STATIC_DRAW, normalized);\n            this._pickColors = []; // Release memory\n        }\n        this._finalized = true;\n    }\n\n    // The following setters are called by PerformanceMesh, in turn called by PerformanceNode, only after the layer is finalized.\n    // It's important that these are called after finalize() in order to maintain integrity of counts like _numVisibleLayerPortions etc.\n\n    initFlags(portionId, flags, meshTransparent) {\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        }\n        if (meshTransparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n        this._setFlags2(portionId, flags);\n    }\n\n    setVisible(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.VISIBLE) {\n            this._numVisibleLayerPortions++;\n            this.model.numVisibleLayerPortions++;\n        } else {\n            this._numVisibleLayerPortions--;\n            this.model.numVisibleLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setHighlighted(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.HIGHLIGHTED) {\n            this._numHighlightedLayerPortions++;\n            this.model.numHighlightedLayerPortions++;\n        } else {\n            this._numHighlightedLayerPortions--;\n            this.model.numHighlightedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setXRayed(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.XRAYED) {\n            this._numXRayedLayerPortions++;\n            this.model.numXRayedLayerPortions++;\n        } else {\n            this._numXRayedLayerPortions--;\n            this.model.numXRayedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setSelected(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.SELECTED) {\n            this._numSelectedLayerPortions++;\n            this.model.numSelectedLayerPortions++;\n        } else {\n            this._numSelectedLayerPortions--;\n            this.model.numSelectedLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setEdges(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.EDGES) {\n            this._numEdgesLayerPortions++;\n            this.model.numEdgesLayerPortions++;\n        } else {\n            this._numEdgesLayerPortions--;\n            this.model.numEdgesLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setClippable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CLIPPABLE) {\n            this._numClippableLayerPortions++;\n            this.model.numClippableLayerPortions++;\n        } else {\n            this._numClippableLayerPortions--;\n            this.model.numClippableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags);\n    }\n\n    setCollidable(portionId, flags) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n    }\n\n    setPickable(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.PICKABLE) {\n            this._numPickableLayerPortions++;\n            this.model.numPickableLayerPortions++;\n        } else {\n            this._numPickableLayerPortions--;\n            this.model.numPickableLayerPortions--;\n        }\n        this._setFlags2(portionId, flags, meshTransparent);\n    }\n\n    setCulled(portionId, flags, meshTransparent) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (flags & ENTITY_FLAGS.CULLED) {\n            this._numCulledLayerPortions++;\n            this.model.numCulledLayerPortions++;\n        } else {\n            this._numCulledLayerPortions--;\n            this.model.numCulledLayerPortions--;\n        }\n        this._setFlags(portionId, flags, meshTransparent);\n    }\n\n    setColor(portionId, color) { // RGBA color is normalized as ints\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        tempUint8Vec4[0] = color[0];\n        tempUint8Vec4[1] = color[1];\n        tempUint8Vec4[2] = color[2];\n        tempUint8Vec4[3] = color[3];\n        this._state.colorsBuf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    setTransparent(portionId, flags, transparent) {\n        if (transparent) {\n            this._numTransparentLayerPortions++;\n            this.model.numTransparentLayerPortions++;\n        } else {\n            this._numTransparentLayerPortions--;\n            this.model.numTransparentLayerPortions--;\n        }\n        this._setFlags(portionId, flags, transparent);\n    }\n\n    // setMatrix(portionId, matrix) {\n    //\n    //     if (!this._finalized) {\n    //         throw \"Not finalized\";\n    //     }\n    //\n    //     var offset = portionId * 4;\n    //\n    //     tempFloat32Vec4[0] = matrix[0];\n    //     tempFloat32Vec4[1] = matrix[4];\n    //     tempFloat32Vec4[2] = matrix[8];\n    //     tempFloat32Vec4[3] = matrix[12];\n    //\n    //     this._state.modelMatrixCol0Buf.setData(tempFloat32Vec4, offset, 4);\n    //\n    //     tempFloat32Vec4[0] = matrix[1];\n    //     tempFloat32Vec4[1] = matrix[5];\n    //     tempFloat32Vec4[2] = matrix[9];\n    //     tempFloat32Vec4[3] = matrix[13];\n    //\n    //     this._state.modelMatrixCol1Buf.setData(tempFloat32Vec4, offset, 4);\n    //\n    //     tempFloat32Vec4[0] = matrix[2];\n    //     tempFloat32Vec4[1] = matrix[6];\n    //     tempFloat32Vec4[2] = matrix[10];\n    //     tempFloat32Vec4[3] = matrix[14];\n    //\n    //     this._state.modelMatrixCol2Buf.setData(tempFloat32Vec4, offset, 4);\n    // }\n\n    _setFlags(portionId, flags, meshTransparent) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const visible = !!(flags & ENTITY_FLAGS.VISIBLE);\n        const xrayed = !!(flags & ENTITY_FLAGS.XRAYED);\n        const highlighted = !!(flags & ENTITY_FLAGS.HIGHLIGHTED);\n        const selected = !!(flags & ENTITY_FLAGS.SELECTED);\n        const edges = !!(flags & ENTITY_FLAGS.EDGES);\n        const pickable = !!(flags & ENTITY_FLAGS.PICKABLE);\n        const culled = !!(flags & ENTITY_FLAGS.CULLED);\n\n        // Normal fill\n\n        let f0;\n        if (!visible || culled || xrayed) {\n            f0 = RENDER_PASSES.NOT_RENDERED;\n        } else {\n            if (meshTransparent) {\n                f0 = RENDER_PASSES.COLOR_TRANSPARENT;\n            } else {\n                f0 = RENDER_PASSES.COLOR_OPAQUE;\n            }\n        }\n\n        // Emphasis fill\n\n        let f1;\n        if (!visible || culled) {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f1 = RENDER_PASSES.SILHOUETTE_SELECTED;\n        } else if (highlighted) {\n            f1 = RENDER_PASSES.SILHOUETTE_HIGHLIGHTED;\n        } else if (xrayed) {\n            f1 = RENDER_PASSES.SILHOUETTE_XRAYED;\n        } else {\n            f1 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Edges\n\n        let f2 = 0;\n        if (!visible || culled) {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        } else if (selected) {\n            f2 = RENDER_PASSES.EDGES_SELECTED;\n        } else if (highlighted) {\n            f2 = RENDER_PASSES.EDGES_HIGHLIGHTED;\n        } else if (xrayed) {\n            f2 = RENDER_PASSES.EDGES_XRAYED;\n        } else if (edges) {\n            if (meshTransparent) {\n                f2 = RENDER_PASSES.EDGES_COLOR_TRANSPARENT;\n            } else {\n                f2 = RENDER_PASSES.EDGES_COLOR_OPAQUE;\n            }\n        } else {\n            f2 = RENDER_PASSES.NOT_RENDERED;\n        }\n\n        // Pick\n\n        let f3 = (visible && !culled && pickable) ? RENDER_PASSES.PICK : RENDER_PASSES.NOT_RENDERED;\n\n        tempUint8Vec4[0] = f0; // x - normal fill\n        tempUint8Vec4[1] = f1; // y - emphasis fill\n        tempUint8Vec4[2] = f2; // z - edges\n        tempUint8Vec4[3] = f3; // w - pick\n\n        this._state.flagsBuf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    _setFlags2(portionId, flags) {\n\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n\n        const clippable = !!(flags & ENTITY_FLAGS.CLIPPABLE) ? 255 : 0;\n        tempUint8Vec4[0] = clippable;\n\n        this._state.flags2Buf.setData(tempUint8Vec4, portionId * 4, 4);\n    }\n\n    setOffset(portionId, offset) {\n        if (!this._finalized) {\n            throw \"Not finalized\";\n        }\n        if (!this.model.scene.entityOffsetsEnabled) {\n            this.model.error(\"Entity#offset not enabled for this Viewer\"); // See Viewer entityOffsetsEnabled\n            return;\n        }\n        tempVec3fa[0] = offset[0];\n        tempVec3fa[1] = offset[1];\n        tempVec3fa[2] = offset[2];\n        this._state.offsetsBuf.setData(tempVec3fa, portionId * 3, 3);\n    }\n\n    // ---------------------- NORMAL RENDERING -----------------------------------\n\n    drawColorOpaque(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === this._numPortions || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.colorRenderer) {\n            this._pointsInstancingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    drawColorTransparent(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numTransparentLayerPortions === 0 || this._numXRayedLayerPortions === this._numPortions) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.colorRenderer) {\n            this._pointsInstancingRenderers.colorRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_TRANSPARENT);\n        }\n    }\n\n    // -- RENDERING SAO POST EFFECT TARGETS ----------------------------------------------------------------------------\n\n    drawDepth(renderFlags, frameCtx) {\n    }\n\n    drawNormals(renderFlags, frameCtx) {\n    }\n\n    // ---------------------- EMPHASIS RENDERING -----------------------------------\n\n    drawSilhouetteXRayed(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numXRayedLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.silhouetteRenderer) {\n            this._pointsInstancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_XRAYED);\n        }\n    }\n\n    drawSilhouetteHighlighted(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numHighlightedLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.silhouetteRenderer) {\n            this._pointsInstancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_HIGHLIGHTED);\n        }\n    }\n\n    drawSilhouetteSelected(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0 || this._numSelectedLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.silhouetteRenderer) {\n            this._pointsInstancingRenderers.silhouetteRenderer.drawLayer(frameCtx, this, RENDER_PASSES.SILHOUETTE_SELECTED);\n        }\n    }\n\n    //-- EDGES RENDERING -----------------------------------------------------------------------------------------------\n\n    drawEdgesColorOpaque(renderFlags, frameCtx) {\n    }\n\n    drawEdgesColorTransparent(renderFlags, frameCtx) {\n    }\n\n    drawEdgesHighlighted(renderFlags, frameCtx) {\n    }\n\n    drawEdgesSelected(renderFlags, frameCtx) {\n    }\n\n    drawEdgesXRayed(renderFlags, frameCtx) {\n    }\n\n    // ---------------------- OCCLUSION CULL RENDERING -----------------------------------\n\n    drawOcclusion(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.occlusionRenderer) {\n            // Only opaque, filled objects can be occluders\n            this._pointsInstancingRenderers.occlusionRenderer.drawLayer(frameCtx, this, RENDER_PASSES.COLOR_OPAQUE);\n        }\n    }\n\n    // ---------------------- SHADOW BUFFER RENDERING -----------------------------------\n\n    drawShadow(renderFlags, frameCtx) {\n    }\n\n    //---- PICKING ----------------------------------------------------------------------------------------------------\n\n    drawPickMesh(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.pickMeshRenderer) {\n            this._pointsInstancingRenderers.pickMeshRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickDepths(renderFlags, frameCtx) {\n        if (this._numCulledLayerPortions === this._numPortions || this._numVisibleLayerPortions === 0) {\n            return;\n        }\n        if (this._pointsInstancingRenderers.pickDepthRenderer) {\n            this._pointsInstancingRenderers.pickDepthRenderer.drawLayer(frameCtx, this, RENDER_PASSES.PICK);\n        }\n    }\n\n    drawPickNormals(renderFlags, frameCtx) {\n    }\n\n    destroy() {\n        const state = this._state;\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n            state.positionsBuf = null;\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n            state.colorsBuf = null;\n        }\n        if (state.flagsBuf) {\n            state.flagsBuf.destroy();\n            state.flagsBuf = null;\n        }\n        if (state.flags2Buf) {\n            state.flags2Buf.destroy();\n            state.flags2Buf = null;\n        }\n        if (state.offsetsBuf) {\n            state.offsetsBuf.destroy();\n            state.offsetsBuf = null;\n        }\n        if (state.modelMatrixCol0Buf) {\n            state.modelMatrixCol0Buf.destroy();\n            state.modelMatrixCol0Buf = null;\n        }\n        if (state.modelMatrixCol1Buf) {\n            state.modelMatrixCol1Buf.destroy();\n            state.modelMatrixCol1Buf = null;\n        }\n        if (state.modelMatrixCol2Buf) {\n            state.modelMatrixCol2Buf.destroy();\n            state.modelMatrixCol2Buf = null;\n        }\n        if (state.pickColorsBuf) {\n            state.pickColorsBuf.destroy();\n            state.pickColorsBuf = null;\n        }\n        state.destroy();\n    }\n}\n\nexport {PointsInstancingLayer};","/**\n * Indicates what rendering needs to be done for the layers within a {@link Drawable}.\n *\n * Each Drawable has a RenderFlags in {@link Drawable#renderFlags}.\n *\n * Before rendering each frame, {@link Renderer} will call {@link Drawable#rebuildRenderFlags} on each {@link Drawable}.\n *\n * Then, when rendering a frame, Renderer will apply rendering passes to each Drawable according on what flags are set in {@link Drawable#renderFlags}.\n *\n * @private\n */\nclass RenderFlags {\n\n    /**\n     * @private\n     */\n    constructor() {\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate which layers are visible within the {@link Drawable}.\n         *\n         * This is a list of IDs of visible layers within the {@link Drawable}. The IDs will be whatever the\n         * {@link Drawable} uses to identify its layers, usually integers.\n         *\n         * @property visibleLayers\n         * @type {Number[]}\n         */\n        this.visibleLayers = [];\n\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate which {@link SectionPlane}s are active within each layer of the {@link Drawable}.\n         *\n         * Layout is as follows:\n         *\n         * ````[\n         *      false, false, true, // Layer 0, SectionPlanes 0, 1, 2\n         *      false, true, true,  // Layer 1, SectionPlanes 0, 1, 2\n         *      true, false, true   // Layer 2, SectionPlanes 0, 1, 2\n         * ]````\n         *\n         * @property sectionPlanesActivePerLayer\n         * @type {Boolean[]}\n         */\n        this.sectionPlanesActivePerLayer = [];\n\n        this.reset();\n    }\n\n    /**\n     * @private\n     */\n    reset() {\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate whether the {@link Drawable} is culled.\n         * \n         * When this is ````false````, then all of the other properties on ````RenderFlags```` will remain at their default values.\n         * \n         * @property culled\n         * @type {Boolean}\n         */\n        this.culled = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate whether the {@link Drawable} is sliced by any {@link SectionPlane}s.\n         *\n         * @property sectioned\n         * @type {Boolean}\n         */\n        this.sectioned  = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the number of layers within the {@link Drawable}.\n         *\n         * @property numLayers\n         * @type {Number}\n         */\n        this.numLayers = 0;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the number of visible layers within the {@link Drawable}.\n         *\n         * @property numVisibleLayers\n         * @type {Number}\n         */\n        this.numVisibleLayers = 0;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs {@link Drawable#drawColorOpaque}.\n         * @property colorOpaque\n         * @type {boolean}\n         */\n        this.colorOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs {@link Drawable#drawColorTransparent}.\n         * @property colorTransparent\n         * @type {boolean}\n         */\n        this.colorTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs {@link Drawable#drawEdgesColorOpaque}.\n         * @property edgesOpaque\n         * @type {boolean}\n         */\n        this.edgesOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs {@link Drawable#drawEdgesColorTransparent}.\n         * @property edgesTransparent\n         * @type {boolean}\n         */\n        this.edgesTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs an opaque {@link Drawable#drawSilhouetteXRayed}.\n         * @property xrayedSilhouetteOpaque\n         * @type {boolean}\n         */\n        this.xrayedSilhouetteOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs an opaque {@link Drawable#drawEdgesXRayed}.\n         * @property xrayedEdgesOpaque\n         * @type {boolean}\n         */\n        this.xrayedEdgesOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs a transparent {@link Drawable#drawSilhouetteXRayed}.\n         * @property xrayedSilhouetteTransparent\n         * @type {boolean}\n         */\n        this.xrayedSilhouetteTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs a transparent {@link Drawable#drawEdgesXRayed}.\n         * @property xrayedEdgesTransparent\n         * @type {boolean}\n         */\n        this.xrayedEdgesTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs an opaque {@link Drawable#drawSilhouetteHighlighted}.\n         * @property highlightedSilhouetteOpaque\n         * @type {boolean}\n         */\n        this.highlightedSilhouetteOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs an opaque {@link Drawable#drawEdgesHighlighted}.\n         * @property highlightedEdgesOpaque\n         * @type {boolean}\n         */\n        this.highlightedEdgesOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs a transparent {@link Drawable#drawSilhouetteHighlighted}.\n         * @property highlightedSilhouetteTransparent\n         * @type {boolean}\n         */\n        this.highlightedSilhouetteTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs a transparent {@link Drawable#drawEdgesHighlighted}.\n         * @property highlightedEdgesTransparent\n         * @type {boolean}\n         */\n        this.highlightedEdgesTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs an opaque {@link Drawable#drawSilhouetteSelected}.\n         * @property selectedSilhouetteOpaque\n         * @type {boolean}\n         */\n        this.selectedSilhouetteOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs an opaque {@link Drawable#drawEdgesSelected}.\n         * @property selectedEdgesOpaque\n         * @type {boolean}\n         */\n        this.selectedEdgesOpaque = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs a transparent {@link Drawable#drawSilhouetteSelected}.\n         * @property selectedSilhouetteTransparent\n         * @type {boolean}\n         */\n        this.selectedSilhouetteTransparent = false;\n\n        /**\n         * Set by {@link Drawable#rebuildRenderFlags} to indicate the {@link Drawable} needs a transparent {@link Drawable#drawEdgesSelected}.\n         * @property selectedEdgesTransparent\n         * @type {boolean}\n         */\n        this.selectedEdgesTransparent = false;\n    }\n}\n\nexport {RenderFlags};","import {Component} from \"../Component.js\";\nimport {math} from \"../math/math.js\";\nimport {buildEdgeIndices} from '../math/buildEdgeIndices.js';\nimport {WEBGL_INFO} from '../webglInfo.js';\nimport {PerformanceMesh} from './lib/PerformanceMesh.js';\nimport {PerformanceNode} from './lib/PerformanceNode.js';\nimport {getScratchMemory, putScratchMemory} from \"./lib/ScratchMemory.js\";\nimport {TrianglesBatchingLayer} from './lib/layers/trianglesBatching/TrianglesBatchingLayer.js';\nimport {TrianglesInstancingLayer} from './lib/layers/trianglesInstancing/TrianglesInstancingLayer.js';\nimport {LinesBatchingLayer} from './lib/layers/linesBatching/LinesBatchingLayer.js';\nimport {LinesInstancingLayer} from './lib/layers/linesInstancing/LinesInstancingLayer.js';\n\nimport {PointsBatchingLayer} from './lib/layers/pointsBatching/PointsBatchingLayer.js';\nimport {PointsInstancingLayer} from './lib/layers/pointsInstancing/PointsInstancingLayer.js';\n\n\nimport {ENTITY_FLAGS} from './lib/ENTITY_FLAGS.js';\nimport {utils} from \"../utils.js\";\nimport {RenderFlags} from \"../webgl/RenderFlags.js\";\n\nconst instancedArraysSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"ANGLE_instanced_arrays\"];\n\nconst tempMat4 = math.mat4();\n\nconst defaultScale = math.vec3([1, 1, 1]);\nconst defaultPosition = math.vec3([0, 0, 0]);\nconst defaultRotation = math.vec3([0, 0, 0]);\nconst defaultQuaternion = math.identityQuaternion();\n\n/**\n * @desc A high-performance model representation for efficient rendering and low memory usage.\n *\n * # Examples\n *\n * * [PerformanceModel using geometry batching](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching)\n * * [PerformanceModel using geometry batching and RTC coordinates](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching_rtcCenter)\n * * [PerformanceModel using geometry instancing](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_instancing)\n * * [PerformanceModel using geometry instancing and RTC coordinates](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_instancing_rtcCenter)\n *\n * # Overview\n *\n * While xeokit's standard [scene graph](https://github.com/xeokit/xeokit-sdk/wiki/Scene-Graphs) is great for gizmos and medium-sized models, it doesn't scale up to millions of objects in terms of memory and rendering efficiency.\n *\n * For huge models, we have the ````PerformanceModel```` representation, which is optimized to pack large amounts of geometry into memory and render it efficiently using WebGL.\n *\n * ````PerformanceModel```` is the default model representation loaded by {@link GLTFLoaderPlugin}, {@link XKTLoaderPlugin} and {@link BIMServerLoaderPlugin}.\n *\n * In this tutorial you'll learn how to use ````PerformanceModel```` to create high-detail content programmatically. Ordinarily you'd be learning about ````PerformanceModel```` if you were writing your own model loader plugins.\n *\n * # Contents\n *\n * - [PerformanceModel](#performancemodel)\n * - [GPU-Resident Geometry](#gpu-resident-geometry)\n * - [Picking](#picking)\n * - [Example 1: Geometry Instancing](#example-1--geometry-instancing)\n * - [Finalizing a PerformanceModel](#finalizing-a-performancemodel)\n * - [Finding Entities](#finding-entities)\n * - [Example 2: Geometry Batching](#example-2--geometry-batching)\n * - [Classifying with Metadata](#classifying-with-metadata)\n * - [Querying Metadata](#querying-metadata)\n * - [Metadata Structure](#metadata-structure)\n * - [RTC Coordinates](#rtc-coordinates)\n *   - [Example 3: RTC Coordinates with Geometry Instancing](#example-2--rtc-coordinates-with-geometry-instancing)\n *   - [Example 4: RTC Coordinates with Geometry Batching](#example-2--rtc-coordinates-with-geometry-batching)\n *\n * ## PerformanceModel\n *\n * ````PerformanceModel```` uses two rendering techniques internally:\n *\n * 1. ***Geometry batching*** for unique geometries, combining those into a single WebGL geometry buffer, to render in one draw call, and\n * 2. ***geometry instancing*** for geometries that are shared by multiple meshes, rendering all instances of each shared geometry in one draw call.\n *\n * <br>\n * These techniques come with certain limitations:\n *\n * * Non-realistic rendering - while scene graphs can use xeokit's full set of material workflows, ````PerformanceModel```` uses simple Lambertian shading without textures.\n * * Static transforms - transforms within a ````PerformanceModel```` are static and cannot be dynamically translated, rotated and scaled the way {@link Node}s and {@link Mesh}es in scene graphs can.\n * * Immutable model representation - while scene graph {@link Node}s and\n * {@link Mesh}es can be dynamically plugged together, ````PerformanceModel```` is immutable,\n * since it packs its geometries into buffers and instanced arrays.\n *\n * ````PerformanceModel````'s API allows us to exploit batching and instancing, while exposing its elements as\n * abstract {@link Entity} types.\n *\n * {@link Entity} is the abstract base class for\n * the various xeokit components that represent models, objects, or anonymous visible elements. An Entity has a unique ID and can be\n * individually shown, hidden, selected, highlighted, ghosted, culled, picked and clipped, and has its own World-space boundary.\n *\n * * A ````PerformanceModel```` is an {@link Entity} that represents a model.\n * * A ````PerformanceModel```` represents each of its objects with an {@link Entity}.\n * * Each {@link Entity} has one or more meshes that define its shape.\n * * Each mesh has either its own unique geometry, or shares a geometry with other meshes.\n *\n * ## GPU-Resident Geometry\n *\n * For a low memory footprint, ````PerformanceModel```` stores its geometries in GPU memory only, compressed (quantized) as integers. Unfortunately, GPU-resident geometry is\n * not readable by JavaScript.\n *\n *\n * ## Example 1: Geometry Instancing\n *\n * In the example below, we'll use a ````PerformanceModel````\n * to build a simple table model using geometry instancing.\n *\n * We'll start by adding a reusable box-shaped geometry to our ````PerformanceModel````.\n *\n * Then, for each object in our model we'll add an {@link Entity}\n * that has a mesh that instances our box geometry, transforming and coloring the instance.\n *\n * [![](http://xeokit.io/img/docs/sceneGraph.png)](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_instancing)\n *\n * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_instancing)]\n *\n * ````javascript\n * import {Viewer, PerformanceModel} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\",\n *     transparent: true\n * });\n *\n * viewer.scene.camera.eye = [-21.80, 4.01, 6.56];\n * viewer.scene.camera.look = [0, -5.75, 0];\n * viewer.scene.camera.up = [0.37, 0.91, -0.11];\n *\n * // Build a PerformanceModel representing a table\n * // with four legs, using geometry instancing\n *\n * const performanceModel = new PerformanceModel(viewer.scene, {\n *     id: \"table\",\n *     isModel: true, // <--- Registers PerformanceModel in viewer.scene.models\n *     position: [0, 0, 0],\n *     scale: [1, 1, 1],\n *     rotation: [0, 0, 0]\n * });\n *\n * // Create a reusable geometry within the PerformanceModel\n * // We'll instance this geometry by five meshes\n *\n * performanceModel.createGeometry({\n *\n *     id: \"myBoxGeometry\",\n *\n *     // The primitive type - allowed values are \"points\", \"lines\" and \"triangles\".\n *     // See the OpenGL/WebGL specification docs\n *     // for how the coordinate arrays are supposed to be laid out.\n *     primitive: \"triangles\",\n *\n *     // The vertices - eight for our cube, each\n *     // one spanning three array elements for X,Y and Z\n *     positions: [\n *          1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, // v0-v1-v2-v3 front\n *          1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, // v0-v3-v4-v1 right\n *          1, 1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, // v0-v1-v6-v1 top\n *          -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, // v1-v6-v7-v2 left\n *          -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, // v7-v4-v3-v2 bottom\n *          1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1 // v4-v7-v6-v1 back\n *     ],\n *\n *     // Normal vectors, one for each vertex\n *     normals: [\n *         0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, // v0-v1-v2-v3 front\n *         1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, // v0-v3-v4-v5 right\n *         0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, // v0-v5-v6-v1 top\n *         -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, // v1-v6-v7-v2 left\n *         0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, // v7-v4-v3-v2 bottom\n *         0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1 // v4-v7-v6-v5 back\n *     ],\n *\n *     // Indices - these organise the positions and and normals\n *     // into geometric primitives in accordance with the \"primitive\" parameter,\n *     // in this case a set of three indices for each triangle.\n *     //\n *     // Note that each triangle is specified in counter-clockwise winding order.\n *     //\n *     indices: [\n *         0, 1, 2, 0, 2, 3, // front\n *         4, 5, 6, 4, 6, 7, // right\n *         8, 9, 10, 8, 10, 11, // top\n *         12, 13, 14, 12, 14, 15, // left\n *         16, 17, 18, 16, 18, 19, // bottom\n *         20, 21, 22, 20, 22, 23\n *     ]\n * });\n *\n * // Red table leg\n *\n * performanceModel.createMesh({\n *     id: \"redLegMesh\",\n *     geometryId: \"myBoxGeometry\",\n *     position: [-4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1, 0.3, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"redLeg\",\n *     meshIds: [\"redLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Green table leg\n *\n * performanceModel.createMesh({\n *     id: \"greenLegMesh\",\n *     geometryId: \"myBoxGeometry\",\n *     position: [4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 1.0, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"greenLeg\",\n *     meshIds: [\"greenLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Blue table leg\n *\n * performanceModel.createMesh({\n *     id: \"blueLegMesh\",\n *     geometryId: \"myBoxGeometry\",\n *     position: [4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"blueLeg\",\n *     meshIds: [\"blueLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Yellow table leg\n *\n * performanceModel.createMesh({\n *      id: \"yellowLegMesh\",\n *      geometryId: \"myBoxGeometry\",\n *      position: [-4, -6, 4],\n *      scale: [1, 3, 1],\n *      rotation: [0, 0, 0],\n *      color: [1.0, 1.0, 0.0]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"yellowLeg\",\n *     meshIds: [\"yellowLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Purple table top\n *\n * performanceModel.createMesh({\n *     id: \"purpleTableTopMesh\",\n *     geometryId: \"myBoxGeometry\",\n *     position: [0, -3, 0],\n *     scale: [6, 0.5, 6],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"purpleTableTop\",\n *     meshIds: [\"purpleTableTopMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *  ````\n *\n * ## Finalizing a PerformanceModel\n *\n * Before we can view and interact with our ````PerformanceModel````, we need to **finalize** it. Internally, this causes the ````PerformanceModel```` to build the\n * vertex buffer objects (VBOs) that support our geometry instances. When using geometry batching (see next example),\n * this causes ````PerformanceModel```` to build the VBOs that combine the batched geometries. Note that you can do both instancing and\n * batching within the same ````PerformanceModel````.\n *\n * Once finalized, we can't add anything more to our ````PerformanceModel````.\n *\n * ```` javascript\n * performanceModel.finalize();\n * ````\n *\n * ## Finding Entities\n *\n * As mentioned earlier, {@link Entity} is\n * the abstract base class for components that represent models, objects, or just\n * anonymous visible elements.\n *\n * Since we created configured our ````PerformanceModel```` with ````isModel: true````,\n * we're able to find it as an Entity by ID in ````viewer.scene.models````. Likewise, since\n * we configured each of its Entities with ````isObject: true````, we're able to\n * find them in  ````viewer.scene.objects````.\n *\n *\n * ````javascript\n * // Get the whole table model Entity\n * const table = viewer.scene.models[\"table\"];\n *\n *  // Get some leg object Entities\n * const redLeg = viewer.scene.objects[\"redLeg\"];\n * const greenLeg = viewer.scene.objects[\"greenLeg\"];\n * const blueLeg = viewer.scene.objects[\"blueLeg\"];\n * ````\n *\n * ## Example 2: Geometry Batching\n *\n * Let's once more use a ````PerformanceModel````\n * to build the simple table model, this time exploiting geometry batching.\n *\n *  [![](http://xeokit.io/img/docs/sceneGraph.png)](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching)\n *\n * * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching)]\n *\n * ````javascript\n * import {Viewer, PerformanceModel} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\",\n *     transparent: true\n * });\n *\n * viewer.scene.camera.eye = [-21.80, 4.01, 6.56];\n * viewer.scene.camera.look = [0, -5.75, 0];\n * viewer.scene.camera.up = [0.37, 0.91, -0.11];\n *\n * // Create a PerformanceModel representing a table with four legs, using geometry batching\n * const performanceModel = new PerformanceModel(viewer.scene, {\n *     id: \"table\",\n *     isModel: true,  // <--- Registers PerformanceModel in viewer.scene.models\n *     position: [0, 0, 0],\n *     scale: [1, 1, 1],\n *     rotation: [0, 0, 0]\n * });\n *\n * // Red table leg\n *\n * performanceModel.createMesh({\n *     id: \"redLegMesh\",\n *\n *     // Geometry arrays are same as for the earlier batching example\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [-4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1, 0.3, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"redLeg\",\n *     meshIds: [\"redLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Green table leg\n *\n * performanceModel.createMesh({\n *     id: \"greenLegMesh\",\n *     primitive: \"triangles\",\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 1.0, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"greenLeg\",\n *     meshIds: [\"greenLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Blue table leg\n *\n * performanceModel.createMesh({\n *     id: \"blueLegMesh\",\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"blueLeg\",\n *     meshIds: [\"blueLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Yellow table leg object\n *\n * performanceModel.createMesh({\n *     id: \"yellowLegMesh\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [-4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 1.0, 0.0]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"yellowLeg\",\n *     meshIds: [\"yellowLegMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Purple table top\n *\n * performanceModel.createMesh({\n *     id: \"purpleTableTopMesh\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [0, -3, 0],\n *     scale: [6, 0.5, 6],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     id: \"purpleTableTop\",\n *     meshIds: [\"purpleTableTopMesh\"],\n *     isObject: true // <---- Registers Entity by ID on viewer.scene.objects\n * });\n *\n * // Finalize the PerformanceModel.\n *\n * performanceModel.finalize();\n *\n * // Find BigModelNodes by their model and object IDs\n *\n * // Get the whole table model\n * const table = viewer.scene.models[\"table\"];\n *\n * // Get some leg objects\n * const redLeg = viewer.scene.objects[\"redLeg\"];\n * const greenLeg = viewer.scene.objects[\"greenLeg\"];\n * const blueLeg = viewer.scene.objects[\"blueLeg\"];\n * ````\n *\n * ## Classifying with Metadata\n *\n * In the previous examples, we used ````PerformanceModel```` to build\n * two versions of the same table model, to demonstrate geometry batching and geometry instancing.\n *\n * We'll now classify our {@link Entity}s with metadata. This metadata\n * will work the same for both our examples, since they create the exact same structure of {@link Entity}s\n * to represent their models and objects. The abstract Entity type is, after all, intended to provide an abstract interface through which differently-implemented scene content can be accessed uniformly.\n *\n * To create the metadata, we'll create a {@link MetaModel} for our model,\n * with a {@link MetaObject} for each of it's objects. The MetaModel and MetaObjects\n * get the same IDs as the {@link Entity}s that represent their model and objects within our scene.\n *\n * ```` javascript\n * const furnitureMetaModel = viewer.metaScene.createMetaModel(\"furniture\", {         // Creates a MetaModel in the MetaScene\n *\n *      \"projectId\": \"myTableProject\",\n *      \"revisionId\": \"V1.0\",\n *\n *      \"metaObjects\": [\n *          {                               // Creates a MetaObject in the MetaModel\n *              \"id\": \"table\",\n *              \"name\": \"Table\",            // Same ID as an object Entity\n *              \"type\": \"furniture\",        // Arbitrary type, could be IFC type\n *              \"properties\": {             // Arbitrary properties, could be IfcPropertySet\n *                  \"cost\": \"200\"\n *              }\n *          },\n *          {\n *              \"id\": \"redLeg\",\n *              \"name\": \"Red table Leg\",\n *              \"type\": \"leg\",\n *              \"parent\": \"table\",           // References first MetaObject as parent\n *              \"properties\": {\n *                  \"material\": \"wood\"\n *              }\n *          },\n *          {\n *              \"id\": \"greenLeg\",           // Node with corresponding id does not need to exist\n *              \"name\": \"Green table leg\",  // and MetaObject does not need to exist for Node with an id\n *              \"type\": \"leg\",\n *              \"parent\": \"table\",\n *              \"properties\": {\n *                  \"material\": \"wood\"\n *              }\n *          },\n *          {\n *              \"id\": \"blueLeg\",\n *              \"name\": \"Blue table leg\",\n *              \"type\": \"leg\",\n *              \"parent\": \"table\",\n *              \"properties\": {\n *                  \"material\": \"wood\"\n *              }\n *          },\n *          {\n *              \"id\": \"yellowLeg\",\n *              \"name\": \"Yellow table leg\",\n *              \"type\": \"leg\",\n *              \"parent\": \"table\",\n *              \"properties\": {\n *                  \"material\": \"wood\"\n *              }\n *          },\n *          {\n *              \"id\": \"tableTop\",\n *              \"name\": \"Purple table top\",\n *              \"type\": \"surface\",\n *              \"parent\": \"table\",\n *              \"properties\": {\n *                  \"material\": \"formica\",\n *                  \"width\": \"60\",\n *                  \"depth\": \"60\",\n *                  \"thickness\": \"5\"\n *              }\n *          }\n *      ]\n *  });\n * ````\n *\n * ## Querying Metadata\n *\n * Having created and classified our model (either the instancing or batching example), we can now find the {@link MetaModel}\n * and {@link MetaObject}s using the IDs of their\n * corresponding {@link Entity}s.\n *\n * ````JavaScript\n * const furnitureMetaModel = scene.metaScene.metaModels[\"furniture\"];\n *\n * const redLegMetaObject = scene.metaScene.metaObjects[\"redLeg\"];\n * ````\n *\n * In the snippet below, we'll log metadata on each {@link Entity} we click on:\n *\n * ````JavaScript\n * viewer.scene.input.on(\"mouseclicked\", function (coords) {\n *\n *      const hit = viewer.scene.pick({\n *          canvasPos: coords\n *      });\n *\n *      if (hit) {\n *          const entity = hit.entity;\n *          const metaObject = viewer.metaScene.metaObjects[entity.id];\n *          if (metaObject) {\n *              console.log(JSON.stringify(metaObject.getJSON(), null, \"\\t\"));\n *          }\n *      }\n *  });\n * ````\n *\n * ## Metadata Structure\n *\n * The {@link MetaModel}\n * organizes its {@link MetaObject}s in\n * a tree that describes their structural composition:\n *\n * ````JavaScript\n * // Get metadata on the root object\n * const tableMetaObject = furnitureMetaModel.rootMetaObject;\n *\n * // Get metadata on the leg objects\n * const redLegMetaObject = tableMetaObject.children[0];\n * const greenLegMetaObject = tableMetaObject.children[1];\n * const blueLegMetaObject = tableMetaObject.children[2];\n * const yellowLegMetaObject = tableMetaObject.children[3];\n * ````\n *\n * Given an {@link Entity}, we can find the object or model of which it is a part, or the objects that comprise it. We can also generate UI\n * components from the metadata, such as the tree view demonstrated in [this demo](https://xeokit.github.io/xeokit-sdk/examples/#BIMOffline_glTF_OTCConferenceCenter).\n *\n * This hierarchy allows us to express the hierarchical structure of a model while representing it in\n * various ways in the 3D scene (such as with ````PerformanceModel````, which\n * has a non-hierarchical scene representation).\n *\n * Note also that a {@link MetaObject} does not need to have a corresponding\n * {@link Entity} and vice-versa.\n *\n * # RTC Coordinates for 64-Bit Precision\n *\n * ````PerformanceModel```` can emulate 64-bit precision on GPUs using relative-to-center (RTC) coordinates.\n *\n * Consider a model that contains many small objects, but with such large spatial extents that 32 bits of GPU precision (accurate to ~7 digits) will not be sufficient to render all of the the objects without jittering.\n *\n * To prevent jittering, we could spatially subdivide the objects into \"tiles\". Each tile would have a center position, and the positions of the objects within the tile would be relative to that center (\"RTC coordinates\").\n *\n * While the center positions of the tiles would be 64-bit values, the object positions only need to be 32-bit.\n *\n * Internally, when rendering an object with RTC coordinates, xeokit first temporarily translates the camera viewing matrix by the object's tile's RTC center, on the CPU, using 64-bit math.\n *\n * Then xeokit loads the viewing matrix into its WebGL shaders, where math happens at 32-bit precision. Within the shaders, the matrix is effectively down-cast to 32-bit precision, and the object's 32-bit vertex positions are transformed by the matrix.\n *\n * We see no jittering, because with RTC a detectable loss of GPU accuracy only starts happening to objects as they become very distant from the camera viewpoint, at which point they are too small to be discernible anyway.\n *\n * ## RTC Coordinates with Geometry Instancing\n *\n * To use RTC with ````PerformanceModel```` geometry instancing, we specify an RTC center for the geometry. Then ````PerformanceModel```` assumes that all meshes that instance that geometry are within the same RTC coordinate system, ie. the meshes ````position```` and ````rotation```` properties are assumed to be relative to the geometry's ````rtcCenter````.\n *\n * For simplicity, our example's meshes all instance the same geometry. Therefore, our example model has only one RTC center.\n *\n * Note that the axis-aligned World-space boundary (AABB) of our model is ````[ -6, -9, -6, 1000000006, -2.5, 1000000006]````.\n *\n * [![](http://xeokit.io/img/docs/sceneGraph.png)](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching)\n *\n * * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_instancing_rtcCenter)]\n *\n * ````javascript\n * const rtcCenter = [100000000, 0, 100000000];\n *\n * performanceModel.createGeometry({\n *     id: \"box\",\n *     rtcCenter: rtcCenter, // This geometry's positions, and the transforms of all meshes that instance the geometry, are relative to the RTC center\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg1\",\n *     geometryId: \"box\",\n *     position: [-4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1, 0.3, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg1\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg2\",\n *     geometryId: \"box\",\n *     position: [4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 1.0, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg2\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg3\",\n *     geometryId: \"box\",\n *     position: [4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg3\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg4\",\n *     geometryId: \"box\",\n *     position: [-4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 1.0, 0.0]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg4\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"top\",\n *     geometryId: \"box\",\n *     position: [0, -3, 0],\n *     scale: [6, 0.5, 6],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"top\"],\n *     isObject: true\n * });\n * ````\n *\n * ## RTC Coordinates with Geometry Batching\n *\n * To use RTC with ````PerformanceModel```` geometry batching, we specify an RTC center (````rtcCenter````) for each mesh. For performance, we try to have as many meshes share the same value for ````rtcCenter```` as possible. Each mesh's ````positions````, ````position```` and ````rotation```` properties are assumed to be relative to ````rtcCenter````.\n *\n * For simplicity, the meshes in our example all share the same RTC center.\n *\n * The axis-aligned World-space boundary (AABB) of our model is ````[ -6, -9, -6, 1000000006, -2.5, 1000000006]````.\n *\n * [![](http://xeokit.io/img/docs/sceneGraph.png)](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching)\n *\n * * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_PerformanceModel_batching_rtcCenter)]\n *\n * ````javascript\n * const rtcCenter = [100000000, 0, 100000000];\n *\n * performanceModel.createMesh({\n *     id: \"leg1\",\n *     rtcCenter: rtcCenter, // This mesh's positions and transforms are relative to the RTC center\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [-4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1, 0.3, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg1\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg2\",\n *     rtcCenter: rtcCenter, // This mesh's positions and transforms are relative to the RTC center\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [4, -6, -4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 1.0, 0.3]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg2\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg3\",\n *     rtcCenter: rtcCenter, // This mesh's positions and transforms are relative to the RTC center\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [0.3, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg3\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"leg4\",\n *     rtcCenter: rtcCenter, // This mesh's positions and transforms are relative to the RTC center\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [-4, -6, 4],\n *     scale: [1, 3, 1],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 1.0, 0.0]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"leg4\"],\n *     isObject: true\n * });\n *\n * performanceModel.createMesh({\n *     id: \"top\",\n *     rtcCenter: rtcCenter, // This mesh's positions and transforms are relative to the RTC center\n *     primitive: \"triangles\",\n *     positions: [ 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1 ... ],\n *     normals: [ 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, ... ],\n *     indices: [ 0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, ... ],\n *     position: [0, -3, 0],\n *     scale: [6, 0.5, 6],\n *     rotation: [0, 0, 0],\n *     color: [1.0, 0.3, 1.0]\n * });\n *\n * performanceModel.createEntity({\n *     meshIds: [\"top\"],\n *     isObject: true\n * });\n ````\n *\n * @implements {Drawable}\n * @implements {Entity}\n */\nclass PerformanceModel extends Component {\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] Configs\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent scene, generated automatically when omitted.\n     * @param {Boolean} [cfg.isModel] Specify ````true```` if this PerformanceModel represents a model, in which case the PerformanceModel will be registered by {@link PerformanceModel#id} in {@link Scene#models} and may also have a corresponding {@link MetaModel} with matching {@link MetaModel#id}, registered by that ID in {@link MetaScene#metaModels}.\n     * @param {Number[]} [cfg.position=[0,0,0]] Local 3D position.\n     * @param {Number[]} [cfg.scale=[1,1,1]] Local scale.\n     * @param {Number[]} [cfg.rotation=[0,0,0]] Local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     * @param {Number[]} [cfg.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1] Local modelling transform matrix. Overrides the position, scale and rotation parameters.\n     * @param {Boolean} [cfg.visible=true] Indicates if the PerformanceModel is initially visible.\n     * @param {Boolean} [cfg.culled=false] Indicates if the PerformanceModel is initially culled from view.\n     * @param {Boolean} [cfg.pickable=true] Indicates if the PerformanceModel is initially pickable.\n     * @param {Boolean} [cfg.clippable=true] Indicates if the PerformanceModel is initially clippable.\n     * @param {Boolean} [cfg.collidable=true] Indicates if the PerformanceModel is initially included in boundary calculations.\n     * @param {Boolean} [cfg.xrayed=false] Indicates if the PerformanceModel is initially xrayed.\n     * @param {Boolean} [cfg.highlighted=false] Indicates if the PerformanceModel is initially highlighted.\n     * @param {Boolean} [cfg.selected=false] Indicates if the PerformanceModel is initially selected.\n     * @param {Boolean} [cfg.edges=false] Indicates if the PerformanceModel's edges are initially emphasized.\n     * @param {Number[]} [cfg.colorize=[1.0,1.0,1.0]] PerformanceModel's initial RGB colorize color, multiplies by the rendered fragment colors.\n     * @param {Number} [cfg.opacity=1.0] PerformanceModel's initial opacity factor, multiplies by the rendered fragment alpha.\n     * @param {Number} [cfg.backfaces=false] When we set this ````true````, then we force rendering of backfaces for this PerformanceModel. When\n     * we leave this ````false````, then we allow the Viewer to decide when to render backfaces. In that case, the\n     * Viewer will hide backfaces on watertight meshes, show backfaces on open meshes, and always show backfaces on meshes when we slice them open with {@link SectionPlane}s.\n     * @param {Boolean} [cfg.saoEnabled=true] Indicates if Scalable Ambient Obscurance (SAO) will apply to this PerformanceModel. SAO is configured by the Scene's {@link SAO} component.\n     * @param {Boolean} [cfg.pbrEnabled=false] Indicates if physically-based rendering (PBR) will apply to the PerformanceModel. Only works when {@link Scene#pbrEnabled} is also ````true````.\n     * @param {Number} [cfg.edgeThreshold=10] When xraying, highlighting, selecting or edging, this is the threshold angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     * @param {Number} [cfg.maxGeometryBatchSize=50000000] Maximum geometry batch size, as number of vertices. This is optionally supplied\n     * to limit the size of the batched geometry arrays that PerformanceModel internally creates for batched geometries.\n     * A lower value means less heap allocation/de-allocation while creating/loading batched geometries, but more draw calls and\n     * slower rendering speed. A high value means larger heap allocation/de-allocation while creating/loading, but less draw calls\n     * and faster rendering speed. It's recommended to keep this somewhere roughly between ````50000```` and ````50000000```.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._maxGeometryBatchSize = cfg.maxGeometryBatchSize;\n\n        this._aabb = math.collapseAABB3();\n        this._aabbDirty = false;\n        this._layerList = []; // For GL state efficiency when drawing, InstancingLayers are in first part, BatchingLayers are in second\n        this._nodeList = [];\n\n        this._lastRTCCenter = null;\n        this._lastDecodeMatrix = null;\n\n        this._instancingLayers = {};\n        this._currentBatchingLayers = {};\n\n        this._scratchMemory = getScratchMemory();\n\n        this._meshes = {};\n        this._nodes = {};\n\n        /** @private **/\n        this.renderFlags = new RenderFlags();\n\n        /**\n         * @private\n         */\n        this.numGeometries = 0; // Number of instance-able geometries created with createGeometry()\n\n        // These counts are used to avoid unnecessary render passes\n        // They are incremented or decremented exclusively by BatchingLayer and InstancingLayer\n        /**\n         * @private\n         */\n        this.numPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numVisibleLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numTransparentLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numXRayedLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numHighlightedLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numSelectedLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numEdgesLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numPickableLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numClippableLayerPortions = 0;\n\n        /**\n         * @private\n         */\n        this.numCulledLayerPortions = 0;\n\n        /** @private */\n        this.numEntities = 0;\n\n        /** @private */\n        this._numTriangles = 0;\n\n        /** @private */\n        this._numLines = 0;\n\n        /** @private */\n        this._numPoints = 0;\n\n        this._edgeThreshold = cfg.edgeThreshold || 10;\n\n        this.visible = cfg.visible;\n        this.culled = cfg.culled;\n        this.pickable = cfg.pickable;\n        this.clippable = cfg.clippable;\n        this.collidable = cfg.collidable;\n        this.castsShadow = cfg.castsShadow;\n        this.receivesShadow = cfg.receivesShadow;\n        this.xrayed = cfg.xrayed;\n        this.highlighted = cfg.highlighted;\n        this.selected = cfg.selected;\n        this.edges = cfg.edges;\n        this.colorize = cfg.colorize;\n        this.opacity = cfg.opacity;\n        this.backfaces = cfg.backfaces;\n\n        // Build static matrix\n\n        this._position = new Float32Array(cfg.position || [0, 0, 0]);\n        this._rotation = new Float32Array(cfg.rotation || [0, 0, 0]);\n        this._quaternion = new Float32Array(cfg.quaternion || [0, 0, 0, 1]);\n        if (cfg.rotation) {\n            math.eulerToQuaternion(this._rotation, \"XYZ\", this._quaternion);\n        }\n        this._scale = new Float32Array(cfg.scale || [1, 1, 1]);\n        this._worldMatrix = math.mat4();\n        math.composeMat4(this._position, this._quaternion, this._scale, this._worldMatrix);\n        this._worldNormalMatrix = math.mat4();\n        math.inverseMat4(this._worldMatrix, this._worldNormalMatrix);\n        math.transposeMat4(this._worldNormalMatrix);\n\n        if (cfg.matrix || cfg.position || cfg.rotation || cfg.scale || cfg.quaternion) {\n            this._viewMatrix = math.mat4();\n            this._viewNormalMatrix = math.mat4();\n            this._viewMatrixDirty = true;\n            this._worldMatrixNonIdentity = true;\n        }\n\n        this._opacity = 1.0;\n        this._colorize = [1, 1, 1];\n\n        this._saoEnabled = (cfg.saoEnabled !== false);\n\n        this._pbrEnabled = (!!cfg.pbrEnabled);\n\n        this._isModel = cfg.isModel;\n        if (this._isModel) {\n            this.scene._registerModel(this);\n        }\n\n        this._onCameraViewMatrix = this.scene.camera.on(\"matrix\", () => {\n            this._viewMatrixDirty = true;\n        });\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // PerformanceModel members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that this Component is a PerformanceModel.\n     * @type {Boolean}\n     */\n    get isPerformanceModel() {\n        return true;\n    }\n\n    /**\n     * Gets the PerformanceModel's local translation.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get position() {\n        return this._position;\n    }\n\n    /**\n     * Gets the PerformanceModel's local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get rotation() {\n        return this._rotation;\n    }\n\n    /**\n     * Gets the PerformanceModels's local rotation quaternion.\n     *\n     * Default value is ````[0,0,0,1]````.\n     *\n     * @type {Number[]}\n     */\n    get quaternion() {\n        return this._quaternion;\n    }\n\n    /**\n     * Gets the PerformanceModel's local scale.\n     *\n     * Default value is ````[1,1,1]````.\n     *\n     * @type {Number[]}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Gets the PerformanceModel's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {Number[]}\n     */\n    get matrix() {\n        return this._worldMatrix;\n    }\n\n    /**\n     * Gets the PerformanceModel's World matrix.\n     *\n     * @property worldMatrix\n     * @type {Number[]}\n     */\n    get worldMatrix() {\n        return this._worldMatrix;\n    }\n\n    /**\n     * Gets the PerformanceModel's World normal matrix.\n     *\n     * @type {Number[]}\n     */\n    get worldNormalMatrix() {\n        return this._worldNormalMatrix;\n    }\n\n    /**\n     * Called by private renderers in ./lib, returns the view matrix with which to\n     * render this PerformanceModel. The view matrix is the concatenation of the\n     * Camera view matrix with the Performance model's world (modeling) matrix.\n     *\n     * @private\n     */\n    get viewMatrix() {\n        if (!this._viewMatrix) {\n            return this.scene.camera.viewMatrix;\n        }\n        if (this._viewMatrixDirty) {\n            math.mulMat4(this.scene.camera.viewMatrix, this._worldMatrix, this._viewMatrix);\n            math.inverseMat4(this._viewMatrix, this._viewNormalMatrix);\n            math.transposeMat4(this._viewNormalMatrix);\n            this._viewMatrixDirty = false;\n        }\n        return this._viewMatrix;\n    }\n\n    /**\n     * Called by private renderers in ./lib, returns the picking view matrix with which to\n     * ray-pick on this PerformanceModel.\n     *\n     * @private\n     */\n    getPickViewMatrix(pickViewMatrix) {\n        if (!this._viewMatrix) {\n            return pickViewMatrix;\n        }\n        return this._viewMatrix;\n    }\n\n    /**\n     * Called by private renderers in ./lib, returns the view normal matrix with which to render this PerformanceModel.\n     *\n     * @private\n     */\n    get viewNormalMatrix() {\n        if (!this._viewNormalMatrix) {\n            return this.scene.camera.viewNormalMatrix;\n        }\n        if (this._viewMatrixDirty) {\n            math.mulMat4(this.scene.camera.viewMatrix, this._worldMatrix, this._viewMatrix);\n            math.inverseMat4(this._viewMatrix, this._viewNormalMatrix);\n            math.transposeMat4(this._viewNormalMatrix);\n            this._viewMatrixDirty = false;\n        }\n        return this._viewNormalMatrix;\n    }\n\n    /**\n     * Creates a reusable geometry within this PerformanceModel.\n     *\n     * We can then supply the geometry ID to {@link PerformanceModel#createMesh} when we want to create meshes that instance the geometry.\n     *\n     * If provide a  ````positionsDecodeMatrix```` , then ````createGeometry()```` will assume\n     * that the ````positions```` and ````normals```` arrays are compressed. When compressed, ````positions```` will be\n     * quantized and in World-space, and ````normals```` will be oct-encoded and in World-space.\n     *\n     * Note that ````positions````, ````normals```` and ````indices```` are all required together.\n     *\n     * @param {*} cfg Geometry properties.\n     * @param {String|Number} cfg.id Mandatory ID for the geometry, to refer to with {@link PerformanceModel#createMesh}.\n     * @param {String} cfg.primitive The primitive type. Accepted values are 'points', 'lines', 'triangles', 'solid' and 'surface'.\n     * @param {Number[]} cfg.positions Flat array of positions.\n     * @param {Number[]} [cfg.normals] Flat array of normal vectors. Required for 'triangles' primitives.\n     * @param {Number[]} [cfg.indices] Array of indices. Not required for `points` primitives.\n     * @param {Number[]} [cfg.edgeIndices] Array of edge line indices. Used only for Required for 'triangles' primitives. These are automatically generated internally if not supplied, using the ````edgeThreshold```` given to the ````PerformanceModel```` constructor.\n     * @param {Number[]} [cfg.positionsDecodeMatrix] A 4x4 matrix for decompressing ````positions````.\n     * @param {Number[]} [cfg.rtcCenter] Relative-to-center (RTC) coordinate system center. When this is given, then ````positions```` are assumed to be relative to this center.\n     */\n    createGeometry(cfg) {\n        if (!instancedArraysSupported) {\n            this.error(\"WebGL instanced arrays not supported\"); // TODO: Gracefully use batching?\n            return;\n        }\n        const geometryId = cfg.id;\n        if (geometryId === undefined || geometryId === null) {\n            this.error(\"Config missing: id\");\n            return;\n        }\n        if (this._instancingLayers[geometryId]) {\n            this.error(\"Geometry already created: \" + geometryId);\n            return;\n        }\n        let instancingLayer;\n        const primitive = cfg.primitive;\n        if (primitive === undefined || primitive === null) {\n            this.error(\"Config missing: primitive\");\n            return;\n        }\n        switch (primitive) {\n            case \"triangles\":\n                instancingLayer = new TrianglesInstancingLayer(this, utils.apply({\n                    layerIndex: 0,\n                    solid: true\n                }, cfg));\n                this._numTriangles += (cfg.indices ? Math.round(cfg.indices.length / 3) : 0);\n                break;\n            case \"solid\":\n                instancingLayer = new TrianglesInstancingLayer(this, utils.apply({\n                    layerIndex: 0,\n                    solid: true\n                }, cfg));\n                this._numTriangles += (cfg.indices ? Math.round(cfg.indices.length / 3) : 0);\n                break;\n            case \"surface\":\n                instancingLayer = new TrianglesInstancingLayer(this, utils.apply({\n                    layerIndex: 0,\n                    solid: false\n                }, cfg));\n                this._numTriangles += (cfg.indices ? Math.round(cfg.indices.length / 3) : 0);\n                break;\n            case \"lines\":\n                instancingLayer = new LinesInstancingLayer(this, utils.apply({\n                    layerIndex: 0\n                }, cfg));\n                this._numLines += (cfg.indices ? Math.round(cfg.indices.length / 2) : 0);\n                break;\n            case \"points\":\n                instancingLayer = new PointsInstancingLayer(this, utils.apply({\n                    layerIndex: 0\n                }, cfg));\n                this._numPoints += (cfg.positions ? Math.round(cfg.positions.length / 3) : 0);\n                break;\n        }\n        this._instancingLayers[geometryId] = instancingLayer;\n        this._layerList.push(instancingLayer);\n        this.numGeometries++;\n    }\n\n    /**\n     * Creates a mesh within this PerformanceModel.\n     *\n     * A mesh can either share geometry with other meshes, or have its own unique geometry.\n     *\n     * To share a geometry with other meshes, provide the ID of a geometry created earlier\n     * with {@link PerformanceModel#createGeometry}.\n     *\n     * To create unique geometry for the mesh, provide geometry data arrays.\n     *\n     * Internally, PerformanceModel will batch all unique mesh geometries into the same arrays, which improves\n     * rendering performance.\n     *\n     * If you accompany the arrays with a  ````positionsDecodeMatrix```` , then ````createMesh()```` will assume\n     * that the ````positions```` and ````normals```` arrays are compressed. When compressed, ````positions```` will be\n     * quantized and in World-space, and ````normals```` will be oct-encoded and in World-space.\n     *\n     * If you accompany the arrays with an  ````rtcCenter````, then ````createMesh()```` will assume\n     * that the ````positions```` are in relative-to-center (RTC) coordinates, with ````rtcCenter```` being the origin of their\n     * RTC coordinate system.\n     *\n     * When providing either ````positionsDecodeMatrix```` or ````rtcCenter````, ````createMesh()```` will start a new\n     * batch each time either of those two parameters change since the last call. Therefore, to combine arrays into the\n     * minimum number of batches, it's best for performance to create your shared meshes in runs that have the same value\n     * for ````positionsDecodeMatrix```` and ````rtcCenter````.\n     *\n     * Note that ````positions````, ````normals```` and ````indices```` are all required together.\n     *\n     * @param {object} cfg Object properties.\n     * @param {String} cfg.id Mandatory ID for the new mesh. Must not clash with any existing components within the {@link Scene}.\n     * @param {String|Number} [cfg.geometryId] ID of a geometry to instance, previously created with {@link PerformanceModel#createGeometry:method\"}}createMesh(){{/crossLink}}. Overrides all other geometry parameters given to this method.\n     * @param {String} [cfg.primitive=\"triangles\"]  Geometry primitive type. Ignored when ````geometryId```` is given. Accepted values are 'points', 'lines' and 'triangles'.\n     * @param {Number[]} [cfg.positions] Flat array of vertex positions. Ignored when ````geometryId```` is given.\n     * @param {Number[]} [cfg.colors] Flat array of vertex colors. Ignored when ````geometryId```` is given, overriden by ````color````.\n     * @param {Number[]} [cfg.normals] Flat array of vertex normals. Ignored when ````geometryId```` is given.\n     * @param {Number[]} [cfg.positionsDecodeMatrix] A 4x4 matrix for decompressing ````positions````.\n     * @param {Number[]} [cfg.rtcCenter] Relative-to-center (RTC) coordinate system center. When this is given, then ````positions```` are assumed to be relative to this center.\n     * @param {Number[]} [cfg.indices] Array of triangle indices. Ignored when ````geometryId```` is given.\n     * @param {Number[]} [cfg.edgeIndices] Array of edge line indices. If ````geometryId```` is not given, edge line indices are\n     * automatically generated internally if not given, using the ````edgeThreshold```` given to the ````PerformanceModel````\n     * constructor. This parameter is ignored when ````geometryId```` is given.\n     * @param {Number[]} [cfg.position=[0,0,0]] Local 3D position. of the mesh\n     * @param {Number[]} [cfg.scale=[1,1,1]] Scale of the mesh.\n     * @param {Number[]} [cfg.rotation=[0,0,0]] Rotation of the mesh as Euler angles given in degrees, for each of the X, Y and Z axis.\n     * @param {Number[]} [cfg.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] Mesh modelling transform matrix. Overrides the ````position````, ````scale```` and ````rotation```` parameters.\n     * @param {Number[]} [cfg.color=[1,1,1]] RGB color in range ````[0..1, 0..`, 0..1]````. Overrides ````colors````.\n     * @param {Number} [cfg.opacity=1] Opacity in range ````[0..1]````.\n     */\n    createMesh(cfg) {\n\n        let id = cfg.id;\n        if (id === undefined || id === null) {\n            this.error(\"Config missing: id\");\n            return;\n        }\n        if (this._meshes[id]) {\n            this.error(\"PerformanceModel already has a Mesh with this ID: \" + id + \"\");\n            return;\n        }\n\n        const geometryId = cfg.geometryId;\n        const instancing = (geometryId !== undefined);\n\n        if (instancing) {\n            if (!instancedArraysSupported) {\n                this.error(\"WebGL instanced arrays not supported\"); // TODO: Gracefully use batching?\n                return;\n            }\n            if (!this._instancingLayers[geometryId]) {\n                this.error(\"Geometry not found: \" + geometryId + \" - ensure that you create it first with createGeometry()\");\n                return;\n            }\n        }\n\n        let layer;\n        let portionId;\n\n        const color = (cfg.color) ? new Uint8Array([Math.floor(cfg.color[0] * 255), Math.floor(cfg.color[1] * 255), Math.floor(cfg.color[2] * 255)]) : [255, 255, 255];\n        const opacity = (cfg.opacity !== undefined && cfg.opacity !== null) ? Math.floor(cfg.opacity * 255) : 255;\n        const metallic = (cfg.metallic !== undefined && cfg.metallic !== null) ? Math.floor(cfg.metallic * 255) : 0;\n        const roughness = (cfg.roughness !== undefined && cfg.roughness !== null) ? Math.floor(cfg.roughness * 255) : 255;\n\n        const mesh = new PerformanceMesh(this, id, color, opacity);\n\n        const pickId = mesh.pickId;\n\n        const a = pickId >> 24 & 0xFF;\n        const b = pickId >> 16 & 0xFF;\n        const g = pickId >> 8 & 0xFF;\n        const r = pickId & 0xFF;\n\n        const pickColor = new Uint8Array([r, g, b, a]); // Quantized pick color\n\n        const aabb = math.collapseAABB3();\n\n        if (instancing) {\n\n            let meshMatrix;\n            let worldMatrix = this._worldMatrixNonIdentity ? this._worldMatrix : null;\n\n            if (cfg.matrix) {\n                meshMatrix = cfg.matrix;\n            } else {\n                const scale = cfg.scale || defaultScale;\n                const position = cfg.position || defaultPosition;\n                const rotation = cfg.rotation || defaultRotation;\n                math.eulerToQuaternion(rotation, \"XYZ\", defaultQuaternion);\n                meshMatrix = math.composeMat4(position, defaultQuaternion, scale, tempMat4);\n            }\n\n            const instancingLayer = this._instancingLayers[geometryId];\n\n            layer = instancingLayer;\n\n            portionId = instancingLayer.createPortion({\n                color: color,\n                metallic: metallic,\n                roughness: roughness,\n                opacity: opacity,\n                meshMatrix: meshMatrix,\n                worldMatrix: worldMatrix,\n                aabb: aabb,\n                pickColor: pickColor\n            });\n\n            math.expandAABB3(this._aabb, aabb);\n\n            const numTriangles = Math.round(instancingLayer.numIndices / 3);\n            this._numTriangles += numTriangles;\n            mesh.numTriangles = numTriangles;\n\n            mesh.rtcCenter = instancingLayer.rtcCenter;\n\n        } else { // Batching\n\n            let primitive = cfg.primitive || \"triangles\";\n\n            if (primitive !== \"points\" && primitive !== \"lines\" && primitive !== \"triangles\" && primitive !== \"solid\" && primitive !== \"surface\") {\n                this.error(`Unsupported value for 'primitive': '${primitive}' - supported values are 'points', 'lines', 'triangles', 'solid' and 'surface'. Defaulting to 'triangles'.`);\n                primitive = \"triangles\";\n            }\n\n            let positions = cfg.positions;\n\n            if (!positions) {\n                this.error(\"Config missing: positions (no meshIds provided, so expecting geometry arrays instead)\");\n                return null;\n            }\n\n            let indices = cfg.indices;\n            let edgeIndices = cfg.edgeIndices;\n\n            if (!cfg.indices && primitive === \"triangles\") {\n                this.error(\"Config missing for triangles primitive: indices (no meshIds provided, so expecting geometry arrays instead)\");\n                return null;\n            }\n\n            let needNewBatchingLayers = false;\n\n            if (cfg.rtcCenter) {\n                if (!this._lastRTCCenter) {\n                    needNewBatchingLayers = true;\n                    this._lastRTCCenter = math.vec3(cfg.rtcCenter);\n                } else {\n                    if (!math.compareVec3(this._lastRTCCenter, cfg.rtcCenter)) {\n                        needNewBatchingLayers = true;\n                        this._lastRTCCenter.set(cfg.rtcCenter)\n                    }\n                }\n            }\n\n            if (cfg.positionsDecodeMatrix) {\n                if (!this._lastDecodeMatrix) {\n                    needNewBatchingLayers = true;\n                    this._lastDecodeMatrix = math.mat4(cfg.positionsDecodeMatrix);\n\n                } else {\n                    if (!math.compareMat4(this._lastDecodeMatrix, cfg.positionsDecodeMatrix)) {\n                        needNewBatchingLayers = true;\n                        this._lastDecodeMatrix.set(cfg.positionsDecodeMatrix)\n                    }\n                }\n            }\n\n            if (needNewBatchingLayers) {\n                for (let prim in this._currentBatchingLayers) {\n                    if (this._currentBatchingLayers.hasOwnProperty(prim)) {\n                        this._currentBatchingLayers[prim].finalize();\n                    }\n                }\n                this._currentBatchingLayers = {};\n            }\n\n            const worldMatrix = this._worldMatrixNonIdentity ? this._worldMatrix : null;\n            let meshMatrix;\n\n            if (!cfg.positionsDecodeMatrix) {\n                if (cfg.matrix) {\n                    meshMatrix = cfg.matrix;\n                } else {\n                    const scale = cfg.scale || defaultScale;\n                    const position = cfg.position || defaultPosition;\n                    const rotation = cfg.rotation || defaultRotation;\n                    math.eulerToQuaternion(rotation, \"XYZ\", defaultQuaternion);\n                    meshMatrix = math.composeMat4(position, defaultQuaternion, scale, tempMat4);\n                }\n            }\n\n            layer = this._currentBatchingLayers[primitive];\n\n            switch (primitive) {\n\n                case \"triangles\":\n                case \"solid\":\n                case \"surface\":\n\n                    if (layer) {\n                        if (!layer.canCreatePortion(positions.length, indices.length)) {\n                            layer.finalize();\n                            delete this._currentBatchingLayers[primitive];\n                            layer = null;\n                        }\n                    }\n\n                    if (!layer) {\n                        layer = new TrianglesBatchingLayer(this, {\n                            layerIndex: 0, // This is set in #finalize()\n                            scratchMemory: this._scratchMemory,\n                            positionsDecodeMatrix: cfg.positionsDecodeMatrix,  // Can be undefined\n                            rtcCenter: cfg.rtcCenter, // Can be undefined\n                            maxGeometryBatchSize: this._maxGeometryBatchSize,\n                            solid: (primitive === \"solid\")\n                        });\n                        this._layerList.push(layer);\n                        this._currentBatchingLayers[primitive] = layer;\n                    }\n\n                    if (!edgeIndices) {\n                        edgeIndices = buildEdgeIndices(positions, indices, null, this._edgeThreshold);\n                    }\n\n                    portionId = layer.createPortion({\n                        positions: positions,\n                        normals: cfg.normals,\n                        indices: indices,\n                        edgeIndices: edgeIndices,\n                        color: color,\n                        metallic: metallic,\n                        roughness: roughness,\n                        colors: cfg.colors,\n                        opacity: opacity,\n                        meshMatrix: meshMatrix,\n                        worldMatrix: worldMatrix,\n                        worldAABB: aabb,\n                        pickColor: pickColor\n                    });\n\n                    const numTriangles = Math.round(indices.length / 3);\n                    this._numTriangles += numTriangles;\n                    mesh.numTriangles = numTriangles;\n\n                    break;\n\n                case \"lines\":\n\n                    if (layer) {\n                        if (!layer.canCreatePortion(positions.length, indices.length)) {\n                            layer.finalize();\n                            delete this._currentBatchingLayers[primitive];\n                            layer = null;\n                        }\n                    }\n\n                    if (!layer) {\n                        layer = new LinesBatchingLayer(this, {\n                            layerIndex: 0, // This is set in #finalize()\n                            scratchMemory: this._scratchMemory,\n                            positionsDecodeMatrix: cfg.positionsDecodeMatrix,  // Can be undefined\n                            rtcCenter: cfg.rtcCenter, // Can be undefined\n                            maxGeometryBatchSize: this._maxGeometryBatchSize\n                        });\n                        this._layerList.push(layer);\n                        this._currentBatchingLayers[primitive] = layer;\n                    }\n\n                    portionId = layer.createPortion({\n                        positions: positions,\n                        indices: indices,\n                        color: color,\n                        colors: cfg.colors,\n                        opacity: opacity,\n                        meshMatrix: meshMatrix,\n                        worldMatrix: worldMatrix,\n                        worldAABB: aabb,\n                        pickColor: pickColor\n                    });\n\n                    this._numLines += Math.round(indices.length / 2);\n\n                    break;\n\n                case \"points\":\n\n                    if (layer) {\n                        if (!layer.canCreatePortion(positions.length)) {\n                            layer.finalize();\n                            delete this._currentBatchingLayers[primitive];\n                            layer = null;\n                        }\n                    }\n\n                    if (!layer) {\n                        layer = new PointsBatchingLayer(this, {\n                            layerIndex: 0, // This is set in #finalize()\n                            scratchMemory: this._scratchMemory,\n                            positionsDecodeMatrix: cfg.positionsDecodeMatrix,  // Can be undefined\n                            rtcCenter: cfg.rtcCenter, // Can be undefined\n                            maxGeometryBatchSize: this._maxGeometryBatchSize\n                        });\n                        this._layerList.push(layer);\n                        this._currentBatchingLayers[primitive] = layer;\n                    }\n\n                    portionId = layer.createPortion({\n                        positions: positions,\n                        color: color,\n                        colors: cfg.colors,\n                        opacity: opacity,\n                        meshMatrix: meshMatrix,\n                        worldMatrix: worldMatrix,\n                        worldAABB: aabb,\n                        pickColor: pickColor\n                    });\n\n                    this._numPoints += Math.round(positions.length / 3);\n\n                    break;\n            }\n\n            math.expandAABB3(this._aabb, aabb);\n\n            this.numGeometries++;\n\n            mesh.rtcCenter = cfg.rtcCenter;\n        }\n\n        mesh.parent = null; // Will be set within PerformanceModelNode constructor\n        mesh._layer = layer;\n        mesh._portionId = portionId;\n        mesh.aabb = aabb;\n\n        this._meshes[id] = mesh;\n    }\n\n    /**\n     * Creates an {@link Entity} within this PerformanceModel, giving it one or more meshes previously created with {@link PerformanceModel#createMesh}.\n     *\n     * A mesh can only belong to one {@link Entity}, so you'll get an error if you try to reuse a mesh among multiple {@link Entity}s.\n     *\n     * @param {Object} cfg Entity configuration.\n     * @param {String} cfg.id Optional ID for the new Entity. Must not clash with any existing components within the {@link Scene}.\n     * @param {String[]} cfg.meshIds IDs of one or more meshes created previously with {@link PerformanceModel@createMesh}.\n\n     * @param {Boolean} [cfg.isObject] Set ````true```` if the {@link Entity} represents an object, in which case it will be registered by {@link Entity#id} in {@link Scene#objects} and can also have a corresponding {@link MetaObject} with matching {@link MetaObject#id}, registered by that ID in {@link MetaScene#metaObjects}.\n     * @param {Boolean} [cfg.visible=true] Indicates if the Entity is initially visible.\n     * @param {Boolean} [cfg.culled=false] Indicates if the Entity is initially culled from view.\n     * @param {Boolean} [cfg.pickable=true] Indicates if the Entity is initially pickable.\n     * @param {Boolean} [cfg.clippable=true] Indicates if the Entity is initially clippable.\n     * @param {Boolean} [cfg.collidable=true] Indicates if the Entity is initially included in boundary calculations.\n     * @param {Boolean} [cfg.castsShadow=true] Indicates if the Entity initially casts shadows.\n     * @param {Boolean} [cfg.receivesShadow=true]  Indicates if the Entity initially receives shadows.\n     * @param {Boolean} [cfg.xrayed=false] Indicates if the Entity is initially xrayed. XRayed appearance is configured by {@link PerformanceModel#xrayMaterial}.\n     * @param {Boolean} [cfg.highlighted=false] Indicates if the Entity is initially highlighted. Highlighted appearance is configured by {@link PerformanceModel#highlightMaterial}.\n     * @param {Boolean} [cfg.selected=false] Indicates if the Entity is initially selected. Selected appearance is configured by {@link PerformanceModel#selectedMaterial}.\n     * @param {Boolean} [cfg.edges=false] Indicates if the Entity's edges are initially emphasized. Edges appearance is configured by {@link PerformanceModel#edgeMaterial}.\n     * @returns {Entity}\n     */\n    createEntity(cfg) {\n        // Validate or generate Entity ID\n        let id = cfg.id;\n        if (id === undefined) {\n            id = math.createUUID();\n        } else if (this.scene.components[id]) {\n            this.error(\"Scene already has a Component with this ID: \" + id + \" - will assign random ID\");\n            id = math.createUUID();\n        }\n        // Collect PerformanceModelNode's PerformanceModelMeshes\n        const meshIds = cfg.meshIds;\n        if (meshIds === undefined) {\n            this.error(\"Config missing: meshIds\");\n            return;\n        }\n        let meshes = [];\n        for (let i = 0, len = meshIds.length; i < len; i++) {\n            const meshId = meshIds[i];\n            const mesh = this._meshes[meshId];\n            if (!mesh) {\n                this.error(\"Mesh with this ID not found: \" + meshId + \" - ignoring this mesh\");\n                continue;\n            }\n            if (mesh.parent) {\n                this.error(\"Mesh with ID \" + meshId + \" already belongs to object with ID \" + mesh.parent.id + \" - ignoring this mesh\");\n                continue;\n            }\n            meshes.push(mesh);\n        }\n        // Create PerformanceModelNode flags\n        let flags = 0;\n        if (this._visible && cfg.visible !== false) {\n            flags = flags | ENTITY_FLAGS.VISIBLE;\n        }\n        if (this._pickable && cfg.pickable !== false) {\n            flags = flags | ENTITY_FLAGS.PICKABLE;\n        }\n        if (this._culled && cfg.culled !== false) {\n            flags = flags | ENTITY_FLAGS.CULLED;\n        }\n        if (this._clippable && cfg.clippable !== false) {\n            flags = flags | ENTITY_FLAGS.CLIPPABLE;\n        }\n        if (this._collidable && cfg.collidable !== false) {\n            flags = flags | ENTITY_FLAGS.COLLIDABLE;\n        }\n        if (this._edges && cfg.edges !== false) {\n            flags = flags | ENTITY_FLAGS.EDGES;\n        }\n        if (this._xrayed && cfg.xrayed !== false) {\n            flags = flags | ENTITY_FLAGS.XRAYED;\n        }\n        if (this._highlighted && cfg.highlighted !== false) {\n            flags = flags | ENTITY_FLAGS.HIGHLIGHTED;\n        }\n        if (this._selected && cfg.selected !== false) {\n            flags = flags | ENTITY_FLAGS.SELECTED;\n        }\n\n        // Create PerformanceModelNode AABB\n        let aabb;\n        if (meshes.length === 1) {\n            aabb = meshes[0].aabb;\n        } else {\n            aabb = math.collapseAABB3();\n            for (let i = 0, len = meshes.length; i < len; i++) {\n                math.expandAABB3(aabb, meshes[i].aabb);\n            }\n        }\n\n        const node = new PerformanceNode(this, cfg.isObject, id, meshes, flags, aabb); // Internally sets PerformanceModelMesh#parent to this PerformanceModelNode\n        this._nodeList.push(node);\n        this._nodes[id] = node;\n        this.numEntities++;\n        return node;\n    }\n\n    /**\n     * Finalizes this PerformanceModel.\n     *\n     * Immediately creates the PerformanceModel's {@link Entity}s within the {@link Scene}.\n     *\n     * Once finalized, you can't add anything more to this PerformanceModel.\n     */\n    finalize() {\n\n        if (this.destroyed) {\n            return;\n        }\n\n        for (const geometryId in this._instancingLayers) {\n            if (this._instancingLayers.hasOwnProperty(geometryId)) {\n                this._instancingLayers[geometryId].finalize();\n            }\n        }\n\n        for (let primitive in this._currentBatchingLayers) {\n            if (this._currentBatchingLayers.hasOwnProperty(primitive)) {\n                this._currentBatchingLayers[primitive].finalize();\n            }\n        }\n        this._currentBatchingLayers = {};\n\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            const node = this._nodeList[i];\n            node._finalize();\n        }\n\n        // Sort layers to reduce WebGL shader switching when rendering them\n\n        this._layerList.sort((a, b) => {\n            if (a.sortId < b.sortId) {\n                return -1;\n            }\n            if (a.sortId > b.sortId) {\n                return 1;\n            }\n            return 0;\n        });\n\n        for (let i = 0, len = this._layerList.length; i < len; i++) {\n            const layer = this._layerList[i];\n            layer.layerIndex = i;\n        }\n\n        this.glRedraw();\n\n        this.scene._aabbDirty = true;\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // PerformanceModel members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Sets if backfaces are rendered for this PerformanceModel.\n     *\n     * Default is ````false````.\n     *\n     * When we set this ````true````, then backfaces are always rendered for this PerformanceModel.\n     *\n     * When we set this ````false````, then we allow the Viewer to decide whether to render backfaces. In this case,\n     * the Viewer will:\n     *\n     *  * hide backfaces on watertight meshes,\n     *  * show backfaces on open meshes, and\n     *  * always show backfaces on meshes when we slice them open with {@link SectionPlane}s.\n     *\n     * @type {Boolean}\n     */\n    set backfaces(backfaces) {\n        backfaces = !!backfaces;\n        this._backfaces = backfaces;\n        this.glRedraw();\n    }\n\n    /**\n     * Sets if backfaces are rendered for this PerformanceModel.\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get backfaces() {\n        return this._backfaces;\n    }\n\n    /**\n     * Gets the list of {@link Entity}s within this PerformanceModel.\n     *\n     * @returns {Entity[]}\n     */\n    get entityList() {\n        return this._nodeList;\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Entity members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that PerformanceModel is an {@link Entity}.\n     * @type {Boolean}\n     */\n    get isEntity() {\n        return true;\n    }\n\n    /**\n     * Returns ````true```` if this PerformanceModel represents a model.\n     *\n     * When ````true```` the PerformanceModel will be registered by {@link PerformanceModel#id} in\n     * {@link Scene#models} and may also have a {@link MetaObject} with matching {@link MetaObject#id}.\n     *\n     * @type {Boolean}\n     */\n    get isModel() {\n        return this._isModel;\n    }\n\n    /**\n     * Returns ````false```` to indicate that PerformanceModel never represents an object.\n     *\n     * @type {Boolean}\n     */\n    get isObject() {\n        return false;\n    }\n\n    /**\n     * Gets the PerformanceModel's World-space 3D axis-aligned bounding box.\n     *\n     * Represented by a six-element Float64Array containing the min/max extents of the\n     * axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * @type {Number[]}\n     */\n    get aabb() {\n        if (this._aabbDirty) {\n            this._rebuildAABB();\n        }\n        return this._aabb;\n    }\n\n    _rebuildAABB() {\n        math.collapseAABB3(this._aabb);\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            const node = this._nodeList[i];\n            math.expandAABB3(this._aabb, node.aabb);\n        }\n        this._aabbDirty = false;\n    }\n\n    /**\n     * The approximate number of triangle primitives in this PerformanceModel.\n     *\n     * @type {Number}\n     */\n    get numTriangles() {\n        return this._numTriangles;\n    }\n\n    /**\n     * The approximate number of line primitives in this PerformanceModel.\n     *\n     * @type {Number}\n     */\n    get numLines() {\n        return this._numLines;\n    }\n\n    /**\n     * The approximate number of point primitives in this PerformanceModel.\n     *\n     * @type {Number}\n     */\n    get numPoints() {\n        return this._numPoints;\n    }\n\n    /**\n     * Sets if this PerformanceModel is visible.\n     *\n     * The PerformanceModel is only rendered when {@link PerformanceModel#visible} is ````true```` and {@link PerformanceModel#culled} is ````false````.\n     **\n     * @type {Boolean}\n     */\n    set visible(visible) {\n        visible = visible !== false;\n        this._visible = visible;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].visible = visible;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if any {@link Entity}s in this PerformanceModel are visible.\n     *\n     * The PerformanceModel is only rendered when {@link PerformanceModel#visible} is ````true```` and {@link PerformanceModel#culled} is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get visible() {\n        return (this.numVisibleLayerPortions > 0);\n    }\n\n    /**\n     * Sets if all {@link Entity}s in this PerformanceModel are xrayed.\n     *\n     * @type {Boolean}\n     */\n    set xrayed(xrayed) {\n        xrayed = !!xrayed;\n        this._xrayed = xrayed;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].xrayed = xrayed;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if any {@link Entity}s in this PerformanceModel are xrayed.\n     *\n     * @type {Boolean}\n     */\n    get xrayed() {\n        return (this.numXRayedLayerPortions > 0);\n    }\n\n    /**\n     * Sets if all {@link Entity}s in this PerformanceModel are highlighted.\n     *\n     * @type {Boolean}\n     */\n    set highlighted(highlighted) {\n        highlighted = !!highlighted;\n        this._highlighted = highlighted;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].highlighted = highlighted;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if any {@link Entity}s in this PerformanceModel are highlighted.\n     *\n     * @type {Boolean}\n     */\n    get highlighted() {\n        return (this.numHighlightedLayerPortions > 0);\n    }\n\n    /**\n     * Sets if all {@link Entity}s in this PerformanceModel are selected.\n     *\n     * @type {Boolean}\n     */\n    set selected(selected) {\n        selected = !!selected;\n        this._selected = selected;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].selected = selected;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if any {@link Entity}s in this PerformanceModel are selected.\n     *\n     * @type {Boolean}\n     */\n    get selected() {\n        return (this.numSelectedLayerPortions > 0);\n    }\n\n    /**\n     * Sets if all {@link Entity}s in this PerformanceModel have edges emphasised.\n     *\n     * @type {Boolean}\n     */\n    set edges(edges) {\n        edges = !!edges;\n        this._edges = edges;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].edges = edges;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if any {@link Entity}s in this PerformanceModel have edges emphasised.\n     *\n     * @type {Boolean}\n     */\n    get edges() {\n        return (this.numEdgesLayerPortions > 0);\n    }\n\n    /**\n     * Sets if this PerformanceModel is culled from view.\n     *\n     * The PerformanceModel is only rendered when {@link PerformanceModel#visible} is true and {@link PerformanceModel#culled} is false.\n     *\n     * @type {Boolean}\n     */\n    set culled(culled) {\n        culled = !!culled;\n        this._culled = culled;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].culled = culled;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this PerformanceModel is culled from view.\n     *\n     * The PerformanceModel is only rendered when {@link PerformanceModel#visible} is true and {@link PerformanceModel#culled} is false.\n     *\n     * @type {Boolean}\n     */\n    get culled() {\n        return this._culled;\n    }\n\n    /**\n     * Sets if {@link Entity}s in this PerformanceModel are clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#sectionPlanes}.\n     *\n     * @type {Boolean}\n     */\n    set clippable(clippable) {\n        clippable = clippable !== false;\n        this._clippable = clippable;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].clippable = clippable;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if {@link Entity}s in this PerformanceModel are clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#sectionPlanes}.\n     *\n     * @type {Boolean}\n     */\n    get clippable() {\n        return this._clippable;\n    }\n\n    /**\n     * Sets if {@link Entity}s in this PerformanceModel are collidable.\n     *\n     * @type {Boolean}\n     */\n    set collidable(collidable) {\n        collidable = collidable !== false;\n        this._collidable = collidable;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].collidable = collidable;\n        }\n    }\n\n    /**\n     * Gets if this PerformanceModel is collidable.\n     *\n     * @type {Boolean}\n     */\n    get collidable() {\n        return this._collidable;\n    }\n\n    /**\n     * Sets if {@link Entity}s in this PerformanceModel are pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    set pickable(pickable) {\n        pickable = pickable !== false;\n        this._pickable = pickable;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].pickable = pickable;\n        }\n    }\n\n    /**\n     * Gets if this PerformanceModel is pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    get pickable() {\n        return (this.numPickableLayerPortions > 0);\n    }\n\n    /**\n     * Sets the RGB colorize color for this PerformanceModel.\n     *\n     * Multiplies by rendered fragment colors.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    set colorize(colorize) {\n        this._colorize = colorize;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].colorize = colorize;\n        }\n    }\n\n    /**\n     * Gets the RGB colorize color for this PerformanceModel.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    get colorize() {\n        return this._colorize;\n    }\n\n    /**\n     * Sets the opacity factor for this PerformanceModel.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * @type {Number}\n     */\n    set opacity(opacity) {\n        this._opacity = opacity;\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i].opacity = opacity;\n        }\n    }\n\n    /**\n     * Gets this PerformanceModel's opacity factor.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * @type {Number}\n     */\n    get opacity() {\n        return this._opacity;\n    }\n\n    /**\n     * Sets if this PerformanceModel casts a shadow.\n     *\n     * @type {Boolean}\n     */\n    set castsShadow(castsShadow) {\n        castsShadow = (castsShadow !== false);\n        if (castsShadow !== this._castsShadow) {\n            this._castsShadow = castsShadow;\n            this.glRedraw();\n        }\n    }\n\n    /**\n     * Gets if this PerformanceModel casts a shadow.\n     *\n     * @type {Boolean}\n     */\n    get castsShadow() {\n        return this._castsShadow;\n    }\n\n    /**\n     * Sets if this PerformanceModel can have shadow cast upon it.\n     *\n     * @type {Boolean}\n     */\n    set receivesShadow(receivesShadow) {\n        receivesShadow = (receivesShadow !== false);\n        if (receivesShadow !== this._receivesShadow) {\n            this._receivesShadow = receivesShadow;\n            this.glRedraw();\n        }\n    }\n\n    /**\n     * Sets if this PerformanceModel can have shadow cast upon it.\n     *\n     * @type {Boolean}\n     */\n    get receivesShadow() {\n        return this._receivesShadow;\n    }\n\n    /**\n     * Gets if Scalable Ambient Obscurance (SAO) will apply to this PerformanceModel.\n     *\n     * SAO is configured by the Scene's {@link SAO} component.\n     *\n     *  Only works when {@link SAO#enabled} is also true.\n     *\n     * @type {Boolean}\n     */\n    get saoEnabled() {\n        return this._saoEnabled;\n    }\n\n    /**\n     * Gets if physically-based rendering (PBR) is enabled for this PerformanceModel.\n     *\n     * Only works when {@link Scene#pbrEnabled} is also true.\n     *\n     * @type {Boolean}\n     */\n    get pbrEnabled() {\n        return this._pbrEnabled;\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Drawable members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that PerformanceModel is implements {@link Drawable}.\n     *\n     * @type {Boolean}\n     */\n    get isDrawable() {\n        return true;\n    }\n\n    /** @private */\n    get isStateSortable() {\n        return false\n    }\n\n    /** @private */\n    stateSortCompare(drawable1, drawable2) {\n    }\n\n    /** @private */\n    rebuildRenderFlags() {\n        this.renderFlags.reset();\n        this._updateRenderFlagsVisibleLayers();\n        if (this.renderFlags.numLayers > 0 && this.renderFlags.numVisibleLayers === 0) {\n            this.renderFlags.culled = true;\n            return;\n        }\n        this._updateRenderFlags();\n    }\n\n    /**\n     * @private\n     */\n    _updateRenderFlagsVisibleLayers() {\n        const renderFlags = this.renderFlags;\n        renderFlags.numLayers = this._layerList.length;\n        renderFlags.numVisibleLayers = 0;\n        for (let layerIndex = 0, len = this._layerList.length; layerIndex < len; layerIndex++) {\n            const layer = this._layerList[layerIndex];\n            const layerVisible = this._getActiveSectionPlanesForLayer(layer);\n            if (layerVisible) {\n                renderFlags.visibleLayers[renderFlags.numVisibleLayers++] = layerIndex;\n            }\n        }\n    }\n\n    /** @private */\n    _getActiveSectionPlanesForLayer(layer) {\n\n        const renderFlags = this.renderFlags;\n        const sectionPlanes = this.scene._sectionPlanesState.sectionPlanes;\n        const numSectionPlanes = sectionPlanes.length;\n        const baseIndex = layer.layerIndex * numSectionPlanes;\n\n        if (numSectionPlanes > 0) {\n            for (let i = 0; i < numSectionPlanes; i++) {\n\n                const sectionPlane = sectionPlanes[i];\n\n                if (!sectionPlane.active) {\n                    renderFlags.sectionPlanesActivePerLayer[baseIndex + i] = false;\n\n                } else {\n                    renderFlags.sectionPlanesActivePerLayer[baseIndex + i] = true;\n                    renderFlags.sectioned = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /** @private */\n    _updateRenderFlags() {\n\n        if (this.numVisibleLayerPortions === 0) {\n            return;\n        }\n\n        if (this.numCulledLayerPortions === this.numPortions) {\n            return;\n        }\n\n        const renderFlags = this.renderFlags;\n\n        renderFlags.colorOpaque = (this.numTransparentLayerPortions < this.numPortions);\n\n        if (this.numTransparentLayerPortions > 0) {\n            renderFlags.colorTransparent = true;\n        }\n\n        if (this.numXRayedLayerPortions > 0) {\n            const xrayMaterial = this.scene.xrayMaterial._state;\n            if (xrayMaterial.fill) {\n                if (xrayMaterial.fillAlpha < 1.0) {\n                    renderFlags.xrayedSilhouetteTransparent = true;\n                } else {\n                    renderFlags.xrayedSilhouetteOpaque = true;\n                }\n            }\n            if (xrayMaterial.edges) {\n                if (xrayMaterial.edgeAlpha < 1.0) {\n                    renderFlags.xrayedEdgesTransparent = true;\n                } else {\n                    renderFlags.xrayedEdgesOpaque = true;\n                }\n            }\n        }\n\n        if (this.numEdgesLayerPortions > 0) {\n            const edgeMaterial = this.scene.edgeMaterial._state;\n            if (edgeMaterial.edges) {\n                renderFlags.edgesOpaque = (this.numTransparentLayerPortions < this.numPortions);\n                if (this.numTransparentLayerPortions > 0) {\n                    renderFlags.edgesTransparent = true;\n                }\n            }\n        }\n\n        if (this.numSelectedLayerPortions > 0) {\n            const selectedMaterial = this.scene.selectedMaterial._state;\n            if (selectedMaterial.fill) {\n                if (selectedMaterial.fillAlpha < 1.0) {\n                    renderFlags.selectedSilhouetteTransparent = true;\n                } else {\n                    renderFlags.selectedSilhouetteOpaque = true;\n                }\n            }\n            if (selectedMaterial.edges) {\n                if (selectedMaterial.edgeAlpha < 1.0) {\n                    renderFlags.selectedEdgesTransparent = true;\n                } else {\n                    renderFlags.selectedEdgesOpaque = true;\n                }\n            }\n        }\n\n        if (this.numHighlightedLayerPortions > 0) {\n            const highlightMaterial = this.scene.highlightMaterial._state;\n            if (highlightMaterial.fill) {\n                if (highlightMaterial.fillAlpha < 1.0) {\n                    renderFlags.highlightedSilhouetteTransparent = true;\n                } else {\n                    renderFlags.highlightedSilhouetteOpaque = true;\n                }\n            }\n            if (highlightMaterial.edges) {\n                if (highlightMaterial.edgeAlpha < 1.0) {\n                    renderFlags.highlightedEdgesTransparent = true;\n                } else {\n                    renderFlags.highlightedEdgesOpaque = true;\n                }\n            }\n        }\n    }\n\n    /**\n     * Configures the appearance of xrayed {@link Entity}s within this PerformanceModel.\n     *\n     * This is the {@link Scene#xrayMaterial}.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get xrayMaterial() {\n        return this.scene.xrayMaterial;\n    }\n\n    /**\n     * Configures the appearance of highlighted {@link Entity}s within this PerformanceModel.\n     *\n     * This is the {@link Scene#highlightMaterial}.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get highlightMaterial() {\n        return this.scene.highlightMaterial;\n    }\n\n    /**\n     * Configures the appearance of selected {@link Entity}s within this PerformanceModel.\n     *\n     * This is the {@link Scene#selectedMaterial}.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get selectedMaterial() {\n        return this.scene.selectedMaterial;\n    }\n\n    /**\n     * Configures the appearance of edges of {@link Entity}s within this PerformanceModel.\n     *\n     * This is the {@link Scene#edgeMaterial}.\n     *\n     * @type {EdgeMaterial}\n     */\n    get edgeMaterial() {\n        return this.scene.edgeMaterial;\n    }\n\n    // -------------- RENDERING ---------------------------------------------------------------------------------------\n\n    /** @private */\n    drawColorOpaque(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawColorOpaque(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawColorTransparent(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawColorTransparent(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawDepth(frameCtx) { // Dedicated to SAO because it skips transparent objects\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawDepth(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawNormals(frameCtx) { // Dedicated to SAO because it skips transparent objects\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawNormals(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawSilhouetteXRayed(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawSilhouetteXRayed(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawSilhouetteHighlighted(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawSilhouetteHighlighted(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawSilhouetteSelected(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawSilhouetteSelected(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawEdgesColorOpaque(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawEdgesColorOpaque(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawEdgesColorTransparent(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawEdgesColorTransparent(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawEdgesXRayed(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawEdgesXRayed(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawEdgesHighlighted(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawEdgesHighlighted(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawEdgesSelected(frameCtx) {\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawEdgesSelected(renderFlags, frameCtx);\n        }\n    }\n\n    /**\n     * @private\n     */\n    drawOcclusion(frameCtx) {\n        if (this.numVisibleLayerPortions === 0) {\n            return;\n        }\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawOcclusion(renderFlags, frameCtx);\n        }\n    }\n\n    /**\n     * @private\n     */\n    drawShadow(frameCtx) {\n        if (this.numVisibleLayerPortions === 0) {\n            return;\n        }\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawShadow(renderFlags, frameCtx);\n        }\n    }\n\n    /** @private */\n    drawPickMesh(frameCtx) {\n        if (this.numVisibleLayerPortions === 0) {\n            return;\n        }\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawPickMesh(renderFlags, frameCtx);\n        }\n    }\n\n    /**\n     * Called by PerformanceMesh.drawPickDepths()\n     * @private\n     */\n    drawPickDepths(frameCtx) {\n        if (this.numVisibleLayerPortions === 0) {\n            return;\n        }\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawPickDepths(renderFlags, frameCtx);\n        }\n    }\n\n    /**\n     * Called by PerformanceMesh.drawPickNormals()\n     * @private\n     */\n    drawPickNormals(frameCtx) {\n        if (this.numVisibleLayerPortions === 0) {\n            return;\n        }\n        const renderFlags = this.renderFlags;\n        for (let i = 0, len = renderFlags.visibleLayers.length; i < len; i++) {\n            const layerIndex = renderFlags.visibleLayers[i];\n            this._layerList[layerIndex].drawPickNormals(renderFlags, frameCtx);\n        }\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Component members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Destroys this PerformanceModel.\n     */\n    destroy() {\n        for (let primitive in this._currentBatchingLayers) {\n            if (this._currentBatchingLayers.hasOwnProperty(primitive)) {\n                this._currentBatchingLayers[primitive].destroy();\n            }\n        }\n        this._currentBatchingLayers = {};\n        this.scene.camera.off(this._onCameraViewMatrix);\n        for (let i = 0, len = this._layerList.length; i < len; i++) {\n            this._layerList[i].destroy();\n        }\n        for (let i = 0, len = this._nodeList.length; i < len; i++) {\n            this._nodeList[i]._destroy();\n        }\n        this.scene._aabbDirty = true;\n        if (this._isModel) {\n            this.scene._deregisterModel(this);\n        }\n        putScratchMemory();\n        super.destroy();\n    }\n}\n\nexport {PerformanceModel};","import {utils} from '../utils.js';\nimport {Component} from '../Component.js';\nimport {math} from '../math/math.js';\n\nconst angleAxis = math.vec4(4);\nconst q1 = math.vec4();\nconst q2 = math.vec4();\nconst xAxis = math.vec3([1, 0, 0]);\nconst yAxis = math.vec3([0, 1, 0]);\nconst zAxis = math.vec3([0, 0, 1]);\n\nconst veca = math.vec3(3);\nconst vecb = math.vec3(3);\n\nconst identityMat = math.identityMat4();\n\n/**\n * @desc An {@link Entity} that is a scene graph node that can have child Nodes and {@link Mesh}es.\n *\n * ## Usage\n *\n * The example below is the same as the one given for {@link Mesh}, since the two classes work together. In this example,\n * we'll create a scene graph in which a root Node represents a group and the {@link Mesh}s are leaves. Since Node\n * implements {@link Entity}, we can designate the root Node as a model, causing it to be registered by its ID in {@link Scene#models}.\n *\n * Since {@link Mesh} also implements {@link Entity}, we can designate the leaf {@link Mesh}es as objects, causing them to\n * be registered by their IDs in {@link Scene#objects}.\n *\n * We can then find those {@link Entity} types in {@link Scene#models} and {@link Scene#objects}.\n *\n * We can also update properties of our object-Meshes via calls to {@link Scene#setObjectsHighlighted} etc.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_SceneGraph)]\n *\n * ````javascript\n * import {Viewer, Mesh, Node, PhongMaterial} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [-21.80, 4.01, 6.56];\n * viewer.scene.camera.look = [0, -5.75, 0];\n * viewer.scene.camera.up = [0.37, 0.91, -0.11];\n *\n * new Node(viewer.scene, {\n *      id: \"table\",\n *      isModel: true, // <---------- Node represents a model, so is registered by ID in viewer.scene.models\n *      rotation: [0, 50, 0],\n *      position: [0, 0, 0],\n *      scale: [1, 1, 1],\n *\n *      children: [\n *\n *          new Mesh(viewer.scene, { // Red table leg\n *              id: \"redLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [-4, -6, -4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [1, 0.3, 0.3]\n *              })\n *          }),\n *\n *          new Mesh(viewer.scene, { // Green table leg\n *              id: \"greenLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [4, -6, -4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [0.3, 1.0, 0.3]\n *              })\n *          }),\n *\n *          new Mesh(viewer.scene, {// Blue table leg\n *              id: \"blueLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [4, -6, 4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [0.3, 0.3, 1.0]\n *              })\n *          }),\n *\n *          new Mesh(viewer.scene, {  // Yellow table leg\n *              id: \"yellowLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [-4, -6, 4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                   diffuse: [1.0, 1.0, 0.0]\n *              })\n *          }),\n *\n *          new Mesh(viewer.scene, { // Purple table top\n *              id: \"tableTop\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [0, -3, 0],\n *              scale: [6, 0.5, 6],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [1.0, 0.3, 1.0]\n *              })\n *          })\n *      ]\n *  });\n *\n * // Find Nodes and Meshes by their IDs\n *\n * var table = viewer.scene.models[\"table\"];                // Since table Node has isModel == true\n *\n * var redLeg = viewer.scene.objects[\"redLeg\"];             // Since the Meshes have isObject == true\n * var greenLeg = viewer.scene.objects[\"greenLeg\"];\n * var blueLeg = viewer.scene.objects[\"blueLeg\"];\n *\n * // Highlight one of the table leg Meshes\n *\n * viewer.scene.setObjectsHighlighted([\"redLeg\"], true);    // Since the Meshes have isObject == true\n *\n * // Periodically update transforms on our Nodes and Meshes\n *\n * viewer.scene.on(\"tick\", function () {\n *\n *       // Rotate legs\n *       redLeg.rotateY(0.5);\n *       greenLeg.rotateY(0.5);\n *       blueLeg.rotateY(0.5);\n *\n *       // Rotate table\n *       table.rotateY(0.5);\n *       table.rotateX(0.3);\n *   });\n * ````\n *\n * ## Metadata\n *\n * As mentioned, we can also associate {@link MetaModel}s and {@link MetaObject}s with our Nodes and {@link Mesh}es,\n * within a {@link MetaScene}. See {@link MetaScene} for an example.\n *\n * @implements {Entity}\n */\nclass Node extends Component {\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] Configs\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent scene, generated automatically when omitted.\n     * @param {Boolean} [cfg.isModel] Specify ````true```` if this Mesh represents a model, in which case the Mesh will be registered by {@link Mesh#id} in {@link Scene#models} and may also have a corresponding {@link MetaModel} with matching {@link MetaModel#id}, registered by that ID in {@link MetaScene#metaModels}.\n     * @param {Boolean} [cfg.isObject] Specify ````true```` if this Mesh represents an object, in which case the Mesh will be registered by {@link Mesh#id} in {@link Scene#objects} and may also have a corresponding {@link MetaObject} with matching {@link MetaObject#id}, registered by that ID in {@link MetaScene#metaObjects}.\n     * @param {Node} [cfg.parent] The parent Node.\n     * @param {Number[]} [cfg.rtcCenter] Relative-to-center (RTC) coordinate system center for this Node.\n     * @param {Number[]} [cfg.position=[0,0,0]] Local 3D position.\n     * @param {Number[]} [cfg.scale=[1,1,1]] Local scale.\n     * @param {Number[]} [cfg.rotation=[0,0,0]] Local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     * @param {Number[]} [cfg.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1] Local modelling transform matrix. Overrides the position, scale and rotation parameters.\n     * @param {Number[]} [cfg.offset=[0,0,0]] World-space 3D translation offset. Translates the Node in World space, after modelling transforms.\n     * @param {Boolean} [cfg.visible=true] Indicates if the Node is initially visible.\n     * @param {Boolean} [cfg.culled=false] Indicates if the Node is initially culled from view.\n     * @param {Boolean} [cfg.pickable=true] Indicates if the Node is initially pickable.\n     * @param {Boolean} [cfg.clippable=true] Indicates if the Node is initially clippable.\n     * @param {Boolean} [cfg.collidable=true] Indicates if the Node is initially included in boundary calculations.\n     * @param {Boolean} [cfg.castsShadow=true] Indicates if the Node initially casts shadows.\n     * @param {Boolean} [cfg.receivesShadow=true]  Indicates if the Node initially receives shadows.\n     * @param {Boolean} [cfg.xrayed=false] Indicates if the Node is initially xrayed.\n     * @param {Boolean} [cfg.highlighted=false] Indicates if the Node is initially highlighted.\n     * @param {Boolean} [cfg.selected=false] Indicates if the Mesh is initially selected.\n     * @param {Boolean} [cfg.edges=false] Indicates if the Node's edges are initially emphasized.\n     * @param {Number[]} [cfg.colorize=[1.0,1.0,1.0]] Node's initial RGB colorize color, multiplies by the rendered fragment colors.\n     * @param {Number} [cfg.opacity=1.0] Node's initial opacity factor, multiplies by the rendered fragment alpha.\n     * @param {Array} [cfg.children] Child Nodes or {@link Mesh}es to add initially. Children must be in the same {@link Scene} and will be removed first from whatever parents they may already have.\n     * @param {Boolean} [cfg.inheritStates=true] Indicates if children given to this constructor should inherit rendering state from this parent as they are added. Rendering state includes {@link Node#visible}, {@link Node#culled}, {@link Node#pickable}, {@link Node#clippable}, {@link Node#castsShadow}, {@link Node#receivesShadow}, {@link Node#selected}, {@link Node#highlighted}, {@link Node#colorize} and {@link Node#opacity}.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._parentNode = null;\n        this._children = [];\n\n        this._aabb = null;\n        this._aabbDirty = true;\n\n        this.scene._aabbDirty = true;\n\n        this._numTriangles = 0;\n\n        this._scale = math.vec3();\n        this._quaternion = math.identityQuaternion();\n        this._rotation = math.vec3();\n        this._position = math.vec3();\n        this._offset = math.vec3();\n\n        this._localMatrix = math.identityMat4();\n        this._worldMatrix = math.identityMat4();\n\n        this._localMatrixDirty = true;\n        this._worldMatrixDirty = true;\n\n        if (cfg.matrix) {\n            this.matrix = cfg.matrix;\n        } else {\n            this.scale = cfg.scale;\n            this.position = cfg.position;\n            if (cfg.quaternion) {\n            } else {\n                this.rotation = cfg.rotation;\n            }\n        }\n\n        this._isModel = cfg.isModel;\n        if (this._isModel) {\n            this.scene._registerModel(this);\n        }\n\n        this._isObject = cfg.isObject;\n        if (this._isObject) {\n            this.scene._registerObject(this);\n        }\n\n        this.rtcCenter = cfg.rtcCenter;\n        this.visible = cfg.visible;\n        this.culled = cfg.culled;\n        this.pickable = cfg.pickable;\n        this.clippable = cfg.clippable;\n        this.collidable = cfg.collidable;\n        this.castsShadow = cfg.castsShadow;\n        this.receivesShadow = cfg.receivesShadow;\n        this.xrayed = cfg.xrayed;\n        this.highlighted = cfg.highlighted;\n        this.selected = cfg.selected;\n        this.edges = cfg.edges;\n        this.colorize = cfg.colorize;\n        this.opacity = cfg.opacity;\n        this.offset = cfg.offset;\n\n        // Add children, which inherit state from this Node\n\n        if (cfg.children) {\n            const children = cfg.children;\n            for (let i = 0, len = children.length; i < len; i++) {\n                this.addChild(children[i], cfg.inheritStates);\n            }\n        }\n\n        if (cfg.parentId) {\n            const parentNode = this.scene.components[cfg.parentId];\n            if (!parentNode) {\n                this.error(\"Parent not found: '\" + cfg.parentId + \"'\");\n            } else if (!parentNode.isNode) {\n                this.error(\"Parent is not a Node: '\" + cfg.parentId + \"'\");\n            } else {\n                parentNode.addChild(this);\n            }\n        } else if (cfg.parent) {\n            if (!cfg.parent.isNode) {\n                this.error(\"Parent is not a Node\");\n            }\n            cfg.parent.addChild(this);\n        }\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Entity members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that this Component is an Entity.\n     * @type {Boolean}\n     */\n    get isEntity() {\n        return true;\n    }\n\n    /**\n     * Returns ````true```` if this Mesh represents a model.\n     *\n     * When this returns ````true````, the Mesh will be registered by {@link Mesh#id} in {@link Scene#models} and\n     * may also have a corresponding {@link MetaModel}.\n     *\n     * @type {Boolean}\n     */\n    get isModel() {\n        return this._isModel;\n    }\n\n    /**\n     * Returns ````true```` if this Node represents an object.\n     *\n     * When ````true```` the Node will be registered by {@link Node#id} in\n     * {@link Scene#objects} and may also have a {@link MetaObject} with matching {@link MetaObject#id}.\n     *\n     * @type {Boolean}\n     * @abstract\n     */\n    get isObject() {\n        return this._isObject;\n    }\n\n    /**\n     * Gets the Node's World-space 3D axis-aligned bounding box.\n     *\n     * Represented by a six-element Float64Array containing the min/max extents of the\n     * axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * @type {Number[]}\n     */\n    get aabb() {\n        if (this._aabbDirty) {\n            this._updateAABB();\n        }\n        return this._aabb;\n    }\n\n    /**\n     * Sets the center of the relative-to-center (RTC) coordinate system for this Node and all child Nodes and {@link Mesh}s.\n     *\n     * @type {Float64Array}\n     */\n    set rtcCenter(rtcCenter) {\n        if (rtcCenter) {\n            if (!this._rtcCenter) {\n                this._rtcCenter = math.vec3();\n            }\n            this._rtcCenter.set(rtcCenter);\n        } else {\n            if (this._rtcCenter) {\n                this._rtcCenter = null;\n            }\n        }\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].rtcCenter = rtcCenter;\n        }\n    }\n\n    /**\n     *  Gets the center of the relative-to-center (RTC) coordinate system for this Node and all child Nodes and {@link Mesh}s.\n     *\n     * @type {Float64Array}\n     */\n    get rtcCenter() {\n        return this._rtcCenter;\n    }\n\n    /**\n     * The number of triangles in this Node.\n     *\n     * @type {Number}\n     */\n    get numTriangles() {\n        return this._numTriangles;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are visible.\n     *\n     * Only rendered both {@link Node#visible} is ````true```` and {@link Node#culled} is ````false````.\n     *\n     * When {@link Node#isObject} and {@link Node#visible} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#visibleObjects}.\n     *\n     * @type {Boolean}\n     */\n    set visible(visible) {\n        visible = visible !== false;\n        this._visible = visible;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].visible = visible;\n        }\n        if (this._isObject) {\n            this.scene._objectVisibilityUpdated(this, visible);\n        }\n    }\n\n    /**\n     * Gets if this Node is visible.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * When {@link Node#isObject} and {@link Node#visible} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#visibleObjects}.\n     *\n     * @type {Boolean}\n     */\n    get visible() {\n        return this._visible;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are xrayed.\n     *\n     * When {@link Node#isObject} and {@link Node#xrayed} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#xrayedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set xrayed(xrayed) {\n        xrayed = !!xrayed;\n        this._xrayed = xrayed;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].xrayed = xrayed;\n        }\n        if (this._isObject) {\n            this.scene._objectXRayedUpdated(this, xrayed);\n        }\n    }\n\n    /**\n     * Gets if this Node is xrayed.\n     *\n     * When {@link Node#isObject} and {@link Node#xrayed} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#xrayedObjects}.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get xrayed() {\n        return this._xrayed;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are highlighted.\n     *\n     * When {@link Node#isObject} and {@link Node#highlighted} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#highlightedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set highlighted(highlighted) {\n        highlighted = !!highlighted;\n        this._highlighted = highlighted;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].highlighted = highlighted;\n        }\n        if (this._isObject) {\n            this.scene._objectHighlightedUpdated(this, highlighted);\n        }\n    }\n\n    /**\n     * Gets if this Node is highlighted.\n     *\n     * When {@link Node#isObject} and {@link Node#highlighted} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#highlightedObjects}.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get highlighted() {\n        return this._highlighted;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are selected.\n     *\n     * When {@link Node#isObject} and {@link Node#selected} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#selectedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set selected(selected) {\n        selected = !!selected;\n        this._selected = selected;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].selected = selected;\n        }\n        if (this._isObject) {\n            this.scene._objectSelectedUpdated(this, selected);\n        }\n    }\n\n    /**\n     * Gets if this Node is selected.\n     *\n     * When {@link Node#isObject} and {@link Node#selected} are both ````true```` the Node will be\n     * registered by {@link Node#id} in {@link Scene#selectedObjects}.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get selected() {\n        return this._selected;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are edge-enhanced.\n     *\n     * @type {Boolean}\n     */\n    set edges(edges) {\n        edges = !!edges;\n        this._edges = edges;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].edges = edges;\n        }\n    }\n\n    /**\n     * Gets if this Node's edges are enhanced.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get edges() {\n        return this._edges;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are culled.\n     *\n     * @type {Boolean}\n     */\n    set culled(culled) {\n        culled = !!culled;\n        this._culled = culled;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].culled = culled;\n        }\n    }\n\n    /**\n     * Gets if this Node is culled.\n     *\n     * @type {Boolean}\n     */\n    get culled() {\n        return this._culled;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#clips}.\n     *\n     * @type {Boolean}\n     */\n    set clippable(clippable) {\n        clippable = clippable !== false;\n        this._clippable = clippable;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].clippable = clippable;\n        }\n    }\n\n    /**\n     * Gets if this Node is clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#clips}.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get clippable() {\n        return this._clippable;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are included in boundary calculations.\n     *\n     * @type {Boolean}\n     */\n    set collidable(collidable) {\n        collidable = collidable !== false;\n        this._collidable = collidable;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].collidable = collidable;\n        }\n    }\n\n    /**\n     * Gets if this Node is included in boundary calculations.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get collidable() {\n        return this._collidable;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es are pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    set pickable(pickable) {\n        pickable = pickable !== false;\n        this._pickable = pickable;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].pickable = pickable;\n        }\n    }\n\n    /**\n     * Gets if to this Node is pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get pickable() {\n        return this._pickable;\n    }\n\n    /**\n     * Sets the RGB colorize color for this Node and all child Nodes and {@link Mesh}es}.\n     *\n     * Multiplies by rendered fragment colors.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    set colorize(rgb) {\n        let colorize = this._colorize;\n        if (!colorize) {\n            colorize = this._colorize = new Float32Array(4);\n            colorize[3] = 1.0;\n        }\n        if (rgb) {\n            colorize[0] = rgb[0];\n            colorize[1] = rgb[1];\n            colorize[2] = rgb[2];\n        } else {\n            colorize[0] = 1;\n            colorize[1] = 1;\n            colorize[2] = 1;\n        }\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].colorize = colorize;\n        }\n        if (this._isObject) {\n            const colorized = (!!rgb);\n            this.scene._objectColorizeUpdated(this, colorized);\n        }\n    }\n\n    /**\n     * Gets the RGB colorize color for this Node.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Number[]}\n     */\n    get colorize() {\n        return this._colorize.slice(0, 3);\n    }\n\n    /**\n     * Sets the opacity factor for this Node and all child Nodes and {@link Mesh}es.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * @type {Number}\n     */\n    set opacity(opacity) {\n        let colorize = this._colorize;\n        if (!colorize) {\n            colorize = this._colorize = new Float32Array(4);\n            colorize[0] = 1;\n            colorize[1] = 1;\n            colorize[2] = 1;\n        }\n        colorize[3] = opacity !== null && opacity !== undefined ? opacity : 1.0;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].opacity = opacity;\n        }\n        if (this._isObject) {\n            const opacityUpdated = (opacity !== null && opacity !== undefined);\n            this.scene._objectOpacityUpdated(this, opacityUpdated);\n        }\n    }\n\n    /**\n     * Gets this Node's opacity factor.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Number}\n     */\n    get opacity() {\n        return this._colorize[3];\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es cast shadows.\n     *\n     * @type {Boolean}\n     */\n    set castsShadow(castsShadow) {\n        castsShadow = !!castsShadow;\n        this._castsShadow = castsShadow;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].castsShadow = castsShadow;\n        }\n    }\n\n    /**\n     * Gets if this Node casts shadows.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get castsShadow() {\n        return this._castsShadow;\n    }\n\n    /**\n     * Sets if this Node and all child Nodes and {@link Mesh}es can have shadows cast upon them.\n     *\n     * @type {Boolean}\n     */\n    set receivesShadow(receivesShadow) {\n        receivesShadow = !!receivesShadow;\n        this._receivesShadow = receivesShadow;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].receivesShadow = receivesShadow;\n        }\n    }\n\n    /**\n     * Whether or not to this Node can have shadows cast upon it.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Boolean}\n     */\n    get receivesShadow() {\n        return this._receivesShadow;\n    }\n\n    /**\n     * Gets if this Node can have Scalable Ambient Obscurance (SAO) applied to it.\n     *\n     * SAO is configured by {@link SAO}.\n     *\n     * @type {Boolean}\n     * @abstract\n     */\n    get saoEnabled() {\n        return false; // TODO: Support SAO on Nodes\n    }\n\n\n    /**\n     * Sets the 3D World-space offset for this Node and all child Nodes and {@link Mesh}es}.\n     *\n     * The offset dynamically translates those components in World-space.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * Note that child Nodes and {@link Mesh}es may subsequently be given different values for this property.\n     *\n     * @type {Number[]}\n     */\n    set offset(offset) {\n        if (offset) {\n            this._offset[0] = offset[0];\n            this._offset[1] = offset[1];\n            this._offset[2] = offset[2];\n        } else {\n            this._offset[0] = 0;\n            this._offset[1] = 0;\n            this._offset[2] = 0;\n        }\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i].offset = this._offset;\n        }\n        if (this._isObject) {\n            this.scene._objectOffsetUpdated(this, offset);\n        }\n    }\n\n    /**\n     * Gets the Node's 3D World-space offset.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * Child Nodes and {@link Mesh}es may have different values for this property.\n     *\n     * @type {Number[]}\n     */\n    get offset() {\n        return this._offset;\n    }\n\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Node members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that this Component is a Node.\n     * @type {Boolean}\n     */\n    get isNode() {\n        return true;\n    }\n\n    _setLocalMatrixDirty() {\n        this._localMatrixDirty = true;\n        this._setWorldMatrixDirty();\n    }\n\n    _setWorldMatrixDirty() {\n        this._worldMatrixDirty = true;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            this._children[i]._setWorldMatrixDirty();\n        }\n    }\n\n    _buildWorldMatrix() {\n        const localMatrix = this.matrix;\n        if (!this._parentNode) {\n            for (let i = 0, len = localMatrix.length; i < len; i++) {\n                this._worldMatrix[i] = localMatrix[i];\n            }\n        } else {\n            math.mulMat4(this._parentNode.worldMatrix, localMatrix, this._worldMatrix);\n        }\n        this._worldMatrixDirty = false;\n    }\n\n    _setSubtreeAABBsDirty(node) {\n        node._aabbDirty = true;\n        if (node._children) {\n            for (let i = 0, len = node._children.length; i < len; i++) {\n                this._setSubtreeAABBsDirty(node._children[i]);\n            }\n        }\n    }\n\n    _setAABBDirty() {\n        this._setSubtreeAABBsDirty(this);\n        if (this.collidable) {\n            for (let node = this; node; node = node._parentNode) {\n                node._aabbDirty = true;\n            }\n        }\n    }\n\n    _updateAABB() {\n        this.scene._aabbDirty = true;\n        if (!this._aabb) {\n            this._aabb = math.AABB3();\n        }\n        if (this._buildAABB) {\n            this._buildAABB(this.worldMatrix, this._aabb); // Mesh or PerformanceModel\n        } else { // Node | Node | Model\n            math.collapseAABB3(this._aabb);\n            let node;\n            for (let i = 0, len = this._children.length; i < len; i++) {\n                node = this._children[i];\n                if (!node.collidable) {\n                    continue;\n                }\n                math.expandAABB3(this._aabb, node.aabb);\n            }\n        }\n        this._aabbDirty = false;\n    }\n\n    /**\n     * Adds a child Node or {@link Mesh}.\n     *\n     * The child must be a Node or {@link Mesh} in the same {@link Scene}.\n     *\n     * If the child already has a parent, will be removed from that parent first.\n     *\n     * Does nothing if already a child.\n     *\n     * @param {Node|Mesh|String} child Instance or ID of the child to add.\n     * @param [inheritStates=false] Indicates if the child should inherit rendering states from this parent as it is added. Rendering state includes {@link Node#visible}, {@link Node#culled}, {@link Node#pickable}, {@link Node#clippable}, {@link Node#castsShadow}, {@link Node#receivesShadow}, {@link Node#selected}, {@link Node#highlighted}, {@link Node#colorize} and {@link Node#opacity}.\n     * @returns {Node|Mesh} The child.\n     */\n    addChild(child, inheritStates) {\n        if (utils.isNumeric(child) || utils.isString(child)) {\n            const nodeId = child;\n            child = this.scene.component[nodeId];\n            if (!child) {\n                this.warn(\"Component not found: \" + utils.inQuotes(nodeId));\n                return;\n            }\n            if (!child.isNode && !child.isMesh) {\n                this.error(\"Not a Node or Mesh: \" + nodeId);\n                return;\n            }\n        } else {\n            if (!child.isNode && !child.isMesh) {\n                this.error(\"Not a Node or Mesh: \" + child.id);\n                return;\n            }\n            if (child._parentNode) {\n                if (child._parentNode.id === this.id) {\n                    this.warn(\"Already a child: \" + child.id);\n                    return;\n                }\n                child._parentNode.removeChild(child);\n            }\n        }\n        const id = child.id;\n        if (child.scene.id !== this.scene.id) {\n            this.error(\"Child not in same Scene: \" + child.id);\n            return;\n        }\n        this._children.push(child);\n        child._parentNode = this;\n        if (!!inheritStates) {\n            child.visible = this.visible;\n            child.culled = this.culled;\n            child.xrayed = this.xrayed;\n            child.highlited = this.highlighted;\n            child.selected = this.selected;\n            child.edges = this.edges;\n            child.clippable = this.clippable;\n            child.pickable = this.pickable;\n            child.collidable = this.collidable;\n            child.castsShadow = this.castsShadow;\n            child.receivesShadow = this.receivesShadow;\n            child.colorize = this.colorize;\n            child.opacity = this.opacity;\n            child.offset = this.offset;\n        }\n        child._setWorldMatrixDirty();\n        child._setAABBDirty();\n        this._numTriangles += child.numTriangles;\n        return child;\n    }\n\n    /**\n     * Removes the given child Node or {@link Mesh}.\n     *\n     * @param {Node|Mesh} child Child to remove.\n     */\n    removeChild(child) {\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            if (this._children[i].id === child.id) {\n                child._parentNode = null;\n                this._children = this._children.splice(i, 1);\n                child._setWorldMatrixDirty();\n                child._setAABBDirty();\n                this._setAABBDirty();\n                this._numTriangles -= child.numTriangles;\n                return;\n            }\n        }\n    }\n\n    /**\n     * Removes all child Nodes and {@link Mesh}es.\n     */\n    removeChildren() {\n        let child;\n        for (let i = 0, len = this._children.length; i < len; i++) {\n            child = this._children[i];\n            child._parentNode = null;\n            child._setWorldMatrixDirty();\n            child._setAABBDirty();\n            this._numTriangles -= child.numTriangles;\n        }\n        this._children = [];\n        this._setAABBDirty();\n    }\n\n    /**\n     * Number of child Nodes or {@link Mesh}es.\n     *\n     * @type {Number}\n     */\n    get numChildren() {\n        return this._children.length;\n    }\n\n    /**\n     * Array of child Nodes or {@link Mesh}es.\n     *\n     * @type {Array}\n     */\n    get children() {\n        return this._children;\n    }\n\n    /**\n     * The parent Node.\n     *\n     * The parent Node may also be set by passing the Node to the parent's {@link Node#addChild} method.\n     *\n     * @type {Node}\n     */\n    set parent(node) {\n        if (utils.isNumeric(node) || utils.isString(node)) {\n            const nodeId = node;\n            node = this.scene.components[nodeId];\n            if (!node) {\n                this.warn(\"Node not found: \" + utils.inQuotes(nodeId));\n                return;\n            }\n            if (!node.isNode) {\n                this.error(\"Not a Node: \" + node.id);\n                return;\n            }\n        }\n        if (node.scene.id !== this.scene.id) {\n            this.error(\"Node not in same Scene: \" + node.id);\n            return;\n        }\n        if (this._parentNode && this._parentNode.id === node.id) {\n            this.warn(\"Already a child of Node: \" + node.id);\n            return;\n        }\n        node.addChild(this);\n    }\n\n    /**\n     * The parent Node.\n     *\n     * @type {Node}\n     */\n    get parent() {\n        return this._parentNode;\n    }\n\n    /**\n     * Sets the Node's local translation.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    set position(value) {\n        this._position.set(value || [0, 0, 0]);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Node's local translation.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get position() {\n        return this._position;\n    }\n\n    /**\n     * Sets the Node's local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    set rotation(value) {\n        this._rotation.set(value || [0, 0, 0]);\n        math.eulerToQuaternion(this._rotation, \"XYZ\", this._quaternion);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Node's local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get rotation() {\n        return this._rotation;\n    }\n\n    /**\n     * Sets the Node's local rotation quaternion.\n     *\n     * Default value is ````[0,0,0,1]````.\n     *\n     * @type {Number[]}\n     */\n    set quaternion(value) {\n        this._quaternion.set(value || [0, 0, 0, 1]);\n        math.quaternionToEuler(this._quaternion, \"XYZ\", this._rotation);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Node's local rotation quaternion.\n     *\n     * Default value is ````[0,0,0,1]````.\n     *\n     * @type {Number[]}\n     */\n    get quaternion() {\n        return this._quaternion;\n    }\n\n    /**\n     * Sets the Node's local scale.\n     *\n     * Default value is ````[1,1,1]````.\n     *\n     * @type {Number[]}\n     */\n    set scale(value) {\n        this._scale.set(value || [1, 1, 1]);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Node's local scale.\n     *\n     * Default value is ````[1,1,1]````.\n     *\n     * @type {Number[]}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Sets the Node's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {Number[]}\n     */\n    set matrix(value) {\n        if (!this._localMatrix) {\n            this._localMatrix = math.identityMat4();\n        }\n        this._localMatrix.set(value || identityMat);\n        math.decomposeMat4(this._localMatrix, this._position, this._quaternion, this._scale);\n        this._localMatrixDirty = false;\n        this._setWorldMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Node's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {Number[]}\n     */\n    get matrix() {\n        if (this._localMatrixDirty) {\n            if (!this._localMatrix) {\n                this._localMatrix = math.identityMat4();\n            }\n            math.composeMat4(this._position, this._quaternion, this._scale, this._localMatrix);\n            this._localMatrixDirty = false;\n        }\n        return this._localMatrix;\n    }\n\n    /**\n     * Gets the Node's World matrix.\n     *\n     * @property worldMatrix\n     * @type {Number[]}\n     */\n    get worldMatrix() {\n        if (this._worldMatrixDirty) {\n            this._buildWorldMatrix();\n        }\n        return this._worldMatrix;\n    }\n\n    /**\n     * Rotates the Node about the given local axis by the given increment.\n     *\n     * @param {Number[]} axis Local axis about which to rotate.\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotate(axis, angle) {\n        angleAxis[0] = axis[0];\n        angleAxis[1] = axis[1];\n        angleAxis[2] = axis[2];\n        angleAxis[3] = angle * math.DEGTORAD;\n        math.angleAxisToQuaternion(angleAxis, q1);\n        math.mulQuaternions(this.quaternion, q1, q2);\n        this.quaternion = q2;\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n        return this;\n    }\n\n    /**\n     * Rotates the Node about the given World-space axis by the given increment.\n     *\n     * @param {Number[]} axis Local axis about which to rotate.\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateOnWorldAxis(axis, angle) {\n        angleAxis[0] = axis[0];\n        angleAxis[1] = axis[1];\n        angleAxis[2] = axis[2];\n        angleAxis[3] = angle * math.DEGTORAD;\n        math.angleAxisToQuaternion(angleAxis, q1);\n        math.mulQuaternions(q1, this.quaternion, q1);\n        //this.quaternion.premultiply(q1);\n        return this;\n    }\n\n    /**\n     * Rotates the Node about the local X-axis by the given increment.\n     *\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateX(angle) {\n        return this.rotate(xAxis, angle);\n    }\n\n    /**\n     * Rotates the Node about the local Y-axis by the given increment.\n     *\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateY(angle) {\n        return this.rotate(yAxis, angle);\n    }\n\n    /**\n     * Rotates the Node about the local Z-axis by the given increment.\n     *\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateZ(angle) {\n        return this.rotate(zAxis, angle);\n    }\n\n    /**\n     * Translates the Node along local space vector by the given increment.\n     *\n     * @param {Number[]} axis Normalized local space 3D vector along which to translate.\n     * @param {Number} distance Distance to translate along  the vector.\n     */\n    translate(axis, distance) {\n        math.vec3ApplyQuaternion(this.quaternion, axis, veca);\n        math.mulVec3Scalar(veca, distance, vecb);\n        math.addVec3(this.position, vecb, this.position);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n        return this;\n    }\n\n    /**\n     * Translates the Node along the local X-axis by the given increment.\n     *\n     * @param {Number} distance Distance to translate along  the X-axis.\n     */\n    translateX(distance) {\n        return this.translate(xAxis, distance);\n    }\n\n    /**\n     * Translates the Node along the local Y-axis by the given increment.\n     *\n     * @param {Number} distance Distance to translate along  the Y-axis.\n     */\n    translateY(distance) {\n        return this.translate(yAxis, distance);\n    }\n\n    /**\n     * Translates the Node along the local Z-axis by the given increment.\n     *\n     * @param {Number} distance Distance to translate along  the Z-axis.\n     */\n    translateZ(distance) {\n        return this.translate(zAxis, distance);\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Component members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Node\";\n    }\n\n    /**\n     * Destroys this Node.\n     */\n    destroy() {\n        super.destroy();\n        if (this._parentNode) {\n            this._parentNode.removeChild(this);\n        }\n        if (this._isObject) {\n            this.scene._deregisterObject(this);\n            if (this._visible) {\n                this.scene._objectVisibilityUpdated(this, false);\n            }\n            if (this._xrayed) {\n                this.scene._objectXRayedUpdated(this, false);\n            }\n            if (this._selected) {\n                this.scene._objectSelectedUpdated(this, false);\n            }\n            if (this._highlighted) {\n                this.scene._objectHighlightedUpdated(this, false);\n            }\n            this.scene._objectColorizeUpdated(this, false);\n            this.scene._objectOpacityUpdated(this, false);\n            this.scene._objectOffsetUpdated(this, false);\n        }\n        if (this._isModel) {\n            this.scene._deregisterModel(this);\n        }\n        if (this._children.length) {\n            // Clone the _children before iterating, so our children don't mess us up when calling removeChild().\n            const tempChildList = this._children.splice();\n            let child;\n            for (let i = 0, len = tempChildList.length; i < len; i++) {\n                child = tempChildList[i];\n                child.destroy();\n            }\n        }\n        this._children = [];\n        this._setAABBDirty();\n        this.scene._aabbDirty = true;\n    }\n\n}\n\nexport {Node};\n","/**\n @desc Base class for {@link Viewer} plugin classes.\n */\nclass Plugin {\n\n    /**\n     * Creates this Plugin and installs it into the given {@link Viewer}.\n     *\n     * @param {string} id ID for this plugin, unique among all plugins in the viewer.\n     * @param {Viewer} viewer The viewer.\n     * @param {Object} [cfg] Options\n     */\n    constructor(id, viewer, cfg) {\n\n        /**\n         * ID for this Plugin, unique within its {@link Viewer}.\n         *\n         * @type {string}\n         */\n        this.id = (cfg && cfg.id) ? cfg.id : id;\n\n        /**\n         * The Viewer that contains this Plugin.\n         *\n         * @type {Viewer}\n         */\n        this.viewer = viewer;\n\n        /**\n         * Subscriptions to events fired at this Plugin.\n         * @private\n         */\n        this._eventSubs = {};\n\n        viewer.addPlugin(this);\n    }\n\n    /**\n     Subscribes to an event fired at this Plugin.\n\n     @param {String} event The event\n     @param {Function} callback Callback fired on the event\n     */\n    on(event, callback) {\n        let subs = this._eventSubs[event];\n        if (!subs) {\n            subs = [];\n            this._eventSubs[event] = subs;\n        }\n        subs.push(callback);\n    }\n\n    /**\n     Fires an event at this Plugin.\n\n     @param {String} event The event type name\n     @param {Object} value The event parameters\n     */\n    fire(event, value) {\n        const subs = this._eventSubs[event];\n        if (subs) {\n            for (let i = 0, len = subs.length; i < len; i++) {\n                subs[i](value);\n            }\n        }\n    }\n\n    /**\n     * Logs a message to the JavaScript developer console, prefixed with the ID of this Plugin.\n     *\n     * @param {String} msg The error message\n     */\n    log(msg) {\n        console.log(`[xeokit plugin ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Logs a warning message to the JavaScript developer console, prefixed with the ID of this Plugin.\n     *\n     * @param {String} msg The error message\n     */\n    warn(msg) {\n        console.warn(`[xeokit plugin ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Logs an error message to the JavaScript developer console, prefixed with the ID of this Plugin.\n     *\n     * @param {String} msg The error message\n     */\n    error(msg) {\n        console.error(`[xeokit plugin ${this.id}]: ${msg}`);\n    }\n\n    /**\n     * Sends a message to this Plugin.\n     *\n     * @private\n     */\n    send(name, value) {\n        //...\n    }\n\n    /**\n     * Destroys this Plugin and removes it from its {@link Viewer}.\n     */\n    destroy() {\n        this.viewer.removePlugin(this);\n    }\n}\n\nexport {Plugin}","/**\n * @private\n */\nconst DrawShaderSource = function (mesh) {\n    if (mesh._material._state.type === \"LambertMaterial\") {\n        this.vertex = buildVertexLambert(mesh);\n        this.fragment = buildFragmentLambert(mesh);\n    } else {\n        this.vertex = buildVertexDraw(mesh);\n        this.fragment = buildFragmentDraw(mesh);\n    }\n};\n\nconst TEXTURE_DECODE_FUNCS = {\n    \"linear\": \"linearToLinear\",\n    \"sRGB\": \"sRGBToLinear\",\n    \"gamma\": \"gammaToLinear\"\n};\n\nfunction getReceivesShadow(mesh) {\n    if (!mesh.receivesShadow) {\n        return false;\n    }\n    const lights = mesh.scene._lightsState.lights;\n    if (!lights || lights.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = lights.length; i < len; i++) {\n        if (lights[i].castsShadow) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction hasTextures(mesh) {\n    if (!mesh._geometry._state.uvBuf) {\n        return false;\n    }\n    const material = mesh._material;\n    return !!(material._ambientMap ||\n        material._occlusionMap ||\n        material._baseColorMap ||\n        material._diffuseMap ||\n        material._alphaMap ||\n        material._specularMap ||\n        material._glossinessMap ||\n        material._specularGlossinessMap ||\n        material._emissiveMap ||\n        material._metallicMap ||\n        material._roughnessMap ||\n        material._metallicRoughnessMap ||\n        material._reflectivityMap ||\n        material._normalMap);\n}\n\nfunction hasNormals(mesh) {\n    const primitive = mesh._geometry._state.primitiveName;\n    if ((mesh._geometry._state.autoVertexNormals || mesh._geometry._state.normalsBuf) && (primitive === \"triangles\" || primitive === \"triangle-strip\" || primitive === \"triangle-fan\")) {\n        return true;\n    }\n    return false;\n}\n\nfunction buildVertexLambert(mesh) {\n\n    const scene = mesh.scene;\n    const sectionPlanesState = mesh.scene._sectionPlanesState;\n    const lightsState = mesh.scene._lightsState;\n    const geometryState = mesh._geometry._state;\n    const billboard = mesh._state.billboard;\n    const stationary = mesh._state.stationary;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!geometryState.compressGeometry;\n\n    const src = [];\n    src.push(\"// Lambertian drawing vertex shader\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute vec3 position;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 viewMatrix;\");\n    src.push(\"uniform mat4 projMatrix;\");\n    src.push(\"uniform vec4 colorize;\");\n    src.push(\"uniform vec3 offset;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    src.push(\"uniform vec4 lightAmbient;\");\n    src.push(\"uniform vec4 materialColor;\");\n    src.push(\"uniform vec3 materialEmissive;\");\n    if (geometryState.normalsBuf) {\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"uniform mat4 modelNormalMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n        }\n        if (quantizedGeometry) {\n            src.push(\"vec3 octDecode(vec2 oct) {\");\n            src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n            src.push(\"    if (v.z < 0.0) {\");\n            src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n            src.push(\"    }\");\n            src.push(\"    return normalize(v);\");\n            src.push(\"}\");\n        }\n    }\n    src.push(\"varying vec4 vColor;\");\n    if (geometryState.primitiveName === \"points\") {\n        src.push(\"uniform float pointSize;\");\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"void billboard(inout mat4 mat) {\");\n        src.push(\"   mat[0][0] = 1.0;\");\n        src.push(\"   mat[0][1] = 0.0;\");\n        src.push(\"   mat[0][2] = 0.0;\");\n        if (billboard === \"spherical\") {\n            src.push(\"   mat[1][0] = 0.0;\");\n            src.push(\"   mat[1][1] = 1.0;\");\n            src.push(\"   mat[1][2] = 0.0;\");\n        }\n        src.push(\"   mat[2][0] = 0.0;\");\n        src.push(\"   mat[2][1] = 0.0;\");\n        src.push(\"   mat[2][2] =1.0;\");\n        src.push(\"}\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    src.push(\"vec4 worldPosition;\");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    if (geometryState.normalsBuf) {\n        if (quantizedGeometry) {\n            src.push(\"vec4 localNormal = vec4(octDecode(normal.xy), 0.0); \");\n        } else {\n            src.push(\"vec4 localNormal = vec4(normal, 0.0); \");\n        }\n        src.push(\"mat4 modelNormalMatrix2 = modelNormalMatrix;\");\n        src.push(\"mat4 viewNormalMatrix2 = viewNormalMatrix;\");\n    }\n    src.push(\"mat4 viewMatrix2 = viewMatrix;\");\n    src.push(\"mat4 modelMatrix2 = modelMatrix;\");\n    if (stationary) {\n        src.push(\"viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;\")\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;\");\n        src.push(\"billboard(modelMatrix2);\");\n        src.push(\"billboard(viewMatrix2);\");\n        src.push(\"billboard(modelViewMatrix);\");\n        if (geometryState.normalsBuf) {\n            src.push(\"mat4 modelViewNormalMatrix =  viewNormalMatrix2 * modelNormalMatrix2;\");\n            src.push(\"billboard(modelNormalMatrix2);\");\n            src.push(\"billboard(viewNormalMatrix2);\");\n            src.push(\"billboard(modelViewNormalMatrix);\");\n        }\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition = modelViewMatrix * localPosition;\");\n    } else {\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition  = viewMatrix2 * worldPosition; \");\n    }\n    if (geometryState.normalsBuf) {\n        src.push(\"vec3 viewNormal = normalize((viewNormalMatrix2 * modelNormalMatrix2 * localNormal).xyz);\");\n    }\n    src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n    src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n    src.push(\"float lambertian = 1.0;\");\n    if (geometryState.normalsBuf) {\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix2 * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = -normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = -normalize((viewMatrix2 * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"spot\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix2 * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n    }\n    //src.push(\"vColor = vec4((reflectedColor * materialColor) + (lightAmbient.rgb * lightAmbient.a), 1.0) * colorize;\");\n    src.push(\"vColor = vec4((lightAmbient.rgb * lightAmbient.a * materialColor.rgb) + materialEmissive.rgb + (reflectedColor * materialColor.rgb), materialColor.a) * colorize;\"); // TODO: How to have ambient bright enough for canvas BG but not too bright for scene?\n    if (clipping) {\n        src.push(\"vWorldPosition = worldPosition;\");\n    }\n    if (geometryState.primitiveName === \"points\") {\n        src.push(\"gl_PointSize = pointSize;\");\n    }\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n    }\n    src.push(\"gl_Position = clipPos;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragmentLambert(mesh) {\n    const scene = mesh.scene;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const materialState = mesh._material._state;\n    const geometryState = mesh._geometry._state;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const solid = false && materialState.backfaces;\n    const gammaOutput = scene.gammaOutput; // If set, then it expects that all textures and colors need to be outputted in premultiplied gamma. Default is false.\n    const src = [];\n    src.push(\"// Lambertian drawing fragment shader\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n        src.push(\"uniform bool clippable;\");\n        for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n    src.push(\"varying vec4 vColor;\");\n    if (gammaOutput) {\n        src.push(\"uniform float gammaFactor;\");\n        src.push(\"    vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\");\n        src.push(\"    return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        src.push(\"}\");\n    }\n    src.push(\"void main(void) {\");\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        if (solid) {\n            src.push(\"  if (gl_FrontFacing == false) {\");\n            src.push(\"     gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\");\n            src.push(\"     return;\");\n            src.push(\"  }\");\n        }\n        src.push(\"}\");\n    }\n    if (geometryState.primitiveName === \"points\") {\n        src.push(\"vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n        src.push(\"float r = dot(cxy, cxy);\");\n        src.push(\"if (r > 1.0) {\");\n        src.push(\"   discard;\");\n        src.push(\"}\");\n\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n    if (gammaOutput) {\n        src.push(\"gl_FragColor = linearToGamma(vColor, gammaFactor);\");\n    } else {\n        src.push(\"gl_FragColor = vColor;\");\n    }\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildVertexDraw(mesh) {\n    const scene = mesh.scene;\n    const material = mesh._material;\n    const meshState = mesh._state;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const geometryState = mesh._geometry._state;\n    const lightsState = scene._lightsState;\n    let i;\n    let len;\n    let light;\n    const billboard = meshState.billboard;\n    const stationary = meshState.stationary;\n    const texturing = hasTextures(mesh);\n    const normals = hasNormals(mesh);\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const receivesShadow = getReceivesShadow(mesh);\n    const quantizedGeometry = !!geometryState.compressGeometry;\n    const src = [];\n    src.push(\"// Drawing vertex shader\");\n    if (normals && material._normalMap) {\n        src.push(\"#extension GL_OES_standard_derivatives : enable\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute  vec3 position;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    src.push(\"uniform  mat4 modelMatrix;\");\n    src.push(\"uniform  mat4 viewMatrix;\");\n    src.push(\"uniform  mat4 projMatrix;\");\n    src.push(\"varying  vec3 vViewPosition;\");\n    src.push(\"uniform  vec3 offset;\");\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n    if (lightsState.lightMaps.length > 0) {\n        src.push(\"varying    vec3 vWorldNormal;\");\n    }\n    if (normals) {\n        src.push(\"attribute  vec3 normal;\");\n        src.push(\"uniform    mat4 modelNormalMatrix;\");\n        src.push(\"uniform    mat4 viewNormalMatrix;\");\n        src.push(\"varying    vec3 vViewNormal;\");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (!(light.type === \"dir\" && light.space === \"view\")) {\n                src.push(\"varying vec4 vViewLightReverseDirAndDist\" + i + \";\");\n            }\n        }\n        if (quantizedGeometry) {\n            src.push(\"vec3 octDecode(vec2 oct) {\");\n            src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n            src.push(\"    if (v.z < 0.0) {\");\n            src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n            src.push(\"    }\");\n            src.push(\"    return normalize(v);\");\n            src.push(\"}\");\n        }\n    }\n    if (texturing) {\n        src.push(\"attribute vec2 uv;\");\n        src.push(\"varying vec2 vUV;\");\n        if (quantizedGeometry) {\n            src.push(\"uniform mat3 uvDecodeMatrix;\")\n        }\n    }\n    if (geometryState.colors) {\n        src.push(\"attribute vec4 color;\");\n        src.push(\"varying vec4 vColor;\");\n    }\n    if (geometryState.primitiveName === \"points\") {\n        src.push(\"uniform float pointSize;\");\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"void billboard(inout mat4 mat) {\");\n        src.push(\"   mat[0][0] = 1.0;\");\n        src.push(\"   mat[0][1] = 0.0;\");\n        src.push(\"   mat[0][2] = 0.0;\");\n        if (billboard === \"spherical\") {\n            src.push(\"   mat[1][0] = 0.0;\");\n            src.push(\"   mat[1][1] = 1.0;\");\n            src.push(\"   mat[1][2] = 0.0;\");\n        }\n        src.push(\"   mat[2][0] = 0.0;\");\n        src.push(\"   mat[2][1] = 0.0;\");\n        src.push(\"   mat[2][2] =1.0;\");\n        src.push(\"}\");\n    }\n    if (receivesShadow) {\n        src.push(\"const mat4 texUnitConverter = mat4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0);\");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) { // Light sources\n            if (lightsState.lights[i].castsShadow) {\n                src.push(\"uniform mat4 shadowViewMatrix\" + i + \";\");\n                src.push(\"uniform mat4 shadowProjMatrix\" + i + \";\");\n                src.push(\"varying vec4 vShadowPosFromLight\" + i + \";\");\n            }\n        }\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    src.push(\"vec4 worldPosition;\");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    if (normals) {\n        if (quantizedGeometry) {\n            src.push(\"vec4 localNormal = vec4(octDecode(normal.xy), 0.0); \");\n        } else {\n            src.push(\"vec4 localNormal = vec4(normal, 0.0); \");\n        }\n        src.push(\"mat4 modelNormalMatrix2    = modelNormalMatrix;\");\n        src.push(\"mat4 viewNormalMatrix2     = viewNormalMatrix;\");\n    }\n    src.push(\"mat4 viewMatrix2           = viewMatrix;\");\n    src.push(\"mat4 modelMatrix2          = modelMatrix;\");\n    if (stationary) {\n        src.push(\"viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;\")\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;\");\n        src.push(\"billboard(modelMatrix2);\");\n        src.push(\"billboard(viewMatrix2);\");\n        src.push(\"billboard(modelViewMatrix);\");\n        if (normals) {\n            src.push(\"mat4 modelViewNormalMatrix =  viewNormalMatrix2 * modelNormalMatrix2;\");\n            src.push(\"billboard(modelNormalMatrix2);\");\n            src.push(\"billboard(viewNormalMatrix2);\");\n            src.push(\"billboard(modelViewNormalMatrix);\");\n        }\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition = modelViewMatrix * localPosition;\");\n    } else {\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition  = viewMatrix2 * worldPosition; \");\n    }\n    if (normals) {\n        src.push(\"vec3 worldNormal = (modelNormalMatrix2 * localNormal).xyz; \");\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"vWorldNormal = worldNormal;\");\n        }\n        src.push(\"vViewNormal = normalize((viewNormalMatrix2 * vec4(worldNormal, 1.0)).xyz);\");\n        src.push(\"vec3 tmpVec3;\");\n        src.push(\"float lightDist;\");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) { // Lights\n            light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"world\") {\n                    src.push(\"tmpVec3 = vec3(viewMatrix2 * vec4(lightDir\" + i + \", 0.0) ).xyz;\");\n                    src.push(\"vViewLightReverseDirAndDist\" + i + \" = vec4(-tmpVec3, 0.0);\");\n                }\n            }\n            if (light.type === \"point\") {\n                if (light.space === \"world\") {\n                    src.push(\"tmpVec3 = (viewMatrix2 * vec4(lightPos\" + i + \", 1.0)).xyz - viewPosition.xyz;\");\n                    src.push(\"lightDist = abs(length(tmpVec3));\");\n                } else {\n                    src.push(\"tmpVec3 = lightPos\" + i + \".xyz - viewPosition.xyz;\");\n                    src.push(\"lightDist = abs(length(tmpVec3));\");\n                }\n                src.push(\"vViewLightReverseDirAndDist\" + i + \" = vec4(tmpVec3, lightDist);\");\n            }\n        }\n    }\n    if (texturing) {\n        if (quantizedGeometry) {\n            src.push(\"vUV = (uvDecodeMatrix * vec3(uv, 1.0)).xy;\");\n        } else {\n            src.push(\"vUV = uv;\");\n        }\n    }\n    if (geometryState.colors) {\n        src.push(\"vColor = color;\");\n    }\n    if (geometryState.primitiveName === \"points\") {\n        src.push(\"gl_PointSize = pointSize;\");\n    }\n    if (clipping) {\n        src.push(\"vWorldPosition = worldPosition;\");\n    }\n    src.push(\"   vViewPosition = viewPosition.xyz;\");\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n    }\n    src.push(\"gl_Position = clipPos;\");\n    if (receivesShadow) {\n        src.push(\"const mat4 texUnitConverter = mat4(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0);\");\n        src.push(\"vec4 tempx; \");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) { // Light sources\n            if (lightsState.lights[i].castsShadow) {\n                src.push(\"vShadowPosFromLight\" + i + \" = texUnitConverter * shadowProjMatrix\" + i + \" * (shadowViewMatrix\" + i + \" * worldPosition); \");\n            }\n        }\n    }\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragmentDraw(mesh) {\n\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    const material = mesh._material;\n    const geometryState = mesh._geometry._state;\n    const sectionPlanesState = mesh.scene._sectionPlanesState;\n    const lightsState = mesh.scene._lightsState;\n    const materialState = mesh._material._state;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const normals = hasNormals(mesh);\n    const uvs = geometryState.uvBuf;\n    const solid = false && materialState.backfaces;\n    const phongMaterial = (materialState.type === \"PhongMaterial\");\n    const metallicMaterial = (materialState.type === \"MetallicMaterial\");\n    const specularMaterial = (materialState.type === \"SpecularMaterial\");\n    const receivesShadow = getReceivesShadow(mesh);\n    const gammaInput = scene.gammaInput; // If set, then it expects that all textures and colors are premultiplied gamma. Default is false.\n    const gammaOutput = scene.gammaOutput; // If set, then it expects that all textures and colors need to be outputted in premultiplied gamma. Default is false.\n\n    let light;\n    const src = [];\n\n    src.push(\"// Drawing fragment shader\");\n\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n\n    if (normals && material._normalMap) {\n        src.push(\"#extension GL_OES_standard_derivatives : enable\");\n    }\n\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n\n    if (receivesShadow) {\n        src.push(\"float unpackDepth (vec4 color) {\");\n        src.push(\"  const vec4 bitShift = vec4(1.0, 1.0/256.0, 1.0/(256.0 * 256.0), 1.0/(256.0*256.0*256.0));\");\n        src.push(\"  return dot(color, bitShift);\");\n        src.push(\"}\");\n    }\n\n    //--------------------------------------------------------------------------------\n    // GAMMA CORRECTION\n    //--------------------------------------------------------------------------------\n\n    src.push(\"uniform float gammaFactor;\");\n    src.push(\"vec4 linearToLinear( in vec4 value ) {\");\n    src.push(\"  return value;\");\n    src.push(\"}\");\n    src.push(\"vec4 sRGBToLinear( in vec4 value ) {\");\n    src.push(\"  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\");\n    src.push(\"}\");\n    src.push(\"vec4 gammaToLinear( in vec4 value) {\");\n    src.push(\"  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\");\n    src.push(\"}\");\n    if (gammaOutput) {\n        src.push(\"vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\");\n        src.push(\"  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        src.push(\"}\");\n    }\n\n    //--------------------------------------------------------------------------------\n    // USER CLIP PLANES\n    //--------------------------------------------------------------------------------\n\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n        src.push(\"uniform bool clippable;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n\n    if (normals) {\n\n        //--------------------------------------------------------------------------------\n        // LIGHT AND REFLECTION MAP INPUTS\n        // Define here so available globally to shader functions\n        //--------------------------------------------------------------------------------\n\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"uniform samplerCube lightMap;\");\n            src.push(\"uniform mat4 viewNormalMatrix;\");\n        }\n        if (lightsState.reflectionMaps.length > 0) {\n            src.push(\"uniform samplerCube reflectionMap;\");\n        }\n        if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n            src.push(\"uniform mat4 viewMatrix;\");\n        }\n\n        //--------------------------------------------------------------------------------\n        // SHADING FUNCTIONS\n        //--------------------------------------------------------------------------------\n\n        // CONSTANT DEFINITIONS\n\n        src.push(\"#define PI 3.14159265359\");\n        src.push(\"#define RECIPROCAL_PI 0.31830988618\");\n        src.push(\"#define RECIPROCAL_PI2 0.15915494\");\n        src.push(\"#define EPSILON 1e-6\");\n\n        src.push(\"#define saturate(a) clamp( a, 0.0, 1.0 )\");\n\n        // UTILITY DEFINITIONS\n\n        src.push(\"vec3 inverseTransformDirection(in vec3 dir, in mat4 matrix) {\");\n        src.push(\"   return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\");\n        src.push(\"}\");\n\n        // STRUCTURES\n\n        src.push(\"struct IncidentLight {\");\n        src.push(\"   vec3 color;\");\n        src.push(\"   vec3 direction;\");\n        src.push(\"};\");\n\n        src.push(\"struct ReflectedLight {\");\n        src.push(\"   vec3 diffuse;\");\n        src.push(\"   vec3 specular;\");\n        src.push(\"};\");\n\n        src.push(\"struct Geometry {\");\n        src.push(\"   vec3 position;\");\n        src.push(\"   vec3 viewNormal;\");\n        src.push(\"   vec3 worldNormal;\");\n        src.push(\"   vec3 viewEyeDir;\");\n        src.push(\"};\");\n\n        src.push(\"struct Material {\");\n        src.push(\"   vec3    diffuseColor;\");\n        src.push(\"   float   specularRoughness;\");\n        src.push(\"   vec3    specularColor;\");\n        src.push(\"   float   shine;\"); // Only used for Phong\n        src.push(\"};\");\n\n        // COMMON UTILS\n\n        if (phongMaterial) {\n\n            if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n\n                src.push(\"void computePhongLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n\n                if (lightsState.lightMaps.length > 0) {\n                    src.push(\"   vec3 irradiance = \" + TEXTURE_DECODE_FUNCS[lightsState.lightMaps[0].encoding] + \"(textureCube(lightMap, geometry.worldNormal)).rgb;\");\n                    src.push(\"   irradiance *= PI;\");\n                    src.push(\"   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);\");\n                    src.push(\"   reflectedLight.diffuse += irradiance * diffuseBRDFContrib;\");\n                }\n                if (lightsState.reflectionMaps.length > 0) {\n                    src.push(\"   vec3 reflectVec             = reflect(-geometry.viewEyeDir, geometry.viewNormal);\");\n                    src.push(\"   vec3 radiance               = textureCube(reflectionMap, reflectVec).rgb * 0.2;\");\n                    src.push(\"   radiance *= PI;\");\n                    src.push(\"   reflectedLight.specular     += radiance;\");\n                }\n                src.push(\"}\");\n            }\n\n            src.push(\"void computePhongLighting(const in IncidentLight directLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n            src.push(\"   float dotNL     = saturate(dot(geometry.viewNormal, directLight.direction));\");\n            src.push(\"   vec3 irradiance = dotNL * directLight.color * PI;\");\n            src.push(\"   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);\");\n            src.push(\"   reflectedLight.specular += directLight.color * material.specularColor * pow(max(dot(reflect(-directLight.direction, -geometry.viewNormal), geometry.viewEyeDir), 0.0), material.shine);\");\n            src.push(\"}\");\n        }\n\n        if (metallicMaterial || specularMaterial) {\n\n            // IRRADIANCE EVALUATION\n\n            src.push(\"float GGXRoughnessToBlinnExponent(const in float ggxRoughness) {\");\n            src.push(\"   float r = ggxRoughness + 0.0001;\");\n            src.push(\"   return (2.0 / (r * r) - 2.0);\");\n            src.push(\"}\");\n\n            src.push(\"float getSpecularMIPLevel(const in float blinnShininessExponent, const in int maxMIPLevel) {\");\n            src.push(\"   float maxMIPLevelScalar = float( maxMIPLevel );\");\n            src.push(\"   float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( ( blinnShininessExponent * blinnShininessExponent ) + 1.0 );\");\n            src.push(\"   return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\");\n            src.push(\"}\");\n\n            if (lightsState.reflectionMaps.length > 0) {\n                src.push(\"vec3 getLightProbeIndirectRadiance(const in vec3 reflectVec, const in float blinnShininessExponent, const in int maxMIPLevel) {\");\n                src.push(\"   float mipLevel = 0.5 * getSpecularMIPLevel(blinnShininessExponent, maxMIPLevel);\"); //TODO: a random factor - fix this\n                src.push(\"   vec3 envMapColor = \" + TEXTURE_DECODE_FUNCS[lightsState.reflectionMaps[0].encoding] + \"(textureCube(reflectionMap, reflectVec, mipLevel)).rgb;\");\n                src.push(\"  return envMapColor;\");\n                src.push(\"}\");\n            }\n\n            // SPECULAR BRDF EVALUATION\n\n            src.push(\"vec3 F_Schlick(const in vec3 specularColor, const in float dotLH) {\");\n            src.push(\"   float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\");\n            src.push(\"   return ( 1.0 - specularColor ) * fresnel + specularColor;\");\n            src.push(\"}\");\n\n            src.push(\"float G_GGX_Smith(const in float alpha, const in float dotNL, const in float dotNV) {\");\n            src.push(\"   float a2 = ( alpha * alpha );\");\n            src.push(\"   float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );\");\n            src.push(\"   float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );\");\n            src.push(\"   return 1.0 / ( gl * gv );\");\n            src.push(\"}\");\n\n            src.push(\"float G_GGX_SmithCorrelated(const in float alpha, const in float dotNL, const in float dotNV) {\");\n            src.push(\"   float a2 = ( alpha * alpha );\");\n            src.push(\"   float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * ( dotNV * dotNV ) );\");\n            src.push(\"   float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * ( dotNL * dotNL ) );\");\n            src.push(\"   return 0.5 / max( gv + gl, EPSILON );\");\n            src.push(\"}\");\n\n            src.push(\"float D_GGX(const in float alpha, const in float dotNH) {\");\n            src.push(\"   float a2 = ( alpha * alpha );\");\n            src.push(\"   float denom = ( dotNH * dotNH) * ( a2 - 1.0 ) + 1.0;\");\n            src.push(\"   return RECIPROCAL_PI * a2 / ( denom * denom);\");\n            src.push(\"}\");\n\n            src.push(\"vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight, const in Geometry geometry, const in vec3 specularColor, const in float roughness) {\");\n            src.push(\"   float alpha = ( roughness * roughness );\");\n            src.push(\"   vec3 halfDir = normalize( incidentLight.direction + geometry.viewEyeDir );\");\n            src.push(\"   float dotNL = saturate( dot( geometry.viewNormal, incidentLight.direction ) );\");\n            src.push(\"   float dotNV = saturate( dot( geometry.viewNormal, geometry.viewEyeDir ) );\");\n            src.push(\"   float dotNH = saturate( dot( geometry.viewNormal, halfDir ) );\");\n            src.push(\"   float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\");\n            src.push(\"   vec3  F = F_Schlick( specularColor, dotLH );\");\n            src.push(\"   float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\");\n            src.push(\"   float D = D_GGX( alpha, dotNH );\");\n            src.push(\"   return F * (G * D);\");\n            src.push(\"}\");\n\n            src.push(\"vec3 BRDF_Specular_GGX_Environment(const in Geometry geometry, const in vec3 specularColor, const in float roughness) {\");\n            src.push(\"   float dotNV = saturate(dot(geometry.viewNormal, geometry.viewEyeDir));\");\n            src.push(\"   const vec4 c0 = vec4( -1, -0.0275, -0.572,  0.022);\");\n            src.push(\"   const vec4 c1 = vec4(  1,  0.0425,   1.04, -0.04);\");\n            src.push(\"   vec4 r = roughness * c0 + c1;\");\n            src.push(\"   float a004 = min(r.x * r.x, exp2(-9.28 * dotNV)) * r.x + r.y;\");\n            src.push(\"   vec2 AB    = vec2(-1.04, 1.04) * a004 + r.zw;\");\n            src.push(\"   return specularColor * AB.x + AB.y;\");\n            src.push(\"}\");\n\n            if (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0) {\n\n                src.push(\"void computePBRLightMapping(const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n                if (lightsState.lightMaps.length > 0) {\n                    src.push(\"   vec3 irradiance = sRGBToLinear(textureCube(lightMap, geometry.worldNormal)).rgb;\");\n                    src.push(\"   irradiance *= PI;\");\n                    src.push(\"   vec3 diffuseBRDFContrib = (RECIPROCAL_PI * material.diffuseColor);\");\n                    src.push(\"   reflectedLight.diffuse += irradiance * diffuseBRDFContrib;\");\n                    //   src.push(\"   reflectedLight.diffuse = vec3(1.0, 0.0, 0.0);\");\n                }\n                if (lightsState.reflectionMaps.length > 0) {\n                    src.push(\"   vec3 reflectVec             = reflect(-geometry.viewEyeDir, geometry.viewNormal);\");\n                    src.push(\"   reflectVec                  = inverseTransformDirection(reflectVec, viewMatrix);\");\n                    src.push(\"   float blinnExpFromRoughness = GGXRoughnessToBlinnExponent(material.specularRoughness);\");\n                    src.push(\"   vec3 radiance               = getLightProbeIndirectRadiance(reflectVec, blinnExpFromRoughness, 8);\");\n                    src.push(\"   vec3 specularBRDFContrib    = BRDF_Specular_GGX_Environment(geometry, material.specularColor, material.specularRoughness);\");\n                    src.push(\"   reflectedLight.specular     += radiance * specularBRDFContrib;\");\n                }\n                src.push(\"}\");\n            }\n\n            // MAIN LIGHTING COMPUTATION FUNCTION\n\n            src.push(\"void computePBRLighting(const in IncidentLight incidentLight, const in Geometry geometry, const in Material material, inout ReflectedLight reflectedLight) {\");\n            src.push(\"   float dotNL     = saturate(dot(geometry.viewNormal, incidentLight.direction));\");\n            src.push(\"   vec3 irradiance = dotNL * incidentLight.color * PI;\");\n            src.push(\"   reflectedLight.diffuse  += irradiance * (RECIPROCAL_PI * material.diffuseColor);\");\n            src.push(\"   reflectedLight.specular += irradiance * BRDF_Specular_GGX(incidentLight, geometry, material.specularColor, material.specularRoughness);\");\n            src.push(\"}\");\n\n        } // (metallicMaterial || specularMaterial)\n\n    } // geometry.normals\n\n    //--------------------------------------------------------------------------------\n    // GEOMETRY INPUTS\n    //--------------------------------------------------------------------------------\n\n    src.push(\"varying vec3 vViewPosition;\");\n\n    if (geometryState.colors) {\n        src.push(\"varying vec4 vColor;\");\n    }\n\n    if (uvs &&\n        ((normals && material._normalMap)\n            || material._ambientMap\n            || material._baseColorMap\n            || material._diffuseMap\n            || material._emissiveMap\n            || material._metallicMap\n            || material._roughnessMap\n            || material._metallicRoughnessMap\n            || material._specularMap\n            || material._glossinessMap\n            || material._specularGlossinessMap\n            || material._occlusionMap\n            || material._alphaMap)) {\n        src.push(\"varying vec2 vUV;\");\n    }\n\n    if (normals) {\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"varying vec3 vWorldNormal;\");\n        }\n        src.push(\"varying vec3 vViewNormal;\");\n    }\n\n    //--------------------------------------------------------------------------------\n    // MATERIAL CHANNEL INPUTS\n    //--------------------------------------------------------------------------------\n\n    if (materialState.ambient) {\n        src.push(\"uniform vec3 materialAmbient;\");\n    }\n    if (materialState.baseColor) {\n        src.push(\"uniform vec3 materialBaseColor;\");\n    }\n    if (materialState.alpha !== undefined && materialState.alpha !== null) {\n        src.push(\"uniform vec4 materialAlphaModeCutoff;\"); // [alpha, alphaMode, alphaCutoff]\n    }\n    if (materialState.emissive) {\n        src.push(\"uniform vec3 materialEmissive;\");\n    }\n    if (materialState.diffuse) {\n        src.push(\"uniform vec3 materialDiffuse;\");\n    }\n    if (materialState.glossiness !== undefined && materialState.glossiness !== null) {\n        src.push(\"uniform float materialGlossiness;\");\n    }\n    if (materialState.shininess !== undefined && materialState.shininess !== null) {\n        src.push(\"uniform float materialShininess;\");  // Phong channel\n    }\n    if (materialState.specular) {\n        src.push(\"uniform vec3 materialSpecular;\");\n    }\n    if (materialState.metallic !== undefined && materialState.metallic !== null) {\n        src.push(\"uniform float materialMetallic;\");\n    }\n    if (materialState.roughness !== undefined && materialState.roughness !== null) {\n        src.push(\"uniform float materialRoughness;\");\n    }\n    if (materialState.specularF0 !== undefined && materialState.specularF0 !== null) {\n        src.push(\"uniform float materialSpecularF0;\");\n    }\n\n    //--------------------------------------------------------------------------------\n    // MATERIAL TEXTURE INPUTS\n    //--------------------------------------------------------------------------------\n\n    if (uvs && material._ambientMap) {\n        src.push(\"uniform sampler2D ambientMap;\");\n        if (material._ambientMap._state.matrix) {\n            src.push(\"uniform mat4 ambientMapMatrix;\");\n        }\n    }\n    if (uvs && material._baseColorMap) {\n        src.push(\"uniform sampler2D baseColorMap;\");\n        if (material._baseColorMap._state.matrix) {\n            src.push(\"uniform mat4 baseColorMapMatrix;\");\n        }\n    }\n    if (uvs && material._diffuseMap) {\n        src.push(\"uniform sampler2D diffuseMap;\");\n        if (material._diffuseMap._state.matrix) {\n            src.push(\"uniform mat4 diffuseMapMatrix;\");\n        }\n    }\n    if (uvs && material._emissiveMap) {\n        src.push(\"uniform sampler2D emissiveMap;\");\n        if (material._emissiveMap._state.matrix) {\n            src.push(\"uniform mat4 emissiveMapMatrix;\");\n        }\n    }\n    if (normals && uvs && material._metallicMap) {\n        src.push(\"uniform sampler2D metallicMap;\");\n        if (material._metallicMap._state.matrix) {\n            src.push(\"uniform mat4 metallicMapMatrix;\");\n        }\n    }\n    if (normals && uvs && material._roughnessMap) {\n        src.push(\"uniform sampler2D roughnessMap;\");\n        if (material._roughnessMap._state.matrix) {\n            src.push(\"uniform mat4 roughnessMapMatrix;\");\n        }\n    }\n    if (normals && uvs && material._metallicRoughnessMap) {\n        src.push(\"uniform sampler2D metallicRoughnessMap;\");\n        if (material._metallicRoughnessMap._state.matrix) {\n            src.push(\"uniform mat4 metallicRoughnessMapMatrix;\");\n        }\n    }\n    if (normals && material._normalMap) {\n        src.push(\"uniform sampler2D normalMap;\");\n        if (material._normalMap._state.matrix) {\n            src.push(\"uniform mat4 normalMapMatrix;\");\n        }\n        src.push(\"vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\");\n        src.push(\"      vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\");\n        src.push(\"      vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\");\n        src.push(\"      vec2 st0 = dFdx( uv.st );\");\n        src.push(\"      vec2 st1 = dFdy( uv.st );\");\n        src.push(\"      vec3 S = normalize( q0 * st1.t - q1 * st0.t );\");\n        src.push(\"      vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\");\n        src.push(\"      vec3 N = normalize( surf_norm );\");\n        src.push(\"      vec3 mapN = texture2D( normalMap, uv ).xyz * 2.0 - 1.0;\");\n        src.push(\"      mat3 tsn = mat3( S, T, N );\");\n        //     src.push(\"      mapN *= 3.0;\");\n        src.push(\"      return normalize( tsn * mapN );\");\n        src.push(\"}\");\n    }\n    if (uvs && material._occlusionMap) {\n        src.push(\"uniform sampler2D occlusionMap;\");\n        if (material._occlusionMap._state.matrix) {\n            src.push(\"uniform mat4 occlusionMapMatrix;\");\n        }\n    }\n    if (uvs && material._alphaMap) {\n        src.push(\"uniform sampler2D alphaMap;\");\n        if (material._alphaMap._state.matrix) {\n            src.push(\"uniform mat4 alphaMapMatrix;\");\n        }\n    }\n    if (normals && uvs && material._specularMap) {\n        src.push(\"uniform sampler2D specularMap;\");\n        if (material._specularMap._state.matrix) {\n            src.push(\"uniform mat4 specularMapMatrix;\");\n        }\n    }\n    if (normals && uvs && material._glossinessMap) {\n        src.push(\"uniform sampler2D glossinessMap;\");\n        if (material._glossinessMap._state.matrix) {\n            src.push(\"uniform mat4 glossinessMapMatrix;\");\n        }\n    }\n    if (normals && uvs && material._specularGlossinessMap) {\n        src.push(\"uniform sampler2D materialSpecularGlossinessMap;\");\n        if (material._specularGlossinessMap._state.matrix) {\n            src.push(\"uniform mat4 materialSpecularGlossinessMapMatrix;\");\n        }\n    }\n\n    //--------------------------------------------------------------------------------\n    // MATERIAL FRESNEL INPUTS\n    //--------------------------------------------------------------------------------\n\n    if (normals && (material._diffuseFresnel ||\n        material._specularFresnel ||\n        material._alphaFresnel ||\n        material._emissiveFresnel ||\n        material._reflectivityFresnel)) {\n        src.push(\"float fresnel(vec3 eyeDir, vec3 normal, float edgeBias, float centerBias, float power) {\");\n        src.push(\"    float fr = abs(dot(eyeDir, normal));\");\n        src.push(\"    float finalFr = clamp((fr - edgeBias) / (centerBias - edgeBias), 0.0, 1.0);\");\n        src.push(\"    return pow(finalFr, power);\");\n        src.push(\"}\");\n        if (material._diffuseFresnel) {\n            src.push(\"uniform float  diffuseFresnelCenterBias;\");\n            src.push(\"uniform float  diffuseFresnelEdgeBias;\");\n            src.push(\"uniform float  diffuseFresnelPower;\");\n            src.push(\"uniform vec3   diffuseFresnelCenterColor;\");\n            src.push(\"uniform vec3   diffuseFresnelEdgeColor;\");\n        }\n        if (material._specularFresnel) {\n            src.push(\"uniform float  specularFresnelCenterBias;\");\n            src.push(\"uniform float  specularFresnelEdgeBias;\");\n            src.push(\"uniform float  specularFresnelPower;\");\n            src.push(\"uniform vec3   specularFresnelCenterColor;\");\n            src.push(\"uniform vec3   specularFresnelEdgeColor;\");\n        }\n        if (material._alphaFresnel) {\n            src.push(\"uniform float  alphaFresnelCenterBias;\");\n            src.push(\"uniform float  alphaFresnelEdgeBias;\");\n            src.push(\"uniform float  alphaFresnelPower;\");\n            src.push(\"uniform vec3   alphaFresnelCenterColor;\");\n            src.push(\"uniform vec3   alphaFresnelEdgeColor;\");\n        }\n        if (material._reflectivityFresnel) {\n            src.push(\"uniform float  materialSpecularF0FresnelCenterBias;\");\n            src.push(\"uniform float  materialSpecularF0FresnelEdgeBias;\");\n            src.push(\"uniform float  materialSpecularF0FresnelPower;\");\n            src.push(\"uniform vec3   materialSpecularF0FresnelCenterColor;\");\n            src.push(\"uniform vec3   materialSpecularF0FresnelEdgeColor;\");\n        }\n        if (material._emissiveFresnel) {\n            src.push(\"uniform float  emissiveFresnelCenterBias;\");\n            src.push(\"uniform float  emissiveFresnelEdgeBias;\");\n            src.push(\"uniform float  emissiveFresnelPower;\");\n            src.push(\"uniform vec3   emissiveFresnelCenterColor;\");\n            src.push(\"uniform vec3   emissiveFresnelEdgeColor;\");\n        }\n    }\n\n    //--------------------------------------------------------------------------------\n    // LIGHT SOURCES\n    //--------------------------------------------------------------------------------\n\n    src.push(\"uniform vec4   lightAmbient;\");\n\n    if (normals) {\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) { // Light sources\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightAttenuation\" + i + \";\");\n            }\n            if (light.type === \"dir\" && light.space === \"view\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\" && light.space === \"view\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            } else {\n                src.push(\"varying vec4 vViewLightReverseDirAndDist\" + i + \";\");\n            }\n        }\n    }\n\n    if (receivesShadow) {\n\n        // Variance castsShadow mapping filter\n\n        // src.push(\"float linstep(float low, float high, float v){\");\n        // src.push(\"      return clamp((v-low)/(high-low), 0.0, 1.0);\");\n        // src.push(\"}\");\n        //\n        // src.push(\"float VSM(sampler2D depths, vec2 uv, float compare){\");\n        // src.push(\"      vec2 moments = texture2D(depths, uv).xy;\");\n        // src.push(\"      float p = smoothstep(compare-0.02, compare, moments.x);\");\n        // src.push(\"      float variance = max(moments.y - moments.x*moments.x, -0.001);\");\n        // src.push(\"      float d = compare - moments.x;\");\n        // src.push(\"      float p_max = linstep(0.2, 1.0, variance / (variance + d*d));\");\n        // src.push(\"      return clamp(max(p, p_max), 0.0, 1.0);\");\n        // src.push(\"}\");\n\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) { // Light sources\n            if (lightsState.lights[i].castsShadow) {\n                src.push(\"varying vec4 vShadowPosFromLight\" + i + \";\");\n                src.push(\"uniform sampler2D shadowMap\" + i + \";\");\n            }\n        }\n    }\n\n    src.push(\"uniform vec4 colorize;\");\n\n    //================================================================================\n    // MAIN\n    //================================================================================\n\n    src.push(\"void main(void) {\");\n\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        if (solid) {\n            src.push(\"  if (gl_FrontFacing == false) {\");\n            src.push(\"     gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\");\n            src.push(\"     return;\");\n            src.push(\"  }\");\n        }\n        src.push(\"}\");\n    }\n\n    if (geometryState.primitiveName === \"points\") {\n        src.push(\"vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n        src.push(\"float r = dot(cxy, cxy);\");\n        src.push(\"if (r > 1.0) {\");\n        src.push(\"   discard;\");\n        src.push(\"}\");\n    }\n\n    src.push(\"float occlusion = 1.0;\");\n\n    if (materialState.ambient) {\n        src.push(\"vec3 ambientColor = materialAmbient;\");\n    } else {\n        src.push(\"vec3 ambientColor = vec3(1.0, 1.0, 1.0);\");\n    }\n\n    if (materialState.diffuse) {\n        src.push(\"vec3 diffuseColor = materialDiffuse;\");\n    } else if (materialState.baseColor) {\n        src.push(\"vec3 diffuseColor = materialBaseColor;\");\n    } else {\n        src.push(\"vec3 diffuseColor = vec3(1.0, 1.0, 1.0);\");\n    }\n\n    if (geometryState.colors) {\n        src.push(\"diffuseColor *= vColor.rgb;\");\n    }\n\n    if (materialState.emissive) {\n        src.push(\"vec3 emissiveColor = materialEmissive;\"); // Emissive default is (0,0,0), so initializing here\n    } else {\n        src.push(\"vec3  emissiveColor = vec3(0.0, 0.0, 0.0);\");\n    }\n\n    if (materialState.specular) {\n        src.push(\"vec3 specular = materialSpecular;\");\n    } else {\n        src.push(\"vec3 specular = vec3(1.0, 1.0, 1.0);\");\n    }\n\n    if (materialState.alpha !== undefined) {\n        src.push(\"float alpha = materialAlphaModeCutoff[0];\");\n    } else {\n        src.push(\"float alpha = 1.0;\");\n    }\n\n    if (geometryState.colors) {\n        src.push(\"alpha *= vColor.a;\");\n    }\n\n    if (materialState.glossiness !== undefined) {\n        src.push(\"float glossiness = materialGlossiness;\");\n    } else {\n        src.push(\"float glossiness = 1.0;\");\n    }\n\n    if (materialState.metallic !== undefined) {\n        src.push(\"float metallic = materialMetallic;\");\n    } else {\n        src.push(\"float metallic = 1.0;\");\n    }\n\n    if (materialState.roughness !== undefined) {\n        src.push(\"float roughness = materialRoughness;\");\n    } else {\n        src.push(\"float roughness = 1.0;\");\n    }\n\n    if (materialState.specularF0 !== undefined) {\n        src.push(\"float specularF0 = materialSpecularF0;\");\n    } else {\n        src.push(\"float specularF0 = 1.0;\");\n    }\n\n    //--------------------------------------------------------------------------------\n    // TEXTURING\n    //--------------------------------------------------------------------------------\n\n    if (uvs && ((normals && material._normalMap)\n        || material._ambientMap\n        || material._baseColorMap\n        || material._diffuseMap\n        || material._occlusionMap\n        || material._emissiveMap\n        || material._metallicMap\n        || material._roughnessMap\n        || material._metallicRoughnessMap\n        || material._specularMap\n        || material._glossinessMap\n        || material._specularGlossinessMap\n        || material._alphaMap)) {\n        src.push(\"vec4 texturePos = vec4(vUV.s, vUV.t, 1.0, 1.0);\");\n        src.push(\"vec2 textureCoord;\");\n    }\n\n    if (uvs && material._ambientMap) {\n        if (material._ambientMap._state.matrix) {\n            src.push(\"textureCoord = (ambientMapMatrix * texturePos).xy;\");\n        } else {\n            src.push(\"textureCoord = texturePos.xy;\");\n        }\n        src.push(\"vec4 ambientTexel = texture2D(ambientMap, textureCoord).rgb;\");\n        src.push(\"ambientTexel = \" + TEXTURE_DECODE_FUNCS[material._ambientMap._state.encoding] + \"(ambientTexel);\");\n        src.push(\"ambientColor *= ambientTexel.rgb;\");\n    }\n\n    if (uvs && material._diffuseMap) {\n        if (material._diffuseMap._state.matrix) {\n            src.push(\"textureCoord = (diffuseMapMatrix * texturePos).xy;\");\n        } else {\n            src.push(\"textureCoord = texturePos.xy;\");\n        }\n        src.push(\"vec4 diffuseTexel = texture2D(diffuseMap, textureCoord);\");\n        src.push(\"diffuseTexel = \" + TEXTURE_DECODE_FUNCS[material._diffuseMap._state.encoding] + \"(diffuseTexel);\");\n        src.push(\"diffuseColor *= diffuseTexel.rgb;\");\n        src.push(\"alpha *= diffuseTexel.a;\");\n    }\n\n    if (uvs && material._baseColorMap) {\n        if (material._baseColorMap._state.matrix) {\n            src.push(\"textureCoord = (baseColorMapMatrix * texturePos).xy;\");\n        } else {\n            src.push(\"textureCoord = texturePos.xy;\");\n        }\n        src.push(\"vec4 baseColorTexel = texture2D(baseColorMap, textureCoord);\");\n        src.push(\"baseColorTexel = \" + TEXTURE_DECODE_FUNCS[material._baseColorMap._state.encoding] + \"(baseColorTexel);\");\n        src.push(\"diffuseColor *= baseColorTexel.rgb;\");\n        src.push(\"alpha *= baseColorTexel.a;\");\n    }\n\n    if (uvs && material._emissiveMap) {\n        if (material._emissiveMap._state.matrix) {\n            src.push(\"textureCoord = (emissiveMapMatrix * texturePos).xy;\");\n        } else {\n            src.push(\"textureCoord = texturePos.xy;\");\n        }\n        src.push(\"vec4 emissiveTexel = texture2D(emissiveMap, textureCoord);\");\n        src.push(\"emissiveTexel = \" + TEXTURE_DECODE_FUNCS[material._emissiveMap._state.encoding] + \"(emissiveTexel);\");\n        src.push(\"emissiveColor = emissiveTexel.rgb;\");\n    }\n\n    if (uvs && material._alphaMap) {\n        if (material._alphaMap._state.matrix) {\n            src.push(\"textureCoord = (alphaMapMatrix * texturePos).xy;\");\n        } else {\n            src.push(\"textureCoord = texturePos.xy;\");\n        }\n        src.push(\"alpha *= texture2D(alphaMap, textureCoord).r;\");\n    }\n\n    if (uvs && material._occlusionMap) {\n        if (material._occlusionMap._state.matrix) {\n            src.push(\"textureCoord = (occlusionMapMatrix * texturePos).xy;\");\n        } else {\n            src.push(\"textureCoord = texturePos.xy;\");\n        }\n        src.push(\"occlusion *= texture2D(occlusionMap, textureCoord).r;\");\n    }\n\n    if (normals && ((lightsState.lights.length > 0) || lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0)) {\n\n        //--------------------------------------------------------------------------------\n        // SHADING\n        //--------------------------------------------------------------------------------\n\n        if (uvs && material._normalMap) {\n            if (material._normalMap._state.matrix) {\n                src.push(\"textureCoord = (normalMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"vec3 viewNormal = perturbNormal2Arb( vViewPosition, normalize(vViewNormal), textureCoord );\");\n        } else {\n            src.push(\"vec3 viewNormal = normalize(vViewNormal);\");\n        }\n\n        if (uvs && material._specularMap) {\n            if (material._specularMap._state.matrix) {\n                src.push(\"textureCoord = (specularMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"specular *= texture2D(specularMap, textureCoord).rgb;\");\n        }\n\n        if (uvs && material._glossinessMap) {\n            if (material._glossinessMap._state.matrix) {\n                src.push(\"textureCoord = (glossinessMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"glossiness *= texture2D(glossinessMap, textureCoord).r;\");\n        }\n\n        if (uvs && material._specularGlossinessMap) {\n            if (material._specularGlossinessMap._state.matrix) {\n                src.push(\"textureCoord = (materialSpecularGlossinessMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"vec4 specGlossRGB = texture2D(materialSpecularGlossinessMap, textureCoord).rgba;\"); // TODO: what if only RGB texture?\n            src.push(\"specular *= specGlossRGB.rgb;\");\n            src.push(\"glossiness *= specGlossRGB.a;\");\n        }\n\n        if (uvs && material._metallicMap) {\n            if (material._metallicMap._state.matrix) {\n                src.push(\"textureCoord = (metallicMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"metallic *= texture2D(metallicMap, textureCoord).r;\");\n        }\n\n        if (uvs && material._roughnessMap) {\n            if (material._roughnessMap._state.matrix) {\n                src.push(\"textureCoord = (roughnessMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"roughness *= texture2D(roughnessMap, textureCoord).r;\");\n        }\n\n        if (uvs && material._metallicRoughnessMap) {\n            if (material._metallicRoughnessMap._state.matrix) {\n                src.push(\"textureCoord = (metallicRoughnessMapMatrix * texturePos).xy;\");\n            } else {\n                src.push(\"textureCoord = texturePos.xy;\");\n            }\n            src.push(\"vec3 metalRoughRGB = texture2D(metallicRoughnessMap, textureCoord).rgb;\");\n            src.push(\"metallic *= metalRoughRGB.b;\");\n            src.push(\"roughness *= metalRoughRGB.g;\");\n        }\n\n        src.push(\"vec3 viewEyeDir = normalize(-vViewPosition);\");\n\n        if (material._diffuseFresnel) {\n            src.push(\"float diffuseFresnel = fresnel(viewEyeDir, viewNormal, diffuseFresnelEdgeBias, diffuseFresnelCenterBias, diffuseFresnelPower);\");\n            src.push(\"diffuseColor *= mix(diffuseFresnelEdgeColor, diffuseFresnelCenterColor, diffuseFresnel);\");\n        }\n        if (material._specularFresnel) {\n            src.push(\"float specularFresnel = fresnel(viewEyeDir, viewNormal, specularFresnelEdgeBias, specularFresnelCenterBias, specularFresnelPower);\");\n            src.push(\"specular *= mix(specularFresnelEdgeColor, specularFresnelCenterColor, specularFresnel);\");\n        }\n        if (material._alphaFresnel) {\n            src.push(\"float alphaFresnel = fresnel(viewEyeDir, viewNormal, alphaFresnelEdgeBias, alphaFresnelCenterBias, alphaFresnelPower);\");\n            src.push(\"alpha *= mix(alphaFresnelEdgeColor.r, alphaFresnelCenterColor.r, alphaFresnel);\");\n        }\n        if (material._emissiveFresnel) {\n            src.push(\"float emissiveFresnel = fresnel(viewEyeDir, viewNormal, emissiveFresnelEdgeBias, emissiveFresnelCenterBias, emissiveFresnelPower);\");\n            src.push(\"emissiveColor *= mix(emissiveFresnelEdgeColor, emissiveFresnelCenterColor, emissiveFresnel);\");\n        }\n\n        src.push(\"if (materialAlphaModeCutoff[1] == 1.0 && alpha < materialAlphaModeCutoff[2]) {\"); // ie. (alphaMode == \"mask\" && alpha < alphaCutoff)\n        src.push(\"   discard;\"); // TODO: Discard earlier within this shader?\n        src.push(\"}\");\n\n        // PREPARE INPUTS FOR SHADER FUNCTIONS\n\n        src.push(\"IncidentLight  light;\");\n        src.push(\"Material       material;\");\n        src.push(\"Geometry       geometry;\");\n        src.push(\"ReflectedLight reflectedLight = ReflectedLight(vec3(0.0,0.0,0.0), vec3(0.0,0.0,0.0));\");\n        src.push(\"vec3           viewLightDir;\");\n\n        if (phongMaterial) {\n            src.push(\"material.diffuseColor      = diffuseColor;\");\n            src.push(\"material.specularColor     = specular;\");\n            src.push(\"material.shine             = materialShininess;\");\n        }\n\n        if (specularMaterial) {\n            src.push(\"float oneMinusSpecularStrength = 1.0 - max(max(specular.r, specular.g ),specular.b);\"); // Energy conservation\n            src.push(\"material.diffuseColor      = diffuseColor * oneMinusSpecularStrength;\");\n            src.push(\"material.specularRoughness = clamp( 1.0 - glossiness, 0.04, 1.0 );\");\n            src.push(\"material.specularColor     = specular;\");\n        }\n\n        if (metallicMaterial) {\n            src.push(\"float dielectricSpecular = 0.16 * specularF0 * specularF0;\");\n            src.push(\"material.diffuseColor      = diffuseColor * (1.0 - dielectricSpecular) * (1.0 - metallic);\");\n            src.push(\"material.specularRoughness = clamp(roughness, 0.04, 1.0);\");\n            src.push(\"material.specularColor     = mix(vec3(dielectricSpecular), diffuseColor, metallic);\");\n        }\n\n        src.push(\"geometry.position      = vViewPosition;\");\n        if (lightsState.lightMaps.length > 0) {\n            src.push(\"geometry.worldNormal   = normalize(vWorldNormal);\");\n        }\n        src.push(\"geometry.viewNormal    = viewNormal;\");\n        src.push(\"geometry.viewEyeDir    = viewEyeDir;\");\n\n        // ENVIRONMENT AND REFLECTION MAP SHADING\n\n        if ((phongMaterial) && (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0)) {\n            src.push(\"computePhongLightMapping(geometry, material, reflectedLight);\");\n        }\n\n        if ((specularMaterial || metallicMaterial) && (lightsState.lightMaps.length > 0 || lightsState.reflectionMaps.length > 0)) {\n            src.push(\"computePBRLightMapping(geometry, material, reflectedLight);\");\n        }\n\n        // LIGHT SOURCE SHADING\n\n        src.push(\"float shadow = 1.0;\");\n\n        // if (receivesShadow) {\n        //\n        //     src.push(\"float lightDepth2 = clamp(length(lightPos)/40.0, 0.0, 1.0);\");\n        //     src.push(\"float illuminated = VSM(sLightDepth, lightUV, lightDepth2);\");\n        //\n        src.push(\"float shadowAcneRemover = 0.007;\");\n        src.push(\"vec3 fragmentDepth;\");\n        src.push(\"float texelSize = 1.0 / 1024.0;\");\n        src.push(\"float amountInLight = 0.0;\");\n        src.push(\"vec3 shadowCoord;\");\n        src.push('vec4 rgbaDepth;');\n        src.push(\"float depth;\");\n        // }\n\n        const numShadows = 0;\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n\n            const light = lightsState.lights[i];\n\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\" && light.space === \"view\") {\n                src.push(\"viewLightDir = -normalize(lightDir\" + i + \");\");\n            } else if (light.type === \"point\" && light.space === \"view\") {\n                src.push(\"viewLightDir = normalize(lightPos\" + i + \" - vViewPosition);\");\n                //src.push(\"tmpVec3 = lightPos\" + i + \".xyz - viewPosition.xyz;\");\n                //src.push(\"lightDist = abs(length(tmpVec3));\");\n            } else {\n                src.push(\"viewLightDir = normalize(vViewLightReverseDirAndDist\" + i + \".xyz);\"); // If normal mapping, the fragment->light vector will be in tangent space\n            }\n\n            if (receivesShadow && light.castsShadow) {\n\n                // if (true) {\n                //     src.push('shadowCoord = (vShadowPosFromLight' + i + '.xyz/vShadowPosFromLight' + i + '.w)/2.0 + 0.5;');\n                //     src.push(\"lightDepth2 = clamp(length(vec3[0.0, 20.0, 20.0])/40.0, 0.0, 1.0);\");\n                //     src.push(\"castsShadow *= VSM(shadowMap' + i + ', shadowCoord, lightDepth2);\");\n                // }\n                //\n                // if (false) {\n                //\n                // PCF\n\n                src.push(\"shadow = 0.0;\");\n\n                src.push(\"fragmentDepth = vShadowPosFromLight\" + i + \".xyz;\");\n                src.push(\"fragmentDepth.z -= shadowAcneRemover;\");\n                src.push(\"for (int x = -3; x <= 3; x++) {\");\n                src.push(\"  for (int y = -3; y <= 3; y++) {\");\n                src.push(\"      float texelDepth = unpackDepth(texture2D(shadowMap\" + i + \", fragmentDepth.xy + vec2(x, y) * texelSize));\");\n                src.push(\"      if (fragmentDepth.z < texelDepth) {\");\n                src.push(\"          shadow += 1.0;\");\n                src.push(\"      }\");\n                src.push(\"  }\");\n                src.push(\"}\");\n\n                src.push(\"shadow = shadow / 9.0;\");\n\n                src.push(\"light.color =  lightColor\" + i + \".rgb * (lightColor\" + i + \".a * shadow);\"); // a is intensity\n                //\n                // }\n                //\n                // if (false){\n                //\n                //     src.push(\"shadow = 1.0;\");\n                //\n                //     src.push('shadowCoord = (vShadowPosFromLight' + i + '.xyz/vShadowPosFromLight' + i + '.w)/2.0 + 0.5;');\n                //\n                //     src.push('shadow -= (shadowCoord.z > unpackDepth(texture2D(shadowMap' + i + ', shadowCoord.xy + vec2( -0.94201624, -0.39906216 ) / 700.0)) + 0.0015) ? 0.2 : 0.0;');\n                //     src.push('shadow -= (shadowCoord.z > unpackDepth(texture2D(shadowMap' + i + ', shadowCoord.xy + vec2( 0.94558609, -0.76890725 ) / 700.0)) + 0.0015) ? 0.2 : 0.0;');\n                //     src.push('shadow -= (shadowCoord.z > unpackDepth(texture2D(shadowMap' + i + ', shadowCoord.xy + vec2( -0.094184101, -0.92938870 ) / 700.0)) + 0.0015) ? 0.2 : 0.0;');\n                //     src.push('shadow -= (shadowCoord.z > unpackDepth(texture2D(shadowMap' + i + ', shadowCoord.xy + vec2( 0.34495938, 0.29387760 ) / 700.0)) + 0.0015) ? 0.2 : 0.0;');\n                //\n                //     src.push(\"light.color =  lightColor\" + i + \".rgb * (lightColor\" + i + \".a * shadow);\");\n                // }\n            } else {\n                src.push(\"light.color =  lightColor\" + i + \".rgb * (lightColor\" + i + \".a );\"); // a is intensity\n            }\n\n            src.push(\"light.direction = viewLightDir;\");\n\n            if (phongMaterial) {\n                src.push(\"computePhongLighting(light, geometry, material, reflectedLight);\");\n            }\n\n            if (specularMaterial || metallicMaterial) {\n                src.push(\"computePBRLighting(light, geometry, material, reflectedLight);\");\n            }\n        }\n\n        if (numShadows > 0) {\n            //src.push(\"shadow /= \" + (9 * numShadows) + \".0;\");\n        }\n\n        //src.push(\"reflectedLight.diffuse *= shadow;\");\n\n        // COMBINE TERMS\n\n        if (phongMaterial) {\n            src.push(\"vec3 outgoingLight = (lightAmbient.rgb * lightAmbient.a * diffuseColor) + ((occlusion * (( reflectedLight.diffuse + reflectedLight.specular)))) + emissiveColor;\");\n\n        } else {\n            src.push(\"vec3 outgoingLight = (occlusion * (reflectedLight.diffuse)) + (occlusion * reflectedLight.specular) + emissiveColor;\");\n        }\n\n    } else {\n\n        //--------------------------------------------------------------------------------\n        // NO SHADING - EMISSIVE and AMBIENT ONLY\n        //--------------------------------------------------------------------------------\n\n        src.push(\"ambientColor *= (lightAmbient.rgb * lightAmbient.a);\");\n\n        src.push(\"vec3 outgoingLight = emissiveColor + ambientColor;\");\n    }\n\n    src.push(\"gl_FragColor = vec4(outgoingLight, alpha) * colorize;\");\n\n    if (gammaOutput) {\n        src.push(\"gl_FragColor = linearToGamma(gl_FragColor, gammaFactor);\");\n    }\n\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n\n    src.push(\"}\");\n\n    return src;\n}\n\nexport {DrawShaderSource};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {Map} from \"../../utils/Map.js\";\nimport {DrawShaderSource} from \"./DrawShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from '../../stats.js';\nimport {WEBGL_INFO} from '../../webglInfo.js';\nimport {math} from \"../../math/math.js\";\nimport {getPlaneRTCPos} from \"../../math/rtcCoords.js\";\n\nconst tempVec3a = math.vec3();\n\nconst ids = new Map({});\n\n/**\n * @private\n */\nconst DrawRenderer = function (hash, mesh) {\n    this.id = ids.addItem({});\n    this._hash = hash;\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._shaderSource = new DrawShaderSource(mesh);\n    this._allocate(mesh);\n};\n\nconst drawRenderers = {};\n\nDrawRenderer.get = function (mesh) {\n    const scene = mesh.scene;\n    const hash = [\n        scene.canvas.canvas.id,\n        (scene.gammaInput ? \"gi;\" : \";\") + (scene.gammaOutput ? \"go\" : \"\"),\n        scene._lightsState.getHash(),\n        scene._sectionPlanesState.getHash(),\n        mesh._geometry._state.hash,\n        mesh._material._state.hash,\n        mesh._state.drawHash\n    ].join(\";\");\n    let renderer = drawRenderers[hash];\n    if (!renderer) {\n        renderer = new DrawRenderer(hash, mesh);\n        if (renderer.errors) {\n            console.log(renderer.errors.join(\"\\n\"));\n            return null;\n        }\n        drawRenderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nDrawRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        ids.removeItem(this.id);\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete drawRenderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nDrawRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nDrawRenderer.prototype.drawMesh = function (frameCtx, mesh) {\n\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n\n    const maxTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n    const scene = mesh.scene;\n    const material = mesh._material;\n    const gl = scene.canvas.gl;\n    const program = this._program;\n    const meshState = mesh._state;\n    const materialState = mesh._material._state;\n    const geometryState = mesh._geometry._state;\n    const camera = scene.camera;\n    const rtcCenter = mesh.rtcCenter;\n\n    if (frameCtx.lastProgramId !== this._program.id) {\n        frameCtx.lastProgramId = this._program.id;\n        this._bindProgram(frameCtx);\n    }\n\n    gl.uniformMatrix4fv(this._uViewMatrix, false, rtcCenter ? frameCtx.getRTCViewMatrix(meshState.rtcCenterHash, rtcCenter) : camera.viewMatrix);\n    gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n    if (meshState.clippable) {\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const renderFlags = mesh.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    gl.uniform3fv(sectionPlaneUniforms.pos, rtcCenter ? getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a) : sectionPlane.pos);\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n    }\n\n    if (materialState.id !== this._lastMaterialId) {\n\n        frameCtx.textureUnit = this._baseTextureUnit;\n\n        const backfaces = materialState.backfaces;\n        if (frameCtx.backfaces !== backfaces) {\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n\n        const frontface = materialState.frontface;\n        if (frameCtx.frontface !== frontface) {\n            if (frontface) {\n                gl.frontFace(gl.CCW);\n            } else {\n                gl.frontFace(gl.CW);\n            }\n            frameCtx.frontface = frontface;\n        }\n\n        if (frameCtx.lineWidth !== materialState.lineWidth) {\n            gl.lineWidth(materialState.lineWidth);\n            frameCtx.lineWidth = materialState.lineWidth;\n        }\n\n        if (this._uPointSize) {\n            gl.uniform1f(this._uPointSize, materialState.pointSize);\n        }\n\n        switch (materialState.type) {\n            case \"LambertMaterial\":\n                if (this._uMaterialAmbient) {\n                    gl.uniform3fv(this._uMaterialAmbient, materialState.ambient);\n                }\n                if (this._uMaterialColor) {\n                    gl.uniform4f(this._uMaterialColor, materialState.color[0], materialState.color[1], materialState.color[2], materialState.alpha);\n                }\n                if (this._uMaterialEmissive) {\n                    gl.uniform3fv(this._uMaterialEmissive, materialState.emissive);\n                }\n                break;\n\n            case \"PhongMaterial\":\n                if (this._uMaterialShininess) {\n                    gl.uniform1f(this._uMaterialShininess, materialState.shininess);\n                }\n                if (this._uMaterialAmbient) {\n                    gl.uniform3fv(this._uMaterialAmbient, materialState.ambient);\n                }\n                if (this._uMaterialDiffuse) {\n                    gl.uniform3fv(this._uMaterialDiffuse, materialState.diffuse);\n                }\n                if (this._uMaterialSpecular) {\n                    gl.uniform3fv(this._uMaterialSpecular, materialState.specular);\n                }\n                if (this._uMaterialEmissive) {\n                    gl.uniform3fv(this._uMaterialEmissive, materialState.emissive);\n                }\n                if (this._uAlphaModeCutoff) {\n                    gl.uniform4f(\n                        this._uAlphaModeCutoff,\n                        1.0 * materialState.alpha,\n                        materialState.alphaMode === 1 ? 1.0 : 0.0,\n                        materialState.alphaCutoff,\n                        0);\n                }\n                if (material._ambientMap && material._ambientMap._state.texture && this._uMaterialAmbientMap) {\n                    program.bindTexture(this._uMaterialAmbientMap, material._ambientMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uMaterialAmbientMapMatrix) {\n                        gl.uniformMatrix4fv(this._uMaterialAmbientMapMatrix, false, material._ambientMap._state.matrix);\n                    }\n                }\n                if (material._diffuseMap && material._diffuseMap._state.texture && this._uDiffuseMap) {\n                    program.bindTexture(this._uDiffuseMap, material._diffuseMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uDiffuseMapMatrix) {\n                        gl.uniformMatrix4fv(this._uDiffuseMapMatrix, false, material._diffuseMap._state.matrix);\n                    }\n                }\n                if (material._specularMap && material._specularMap._state.texture && this._uSpecularMap) {\n                    program.bindTexture(this._uSpecularMap, material._specularMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uSpecularMapMatrix) {\n                        gl.uniformMatrix4fv(this._uSpecularMapMatrix, false, material._specularMap._state.matrix);\n                    }\n                }\n                if (material._emissiveMap && material._emissiveMap._state.texture && this._uEmissiveMap) {\n                    program.bindTexture(this._uEmissiveMap, material._emissiveMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uEmissiveMapMatrix) {\n                        gl.uniformMatrix4fv(this._uEmissiveMapMatrix, false, material._emissiveMap._state.matrix);\n                    }\n                }\n                if (material._alphaMap && material._alphaMap._state.texture && this._uAlphaMap) {\n                    program.bindTexture(this._uAlphaMap, material._alphaMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uAlphaMapMatrix) {\n                        gl.uniformMatrix4fv(this._uAlphaMapMatrix, false, material._alphaMap._state.matrix);\n                    }\n                }\n                if (material._reflectivityMap && material._reflectivityMap._state.texture && this._uReflectivityMap) {\n                    program.bindTexture(this._uReflectivityMap, material._reflectivityMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    if (this._uReflectivityMapMatrix) {\n                        gl.uniformMatrix4fv(this._uReflectivityMapMatrix, false, material._reflectivityMap._state.matrix);\n                    }\n                }\n                if (material._normalMap && material._normalMap._state.texture && this._uNormalMap) {\n                    program.bindTexture(this._uNormalMap, material._normalMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uNormalMapMatrix) {\n                        gl.uniformMatrix4fv(this._uNormalMapMatrix, false, material._normalMap._state.matrix);\n                    }\n                }\n                if (material._occlusionMap && material._occlusionMap._state.texture && this._uOcclusionMap) {\n                    program.bindTexture(this._uOcclusionMap, material._occlusionMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uOcclusionMapMatrix) {\n                        gl.uniformMatrix4fv(this._uOcclusionMapMatrix, false, material._occlusionMap._state.matrix);\n                    }\n                }\n                if (material._diffuseFresnel) {\n                    if (this._uDiffuseFresnelEdgeBias) {\n                        gl.uniform1f(this._uDiffuseFresnelEdgeBias, material._diffuseFresnel.edgeBias);\n                    }\n                    if (this._uDiffuseFresnelCenterBias) {\n                        gl.uniform1f(this._uDiffuseFresnelCenterBias, material._diffuseFresnel.centerBias);\n                    }\n                    if (this._uDiffuseFresnelEdgeColor) {\n                        gl.uniform3fv(this._uDiffuseFresnelEdgeColor, material._diffuseFresnel.edgeColor);\n                    }\n                    if (this._uDiffuseFresnelCenterColor) {\n                        gl.uniform3fv(this._uDiffuseFresnelCenterColor, material._diffuseFresnel.centerColor);\n                    }\n                    if (this._uDiffuseFresnelPower) {\n                        gl.uniform1f(this._uDiffuseFresnelPower, material._diffuseFresnel.power);\n                    }\n                }\n                if (material._specularFresnel) {\n                    if (this._uSpecularFresnelEdgeBias) {\n                        gl.uniform1f(this._uSpecularFresnelEdgeBias, material._specularFresnel.edgeBias);\n                    }\n                    if (this._uSpecularFresnelCenterBias) {\n                        gl.uniform1f(this._uSpecularFresnelCenterBias, material._specularFresnel.centerBias);\n                    }\n                    if (this._uSpecularFresnelEdgeColor) {\n                        gl.uniform3fv(this._uSpecularFresnelEdgeColor, material._specularFresnel.edgeColor);\n                    }\n                    if (this._uSpecularFresnelCenterColor) {\n                        gl.uniform3fv(this._uSpecularFresnelCenterColor, material._specularFresnel.centerColor);\n                    }\n                    if (this._uSpecularFresnelPower) {\n                        gl.uniform1f(this._uSpecularFresnelPower, material._specularFresnel.power);\n                    }\n                }\n                if (material._alphaFresnel) {\n                    if (this._uAlphaFresnelEdgeBias) {\n                        gl.uniform1f(this._uAlphaFresnelEdgeBias, material._alphaFresnel.edgeBias);\n                    }\n                    if (this._uAlphaFresnelCenterBias) {\n                        gl.uniform1f(this._uAlphaFresnelCenterBias, material._alphaFresnel.centerBias);\n                    }\n                    if (this._uAlphaFresnelEdgeColor) {\n                        gl.uniform3fv(this._uAlphaFresnelEdgeColor, material._alphaFresnel.edgeColor);\n                    }\n                    if (this._uAlphaFresnelCenterColor) {\n                        gl.uniform3fv(this._uAlphaFresnelCenterColor, material._alphaFresnel.centerColor);\n                    }\n                    if (this._uAlphaFresnelPower) {\n                        gl.uniform1f(this._uAlphaFresnelPower, material._alphaFresnel.power);\n                    }\n                }\n                if (material._reflectivityFresnel) {\n                    if (this._uReflectivityFresnelEdgeBias) {\n                        gl.uniform1f(this._uReflectivityFresnelEdgeBias, material._reflectivityFresnel.edgeBias);\n                    }\n                    if (this._uReflectivityFresnelCenterBias) {\n                        gl.uniform1f(this._uReflectivityFresnelCenterBias, material._reflectivityFresnel.centerBias);\n                    }\n                    if (this._uReflectivityFresnelEdgeColor) {\n                        gl.uniform3fv(this._uReflectivityFresnelEdgeColor, material._reflectivityFresnel.edgeColor);\n                    }\n                    if (this._uReflectivityFresnelCenterColor) {\n                        gl.uniform3fv(this._uReflectivityFresnelCenterColor, material._reflectivityFresnel.centerColor);\n                    }\n                    if (this._uReflectivityFresnelPower) {\n                        gl.uniform1f(this._uReflectivityFresnelPower, material._reflectivityFresnel.power);\n                    }\n                }\n                if (material._emissiveFresnel) {\n                    if (this._uEmissiveFresnelEdgeBias) {\n                        gl.uniform1f(this._uEmissiveFresnelEdgeBias, material._emissiveFresnel.edgeBias);\n                    }\n                    if (this._uEmissiveFresnelCenterBias) {\n                        gl.uniform1f(this._uEmissiveFresnelCenterBias, material._emissiveFresnel.centerBias);\n                    }\n                    if (this._uEmissiveFresnelEdgeColor) {\n                        gl.uniform3fv(this._uEmissiveFresnelEdgeColor, material._emissiveFresnel.edgeColor);\n                    }\n                    if (this._uEmissiveFresnelCenterColor) {\n                        gl.uniform3fv(this._uEmissiveFresnelCenterColor, material._emissiveFresnel.centerColor);\n                    }\n                    if (this._uEmissiveFresnelPower) {\n                        gl.uniform1f(this._uEmissiveFresnelPower, material._emissiveFresnel.power);\n                    }\n                }\n                break;\n\n            case \"MetallicMaterial\":\n                if (this._uBaseColor) {\n                    gl.uniform3fv(this._uBaseColor, materialState.baseColor);\n                }\n                if (this._uMaterialMetallic) {\n                    gl.uniform1f(this._uMaterialMetallic, materialState.metallic);\n                }\n                if (this._uMaterialRoughness) {\n                    gl.uniform1f(this._uMaterialRoughness, materialState.roughness);\n                }\n                if (this._uMaterialSpecularF0) {\n                    gl.uniform1f(this._uMaterialSpecularF0, materialState.specularF0);\n                }\n                if (this._uMaterialEmissive) {\n                    gl.uniform3fv(this._uMaterialEmissive, materialState.emissive);\n                }\n                if (this._uAlphaModeCutoff) {\n                    gl.uniform4f(\n                        this._uAlphaModeCutoff,\n                        1.0 * materialState.alpha,\n                        materialState.alphaMode === 1 ? 1.0 : 0.0,\n                        materialState.alphaCutoff,\n                        0.0);\n                }\n                const baseColorMap = material._baseColorMap;\n                if (baseColorMap && baseColorMap._state.texture && this._uBaseColorMap) {\n                    program.bindTexture(this._uBaseColorMap, baseColorMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uBaseColorMapMatrix) {\n                        gl.uniformMatrix4fv(this._uBaseColorMapMatrix, false, baseColorMap._state.matrix);\n                    }\n                }\n                const metallicMap = material._metallicMap;\n                if (metallicMap && metallicMap._state.texture && this._uMetallicMap) {\n                    program.bindTexture(this._uMetallicMap, metallicMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uMetallicMapMatrix) {\n                        gl.uniformMatrix4fv(this._uMetallicMapMatrix, false, metallicMap._state.matrix);\n                    }\n                }\n                const roughnessMap = material._roughnessMap;\n                if (roughnessMap && roughnessMap._state.texture && this._uRoughnessMap) {\n                    program.bindTexture(this._uRoughnessMap, roughnessMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uRoughnessMapMatrix) {\n                        gl.uniformMatrix4fv(this._uRoughnessMapMatrix, false, roughnessMap._state.matrix);\n                    }\n                }\n                const metallicRoughnessMap = material._metallicRoughnessMap;\n                if (metallicRoughnessMap && metallicRoughnessMap._state.texture && this._uMetallicRoughnessMap) {\n                    program.bindTexture(this._uMetallicRoughnessMap, metallicRoughnessMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uMetallicRoughnessMapMatrix) {\n                        gl.uniformMatrix4fv(this._uMetallicRoughnessMapMatrix, false, metallicRoughnessMap._state.matrix);\n                    }\n                }\n                var emissiveMap = material._emissiveMap;\n                if (emissiveMap && emissiveMap._state.texture && this._uEmissiveMap) {\n                    program.bindTexture(this._uEmissiveMap, emissiveMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uEmissiveMapMatrix) {\n                        gl.uniformMatrix4fv(this._uEmissiveMapMatrix, false, emissiveMap._state.matrix);\n                    }\n                }\n                var occlusionMap = material._occlusionMap;\n                if (occlusionMap && material._occlusionMap._state.texture && this._uOcclusionMap) {\n                    program.bindTexture(this._uOcclusionMap, occlusionMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uOcclusionMapMatrix) {\n                        gl.uniformMatrix4fv(this._uOcclusionMapMatrix, false, occlusionMap._state.matrix);\n                    }\n                }\n                var alphaMap = material._alphaMap;\n                if (alphaMap && alphaMap._state.texture && this._uAlphaMap) {\n                    program.bindTexture(this._uAlphaMap, alphaMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uAlphaMapMatrix) {\n                        gl.uniformMatrix4fv(this._uAlphaMapMatrix, false, alphaMap._state.matrix);\n                    }\n                }\n                var normalMap = material._normalMap;\n                if (normalMap && normalMap._state.texture && this._uNormalMap) {\n                    program.bindTexture(this._uNormalMap, normalMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uNormalMapMatrix) {\n                        gl.uniformMatrix4fv(this._uNormalMapMatrix, false, normalMap._state.matrix);\n                    }\n                }\n                break;\n\n            case \"SpecularMaterial\":\n                if (this._uMaterialDiffuse) {\n                    gl.uniform3fv(this._uMaterialDiffuse, materialState.diffuse);\n                }\n                if (this._uMaterialSpecular) {\n                    gl.uniform3fv(this._uMaterialSpecular, materialState.specular);\n                }\n                if (this._uMaterialGlossiness) {\n                    gl.uniform1f(this._uMaterialGlossiness, materialState.glossiness);\n                }\n                if (this._uMaterialReflectivity) {\n                    gl.uniform1f(this._uMaterialReflectivity, materialState.reflectivity);\n                }\n                if (this._uMaterialEmissive) {\n                    gl.uniform3fv(this._uMaterialEmissive, materialState.emissive);\n                }\n                if (this._uAlphaModeCutoff) {\n                    gl.uniform4f(\n                        this._uAlphaModeCutoff,\n                        1.0 * materialState.alpha,\n                        materialState.alphaMode === 1 ? 1.0 : 0.0,\n                        materialState.alphaCutoff,\n                        0.0);\n                }\n                const diffuseMap = material._diffuseMap;\n                if (diffuseMap && diffuseMap._state.texture && this._uDiffuseMap) {\n                    program.bindTexture(this._uDiffuseMap, diffuseMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uDiffuseMapMatrix) {\n                        gl.uniformMatrix4fv(this._uDiffuseMapMatrix, false, diffuseMap._state.matrix);\n                    }\n                }\n                const specularMap = material._specularMap;\n                if (specularMap && specularMap._state.texture && this._uSpecularMap) {\n                    program.bindTexture(this._uSpecularMap, specularMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uSpecularMapMatrix) {\n                        gl.uniformMatrix4fv(this._uSpecularMapMatrix, false, specularMap._state.matrix);\n                    }\n                }\n                const glossinessMap = material._glossinessMap;\n                if (glossinessMap && glossinessMap._state.texture && this._uGlossinessMap) {\n                    program.bindTexture(this._uGlossinessMap, glossinessMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uGlossinessMapMatrix) {\n                        gl.uniformMatrix4fv(this._uGlossinessMapMatrix, false, glossinessMap._state.matrix);\n                    }\n                }\n                const specularGlossinessMap = material._specularGlossinessMap;\n                if (specularGlossinessMap && specularGlossinessMap._state.texture && this._uSpecularGlossinessMap) {\n                    program.bindTexture(this._uSpecularGlossinessMap, specularGlossinessMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uSpecularGlossinessMapMatrix) {\n                        gl.uniformMatrix4fv(this._uSpecularGlossinessMapMatrix, false, specularGlossinessMap._state.matrix);\n                    }\n                }\n                var emissiveMap = material._emissiveMap;\n                if (emissiveMap && emissiveMap._state.texture && this._uEmissiveMap) {\n                    program.bindTexture(this._uEmissiveMap, emissiveMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uEmissiveMapMatrix) {\n                        gl.uniformMatrix4fv(this._uEmissiveMapMatrix, false, emissiveMap._state.matrix);\n                    }\n                }\n                var occlusionMap = material._occlusionMap;\n                if (occlusionMap && occlusionMap._state.texture && this._uOcclusionMap) {\n                    program.bindTexture(this._uOcclusionMap, occlusionMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uOcclusionMapMatrix) {\n                        gl.uniformMatrix4fv(this._uOcclusionMapMatrix, false, occlusionMap._state.matrix);\n                    }\n                }\n                var alphaMap = material._alphaMap;\n                if (alphaMap && alphaMap._state.texture && this._uAlphaMap) {\n                    program.bindTexture(this._uAlphaMap, alphaMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uAlphaMapMatrix) {\n                        gl.uniformMatrix4fv(this._uAlphaMapMatrix, false, alphaMap._state.matrix);\n                    }\n                }\n                var normalMap = material._normalMap;\n                if (normalMap && normalMap._state.texture && this._uNormalMap) {\n                    program.bindTexture(this._uNormalMap, normalMap._state.texture, frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                    if (this._uNormalMapMatrix) {\n                        gl.uniformMatrix4fv(this._uNormalMapMatrix, false, normalMap._state.matrix);\n                    }\n                }\n                break;\n        }\n        this._lastMaterialId = materialState.id;\n    }\n\n    gl.uniformMatrix4fv(this._uModelMatrix, gl.FALSE, mesh.worldMatrix);\n    if (this._uModelNormalMatrix) {\n        gl.uniformMatrix4fv(this._uModelNormalMatrix, gl.FALSE, mesh.worldNormalMatrix);\n    }\n\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, meshState.clippable);\n    }\n\n    if (this._uColorize) {\n        const colorize = meshState.colorize;\n        const lastColorize = this._lastColorize;\n        if (lastColorize[0] !== colorize[0] ||\n            lastColorize[1] !== colorize[1] ||\n            lastColorize[2] !== colorize[2] ||\n            lastColorize[3] !== colorize[3]) {\n            gl.uniform4fv(this._uColorize, colorize);\n            lastColorize[0] = colorize[0];\n            lastColorize[1] = colorize[1];\n            lastColorize[2] = colorize[2];\n            lastColorize[3] = colorize[3];\n        }\n    }\n\n    gl.uniform3fv(this._uOffset, meshState.offset);\n\n    // Bind VBOs\n\n    if (geometryState.id !== this._lastGeometryId) {\n        if (this._uPositionsDecodeMatrix) {\n            gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n        }\n        if (this._uUVDecodeMatrix) {\n            gl.uniformMatrix3fv(this._uUVDecodeMatrix, false, geometryState.uvDecodeMatrix);\n        }\n        if (this._aPosition) {\n            this._aPosition.bindArrayBuffer(geometryState.positionsBuf);\n            frameCtx.bindArray++;\n        }\n        if (this._aNormal) {\n            this._aNormal.bindArrayBuffer(geometryState.normalsBuf);\n            frameCtx.bindArray++;\n        }\n        if (this._aUV) {\n            this._aUV.bindArrayBuffer(geometryState.uvBuf);\n            frameCtx.bindArray++;\n        }\n        if (this._aColor) {\n            this._aColor.bindArrayBuffer(geometryState.colorsBuf);\n            frameCtx.bindArray++;\n        }\n        if (this._aFlags) {\n            this._aFlags.bindArrayBuffer(geometryState.flagsBuf);\n            frameCtx.bindArray++;\n        }\n        if (geometryState.indicesBuf) {\n            geometryState.indicesBuf.bind();\n            frameCtx.bindArray++;\n        }\n        this._lastGeometryId = geometryState.id;\n    }\n\n    // Draw (indices bound in prev step)\n\n    if (geometryState.indicesBuf) {\n        gl.drawElements(geometryState.primitive, geometryState.indicesBuf.numItems, geometryState.indicesBuf.itemType, 0);\n        frameCtx.drawElements++;\n    } else if (geometryState.positions) {\n        gl.drawArrays(gl.TRIANGLES, 0, geometryState.positions.numItems);\n        frameCtx.drawArrays++;\n    }\n};\n\nDrawRenderer.prototype._allocate = function (mesh) {\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    const material = mesh._material;\n    const lightsState = scene._lightsState;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const materialState = mesh._material._state;\n\n    this._program = new Program(gl, this._shaderSource);\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n    const program = this._program;\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uUVDecodeMatrix = program.getLocation(\"uvDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uModelNormalMatrix = program.getLocation(\"modelNormalMatrix\");\n    this._uViewMatrix = program.getLocation(\"viewMatrix\");\n    this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n    this._uProjMatrix = program.getLocation(\"projMatrix\");\n    this._uGammaFactor = program.getLocation(\"gammaFactor\");\n    this._uLightAmbient = [];\n    this._uLightColor = [];\n    this._uLightDir = [];\n    this._uLightPos = [];\n    this._uLightAttenuation = [];\n    this._uShadowViewMatrix = [];\n    this._uShadowProjMatrix = [];\n\n    if (scene.logarithmicDepthBufferEnabled) {\n        this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n    }\n\n    const lights = lightsState.lights;\n    let light;\n\n    for (var i = 0, len = lights.length; i < len; i++) {\n        light = lights[i];\n        switch (light.type) {\n\n            case \"ambient\":\n                this._uLightAmbient[i] = program.getLocation(\"lightAmbient\");\n                break;\n\n            case \"dir\":\n                this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                this._uLightPos[i] = null;\n                this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                break;\n\n            case \"point\":\n                this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                this._uLightDir[i] = null;\n                this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                break;\n\n            case \"spot\":\n                this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                break;\n        }\n\n        if (light.castsShadow) {\n            this._uShadowViewMatrix[i] = program.getLocation(\"shadowViewMatrix\" + i);\n            this._uShadowProjMatrix[i] = program.getLocation(\"shadowProjMatrix\" + i);\n        }\n    }\n\n    if (lightsState.lightMaps.length > 0) {\n        this._uLightMap = \"lightMap\";\n    }\n\n    if (lightsState.reflectionMaps.length > 0) {\n        this._uReflectionMap = \"reflectionMap\";\n    }\n\n    this._uSectionPlanes = [];\n    const sectionPlanes = sectionPlanesState.sectionPlanes;\n    for (var i = 0, len = sectionPlanes.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n\n    this._uPointSize = program.getLocation(\"pointSize\");\n\n    switch (materialState.type) {\n        case \"LambertMaterial\":\n            this._uMaterialColor = program.getLocation(\"materialColor\");\n            this._uMaterialEmissive = program.getLocation(\"materialEmissive\");\n            this._uAlphaModeCutoff = program.getLocation(\"materialAlphaModeCutoff\");\n            break;\n\n        case \"PhongMaterial\":\n            this._uMaterialAmbient = program.getLocation(\"materialAmbient\");\n            this._uMaterialDiffuse = program.getLocation(\"materialDiffuse\");\n            this._uMaterialSpecular = program.getLocation(\"materialSpecular\");\n            this._uMaterialEmissive = program.getLocation(\"materialEmissive\");\n            this._uAlphaModeCutoff = program.getLocation(\"materialAlphaModeCutoff\");\n            this._uMaterialShininess = program.getLocation(\"materialShininess\");\n            if (material._ambientMap) {\n                this._uMaterialAmbientMap = \"ambientMap\";\n                this._uMaterialAmbientMapMatrix = program.getLocation(\"ambientMapMatrix\");\n            }\n            if (material._diffuseMap) {\n                this._uDiffuseMap = \"diffuseMap\";\n                this._uDiffuseMapMatrix = program.getLocation(\"diffuseMapMatrix\");\n            }\n            if (material._specularMap) {\n                this._uSpecularMap = \"specularMap\";\n                this._uSpecularMapMatrix = program.getLocation(\"specularMapMatrix\");\n            }\n            if (material._emissiveMap) {\n                this._uEmissiveMap = \"emissiveMap\";\n                this._uEmissiveMapMatrix = program.getLocation(\"emissiveMapMatrix\");\n            }\n            if (material._alphaMap) {\n                this._uAlphaMap = \"alphaMap\";\n                this._uAlphaMapMatrix = program.getLocation(\"alphaMapMatrix\");\n            }\n            if (material._reflectivityMap) {\n                this._uReflectivityMap = \"reflectivityMap\";\n                this._uReflectivityMapMatrix = program.getLocation(\"reflectivityMapMatrix\");\n            }\n            if (material._normalMap) {\n                this._uNormalMap = \"normalMap\";\n                this._uNormalMapMatrix = program.getLocation(\"normalMapMatrix\");\n            }\n            if (material._occlusionMap) {\n                this._uOcclusionMap = \"occlusionMap\";\n                this._uOcclusionMapMatrix = program.getLocation(\"occlusionMapMatrix\");\n            }\n            if (material._diffuseFresnel) {\n                this._uDiffuseFresnelEdgeBias = program.getLocation(\"diffuseFresnelEdgeBias\");\n                this._uDiffuseFresnelCenterBias = program.getLocation(\"diffuseFresnelCenterBias\");\n                this._uDiffuseFresnelEdgeColor = program.getLocation(\"diffuseFresnelEdgeColor\");\n                this._uDiffuseFresnelCenterColor = program.getLocation(\"diffuseFresnelCenterColor\");\n                this._uDiffuseFresnelPower = program.getLocation(\"diffuseFresnelPower\");\n            }\n            if (material._specularFresnel) {\n                this._uSpecularFresnelEdgeBias = program.getLocation(\"specularFresnelEdgeBias\");\n                this._uSpecularFresnelCenterBias = program.getLocation(\"specularFresnelCenterBias\");\n                this._uSpecularFresnelEdgeColor = program.getLocation(\"specularFresnelEdgeColor\");\n                this._uSpecularFresnelCenterColor = program.getLocation(\"specularFresnelCenterColor\");\n                this._uSpecularFresnelPower = program.getLocation(\"specularFresnelPower\");\n            }\n            if (material._alphaFresnel) {\n                this._uAlphaFresnelEdgeBias = program.getLocation(\"alphaFresnelEdgeBias\");\n                this._uAlphaFresnelCenterBias = program.getLocation(\"alphaFresnelCenterBias\");\n                this._uAlphaFresnelEdgeColor = program.getLocation(\"alphaFresnelEdgeColor\");\n                this._uAlphaFresnelCenterColor = program.getLocation(\"alphaFresnelCenterColor\");\n                this._uAlphaFresnelPower = program.getLocation(\"alphaFresnelPower\");\n            }\n            if (material._reflectivityFresnel) {\n                this._uReflectivityFresnelEdgeBias = program.getLocation(\"reflectivityFresnelEdgeBias\");\n                this._uReflectivityFresnelCenterBias = program.getLocation(\"reflectivityFresnelCenterBias\");\n                this._uReflectivityFresnelEdgeColor = program.getLocation(\"reflectivityFresnelEdgeColor\");\n                this._uReflectivityFresnelCenterColor = program.getLocation(\"reflectivityFresnelCenterColor\");\n                this._uReflectivityFresnelPower = program.getLocation(\"reflectivityFresnelPower\");\n            }\n            if (material._emissiveFresnel) {\n                this._uEmissiveFresnelEdgeBias = program.getLocation(\"emissiveFresnelEdgeBias\");\n                this._uEmissiveFresnelCenterBias = program.getLocation(\"emissiveFresnelCenterBias\");\n                this._uEmissiveFresnelEdgeColor = program.getLocation(\"emissiveFresnelEdgeColor\");\n                this._uEmissiveFresnelCenterColor = program.getLocation(\"emissiveFresnelCenterColor\");\n                this._uEmissiveFresnelPower = program.getLocation(\"emissiveFresnelPower\");\n            }\n            break;\n\n        case \"MetallicMaterial\":\n            this._uBaseColor = program.getLocation(\"materialBaseColor\");\n            this._uMaterialMetallic = program.getLocation(\"materialMetallic\");\n            this._uMaterialRoughness = program.getLocation(\"materialRoughness\");\n            this._uMaterialSpecularF0 = program.getLocation(\"materialSpecularF0\");\n            this._uMaterialEmissive = program.getLocation(\"materialEmissive\");\n            this._uAlphaModeCutoff = program.getLocation(\"materialAlphaModeCutoff\");\n            if (material._baseColorMap) {\n                this._uBaseColorMap = \"baseColorMap\";\n                this._uBaseColorMapMatrix = program.getLocation(\"baseColorMapMatrix\");\n            }\n            if (material._metallicMap) {\n                this._uMetallicMap = \"metallicMap\";\n                this._uMetallicMapMatrix = program.getLocation(\"metallicMapMatrix\");\n            }\n            if (material._roughnessMap) {\n                this._uRoughnessMap = \"roughnessMap\";\n                this._uRoughnessMapMatrix = program.getLocation(\"roughnessMapMatrix\");\n            }\n            if (material._metallicRoughnessMap) {\n                this._uMetallicRoughnessMap = \"metallicRoughnessMap\";\n                this._uMetallicRoughnessMapMatrix = program.getLocation(\"metallicRoughnessMapMatrix\");\n            }\n            if (material._emissiveMap) {\n                this._uEmissiveMap = \"emissiveMap\";\n                this._uEmissiveMapMatrix = program.getLocation(\"emissiveMapMatrix\");\n            }\n            if (material._occlusionMap) {\n                this._uOcclusionMap = \"occlusionMap\";\n                this._uOcclusionMapMatrix = program.getLocation(\"occlusionMapMatrix\");\n            }\n            if (material._alphaMap) {\n                this._uAlphaMap = \"alphaMap\";\n                this._uAlphaMapMatrix = program.getLocation(\"alphaMapMatrix\");\n            }\n            if (material._normalMap) {\n                this._uNormalMap = \"normalMap\";\n                this._uNormalMapMatrix = program.getLocation(\"normalMapMatrix\");\n            }\n            break;\n\n        case \"SpecularMaterial\":\n            this._uMaterialDiffuse = program.getLocation(\"materialDiffuse\");\n            this._uMaterialSpecular = program.getLocation(\"materialSpecular\");\n            this._uMaterialGlossiness = program.getLocation(\"materialGlossiness\");\n            this._uMaterialReflectivity = program.getLocation(\"reflectivityFresnel\");\n            this._uMaterialEmissive = program.getLocation(\"materialEmissive\");\n            this._uAlphaModeCutoff = program.getLocation(\"materialAlphaModeCutoff\");\n            if (material._diffuseMap) {\n                this._uDiffuseMap = \"diffuseMap\";\n                this._uDiffuseMapMatrix = program.getLocation(\"diffuseMapMatrix\");\n            }\n            if (material._specularMap) {\n                this._uSpecularMap = \"specularMap\";\n                this._uSpecularMapMatrix = program.getLocation(\"specularMapMatrix\");\n            }\n            if (material._glossinessMap) {\n                this._uGlossinessMap = \"glossinessMap\";\n                this._uGlossinessMapMatrix = program.getLocation(\"glossinessMapMatrix\");\n            }\n            if (material._specularGlossinessMap) {\n                this._uSpecularGlossinessMap = \"materialSpecularGlossinessMap\";\n                this._uSpecularGlossinessMapMatrix = program.getLocation(\"materialSpecularGlossinessMapMatrix\");\n            }\n            if (material._emissiveMap) {\n                this._uEmissiveMap = \"emissiveMap\";\n                this._uEmissiveMapMatrix = program.getLocation(\"emissiveMapMatrix\");\n            }\n            if (material._occlusionMap) {\n                this._uOcclusionMap = \"occlusionMap\";\n                this._uOcclusionMapMatrix = program.getLocation(\"occlusionMapMatrix\");\n            }\n            if (material._alphaMap) {\n                this._uAlphaMap = \"alphaMap\";\n                this._uAlphaMapMatrix = program.getLocation(\"alphaMapMatrix\");\n            }\n            if (material._normalMap) {\n                this._uNormalMap = \"normalMap\";\n                this._uNormalMapMatrix = program.getLocation(\"normalMapMatrix\");\n            }\n            break;\n    }\n\n    this._aPosition = program.getAttribute(\"position\");\n    this._aNormal = program.getAttribute(\"normal\");\n    this._aUV = program.getAttribute(\"uv\");\n    this._aColor = program.getAttribute(\"color\");\n    this._aFlags = program.getAttribute(\"flags\");\n\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uColorize = program.getLocation(\"colorize\");\n    this._uOffset = program.getLocation(\"offset\");\n\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n\n    this._lastColorize = new Float32Array(4);\n\n    this._baseTextureUnit = 0;\n\n};\n\nDrawRenderer.prototype._bindProgram = function (frameCtx) {\n\n    const maxTextureUnits = WEBGL_INFO.MAX_TEXTURE_UNITS;\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const lightsState = scene._lightsState;\n    const project = scene.camera.project;\n    let light;\n\n    const program = this._program;\n\n    program.bind();\n\n    frameCtx.useProgram++;\n    frameCtx.textureUnit = 0;\n\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n\n    this._lastColorize[0] = -1;\n    this._lastColorize[1] = -1;\n    this._lastColorize[2] = -1;\n    this._lastColorize[3] = -1;\n\n    gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n    if (scene.logarithmicDepthBufferEnabled) {\n        const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n        gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n    }\n\n    for (var i = 0, len = lightsState.lights.length; i < len; i++) {\n\n        light = lightsState.lights[i];\n\n        if (this._uLightAmbient[i]) {\n            gl.uniform4f(this._uLightAmbient[i], light.color[0], light.color[1], light.color[2], light.intensity);\n\n        } else {\n\n            if (this._uLightColor[i]) {\n                gl.uniform4f(this._uLightColor[i], light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n\n            if (this._uLightPos[i]) {\n                gl.uniform3fv(this._uLightPos[i], light.pos);\n                if (this._uLightAttenuation[i]) {\n                    gl.uniform1f(this._uLightAttenuation[i], light.attenuation);\n                }\n            }\n\n            if (this._uLightDir[i]) {\n                gl.uniform3fv(this._uLightDir[i], light.dir);\n            }\n\n            if (light.castsShadow) {\n                if (this._uShadowViewMatrix[i]) {\n                    gl.uniformMatrix4fv(this._uShadowViewMatrix[i], false, light.getShadowViewMatrix());\n                }\n                if (this._uShadowProjMatrix[i]) {\n                    gl.uniformMatrix4fv(this._uShadowProjMatrix[i], false, light.getShadowProjMatrix());\n                }\n                const shadowRenderBuf = light.getShadowRenderBuf();\n                if (shadowRenderBuf) {\n                    program.bindTexture(\"shadowMap\" + i, shadowRenderBuf.getTexture(), frameCtx.textureUnit);\n                    frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n                    frameCtx.bindTexture++;\n                }\n            }\n        }\n    }\n\n    if (lightsState.lightMaps.length > 0 && lightsState.lightMaps[0].texture && this._uLightMap) {\n        program.bindTexture(this._uLightMap, lightsState.lightMaps[0].texture, frameCtx.textureUnit);\n        frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n        frameCtx.bindTexture++;\n    }\n\n    if (lightsState.reflectionMaps.length > 0 && lightsState.reflectionMaps[0].texture && this._uReflectionMap) {\n        program.bindTexture(this._uReflectionMap, lightsState.reflectionMaps[0].texture, frameCtx.textureUnit);\n        frameCtx.textureUnit = (frameCtx.textureUnit + 1) % maxTextureUnits;\n        frameCtx.bindTexture++;\n    }\n\n    if (this._uGammaFactor) {\n        gl.uniform1f(this._uGammaFactor, scene.gammaFactor);\n    }\n\n    this._baseTextureUnit = frameCtx.textureUnit;\n};\n\nexport {DrawRenderer};","import {WEBGL_INFO} from \"../../webglInfo.js\";\n\n/**\n * @private\n */\nclass EmphasisFillShaderSource {\n    constructor(mesh) {\n        this.vertex = buildVertex(mesh);\n        this.fragment = buildFragment(mesh);\n    }\n}\n\nfunction buildVertex(mesh) {\n\n    const scene = mesh.scene;\n    const lightsState = scene._lightsState;\n    const normals = hasNormals(mesh);\n    const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!mesh._geometry._state.compressGeometry;\n    const billboard = mesh._state.billboard;\n    const stationary = mesh._state.stationary;\n    const src = [];\n\n    src.push(\"// EmphasisFillShaderSource vertex shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute vec3 position;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 viewMatrix;\");\n    src.push(\"uniform mat4 projMatrix;\");\n    src.push(\"uniform vec4 colorize;\");\n    src.push(\"uniform vec3 offset;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"varying float vFragDepth;\");\n        }\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    src.push(\"uniform vec4   lightAmbient;\");\n    src.push(\"uniform vec4   fillColor;\");\n    if (normals) {\n        src.push(\"attribute vec3 normal;\");\n        src.push(\"uniform mat4 modelNormalMatrix;\");\n        src.push(\"uniform mat4 viewNormalMatrix;\");\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            src.push(\"uniform vec4 lightColor\" + i + \";\");\n            if (light.type === \"dir\") {\n                src.push(\"uniform vec3 lightDir\" + i + \";\");\n            }\n            if (light.type === \"point\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n            if (light.type === \"spot\") {\n                src.push(\"uniform vec3 lightPos\" + i + \";\");\n            }\n        }\n        if (quantizedGeometry) {\n            src.push(\"vec3 octDecode(vec2 oct) {\");\n            src.push(\"    vec3 v = vec3(oct.xy, 1.0 - abs(oct.x) - abs(oct.y));\");\n            src.push(\"    if (v.z < 0.0) {\");\n            src.push(\"        v.xy = (1.0 - abs(v.yx)) * vec2(v.x >= 0.0 ? 1.0 : -1.0, v.y >= 0.0 ? 1.0 : -1.0);\");\n            src.push(\"    }\");\n            src.push(\"    return normalize(v);\");\n            src.push(\"}\");\n        }\n    }\n    src.push(\"varying vec4 vColor;\");\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"void billboard(inout mat4 mat) {\");\n        src.push(\"   mat[0][0] = 1.0;\");\n        src.push(\"   mat[0][1] = 0.0;\");\n        src.push(\"   mat[0][2] = 0.0;\");\n        if (billboard === \"spherical\") {\n            src.push(\"   mat[1][0] = 0.0;\");\n            src.push(\"   mat[1][1] = 1.0;\");\n            src.push(\"   mat[1][2] = 0.0;\");\n        }\n        src.push(\"   mat[2][0] = 0.0;\");\n        src.push(\"   mat[2][1] = 0.0;\");\n        src.push(\"   mat[2][2] =1.0;\");\n        src.push(\"}\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    src.push(\"vec4 worldPosition;\");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    if (normals) {\n        if (quantizedGeometry) {\n            src.push(\"vec4 localNormal = vec4(octDecode(normal.xy), 0.0); \");\n        } else {\n            src.push(\"vec4 localNormal = vec4(normal, 0.0); \");\n        }\n        src.push(\"mat4 modelNormalMatrix2 = modelNormalMatrix;\");\n        src.push(\"mat4 viewNormalMatrix2 = viewNormalMatrix;\");\n    }\n    src.push(\"mat4 viewMatrix2 = viewMatrix;\");\n    src.push(\"mat4 modelMatrix2 = modelMatrix;\");\n    if (stationary) {\n        src.push(\"viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;\")\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;\");\n        src.push(\"billboard(modelMatrix2);\");\n        src.push(\"billboard(viewMatrix2);\");\n        src.push(\"billboard(modelViewMatrix);\");\n        if (normals) {\n            src.push(\"mat4 modelViewNormalMatrix =  viewNormalMatrix2 * modelNormalMatrix2;\");\n            src.push(\"billboard(modelNormalMatrix2);\");\n            src.push(\"billboard(viewNormalMatrix2);\");\n            src.push(\"billboard(modelViewNormalMatrix);\");\n        }\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"vec4 viewPosition = modelViewMatrix * localPosition;\");\n    } else {\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition  = viewMatrix2 * worldPosition; \");\n    }\n    if (normals) {\n        src.push(\"vec3 viewNormal = normalize((viewNormalMatrix2 * modelNormalMatrix2 * localNormal).xyz);\");\n    }\n    src.push(\"vec3 reflectedColor = vec3(0.0, 0.0, 0.0);\");\n    src.push(\"vec3 viewLightDir = vec3(0.0, 0.0, -1.0);\");\n    src.push(\"float lambertian = 1.0;\");\n    if (normals) {\n        for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n            const light = lightsState.lights[i];\n            if (light.type === \"ambient\") {\n                continue;\n            }\n            if (light.type === \"dir\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightDir\" + i + \");\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix2 * vec4(lightDir\" + i + \", 0.0)).xyz);\");\n                }\n            } else if (light.type === \"point\") {\n                if (light.space === \"view\") {\n                    src.push(\"viewLightDir = normalize(lightPos\" + i + \" - viewPosition.xyz);\");\n                } else {\n                    src.push(\"viewLightDir = normalize((viewMatrix2 * vec4(lightPos\" + i + \", 0.0)).xyz);\");\n                }\n            } else {\n                continue;\n            }\n            src.push(\"lambertian = max(dot(-viewNormal, viewLightDir), 0.0);\");\n            src.push(\"reflectedColor += lambertian * (lightColor\" + i + \".rgb * lightColor\" + i + \".a);\");\n        }\n    }\n    // TODO: A blending mode for emphasis materials, to select add/multiply/mix\n    //src.push(\"vColor = vec4((mix(reflectedColor, fillColor.rgb, 0.7)), fillColor.a);\");\n    src.push(\"vColor = vec4(reflectedColor * fillColor.rgb, fillColor.a);\");\n    //src.push(\"vColor = vec4(reflectedColor + fillColor.rgb, fillColor.a);\");\n    if (clipping) {\n        src.push(\"vWorldPosition = worldPosition;\");\n    }\n    if (mesh._geometry._state.primitiveName === \"points\") {\n        src.push(\"gl_PointSize = pointSize;\");\n    }\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n        } else {\n            src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n            src.push(\"clipPos.z *= clipPos.w;\");\n        }\n    }\n    src.push(\"gl_Position = clipPos;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction hasNormals(mesh) {\n    const primitive = mesh._geometry._state.primitiveName;\n    if ((mesh._geometry._state.autoVertexNormals || mesh._geometry._state.normalsBuf) && (primitive === \"triangles\" || primitive === \"triangle-strip\" || primitive === \"triangle-fan\")) {\n        return true;\n    }\n    return false;\n}\n\nfunction buildFragment(mesh) {\n\n    const scene = mesh.scene;\n    const sectionPlanesState = mesh.scene._sectionPlanesState;\n    const gammaOutput = mesh.scene.gammaOutput;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const src = [];\n\n    src.push(\"// Lambertian drawing fragment shader\");\n\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n\n    if (gammaOutput) {\n        src.push(\"uniform float gammaFactor;\");\n        src.push(\"vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\");\n        src.push(\"  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        src.push(\"}\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n        src.push(\"uniform bool clippable;\");\n        for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n    src.push(\"varying vec4 vColor;\");\n    src.push(\"void main(void) {\");\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        src.push(\"}\");\n    }\n    if (mesh._geometry._state.primitiveName === \"points\") {\n        src.push(\"vec2 cxy = 2.0 * gl_PointCoord - 1.0;\");\n        src.push(\"float r = dot(cxy, cxy);\");\n        src.push(\"if (r > 1.0) {\");\n        src.push(\"   discard;\");\n        src.push(\"}\");\n    }\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n    if (gammaOutput) {\n        src.push(\"gl_FragColor = linearToGamma(vColor, gammaFactor);\");\n    } else {\n        src.push(\"gl_FragColor = vColor;\");\n    }\n    src.push(\"}\");\n    return src;\n}\n\nexport {EmphasisFillShaderSource};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {Map} from \"../../utils/Map.js\";\nimport {EmphasisFillShaderSource} from \"./EmphasisFillShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from '../../stats.js';\nimport {math} from \"../../math/math.js\";\nimport {getPlaneRTCPos} from \"../../math/rtcCoords.js\";\n\nconst ids = new Map({});\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nconst EmphasisFillRenderer = function (hash, mesh) {\n    this.id = ids.addItem({});\n    this._hash = hash;\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._shaderSource = new EmphasisFillShaderSource(mesh);\n    this._allocate(mesh);\n};\n\nconst xrayFillRenderers = {};\n\nEmphasisFillRenderer.get = function (mesh) {\n    const hash = [\n        mesh.scene.id,\n        mesh.scene.gammaOutput ? \"go\" : \"\", // Gamma input not needed\n        mesh.scene._sectionPlanesState.getHash(),\n        !!mesh._geometry._state.normalsBuf ? \"n\" : \"\",\n        mesh._geometry._state.compressGeometry ? \"cp\" : \"\",\n        mesh._state.hash\n    ].join(\";\");\n    let renderer = xrayFillRenderers[hash];\n    if (!renderer) {\n        renderer = new EmphasisFillRenderer(hash, mesh);\n        xrayFillRenderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nEmphasisFillRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        ids.removeItem(this.id);\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete xrayFillRenderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nEmphasisFillRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nEmphasisFillRenderer.prototype.drawMesh = function (frameCtx, mesh, mode) {\n\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n\n    const scene = this._scene;\n    const camera = scene.camera;\n    const gl = scene.canvas.gl;\n    const materialState = mode === 0 ? mesh._xrayMaterial._state : (mode === 1 ? mesh._highlightMaterial._state : mesh._selectedMaterial._state);\n    const meshState = mesh._state;\n    const geometryState = mesh._geometry._state;\n    const rtcCenter = mesh.rtcCenter;\n\n    if (frameCtx.lastProgramId !== this._program.id) {\n        frameCtx.lastProgramId = this._program.id;\n        this._bindProgram(frameCtx);\n    }\n\n    gl.uniformMatrix4fv(this._uViewMatrix, false, rtcCenter ? frameCtx.getRTCViewMatrix(meshState.rtcCenterHash, rtcCenter) : camera.viewMatrix);\n    gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.viewNormalMatrix);\n\n    if (meshState.clippable) {\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const renderFlags = mesh.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    gl.uniform3fv(sectionPlaneUniforms.pos, rtcCenter ? getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a) : sectionPlane.pos);\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n    }\n\n    if (materialState.id !== this._lastMaterialId) {\n        const fillColor = materialState.fillColor;\n        const backfaces = materialState.backfaces;\n        if (frameCtx.backfaces !== backfaces) {\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n        gl.uniform4f(this._uFillColor, fillColor[0], fillColor[1], fillColor[2], materialState.fillAlpha);\n        this._lastMaterialId = materialState.id;\n    }\n\n    gl.uniformMatrix4fv(this._uModelMatrix, gl.FALSE, mesh.worldMatrix);\n    if (this._uModelNormalMatrix) {\n        gl.uniformMatrix4fv(this._uModelNormalMatrix, gl.FALSE, mesh.worldNormalMatrix);\n    }\n\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, meshState.clippable);\n    }\n\n    gl.uniform3fv(this._uOffset, meshState.offset);\n\n    // Bind VBOs\n    if (geometryState.id !== this._lastGeometryId) {\n        if (this._uPositionsDecodeMatrix) {\n            gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n        }\n        if (this._uUVDecodeMatrix) {\n            gl.uniformMatrix3fv(this._uUVDecodeMatrix, false, geometryState.uvDecodeMatrix);\n        }\n        if (this._aPosition) {\n            this._aPosition.bindArrayBuffer(geometryState.positionsBuf);\n            frameCtx.bindArray++;\n        }\n        if (this._aNormal) {\n            this._aNormal.bindArrayBuffer(geometryState.normalsBuf);\n            frameCtx.bindArray++;\n        }\n        if (geometryState.indicesBuf) {\n            geometryState.indicesBuf.bind();\n            frameCtx.bindArray++;\n            // gl.drawElements(geometryState.primitive, geometryState.indicesBuf.numItems, geometryState.indicesBuf.itemType, 0);\n            // frameCtx.drawElements++;\n        } else if (geometryState.positionsBuf) {\n            // gl.drawArrays(gl.TRIANGLES, 0, geometryState.positions.numItems);\n            //  frameCtx.drawArrays++;\n        }\n        this._lastGeometryId = geometryState.id;\n    }\n\n    if (geometryState.indicesBuf) {\n        gl.drawElements(geometryState.primitive, geometryState.indicesBuf.numItems, geometryState.indicesBuf.itemType, 0);\n        frameCtx.drawElements++;\n    } else if (geometryState.positionsBuf) {\n        gl.drawArrays(gl.TRIANGLES, 0, geometryState.positionsBuf.numItems);\n        frameCtx.drawArrays++;\n    }\n};\n\nEmphasisFillRenderer.prototype._allocate = function (mesh) {\n    const scene = mesh.scene;\n    const lightsState = scene._lightsState;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const gl = scene.canvas.gl;\n    this._program = new Program(gl, this._shaderSource);\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n    const program = this._program;\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uModelNormalMatrix = program.getLocation(\"modelNormalMatrix\");\n    this._uViewMatrix = program.getLocation(\"viewMatrix\");\n    this._uViewNormalMatrix = program.getLocation(\"viewNormalMatrix\");\n    this._uProjMatrix = program.getLocation(\"projMatrix\");\n    this._uLightAmbient = [];\n    this._uLightColor = [];\n    this._uLightDir = [];\n    this._uLightPos = [];\n    this._uLightAttenuation = [];\n    for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n        const light = lightsState.lights[i];\n        switch (light.type) {\n            case \"ambient\":\n                this._uLightAmbient[i] = program.getLocation(\"lightAmbient\");\n                break;\n            case \"dir\":\n                this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                this._uLightPos[i] = null;\n                this._uLightDir[i] = program.getLocation(\"lightDir\" + i);\n                break;\n            case \"point\":\n                this._uLightColor[i] = program.getLocation(\"lightColor\" + i);\n                this._uLightPos[i] = program.getLocation(\"lightPos\" + i);\n                this._uLightDir[i] = null;\n                this._uLightAttenuation[i] = program.getLocation(\"lightAttenuation\" + i);\n                break;\n        }\n    }\n    this._uSectionPlanes = [];\n    for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n    this._uFillColor = program.getLocation(\"fillColor\");\n    this._aPosition = program.getAttribute(\"position\");\n    this._aNormal = program.getAttribute(\"normal\");\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uGammaFactor = program.getLocation(\"gammaFactor\");\n    this._uOffset = program.getLocation(\"offset\");\n    if (scene.logarithmicDepthBufferEnabled ) {\n        this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n    }\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n};\n\nEmphasisFillRenderer.prototype._bindProgram = function (frameCtx) {\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const lightsState = scene._lightsState;\n    const camera = scene.camera;\n    const project = camera.project;\n    const program = this._program;\n    program.bind();\n    frameCtx.useProgram++;\n    frameCtx.textureUnit = 0;\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n    this._lastIndicesBufId = null;\n    gl.uniformMatrix4fv(this._uViewNormalMatrix, false, camera.normalMatrix);\n    gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n    if (scene.logarithmicDepthBufferEnabled ) {\n        const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n        gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n    }\n    for (let i = 0, len = lightsState.lights.length; i < len; i++) {\n        const light = lightsState.lights[i];\n        if (this._uLightAmbient[i]) {\n            gl.uniform4f(this._uLightAmbient[i], light.color[0], light.color[1], light.color[2], light.intensity);\n        } else {\n            if (this._uLightColor[i]) {\n                gl.uniform4f(this._uLightColor[i], light.color[0], light.color[1], light.color[2], light.intensity);\n            }\n            if (this._uLightPos[i]) {\n                gl.uniform3fv(this._uLightPos[i], light.pos);\n                if (this._uLightAttenuation[i]) {\n                    gl.uniform1f(this._uLightAttenuation[i], light.attenuation);\n                }\n            }\n            if (this._uLightDir[i]) {\n                gl.uniform3fv(this._uLightDir[i], light.dir);\n            }\n        }\n    }\n    if (this._uGammaFactor) {\n        gl.uniform1f(this._uGammaFactor, scene.gammaFactor);\n    }\n};\n\nexport {EmphasisFillRenderer};\n","import {WEBGL_INFO} from \"../../webglInfo.js\";\n\n/**\n * @private\n */\nclass EmphasisEdgesShaderSource {\n    constructor(mesh) {\n        this.vertex = buildVertex(mesh);\n        this.fragment = buildFragment(mesh);\n    }\n}\n\nfunction buildVertex(mesh) {\n    const scene = mesh.scene;\n    const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!mesh._geometry._state.compressGeometry;\n    const billboard = mesh._state.billboard;\n    const stationary = mesh._state.stationary;\n    const src = [];\n    src.push(\"// Edges drawing vertex shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute vec3 position;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 viewMatrix;\");\n    src.push(\"uniform mat4 projMatrix;\");\n    src.push(\"uniform vec4 edgeColor;\");\n    src.push(\"uniform vec3 offset;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"varying float vFragDepth;\");\n        }\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    src.push(\"varying vec4 vColor;\");\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"void billboard(inout mat4 mat) {\");\n        src.push(\"   mat[0][0] = 1.0;\");\n        src.push(\"   mat[0][1] = 0.0;\");\n        src.push(\"   mat[0][2] = 0.0;\");\n        if (billboard === \"spherical\") {\n            src.push(\"   mat[1][0] = 0.0;\");\n            src.push(\"   mat[1][1] = 1.0;\");\n            src.push(\"   mat[1][2] = 0.0;\");\n        }\n        src.push(\"   mat[2][0] = 0.0;\");\n        src.push(\"   mat[2][1] = 0.0;\");\n        src.push(\"   mat[2][2] =1.0;\");\n        src.push(\"}\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    src.push(\"vec4 worldPosition;\");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    src.push(\"mat4 viewMatrix2 = viewMatrix;\");\n    src.push(\"mat4 modelMatrix2 = modelMatrix;\");\n    if (stationary) {\n        src.push(\"viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;\")\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;\");\n        src.push(\"billboard(modelMatrix2);\");\n        src.push(\"billboard(viewMatrix2);\");\n        src.push(\"billboard(modelViewMatrix);\");\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition = modelViewMatrix * localPosition;\");\n    } else {\n        src.push(\"worldPosition = modelMatrix2 * localPosition;\");\n        src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n        src.push(\"vec4 viewPosition  = viewMatrix2 * worldPosition; \");\n    }\n    src.push(\"vColor = edgeColor;\");\n    if (clipping) {\n        src.push(\"vWorldPosition = worldPosition;\");\n    }\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n        } else {\n            src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n            src.push(\"clipPos.z *= clipPos.w;\");\n        }\n    }\n    src.push(\"gl_Position = clipPos;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragment(mesh) {\n\n    const scene = mesh.scene;\n    const sectionPlanesState = mesh.scene._sectionPlanesState;\n    const gammaOutput = mesh.scene.gammaOutput;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const src = [];\n\n    src.push(\"// Edges drawing fragment shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n    if (gammaOutput) {\n        src.push(\"uniform float gammaFactor;\");\n        src.push(\"vec4 linearToGamma( in vec4 value, in float gammaFactor ) {\");\n        src.push(\"  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\");\n        src.push(\"}\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n        src.push(\"uniform bool clippable;\");\n        for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n    src.push(\"varying vec4 vColor;\");\n    src.push(\"void main(void) {\");\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        src.push(\"}\");\n    }\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n    if (gammaOutput) {\n        src.push(\"gl_FragColor = linearToGamma(vColor, gammaFactor);\");\n    } else {\n        src.push(\"gl_FragColor = vColor;\");\n    }\n    src.push(\"}\");\n    return src;\n}\n\nexport {EmphasisEdgesShaderSource};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {Map} from \"../../utils/Map.js\";\nimport {EmphasisEdgesShaderSource} from \"./EmphasisEdgesShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from '../../stats.js';\nimport {math} from \"../../math/math.js\";\nimport {getPlaneRTCPos} from \"../../math/rtcCoords.js\";\n\nconst ids = new Map({});\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nconst EmphasisEdgesRenderer = function (hash, mesh) {\n    this.id = ids.addItem({});\n    this._hash = hash;\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._shaderSource = new EmphasisEdgesShaderSource(mesh);\n    this._allocate(mesh);\n};\n\nconst renderers = {};\n\nEmphasisEdgesRenderer.get = function (mesh) {\n    const hash = [\n        mesh.scene.id,\n        mesh.scene.gammaOutput ? \"go\" : \"\", // Gamma input not needed\n        mesh.scene._sectionPlanesState.getHash(),\n        mesh._geometry._state.compressGeometry ? \"cp\" : \"\",\n        mesh._state.hash\n    ].join(\";\");\n    let renderer = renderers[hash];\n    if (!renderer) {\n        renderer = new EmphasisEdgesRenderer(hash, mesh);\n        renderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nEmphasisEdgesRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        ids.removeItem(this.id);\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete renderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nEmphasisEdgesRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nEmphasisEdgesRenderer.prototype.drawMesh = function (frameCtx, mesh, mode) {\n\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n\n    const scene = this._scene;\n    const camera = scene.camera;\n    const gl = scene.canvas.gl;\n    let materialState;\n    const meshState = mesh._state;\n    const geometry = mesh._geometry;\n    const geometryState = geometry._state;\n    const rtcCenter = mesh.rtcCenter;\n\n    if (frameCtx.lastProgramId !== this._program.id) {\n        frameCtx.lastProgramId = this._program.id;\n        this._bindProgram(frameCtx);\n    }\n\n    gl.uniformMatrix4fv(this._uViewMatrix, false, rtcCenter ? frameCtx.getRTCViewMatrix(meshState.rtcCenterHash, rtcCenter) : camera.viewMatrix);\n\n    if (meshState.clippable) {\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const renderFlags = mesh.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    gl.uniform3fv(sectionPlaneUniforms.pos, rtcCenter ? getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a) : sectionPlane.pos);\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n    }\n\n    switch (mode) {\n        case 0:\n            materialState = mesh._xrayMaterial._state;\n            break;\n        case 1:\n            materialState = mesh._highlightMaterial._state;\n            break;\n        case 2:\n            materialState = mesh._selectedMaterial._state;\n            break;\n        case 3:\n        default:\n            materialState = mesh._edgeMaterial._state;\n            break;\n    }\n\n    if (materialState.id !== this._lastMaterialId) {\n        const backfaces = materialState.backfaces;\n        if (frameCtx.backfaces !== backfaces) {\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n        if (frameCtx.lineWidth !== materialState.edgeWidth) {\n            gl.lineWidth(materialState.edgeWidth);\n            frameCtx.lineWidth = materialState.edgeWidth;\n        }\n        if (this._uEdgeColor) {\n            const edgeColor = materialState.edgeColor;\n            const edgeAlpha = materialState.edgeAlpha;\n            gl.uniform4f(this._uEdgeColor, edgeColor[0], edgeColor[1], edgeColor[2], edgeAlpha);\n        }\n        this._lastMaterialId = materialState.id;\n    }\n\n    gl.uniformMatrix4fv(this._uModelMatrix, gl.FALSE, mesh.worldMatrix);\n\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, meshState.clippable);\n    }\n\n    gl.uniform3fv(this._uOffset, meshState.offset);\n\n    // Bind VBOs\n    let indicesBuf;\n    if (geometryState.primitive === gl.TRIANGLES) {\n        indicesBuf = geometry._getEdgeIndices();\n    } else if (geometryState.primitive === gl.LINES) {\n        indicesBuf = geometryState.indicesBuf;\n    }\n\n    if (indicesBuf) {\n        if (geometryState.id !== this._lastGeometryId) {\n            if (this._uPositionsDecodeMatrix) {\n                gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n            }\n            if (this._aPosition) {\n                this._aPosition.bindArrayBuffer(geometryState.positionsBuf, geometryState.compressGeometry ? gl.UNSIGNED_SHORT : gl.FLOAT);\n                frameCtx.bindArray++;\n            }\n            indicesBuf.bind();\n            frameCtx.bindArray++;\n            this._lastGeometryId = geometryState.id;\n        }\n\n        gl.drawElements(gl.LINES, indicesBuf.numItems, indicesBuf.itemType, 0);\n\n        frameCtx.drawElements++;\n    }\n};\n\nEmphasisEdgesRenderer.prototype._allocate = function (mesh) {\n\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    const sectionPlanesState = scene._sectionPlanesState;\n\n    this._program = new Program(gl, this._shaderSource);\n\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n\n    const program = this._program;\n\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uViewMatrix = program.getLocation(\"viewMatrix\");\n    this._uProjMatrix = program.getLocation(\"projMatrix\");\n    this._uSectionPlanes = [];\n    for (let i = 0, len = sectionPlanesState.sectionPlanes.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n    this._uEdgeColor = program.getLocation(\"edgeColor\");\n    this._aPosition = program.getAttribute(\"position\");\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uGammaFactor = program.getLocation(\"gammaFactor\");\n    this._uOffset = program.getLocation(\"offset\");\n\n    if (scene.logarithmicDepthBufferEnabled ) {\n        this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n    }\n\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n};\n\nEmphasisEdgesRenderer.prototype._bindProgram = function (frameCtx) {\n\n    const program = this._program;\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const camera = scene.camera;\n    const project = camera.project;\n\n    program.bind();\n\n    frameCtx.useProgram++;\n\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n\n    gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n\n    if (scene.logarithmicDepthBufferEnabled ) {\n        const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n        gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n    }\n\n    if (this._uGammaFactor) {\n        gl.uniform1f(this._uGammaFactor, scene.gammaFactor);\n    }\n};\n\nexport {EmphasisEdgesRenderer};\n","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\n/**\n * @private\n */\nclass PickMeshShaderSource {\n    constructor(mesh) {\n        this.vertex = buildVertex(mesh);\n        this.fragment = buildFragment(mesh);\n    }\n}\n\nfunction buildVertex(mesh) {\n    const scene = mesh.scene;\n    const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!mesh._geometry._state.compressGeometry;\n    const billboard = mesh._state.billboard;\n    const stationary = mesh._state.stationary;\n    const src = [];\n    src.push(\"// Mesh picking vertex shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute vec3 position;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 viewMatrix;\");\n    src.push(\"uniform mat4 projMatrix;\");\n    src.push(\"varying vec4 vViewPosition;\");\n    src.push(\"uniform vec3 offset;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"varying float vFragDepth;\");\n        }\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"void billboard(inout mat4 mat) {\");\n        src.push(\"   mat[0][0] = 1.0;\");\n        src.push(\"   mat[0][1] = 0.0;\");\n        src.push(\"   mat[0][2] = 0.0;\");\n        if (billboard === \"spherical\") {\n            src.push(\"   mat[1][0] = 0.0;\");\n            src.push(\"   mat[1][1] = 1.0;\");\n            src.push(\"   mat[1][2] = 0.0;\");\n        }\n        src.push(\"   mat[2][0] = 0.0;\");\n        src.push(\"   mat[2][1] = 0.0;\");\n        src.push(\"   mat[2][2] =1.0;\");\n        src.push(\"}\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    src.push(\"mat4 viewMatrix2 = viewMatrix;\");\n    src.push(\"mat4 modelMatrix2 = modelMatrix;\");\n    if (stationary) {\n        src.push(\"viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;\")\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;\");\n        src.push(\"billboard(modelMatrix2);\");\n        src.push(\"billboard(viewMatrix2);\");\n    }\n    src.push(\"   vec4 worldPosition = modelMatrix2 * localPosition;\");\n    src.push(\"   worldPosition.xyz = worldPosition.xyz + offset;\");\n    src.push(\"   vec4 viewPosition = viewMatrix2 * worldPosition;\");\n    if (clipping) {\n        src.push(\"   vWorldPosition = worldPosition;\");\n    }\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n        } else {\n            src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n            src.push(\"clipPos.z *= clipPos.w;\");\n        }\n    }\n    src.push(\"gl_Position = clipPos;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragment(mesh) {\n    const scene = mesh.scene;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const src = [];\n    src.push(\"// Mesh picking fragment shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n    src.push(\"uniform vec4 pickColor;\");\n    if (clipping) {\n        src.push(\"uniform bool clippable;\");\n        src.push(\"varying vec4 vWorldPosition;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n    src.push(\"void main(void) {\");\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        src.push(\"}\");\n    }\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n    src.push(\"   gl_FragColor = pickColor; \");\n    src.push(\"}\");\n    return src;\n}\n\nexport {PickMeshShaderSource};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {PickMeshShaderSource} from \"./PickMeshShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from \"../../stats.js\";\nimport {math} from \"../../math/math.js\";\nimport {getPlaneRTCPos} from \"../../math/rtcCoords.js\";\n\nconst tempVec3a = math.vec3();\n\n// No ID, because there is exactly one PickMeshRenderer per scene\n\n/**\n * @private\n */\nconst PickMeshRenderer = function (hash, mesh) {\n    this._hash = hash;\n    this._shaderSource = new PickMeshShaderSource(mesh);\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._allocate(mesh);\n};\n\nconst renderers = {};\n\nPickMeshRenderer.get = function (mesh) {\n    const hash = [\n        mesh.scene.canvas.canvas.id,\n        mesh.scene._sectionPlanesState.getHash(),\n        mesh._geometry._state.hash,\n        mesh._state.hash\n    ].join(\";\");\n    let renderer = renderers[hash];\n    if (!renderer) {\n        renderer = new PickMeshRenderer(hash, mesh);\n        if (renderer.errors) {\n            console.log(renderer.errors.join(\"\\n\"));\n            return null;\n        }\n        renderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nPickMeshRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete renderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nPickMeshRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nPickMeshRenderer.prototype.drawMesh = function (frameCtx, mesh) {\n\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const meshState = mesh._state;\n    const materialState = mesh._material._state;\n    const geometryState = mesh._geometry._state;\n    const rtcCenter = mesh.rtcCenter;\n\n    if (frameCtx.lastProgramId !== this._program.id) {\n        frameCtx.lastProgramId = this._program.id;\n        this._bindProgram(frameCtx);\n    }\n\n    gl.uniformMatrix4fv(this._uViewMatrix, false, rtcCenter ? frameCtx.getRTCPickViewMatrix(meshState.rtcCenterHash, rtcCenter) : frameCtx.pickViewMatrix);\n\n    if (meshState.clippable) {\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const renderFlags = mesh.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    gl.uniform3fv(sectionPlaneUniforms.pos, rtcCenter ? getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a) : sectionPlane.pos);\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n    }\n\n    if (materialState.id !== this._lastMaterialId) {\n        const backfaces = materialState.backfaces;\n        if (frameCtx.backfaces !== backfaces) {\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n        const frontface = materialState.frontface;\n        if (frameCtx.frontface !== frontface) {\n            if (frontface) {\n                gl.frontFace(gl.CCW);\n            } else {\n                gl.frontFace(gl.CW);\n            }\n            frameCtx.frontface = frontface;\n        }\n        this._lastMaterialId = materialState.id;\n    }\n\n    gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n    gl.uniformMatrix4fv(this._uModelMatrix, false, mesh.worldMatrix);\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, mesh._state.clippable);\n    }\n    gl.uniform3fv(this._uOffset, mesh._state.offset);\n\n    if (geometryState.id !== this._lastGeometryId) {\n        if (this._uPositionsDecodeMatrix) {\n            gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n        }\n        if (this._aPosition) {\n            this._aPosition.bindArrayBuffer(geometryState.positionsBuf, geometryState.compressGeometry ? gl.UNSIGNED_SHORT : gl.FLOAT);\n            frameCtx.bindArray++;\n        }\n        if (geometryState.indicesBuf) {\n            geometryState.indicesBuf.bind();\n            frameCtx.bindArray++;\n        }\n        this._lastGeometryId = geometryState.id;\n    }\n\n    // Mesh-indexed color\n    var pickID = mesh._state.pickID;\n    const a = pickID >> 24 & 0xFF;\n    const b = pickID >> 16 & 0xFF;\n    const g = pickID >> 8 & 0xFF;\n    const r = pickID & 0xFF;\n    gl.uniform4f(this._uPickColor, r / 255, g / 255, b / 255, a / 255);\n\n    if (geometryState.indicesBuf) {\n        gl.drawElements(geometryState.primitive, geometryState.indicesBuf.numItems, geometryState.indicesBuf.itemType, 0);\n        frameCtx.drawElements++;\n    } else if (geometryState.positions) {\n        gl.drawArrays(gl.TRIANGLES, 0, geometryState.positions.numItems);\n    }\n};\n\nPickMeshRenderer.prototype._allocate = function (mesh) {\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    this._program = new Program(gl, this._shaderSource);\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n    const program = this._program;\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uViewMatrix = program.getLocation(\"viewMatrix\");\n    this._uProjMatrix = program.getLocation(\"projMatrix\");\n    this._uSectionPlanes = [];\n    const clips = scene._sectionPlanesState.sectionPlanes;\n    for (let i = 0, len = clips.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n    this._aPosition = program.getAttribute(\"position\");\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uPickColor = program.getLocation(\"pickColor\");\n    this._uOffset = program.getLocation(\"offset\");\n    if (scene.logarithmicDepthBufferEnabled ) {\n        this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n    }\n    this._lastMaterialId = null;\n    this._lastGeometryId = null;\n};\n\nPickMeshRenderer.prototype._bindProgram = function (frameCtx) {\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const project = scene.camera.project;\n    this._program.bind();\n    frameCtx.useProgram++;\n    if (scene.logarithmicDepthBufferEnabled ) {\n        const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n        gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n    }\n    this._lastMaterialId = null;\n    this._lastGeometryId = null;\n};\n\nexport {PickMeshRenderer};\n","/**\n * @private\n */\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\nclass PickTriangleShaderSource {\n    constructor(mesh) {\n        this.vertex = buildVertex(mesh);\n        this.fragment = buildFragment(mesh);\n    }\n}\n\nfunction buildVertex(mesh) {\n    const scene = mesh.scene;\n    const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!mesh._geometry._state.compressGeometry;\n    const billboard = mesh._state.billboard;\n    const stationary = mesh._state.stationary;\n    const src = [];\n    src.push(\"// Surface picking vertex shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute vec3 position;\");\n    src.push(\"attribute vec4 color;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 viewMatrix;\");\n    src.push(\"uniform mat4 projMatrix;\");\n    src.push(\"uniform vec3 offset;\");\n    if (clipping) {\n        src.push(\"uniform bool clippable;\");\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"varying float vFragDepth;\");\n        }\n    }\n    src.push(\"varying vec4 vColor;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    src.push(\"   vec4 worldPosition = modelMatrix * localPosition; \");\n    src.push(\"   worldPosition.xyz = worldPosition.xyz + offset;\");\n    src.push(\"   vec4 viewPosition = viewMatrix * worldPosition;\");\n    if (clipping) {\n        src.push(\"   vWorldPosition = worldPosition;\");\n    }\n    src.push(\"   vColor = color;\");\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n        } else {\n            src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n            src.push(\"clipPos.z *= clipPos.w;\");\n        }\n    }\n    src.push(\"gl_Position = clipPos;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragment(mesh) {\n    const scene = mesh.scene;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const src = [];\n    src.push(\"// Surface picking fragment shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n    src.push(\"varying vec4 vColor;\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n    if (clipping) {\n        src.push(\"uniform bool clippable;\");\n        src.push(\"varying vec4 vWorldPosition;\");\n        for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n    src.push(\"void main(void) {\");\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (let i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        src.push(\"}\");\n    }\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n    src.push(\"   gl_FragColor = vColor;\");\n    src.push(\"}\");\n    return src;\n}\n\nexport {PickTriangleShaderSource};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {PickTriangleShaderSource} from \"./PickTriangleShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from \"../../stats.js\";\nimport {getPlaneRTCPos} from \"../../math/rtcCoords.js\";\nimport {math} from \"../../math/math.js\";\n\nconst tempVec3a = math.vec3();\n\n/**\n * @private\n */\nconst PickTriangleRenderer = function (hash, mesh) {\n    this._hash = hash;\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._shaderSource = new PickTriangleShaderSource(mesh);\n    this._allocate(mesh);\n};\n\nconst renderers = {};\n\nPickTriangleRenderer.get = function (mesh) {\n    const hash = [\n        mesh.scene.canvas.canvas.id,\n        mesh.scene._sectionPlanesState.getHash(),\n        mesh._geometry._state.compressGeometry ? \"cp\" : \"\",\n        mesh._state.hash\n    ].join(\";\");\n    let renderer = renderers[hash];\n    if (!renderer) {\n        renderer = new PickTriangleRenderer(hash, mesh);\n        if (renderer.errors) {\n            console.log(renderer.errors.join(\"\\n\"));\n            return null;\n        }\n        renderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nPickTriangleRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete renderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nPickTriangleRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nPickTriangleRenderer.prototype.drawMesh = function (frameCtx, mesh) {\n\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const meshState = mesh._state;\n    const materialState = mesh._material._state;\n    const geometry = mesh._geometry;\n    const geometryState = mesh._geometry._state;\n    const rtcCenter = mesh.rtcCenter;\n    const backfaces = materialState.backfaces;\n    const frontface = materialState.frontface;\n    const project = scene.camera.project;\n    const positionsBuf = geometry._getPickTrianglePositions();\n    const pickColorsBuf = geometry._getPickTriangleColors();\n\n    this._program.bind();\n\n    frameCtx.useProgram++;\n\n    if (scene.logarithmicDepthBufferEnabled ) {\n        const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n        gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n    }\n\n    gl.uniformMatrix4fv(this._uViewMatrix, false, rtcCenter ? frameCtx.getRTCPickViewMatrix(meshState.rtcCenterHash, rtcCenter) : frameCtx.pickViewMatrix);\n\n    if (meshState.clippable) {\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const renderFlags = mesh.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    gl.uniform3fv(sectionPlaneUniforms.pos, rtcCenter ? getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a) : sectionPlane.pos);\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n    }\n\n    gl.uniformMatrix4fv(this._uProjMatrix, false, frameCtx.pickProjMatrix);\n\n    if (scene.logarithmicDepthBufferEnabled) {\n        gl.uniform1f(this._uZFar, scene.camera.project.far);\n    }\n\n    if (frameCtx.backfaces !== backfaces) {\n        if (backfaces) {\n            gl.disable(gl.CULL_FACE);\n        } else {\n            gl.enable(gl.CULL_FACE);\n        }\n        frameCtx.backfaces = backfaces;\n    }\n    if (frameCtx.frontface !== frontface) {\n        if (frontface) {\n            gl.frontFace(gl.CCW);\n        } else {\n            gl.frontFace(gl.CW);\n        }\n        frameCtx.frontface = frontface;\n    }\n\n    gl.uniformMatrix4fv(this._uModelMatrix, false, mesh.worldMatrix);\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, mesh._state.clippable);\n    }\n    gl.uniform3fv(this._uOffset, mesh._state.offset);\n    if (this._uPositionsDecodeMatrix) {\n        gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n        this._aPosition.bindArrayBuffer(positionsBuf, geometryState.compressGeometry ? gl.UNSIGNED_SHORT : gl.FLOAT);\n    } else {\n        this._aPosition.bindArrayBuffer(positionsBuf);\n    }\n    pickColorsBuf.bind();\n    gl.enableVertexAttribArray(this._aColor.location);\n    gl.vertexAttribPointer(this._aColor.location, pickColorsBuf.itemSize, pickColorsBuf.itemType, true, 0, 0); // Normalize\n    gl.drawArrays(geometryState.primitive, 0, positionsBuf.numItems / 3);\n};\n\nPickTriangleRenderer.prototype._allocate = function (mesh) {\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    this._program = new Program(gl, this._shaderSource);\n    this._useCount = 0;\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n    const program = this._program;\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uViewMatrix = program.getLocation(\"viewMatrix\");\n    this._uProjMatrix = program.getLocation(\"projMatrix\");\n    this._uSectionPlanes = [];\n    const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n    for (let i = 0, len = sectionPlanes.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n    this._aPosition = program.getAttribute(\"position\");\n    this._aColor = program.getAttribute(\"color\");\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uOffset = program.getLocation(\"offset\");\n    if (scene.logarithmicDepthBufferEnabled ) {\n        this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n    }\n};\n\nexport {PickTriangleRenderer};\n\n\n\n","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {WEBGL_INFO} from \"../../webglInfo.js\";\n\n/**\n * @private\n */\nclass OcclusionShaderSource {\n    constructor(mesh) {\n        this.vertex = buildVertex(mesh);\n        this.fragment = buildFragment(mesh);\n    }\n}\n\nfunction buildVertex(mesh) {\n    const scene = mesh.scene;\n    const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!mesh._geometry._state.compressGeometry;\n    const billboard = mesh._state.billboard;\n    const stationary = mesh._state.stationary;\n    const src = [];\n    src.push(\"// Mesh occlusion vertex shader\");\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n    src.push(\"attribute vec3 position;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 viewMatrix;\");\n    src.push(\"uniform mat4 projMatrix;\");\n    src.push(\"uniform vec3 offset;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    if (scene.logarithmicDepthBufferEnabled) {\n        src.push(\"uniform float logDepthBufFC;\");\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"varying float vFragDepth;\");\n        }\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"void billboard(inout mat4 mat) {\");\n        src.push(\"   mat[0][0] = 1.0;\");\n        src.push(\"   mat[0][1] = 0.0;\");\n        src.push(\"   mat[0][2] = 0.0;\");\n        if (billboard === \"spherical\") {\n            src.push(\"   mat[1][0] = 0.0;\");\n            src.push(\"   mat[1][1] = 1.0;\");\n            src.push(\"   mat[1][2] = 0.0;\");\n        }\n        src.push(\"   mat[2][0] = 0.0;\");\n        src.push(\"   mat[2][1] = 0.0;\");\n        src.push(\"   mat[2][2] =1.0;\");\n        src.push(\"}\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    src.push(\"mat4 viewMatrix2 = viewMatrix;\");\n    src.push(\"mat4 modelMatrix2 = modelMatrix;\");\n    if (stationary) {\n        src.push(\"viewMatrix2[3][0] = viewMatrix2[3][1] = viewMatrix2[3][2] = 0.0;\")\n    }\n    if (billboard === \"spherical\" || billboard === \"cylindrical\") {\n        src.push(\"mat4 modelViewMatrix = viewMatrix2 * modelMatrix2;\");\n        src.push(\"billboard(modelMatrix2);\");\n        src.push(\"billboard(viewMatrix2);\");\n    }\n    src.push(\"   vec4 worldPosition = modelMatrix2 * localPosition;\");\n    src.push(\"   worldPosition.xyz = worldPosition.xyz + offset;\");\n    src.push(\"   vec4 viewPosition = viewMatrix2 * worldPosition;\");\n    if (clipping) {\n        src.push(\"   vWorldPosition = worldPosition;\");\n    }\n    src.push(\"vec4 clipPos = projMatrix * viewPosition;\");\n    if (scene.logarithmicDepthBufferEnabled) {\n        if (WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n            src.push(\"vFragDepth = 1.0 + clipPos.w;\");\n        } else {\n            src.push(\"clipPos.z = log2( max( 1e-6, clipPos.w + 1.0 ) ) * logDepthBufFC - 1.0;\");\n            src.push(\"clipPos.z *= clipPos.w;\");\n        }\n    }\n    src.push(\"gl_Position = clipPos;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragment(mesh) {\n\n    const scene = mesh.scene;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const src = [];\n\n    src.push(\"// Mesh occlusion fragment shader\");\n\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"#extension GL_EXT_frag_depth : enable\");\n    }\n\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"uniform float logDepthBufFC;\");\n        src.push(\"varying float vFragDepth;\");\n    }\n\n    if (clipping) {\n        src.push(\"uniform bool clippable;\");\n        src.push(\"varying vec4 vWorldPosition;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n\n    src.push(\"void main(void) {\");\n\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        src.push(\"}\");\n    }\n\n    src.push(\"   gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0); \");\n\n    if (scene.logarithmicDepthBufferEnabled && WEBGL_INFO.SUPPORTED_EXTENSIONS[\"EXT_frag_depth\"]) {\n        src.push(\"gl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\");\n    }\n\n    src.push(\"}\");\n\n    return src;\n}\n\nexport {OcclusionShaderSource};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\nimport {OcclusionShaderSource} from \"./OcclusionShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from \"../../stats.js\";\nimport {math} from \"../../math/math.js\";\nimport {getPlaneRTCPos} from \"../../math/rtcCoords.js\";\n\nconst tempVec3a = math.vec3();\n\n// No ID, because there is exactly one PickMeshRenderer per scene\n\n/**\n * @private\n */\nconst OcclusionRenderer = function (hash, mesh) {\n    this._hash = hash;\n    this._shaderSource = new OcclusionShaderSource(mesh);\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._allocate(mesh);\n};\n\nconst renderers = {};\n\nOcclusionRenderer.get = function (mesh) {\n    const hash = [\n        mesh.scene.canvas.canvas.id,\n        mesh.scene._sectionPlanesState.getHash(),\n        mesh._geometry._state.hash,\n        mesh._state.hash\n    ].join(\";\");\n    let renderer = renderers[hash];\n    if (!renderer) {\n        renderer = new OcclusionRenderer(hash, mesh);\n        if (renderer.errors) {\n            console.log(renderer.errors.join(\"\\n\"));\n            return null;\n        }\n        renderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nOcclusionRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete renderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nOcclusionRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nOcclusionRenderer.prototype.drawMesh = function (frameCtx, mesh) {\n\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const materialState = mesh._material._state;\n    const meshState = mesh._state;\n    const geometryState = mesh._geometry._state;\n    const rtcCenter = mesh.rtcCenter;\n\n    if (frameCtx.lastProgramId !== this._program.id) {\n        frameCtx.lastProgramId = this._program.id;\n        this._bindProgram(frameCtx);\n    }\n\n    if (materialState.id !== this._lastMaterialId) {\n        const backfaces = materialState.backfaces;\n        if (frameCtx.backfaces !== backfaces) {\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frameCtx.backfaces = backfaces;\n        }\n        const frontface = materialState.frontface;\n        if (frameCtx.frontface !== frontface) {\n            if (frontface) {\n                gl.frontFace(gl.CCW);\n            } else {\n                gl.frontFace(gl.CW);\n            }\n            frameCtx.frontface = frontface;\n        }\n        this._lastMaterialId = materialState.id;\n    }\n\n    const camera = scene.camera;\n\n    gl.uniformMatrix4fv(this._uViewMatrix, false, rtcCenter ? frameCtx.getRTCViewMatrix(meshState.rtcCenterHash, rtcCenter) : camera.viewMatrix);\n\n    if (meshState.clippable) {\n        const numSectionPlanes = scene._sectionPlanesState.sectionPlanes.length;\n        if (numSectionPlanes > 0) {\n            const sectionPlanes = scene._sectionPlanesState.sectionPlanes;\n            const renderFlags = mesh.renderFlags;\n            for (let sectionPlaneIndex = 0; sectionPlaneIndex < numSectionPlanes; sectionPlaneIndex++) {\n                const sectionPlaneUniforms = this._uSectionPlanes[sectionPlaneIndex];\n                const active = renderFlags.sectionPlanesActivePerLayer[sectionPlaneIndex];\n                gl.uniform1i(sectionPlaneUniforms.active, active ? 1 : 0);\n                if (active) {\n                    const sectionPlane = sectionPlanes[sectionPlaneIndex];\n                    gl.uniform3fv(sectionPlaneUniforms.pos, rtcCenter ? getPlaneRTCPos(sectionPlane.dist, sectionPlane.dir, rtcCenter, tempVec3a) : sectionPlane.pos);\n                    gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n                }\n            }\n        }\n    }\n\n    gl.uniformMatrix4fv(this._uProjMatrix, false, camera._project._state.matrix);\n    gl.uniformMatrix4fv(this._uModelMatrix, gl.FALSE, mesh.worldMatrix);\n\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, mesh._state.clippable);\n    }\n\n    gl.uniform3fv(this._uOffset, mesh._state.offset);\n\n    if (geometryState.id !== this._lastGeometryId) {\n        if (this._uPositionsDecodeMatrix) {\n            gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n        }\n        if (this._aPosition) {\n            this._aPosition.bindArrayBuffer(geometryState.positionsBuf, geometryState.compressGeometry ? gl.UNSIGNED_SHORT : gl.FLOAT);\n            frameCtx.bindArray++;\n        }\n        if (geometryState.indicesBuf) {\n            geometryState.indicesBuf.bind();\n            frameCtx.bindArray++;\n        }\n        this._lastGeometryId = geometryState.id;\n    }\n    if (geometryState.indicesBuf) {\n        gl.drawElements(geometryState.primitive, geometryState.indicesBuf.numItems, geometryState.indicesBuf.itemType, 0);\n        frameCtx.drawElements++;\n    } else if (geometryState.positions) {\n        gl.drawArrays(gl.TRIANGLES, 0, geometryState.positions.numItems);\n    }\n};\n\nOcclusionRenderer.prototype._allocate = function (mesh) {\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    this._program = new Program(gl, this._shaderSource);\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n    const program = this._program;\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uViewMatrix = program.getLocation(\"viewMatrix\");\n    this._uProjMatrix = program.getLocation(\"projMatrix\");\n    this._uSectionPlanes = [];\n    const clips = scene._sectionPlanesState.sectionPlanes;\n    for (let i = 0, len = clips.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n    this._aPosition = program.getAttribute(\"position\");\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uOffset = program.getLocation(\"offset\");\n    if (scene.logarithmicDepthBufferEnabled ) {\n        this._uLogDepthBufFC = program.getLocation(\"logDepthBufFC\");\n    }\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n};\n\nOcclusionRenderer.prototype._bindProgram = function (frameCtx) {\n    const scene = this._scene;\n    const project = scene.camera.project;\n    const gl = scene.canvas.gl;\n    this._program.bind();\n    frameCtx.useProgram++;\n    gl.uniformMatrix4fv(this._uProjMatrix, false, project.matrix);\n    if (scene.logarithmicDepthBufferEnabled ) {\n        const logDepthBufFC = 2.0 / (Math.log(project.far + 1.0) / Math.LN2);\n        gl.uniform1f(this._uLogDepthBufFC, logDepthBufFC);\n    }\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n};\n\nexport {OcclusionRenderer};\n","/**\n * @private\n */\nclass ShadowShaderSource {\n    constructor(mesh) {\n        this.vertex = buildVertex(mesh);\n        this.fragment = buildFragment(mesh);\n    }\n}\n\nfunction buildVertex(mesh) {\n    const scene = mesh.scene;\n    const clipping = scene._sectionPlanesState.sectionPlanes.length > 0;\n    const quantizedGeometry = !!mesh._geometry._state.compressGeometry;\n    const src = [];\n    src.push(\"// Mesh shadow vertex shader\");\n    src.push(\"attribute vec3 position;\");\n    src.push(\"uniform mat4 modelMatrix;\");\n    src.push(\"uniform mat4 shadowViewMatrix;\");\n    src.push(\"uniform mat4 shadowProjMatrix;\");\n    src.push(\"uniform vec3 offset;\");\n    if (quantizedGeometry) {\n        src.push(\"uniform mat4 positionsDecodeMatrix;\");\n    }\n    if (clipping) {\n        src.push(\"varying vec4 vWorldPosition;\");\n    }\n    src.push(\"void main(void) {\");\n    src.push(\"vec4 localPosition = vec4(position, 1.0); \");\n    src.push(\"vec4 worldPosition;\");\n    if (quantizedGeometry) {\n        src.push(\"localPosition = positionsDecodeMatrix * localPosition;\");\n    }\n    src.push(\"worldPosition = modelMatrix * localPosition;\");\n    src.push(\"worldPosition.xyz = worldPosition.xyz + offset;\");\n    src.push(\"vec4 viewPosition  = shadowViewMatrix * worldPosition; \");\n    if (clipping) {\n        src.push(\"vWorldPosition = worldPosition;\");\n    }\n    src.push(\"   gl_Position = shadowProjMatrix * viewPosition;\");\n    src.push(\"}\");\n    return src;\n}\n\nfunction buildFragment(mesh) {\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    const sectionPlanesState = scene._sectionPlanesState;\n    const clipping = sectionPlanesState.sectionPlanes.length > 0;\n    const src = [];\n    src.push(\"// Mesh shadow fragment shader\");\n\n    src.push(\"#ifdef GL_FRAGMENT_PRECISION_HIGH\");\n    src.push(\"precision highp float;\");\n    src.push(\"precision highp int;\");\n    src.push(\"#else\");\n    src.push(\"precision mediump float;\");\n    src.push(\"precision mediump int;\");\n    src.push(\"#endif\");\n\n    if (clipping) {\n        src.push(\"uniform bool clippable;\");\n        src.push(\"varying vec4 vWorldPosition;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"uniform bool sectionPlaneActive\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlanePos\" + i + \";\");\n            src.push(\"uniform vec3 sectionPlaneDir\" + i + \";\");\n        }\n    }\n\n    src.push(\"vec4 encodeFloat( const in float depth ) {\");\n    src.push(\"  const vec4 bitShift = vec4(256 * 256 * 256, 256 * 256, 256, 1.0);\");\n    src.push(\"  const vec4 bitMask = vec4(0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0);\");\n    src.push(\"  vec4 comp = fract(depth * bitShift);\");\n    src.push(\"  comp -= comp.xxyz * bitMask;\");\n    src.push(\"  return comp;\");\n    src.push(\"}\");\n\n    src.push(\"void main(void) {\");\n    if (clipping) {\n        src.push(\"if (clippable) {\");\n        src.push(\"  float dist = 0.0;\");\n        for (var i = 0; i < sectionPlanesState.sectionPlanes.length; i++) {\n            src.push(\"if (sectionPlaneActive\" + i + \") {\");\n            src.push(\"   dist += clamp(dot(-sectionPlaneDir\" + i + \".xyz, vWorldPosition.xyz - sectionPlanePos\" + i + \".xyz), 0.0, 1000.0);\");\n            src.push(\"}\");\n        }\n        src.push(\"  if (dist > 0.0) { discard; }\");\n        src.push(\"}\");\n    }\n    src.push(\"gl_FragColor = encodeFloat(gl_FragCoord.z);\");\n    src.push(\"}\");\n    return src;\n}\n\nexport {ShadowShaderSource};","import {ShadowShaderSource} from \"./ShadowShaderSource.js\";\nimport {Program} from \"../../webgl/Program.js\";\nimport {stats} from \"../../stats.js\";\n\n/**\n * @private\n */\nconst ShadowRenderer = function (hash, mesh) {\n    this._hash = hash;\n    this._shaderSource = new ShadowShaderSource(mesh);\n    this._scene = mesh.scene;\n    this._useCount = 0;\n    this._allocate(mesh);\n};\n\nconst renderers = {};\n\nShadowRenderer.get = function (mesh) {\n    const scene = mesh.scene;\n    const hash = [scene.canvas.canvas.id, scene._sectionPlanesState.getHash(), mesh._geometry._state.hash, mesh._state.hash].join(\";\");\n    let renderer = renderers[hash];\n    if (!renderer) {\n        renderer = new ShadowRenderer(hash, mesh);\n        if (renderer.errors) {\n            console.log(renderer.errors.join(\"\\n\"));\n            return null;\n        }\n        renderers[hash] = renderer;\n        stats.memory.programs++;\n    }\n    renderer._useCount++;\n    return renderer;\n};\n\nShadowRenderer.prototype.put = function () {\n    if (--this._useCount === 0) {\n        if (this._program) {\n            this._program.destroy();\n        }\n        delete renderers[this._hash];\n        stats.memory.programs--;\n    }\n};\n\nShadowRenderer.prototype.webglContextRestored = function () {\n    this._program = null;\n};\n\nShadowRenderer.prototype.drawMesh = function (frame, mesh) {\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const materialState = mesh._material._state;\n    const geometryState = mesh._geometry._state;\n    if (frame.lastProgramId !== this._program.id) {\n        frame.lastProgramId = this._program.id;\n        this._bindProgram(frame);\n    }\n    if (materialState.id !== this._lastMaterialId) {\n        const backfaces = materialState.backfaces;\n        if (frame.backfaces !== backfaces) {\n            if (backfaces) {\n                gl.disable(gl.CULL_FACE);\n            } else {\n                gl.enable(gl.CULL_FACE);\n            }\n            frame.backfaces = backfaces;\n        }\n        const frontface = materialState.frontface;\n        if (frame.frontface !== frontface) {\n            if (frontface) {\n                gl.frontFace(gl.CCW);\n            } else {\n                gl.frontFace(gl.CW);\n            }\n            frame.frontface = frontface;\n        }\n        if (frame.lineWidth !== materialState.lineWidth) {\n            gl.lineWidth(materialState.lineWidth);\n            frame.lineWidth = materialState.lineWidth;\n        }\n        if (this._uPointSize) {\n            gl.uniform1i(this._uPointSize, materialState.pointSize);\n        }\n        this._lastMaterialId = materialState.id;\n    }\n    gl.uniformMatrix4fv(this._uModelMatrix, gl.FALSE, mesh.worldMatrix);\n    if (geometryState.combineGeometry) {\n        const vertexBufs = mesh.vertexBufs;\n        if (vertexBufs.id !== this._lastVertexBufsId) {\n            if (vertexBufs.positionsBuf && this._aPosition) {\n                this._aPosition.bindArrayBuffer(vertexBufs.positionsBuf, vertexBufs.compressGeometry ? gl.UNSIGNED_SHORT : gl.FLOAT);\n                frame.bindArray++;\n            }\n            this._lastVertexBufsId = vertexBufs.id;\n        }\n    }\n    if (this._uClippable) {\n        gl.uniform1i(this._uClippable, mesh._state.clippable);\n    }\n    gl.uniform3fv(this._uOffset, mesh._state.offset);\n    if (geometryState.id !== this._lastGeometryId) {\n        if (this._uPositionsDecodeMatrix) {\n            gl.uniformMatrix4fv(this._uPositionsDecodeMatrix, false, geometryState.positionsDecodeMatrix);\n        }\n        if (geometryState.combineGeometry) { // VBOs were bound by the preceding VertexBufs chunk\n            if (geometryState.indicesBufCombined) {\n                geometryState.indicesBufCombined.bind();\n                frame.bindArray++;\n            }\n        } else {\n            if (this._aPosition) {\n                this._aPosition.bindArrayBuffer(geometryState.positionsBuf, geometryState.compressGeometry ? gl.UNSIGNED_SHORT : gl.FLOAT);\n                frame.bindArray++;\n            }\n            if (geometryState.indicesBuf) {\n                geometryState.indicesBuf.bind();\n                frame.bindArray++;\n            }\n        }\n        this._lastGeometryId = geometryState.id;\n    }\n    if (geometryState.combineGeometry) {\n        if (geometryState.indicesBufCombined) {\n            gl.drawElements(geometryState.primitive, geometryState.indicesBufCombined.numItems, geometryState.indicesBufCombined.itemType, 0);\n            frame.drawElements++;\n        } else {\n            // TODO: drawArrays() with VertexBufs positions\n        }\n    } else {\n        if (geometryState.indicesBuf) {\n            gl.drawElements(geometryState.primitive, geometryState.indicesBuf.numItems, geometryState.indicesBuf.itemType, 0);\n            frame.drawElements++;\n        } else if (geometryState.positions) {\n            gl.drawArrays(gl.TRIANGLES, 0, geometryState.positions.numItems);\n            frame.drawArrays++;\n        }\n    }\n};\n\nShadowRenderer.prototype._allocate = function (mesh) {\n    const scene = mesh.scene;\n    const gl = scene.canvas.gl;\n    this._program = new Program(gl, this._shaderSource);\n    this._scene = scene;\n    this._useCount = 0;\n    if (this._program.errors) {\n        this.errors = this._program.errors;\n        return;\n    }\n    const program = this._program;\n    this._uPositionsDecodeMatrix = program.getLocation(\"positionsDecodeMatrix\");\n    this._uModelMatrix = program.getLocation(\"modelMatrix\");\n    this._uShadowViewMatrix = program.getLocation(\"shadowViewMatrix\");\n    this._uShadowProjMatrix = program.getLocation(\"shadowProjMatrix\");\n    this._uSectionPlanes = {};\n    const clips = scene._sectionPlanesState.sectionPlanes;\n    for (let i = 0, len = clips.length; i < len; i++) {\n        this._uSectionPlanes.push({\n            active: program.getLocation(\"sectionPlaneActive\" + i),\n            pos: program.getLocation(\"sectionPlanePos\" + i),\n            dir: program.getLocation(\"sectionPlaneDir\" + i)\n        });\n    }\n    this._aPosition = program.getAttribute(\"position\");\n    this._uClippable = program.getLocation(\"clippable\");\n    this._uOffset = program.getLocation(\"offset\");\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n};\n\nShadowRenderer.prototype._bindProgram = function (frame) {\n    if (!this._program) {\n        this._allocate(mesh);\n    }\n    const scene = this._scene;\n    const gl = scene.canvas.gl;\n    const sectionPlanesState = scene._sectionPlanesState;\n    this._program.bind();\n    frame.useProgram++;\n    gl.uniformMatrix4fv(this._uShadowViewMatrix, false, frame.shadowViewMatrix);\n    gl.uniformMatrix4fv(this._uShadowProjMatrix, false, frame.shadowProjMatrix);\n    this._lastMaterialId = null;\n    this._lastVertexBufsId = null;\n    this._lastGeometryId = null;\n    if (sectionPlanesState.sectionPlanes.length > 0) {\n        let sectionPlaneUniforms;\n        let uSectionPlaneActive;\n        let sectionPlane;\n        let uSectionPlanePos;\n        let uSectionPlaneDir;\n        for (let i = 0, len = this._uSectionPlanes.length; i < len; i++) {\n            sectionPlaneUniforms = this._uSectionPlanes[i];\n            uSectionPlaneActive = sectionPlaneUniforms.active;\n            sectionPlane = sectionPlanesState.sectionPlanes[i];\n            if (uSectionPlaneActive) {\n                gl.uniform1i(uSectionPlaneActive, sectionPlane.active);\n            }\n            uSectionPlanePos = sectionPlaneUniforms.pos;\n            if (uSectionPlanePos) {\n                gl.uniform3fv(sectionPlaneUniforms.pos, sectionPlane.pos);\n            }\n            uSectionPlaneDir = sectionPlaneUniforms.dir;\n            if (uSectionPlaneDir) {\n                gl.uniform3fv(sectionPlaneUniforms.dir, sectionPlane.dir);\n            }\n        }\n    }\n};\n\nexport {ShadowRenderer};\n","/**\n Fired when this Mesh is picked via a call to {@link Scene/pick:method\"}}Scene#pick(){{/crossLink}}.\n\n The event parameters will be the hit result returned by the {@link Scene/pick:method\"}}Scene#pick(){{/crossLink}} method.\n @event picked\n */\nimport {math} from '../math/math.js';\nimport {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {DrawRenderer} from \"./draw/DrawRenderer.js\";\nimport {EmphasisFillRenderer} from \"./emphasis/EmphasisFillRenderer.js\";\nimport {EmphasisEdgesRenderer} from \"./emphasis/EmphasisEdgesRenderer.js\";\nimport {PickMeshRenderer} from \"./pick/PickMeshRenderer.js\";\nimport {PickTriangleRenderer} from \"./pick/PickTriangleRenderer.js\";\nimport {OcclusionRenderer} from \"./occlusion/OcclusionRenderer.js\";\nimport {ShadowRenderer} from \"./shadow/ShadowRenderer.js\";\n\nimport {geometryCompressionUtils} from '../math/geometryCompressionUtils.js';\nimport {RenderFlags} from \"../webgl/RenderFlags.js\";\n\nconst obb = math.OBB3();\nconst angleAxis = math.vec4();\nconst q1 = math.vec4();\nconst q2 = math.vec4();\nconst xAxis = math.vec3([1, 0, 0]);\nconst yAxis = math.vec3([0, 1, 0]);\nconst zAxis = math.vec3([0, 0, 1]);\n\nconst veca = math.vec3(3);\nconst vecb = math.vec3(3);\n\nconst identityMat = math.identityMat4();\n\n/**\n * @desc An {@link Entity} that is a drawable element, with a {@link Geometry} and a {@link Material}, that can be\n * connected into a scene graph using {@link Node}s.\n *\n * ## Usage\n *\n * The example below is the same as the one given for {@link Node}, since the two classes work together.  In this example,\n * we'll create a scene graph in which a root {@link Node} represents a group and the Meshes are leaves.\n *\n * Since {@link Node} implements {@link Entity}, we can designate the root {@link Node} as a model, causing it to be registered by its\n * ID in {@link Scene#models}.\n *\n * Since Mesh also implements {@link Entity}, we can designate the leaf Meshes as objects, causing them to\n * be registered by their IDs in {@link Scene#objects}.\n *\n * We can then find those {@link Entity} types in {@link Scene#models} and {@link Scene#objects}.\n *\n * We can also update properties of our object-Meshes via calls to {@link Scene#setObjectsHighlighted} etc.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#sceneRepresentation_SceneGraph)]\n *\n * ````javascript\n * import {Viewer, Mesh, Node, PhongMaterial, buildBoxGeometry, ReadableGeometry} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [-21.80, 4.01, 6.56];\n * viewer.scene.camera.look = [0, -5.75, 0];\n * viewer.scene.camera.up = [0.37, 0.91, -0.11];\n *\n * const boxGeometry = new ReadableGeometry(viewer.scene, buildBoxGeometry({\n *      xSize: 1,\n *      ySize: 1,\n *      zSize: 1\n * }));\n *\n * new Node(viewer.scene, {\n *      id: \"table\",\n *      isModel: true, // <---------- Node represents a model, so is registered by ID in viewer.scene.models\n *      rotation: [0, 50, 0],\n *      position: [0, 0, 0],\n *      scale: [1, 1, 1],\n *\n *      children: [\n *\n *          new Mesh(viewer.scene, { // Red table leg\n *              id: \"redLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [-4, -6, -4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [1, 0.3, 0.3]\n *              }),\n *              geometry: boxGeometry\n *          }),\n *\n *          new Mesh(viewer.scene, { // Green table leg\n *              id: \"greenLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [4, -6, -4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [0.3, 1.0, 0.3]\n *              }),\n *              geometry: boxGeometry\n *          }),\n *\n *          new Mesh(viewer.scene, {// Blue table leg\n *              id: \"blueLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [4, -6, 4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [0.3, 0.3, 1.0]\n *              }),\n *              geometry: boxGeometry\n *          }),\n *\n *          new Mesh(viewer.scene, {  // Yellow table leg\n *              id: \"yellowLeg\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [-4, -6, 4],\n *              scale: [1, 3, 1],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                   diffuse: [1.0, 1.0, 0.0]\n *              }),\n *              geometry: boxGeometry\n *          }),\n *\n *          new Mesh(viewer.scene, { // Purple table top\n *              id: \"tableTop\",\n *              isObject: true, // <------ Node represents an object, so is registered by ID in viewer.scene.objects\n *              position: [0, -3, 0],\n *              scale: [6, 0.5, 6],\n *              rotation: [0, 0, 0],\n *              material: new PhongMaterial(viewer.scene, {\n *                  diffuse: [1.0, 0.3, 1.0]\n *              }),\n *              geometry: boxGeometry\n *          })\n *      ]\n *  });\n *\n * // Find Nodes and Meshes by their IDs\n *\n * var table = viewer.scene.models[\"table\"];                // Since table Node has isModel == true\n *\n * var redLeg = viewer.scene.objects[\"redLeg\"];             // Since the Meshes have isObject == true\n * var greenLeg = viewer.scene.objects[\"greenLeg\"];\n * var blueLeg = viewer.scene.objects[\"blueLeg\"];\n *\n * // Highlight one of the table leg Meshes\n *\n * viewer.scene.setObjectsHighlighted([\"redLeg\"], true);    // Since the Meshes have isObject == true\n *\n * // Periodically update transforms on our Nodes and Meshes\n *\n * viewer.scene.on(\"tick\", function () {\n *\n *       // Rotate legs\n *       redLeg.rotateY(0.5);\n *       greenLeg.rotateY(0.5);\n *       blueLeg.rotateY(0.5);\n *\n *       // Rotate table\n *       table.rotateY(0.5);\n *       table.rotateX(0.3);\n *   });\n * ````\n *\n * ## Metadata\n *\n * As mentioned, we can also associate {@link MetaModel}s and {@link MetaObject}s with our {@link Node}s and Meshes,\n * within a {@link MetaScene}. See {@link MetaScene} for an example.\n *\n * @implements {Entity}\n * @implements {Drawable}\n */\nclass Mesh extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Mesh\";\n    }\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] Configs\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent scene, generated automatically when omitted.\n     * @param {String} [cfg.originalSystemId] ID of the corresponding object within the originating system, if any.\n     * @param {Boolean} [cfg.isModel] Specify ````true```` if this Mesh represents a model, in which case the Mesh will be registered by {@link Mesh#id} in {@link Scene#models} and may also have a corresponding {@link MetaModel} with matching {@link MetaModel#id}, registered by that ID in {@link MetaScene#metaModels}.\n     * @param {Boolean} [cfg.isObject] Specify ````true```` if this Mesh represents an object, in which case the Mesh will be registered by {@link Mesh#id} in {@link Scene#objects} and may also have a corresponding {@link MetaObject} with matching {@link MetaObject#id}, registered by that ID in {@link MetaScene#metaObjects}.\n     * @param {Node} [cfg.parent] The parent Node.\n     * @param {Number[]} [cfg.rtcCenter] Relative-to-center (RTC) coordinate system center for this Mesh. When this is given, then ````matrix````, ````position```` and ````geometry```` are all assumed to be relative to this center.\n     * @param {Number[]} [cfg.position=[0,0,0]] Local 3D position.\n     * @param {Number[]} [cfg.scale=[1,1,1]] Local scale.\n     * @param {Number[]} [cfg.rotation=[0,0,0]] Local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     * @param {Number[]} [cfg.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] Local modelling transform matrix. Overrides the position, scale and rotation parameters.\n     * @param {Number[]} [cfg.offset=[0,0,0]] World-space 3D translation offset. Translates the Mesh in World space, after modelling transforms.\n     * @param {Boolean} [cfg.visible=true] Indicates if the Mesh is initially visible.\n     * @param {Boolean} [cfg.culled=false] Indicates if the Mesh is initially culled from view.\n     * @param {Boolean} [cfg.pickable=true] Indicates if the Mesh is initially pickable.\n     * @param {Boolean} [cfg.clippable=true] Indicates if the Mesh is initially clippable.\n     * @param {Boolean} [cfg.collidable=true] Indicates if the Mesh is initially included in boundary calculations.\n     * @param {Boolean} [cfg.castsShadow=true] Indicates if the Mesh initially casts shadows.\n     * @param {Boolean} [cfg.receivesShadow=true]  Indicates if the Mesh initially receives shadows.\n     * @param {Boolean} [cfg.xrayed=false] Indicates if the Mesh is initially xrayed.\n     * @param {Boolean} [cfg.highlighted=false] Indicates if the Mesh is initially highlighted.\n     * @param {Boolean} [cfg.selected=false] Indicates if the Mesh is initially selected.\n     * @param {Boolean} [cfg.edges=false] Indicates if the Mesh's edges are initially emphasized.\n     * @param {Number[]} [cfg.colorize=[1.0,1.0,1.0]] Mesh's initial RGB colorize color, multiplies by the rendered fragment colors.\n     * @param {Number} [cfg.opacity=1.0] Mesh's initial opacity factor, multiplies by the rendered fragment alpha.\n     * @param {String} [cfg.billboard=\"none\"] Mesh's billboarding behaviour. Options are \"none\" for no billboarding, \"spherical\" to always directly face {@link Camera.eye}, rotating both vertically and horizontally, or \"cylindrical\" to face the {@link Camera#eye} while rotating only about its vertically axis (use that mode for things like trees on a landscape).\n     * @param {Geometry} [cfg.geometry] {@link Geometry} to define the shape of this Mesh. Inherits {@link Scene#geometry} by default.\n     * @param {Material} [cfg.material] {@link Material} to define the normal rendered appearance for this Mesh. Inherits {@link Scene#material} by default.\n     * @param {EmphasisMaterial} [cfg.xrayMaterial] {@link EmphasisMaterial} to define the xrayed appearance for this Mesh. Inherits {@link Scene#xrayMaterial} by default.\n     * @param {EmphasisMaterial} [cfg.highlightMaterial] {@link EmphasisMaterial} to define the xrayed appearance for this Mesh. Inherits {@link Scene#highlightMaterial} by default.\n     * @param {EmphasisMaterial} [cfg.selectedMaterial] {@link EmphasisMaterial} to define the selected appearance for this Mesh. Inherits {@link Scene#selectedMaterial} by default.\n     * @param {EmphasisMaterial} [cfg.edgeMaterial] {@link EdgeMaterial} to define the appearance of enhanced edges for this Mesh. Inherits {@link Scene#edgeMaterial} by default.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        /**\n         * ID of the corresponding object within the originating system, if any.\n         *\n         * @type {String}\n         * @abstract\n         */\n        this.originalSystemId = (cfg.originalSystemId || this.id);\n\n        /** @private **/\n        this.renderFlags = new RenderFlags();\n\n        this._state = new RenderState({ // NOTE: Renderer gets modeling and normal matrices from Mesh#matrix and Mesh.#normalWorldMatrix\n            visible: true,\n            culled: false,\n            pickable: null,\n            clippable: null,\n            collidable: null,\n            castsShadow: null,\n            receivesShadow: null,\n            xrayed: false,\n            highlighted: false,\n            selected: false,\n            edges: false,\n            stationary: !!cfg.stationary,\n            billboard: this._checkBillboard(cfg.billboard),\n            layer: null,\n            colorize: null,\n            pickID: this.scene._renderer.getPickID(this),\n            drawHash: \"\",\n            pickHash: \"\",\n            offset: math.vec3(),\n            rtcCenter: null,\n            rtcCenterHash: null\n        });\n\n        this._drawRenderer = null;\n        this._shadowRenderer = null;\n        this._emphasisFillRenderer = null;\n        this._emphasisEdgesRenderer = null;\n        this._pickMeshRenderer = null;\n        this._pickTriangleRenderer = null;\n        this._occlusionRenderer = null;\n\n        this._geometry = cfg.geometry ? this._checkComponent2([\"ReadableGeometry\", \"VBOGeometry\"], cfg.geometry) : this.scene.geometry;\n        this._material = cfg.material ? this._checkComponent2([\"PhongMaterial\", \"MetallicMaterial\", \"SpecularMaterial\", \"LambertMaterial\"], cfg.material) : this.scene.material;\n        this._xrayMaterial = cfg.xrayMaterial ? this._checkComponent(\"EmphasisMaterial\", cfg.xrayMaterial) : this.scene.xrayMaterial;\n        this._highlightMaterial = cfg.highlightMaterial ? this._checkComponent(\"EmphasisMaterial\", cfg.highlightMaterial) : this.scene.highlightMaterial;\n        this._selectedMaterial = cfg.selectedMaterial ? this._checkComponent(\"EmphasisMaterial\", cfg.selectedMaterial) : this.scene.selectedMaterial;\n        this._edgeMaterial = cfg.edgeMaterial ? this._checkComponent(\"EdgeMaterial\", cfg.edgeMaterial) : this.scene.edgeMaterial;\n\n        this._parentNode = null;\n\n        this._aabb = null;\n        this._aabbDirty = true;\n\n        this._numTriangles = (this._geometry ? this._geometry.numTriangles : 0);\n\n        this.scene._aabbDirty = true;\n\n        this._scale = math.vec3();\n        this._quaternion = math.identityQuaternion();\n        this._rotation = math.vec3();\n        this._position = math.vec3();\n\n        this._worldMatrix = math.identityMat4();\n        this._worldNormalMatrix = math.identityMat4();\n\n        this._localMatrixDirty = true;\n        this._worldMatrixDirty = true;\n        this._worldNormalMatrixDirty = true;\n\n        if (cfg.rtcCenter) {\n            this._state.rtcCenter = math.vec3(cfg.rtcCenter);\n            this._state.rtcCenterHash = cfg.rtcCenter.join();\n        }\n\n        if (cfg.matrix) {\n            this.matrix = cfg.matrix;\n        } else {\n            this.scale = cfg.scale;\n            this.position = cfg.position;\n            if (cfg.quaternion) {\n            } else {\n                this.rotation = cfg.rotation;\n            }\n        }\n\n        this._isObject = cfg.isObject;\n        if (this._isObject) {\n            this.scene._registerObject(this);\n        }\n\n        this._isModel = cfg.isModel;\n        if (this._isModel) {\n            this.scene._registerModel(this);\n        }\n\n        this.visible = cfg.visible;\n        this.culled = cfg.culled;\n        this.pickable = cfg.pickable;\n        this.clippable = cfg.clippable;\n        this.collidable = cfg.collidable;\n        this.castsShadow = cfg.castsShadow;\n        this.receivesShadow = cfg.receivesShadow;\n        this.xrayed = cfg.xrayed;\n        this.highlighted = cfg.highlighted;\n        this.selected = cfg.selected;\n        this.edges = cfg.edges;\n        this.layer = cfg.layer;\n        this.colorize = cfg.colorize;\n        this.opacity = cfg.opacity;\n        this.offset = cfg.offset;\n\n        if (cfg.parentId) {\n            const parentNode = this.scene.components[cfg.parentId];\n            if (!parentNode) {\n                this.error(\"Parent not found: '\" + cfg.parentId + \"'\");\n            } else if (!parentNode.isNode) {\n                this.error(\"Parent is not a Node: '\" + cfg.parentId + \"'\");\n            } else {\n                parentNode.addChild(this);\n            }\n            this._parentNode = parentNode;\n        } else if (cfg.parent) {\n            if (!cfg.parent.isNode) {\n                this.error(\"Parent is not a Node\");\n            }\n            cfg.parent.addChild(this);\n            this._parentNode = cfg.parent;\n        }\n\n        this.compile();\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Mesh members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that this Component is a Mesh.\n     * @final\n     * @type {Boolean}\n     */\n    get isMesh() {\n        return true;\n    }\n\n    /**\n     * The parent Node.\n     *\n     * The parent Node may also be set by passing the Mesh to the parent's {@link Node#addChild} method.\n     *\n     * @type {Node}\n     */\n    get parent() {\n        return this._parentNode;\n    }\n\n    _checkBillboard(value) {\n        value = value || \"none\";\n        if (value !== \"spherical\" && value !== \"cylindrical\" && value !== \"none\") {\n            this.error(\"Unsupported value for 'billboard': \" + value + \" - accepted values are \" +\n                \"'spherical', 'cylindrical' and 'none' - defaulting to 'none'.\");\n            value = \"none\";\n        }\n        return value;\n    }\n\n    /**\n     * Called by xeokit to compile shaders for this Mesh.\n     * @private\n     */\n    compile() {\n        const drawHash = this._makeDrawHash();\n        if (this._state.drawHash !== drawHash) {\n            this._state.drawHash = drawHash;\n            this._putDrawRenderers();\n            this._drawRenderer = DrawRenderer.get(this);\n            // this._shadowRenderer = ShadowRenderer.get(this);\n            this._emphasisFillRenderer = EmphasisFillRenderer.get(this);\n            this._emphasisEdgesRenderer = EmphasisEdgesRenderer.get(this);\n        }\n        const pickHash = this._makePickHash();\n        if (this._state.pickHash !== pickHash) {\n            this._state.pickHash = pickHash;\n            this._putPickRenderers();\n            this._pickMeshRenderer = PickMeshRenderer.get(this);\n        }\n        const occlusionHash = this._makeOcclusionHash();\n        if (this._state.occlusionHash !== occlusionHash) {\n            this._state.occlusionHash = occlusionHash;\n            this._putOcclusionRenderer();\n            this._occlusionRenderer = OcclusionRenderer.get(this);\n        }\n    }\n\n    _setLocalMatrixDirty() {\n        this._localMatrixDirty = true;\n        this._setWorldMatrixDirty();\n    }\n\n    _setWorldMatrixDirty() {\n        this._worldMatrixDirty = true;\n        this._worldNormalMatrixDirty = true;\n    }\n\n    _buildWorldMatrix() {\n        const localMatrix = this.matrix;\n        if (!this._parentNode) {\n            for (let i = 0, len = localMatrix.length; i < len; i++) {\n                this._worldMatrix[i] = localMatrix[i];\n            }\n        } else {\n            math.mulMat4(this._parentNode.worldMatrix, localMatrix, this._worldMatrix);\n        }\n        this._worldMatrixDirty = false;\n    }\n\n    _buildWorldNormalMatrix() {\n        if (this._worldMatrixDirty) {\n            this._buildWorldMatrix();\n        }\n        if (!this._worldNormalMatrix) {\n            this._worldNormalMatrix = math.mat4();\n        }\n        // Note: order of inverse and transpose doesn't matter\n        math.transposeMat4(this._worldMatrix, this._worldNormalMatrix);\n        math.inverseMat4(this._worldNormalMatrix);\n        this._worldNormalMatrixDirty = false;\n    }\n\n    _setAABBDirty() {\n        if (this.collidable) {\n            for (let node = this; node; node = node._parentNode) {\n                node._aabbDirty = true;\n            }\n        }\n    }\n\n    _updateAABB() {\n        this.scene._aabbDirty = true;\n        if (!this._aabb) {\n            this._aabb = math.AABB3();\n        }\n        this._buildAABB(this.worldMatrix, this._aabb); // Mesh or PerformanceModel\n        this._aabbDirty = false;\n    }\n\n    _webglContextRestored() {\n        if (this._drawRenderer) {\n            this._drawRenderer.webglContextRestored();\n        }\n        if (this._shadowRenderer) {\n            this._shadowRenderer.webglContextRestored();\n        }\n        if (this._emphasisFillRenderer) {\n            this._emphasisFillRenderer.webglContextRestored();\n        }\n        if (this._emphasisEdgesRenderer) {\n            this._emphasisEdgesRenderer.webglContextRestored();\n        }\n        if (this._pickMeshRenderer) {\n            this._pickMeshRenderer.webglContextRestored();\n        }\n        if (this._pickTriangleRenderer) {\n            this._pickMeshRenderer.webglContextRestored();\n        }\n        if (this._occlusionRenderer) {\n            this._occlusionRenderer.webglContextRestored();\n        }\n    }\n\n    _makeDrawHash() {\n        const scene = this.scene;\n        const hash = [\n            scene.canvas.canvas.id,\n            (scene.gammaInput ? \"gi;\" : \";\") + (scene.gammaOutput ? \"go\" : \"\"),\n            scene._lightsState.getHash(),\n            scene._sectionPlanesState.getHash()\n        ];\n        const state = this._state;\n        if (state.stationary) {\n            hash.push(\"/s\");\n        }\n        if (state.billboard === \"none\") {\n            hash.push(\"/n\");\n        } else if (state.billboard === \"spherical\") {\n            hash.push(\"/s\");\n        } else if (state.billboard === \"cylindrical\") {\n            hash.push(\"/c\");\n        }\n        if (state.receivesShadow) {\n            hash.push(\"/rs\");\n        }\n        hash.push(\";\");\n        return hash.join(\"\");\n    }\n\n    _makePickHash() {\n        const scene = this.scene;\n        const hash = [\n            scene.canvas.canvas.id,\n            scene._sectionPlanesState.getHash()\n        ];\n        const state = this._state;\n        if (state.stationary) {\n            hash.push(\"/s\");\n        }\n        if (state.billboard === \"none\") {\n            hash.push(\"/n\");\n        } else if (state.billboard === \"spherical\") {\n            hash.push(\"/s\");\n        } else if (state.billboard === \"cylindrical\") {\n            hash.push(\"/c\");\n        }\n        hash.push(\";\");\n        return hash.join(\"\");\n    }\n\n    _makeOcclusionHash() {\n        const scene = this.scene;\n        const hash = [\n            scene.canvas.canvas.id,\n            scene._sectionPlanesState.getHash()\n        ];\n        const state = this._state;\n        if (state.stationary) {\n            hash.push(\"/s\");\n        }\n        if (state.billboard === \"none\") {\n            hash.push(\"/n\");\n        } else if (state.billboard === \"spherical\") {\n            hash.push(\"/s\");\n        } else if (state.billboard === \"cylindrical\") {\n            hash.push(\"/c\");\n        }\n        hash.push(\";\");\n        return hash.join(\"\");\n    }\n\n    _buildAABB(worldMatrix, aabb) {\n\n        math.transformOBB3(worldMatrix, this._geometry.obb, obb);\n        math.OBB3ToAABB3(obb, aabb);\n\n        const offset = this._state.offset;\n\n        aabb[0] += offset[0];\n        aabb[1] += offset[1];\n        aabb[2] += offset[2];\n        aabb[3] += offset[0];\n        aabb[4] += offset[1];\n        aabb[5] += offset[2];\n\n        if (this._state.rtcCenter) {\n            const rtcCenter = this._state.rtcCenter;\n            aabb[0] += rtcCenter[0];\n            aabb[1] += rtcCenter[1];\n            aabb[2] += rtcCenter[2];\n            aabb[3] += rtcCenter[0];\n            aabb[4] += rtcCenter[1];\n            aabb[5] += rtcCenter[2];\n        }\n    }\n\n    /**\n     * Defines the shape of this Mesh.\n     *\n     * Set to {@link Scene#geometry} by default.\n     *\n     * @type {Geometry}\n     */\n    get geometry() {\n        return this._geometry;\n    }\n\n    /**\n     * Defines the appearance of this Mesh when rendering normally, ie. when not xrayed, highlighted or selected.\n     *\n     * Set to {@link Scene#material} by default.\n     *\n     * @type {Material}\n     */\n    get material() {\n        return this._material;\n    }\n\n    /**\n     * Sets the Mesh's local translation.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    set position(value) {\n        this._position.set(value || [0, 0, 0]);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Mesh's local translation.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get position() {\n        return this._position;\n    }\n\n    /**\n     * Sets the Mesh's local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    set rotation(value) {\n        this._rotation.set(value || [0, 0, 0]);\n        math.eulerToQuaternion(this._rotation, \"XYZ\", this._quaternion);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Mesh's local rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get rotation() {\n        return this._rotation;\n    }\n\n    /**\n     * Sets the Mesh's local rotation quaternion.\n     *\n     * Default value is ````[0,0,0,1]````.\n     *\n     * @type {Number[]}\n     */\n    set quaternion(value) {\n        this._quaternion.set(value || [0, 0, 0, 1]);\n        math.quaternionToEuler(this._quaternion, \"XYZ\", this._rotation);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Mesh's local rotation quaternion.\n     *\n     * Default value is ````[0,0,0,1]````.\n     *\n     * @type {Number[]}\n     */\n    get quaternion() {\n        return this._quaternion;\n    }\n\n    /**\n     * Sets the Mesh's local scale.\n     *\n     * Default value is ````[1,1,1]````.\n     *\n     * @type {Number[]}\n     */\n    set scale(value) {\n        this._scale.set(value || [1, 1, 1]);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Mesh's local scale.\n     *\n     * Default value is ````[1,1,1]````.\n     *\n     * @type {Number[]}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Sets the Mesh's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {Number[]}\n     */\n    set matrix(value) {\n        if (!this.__localMatrix) {\n            this.__localMatrix = math.identityMat4();\n        }\n        this.__localMatrix.set(value || identityMat);\n        math.decomposeMat4(this.__localMatrix, this._position, this._quaternion, this._scale);\n        this._localMatrixDirty = false;\n        this._setWorldMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Mesh's local modeling transform matrix.\n     *\n     * Default value is ````[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]````.\n     *\n     * @type {Number[]}\n     */\n    get matrix() {\n        if (this._localMatrixDirty) {\n            if (!this.__localMatrix) {\n                this.__localMatrix = math.identityMat4();\n            }\n            math.composeMat4(this._position, this._quaternion, this._scale, this.__localMatrix);\n            this._localMatrixDirty = false;\n        }\n        return this.__localMatrix;\n    }\n\n    /**\n     * Gets the Mesh's World matrix.\n     *\n     * @property worldMatrix\n     * @type {Number[]}\n     */\n    get worldMatrix() {\n        if (this._worldMatrixDirty) {\n            this._buildWorldMatrix();\n        }\n        return this._worldMatrix;\n    }\n\n    /**\n     * Gets the Mesh's World normal matrix.\n     *\n     * @type {Number[]}\n     */\n    get worldNormalMatrix() {\n        if (this._worldNormalMatrixDirty) {\n            this._buildWorldNormalMatrix();\n        }\n        return this._worldNormalMatrix;\n    }\n\n    /**\n     * Rotates the Mesh about the given local axis by the given increment.\n     *\n     * @param {Number[]} axis Local axis about which to rotate.\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotate(axis, angle) {\n        angleAxis[0] = axis[0];\n        angleAxis[1] = axis[1];\n        angleAxis[2] = axis[2];\n        angleAxis[3] = angle * math.DEGTORAD;\n        math.angleAxisToQuaternion(angleAxis, q1);\n        math.mulQuaternions(this.quaternion, q1, q2);\n        this.quaternion = q2;\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n        return this;\n    }\n\n    /**\n     * Rotates the Mesh about the given World-space axis by the given increment.\n     *\n     * @param {Number[]} axis Local axis about which to rotate.\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateOnWorldAxis(axis, angle) {\n        angleAxis[0] = axis[0];\n        angleAxis[1] = axis[1];\n        angleAxis[2] = axis[2];\n        angleAxis[3] = angle * math.DEGTORAD;\n        math.angleAxisToQuaternion(angleAxis, q1);\n        math.mulQuaternions(q1, this.quaternion, q1);\n        //this.quaternion.premultiply(q1);\n        return this;\n    }\n\n    /**\n     * Rotates the Mesh about the local X-axis by the given increment.\n     *\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateX(angle) {\n        return this.rotate(xAxis, angle);\n    }\n\n    /**\n     * Rotates the Mesh about the local Y-axis by the given increment.\n     *\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateY(angle) {\n        return this.rotate(yAxis, angle);\n    }\n\n    /**\n     * Rotates the Mesh about the local Z-axis by the given increment.\n     *\n     * @param {Number} angle Angle increment in degrees.\n     */\n    rotateZ(angle) {\n        return this.rotate(zAxis, angle);\n    }\n\n    /**\n     * Translates the Mesh along local space vector by the given increment.\n     *\n     * @param {Number[]} axis Normalized local space 3D vector along which to translate.\n     * @param {Number} distance Distance to translate along  the vector.\n     */\n    translate(axis, distance) {\n        math.vec3ApplyQuaternion(this.quaternion, axis, veca);\n        math.mulVec3Scalar(veca, distance, vecb);\n        math.addVec3(this.position, vecb, this.position);\n        this._setLocalMatrixDirty();\n        this._setAABBDirty();\n        this.glRedraw();\n        return this;\n    }\n\n    /**\n     * Translates the Mesh along the local X-axis by the given increment.\n     *\n     * @param {Number} distance Distance to translate along  the X-axis.\n     */\n    translateX(distance) {\n        return this.translate(xAxis, distance);\n    }\n\n    /**\n     * Translates the Mesh along the local Y-axis by the given increment.\n     *\n     * @param {Number} distance Distance to translate along  the Y-axis.\n     */\n    translateY(distance) {\n        return this.translate(yAxis, distance);\n    }\n\n    /**\n     * Translates the Mesh along the local Z-axis by the given increment.\n     *\n     * @param {Number} distance Distance to translate along  the Z-axis.\n     */\n    translateZ(distance) {\n        return this.translate(zAxis, distance);\n    }\n\n    _putDrawRenderers() {\n        if (this._drawRenderer) {\n            this._drawRenderer.put();\n            this._drawRenderer = null;\n        }\n        if (this._shadowRenderer) {\n            this._shadowRenderer.put();\n            this._shadowRenderer = null;\n        }\n        if (this._emphasisFillRenderer) {\n            this._emphasisFillRenderer.put();\n            this._emphasisFillRenderer = null;\n        }\n        if (this._emphasisEdgesRenderer) {\n            this._emphasisEdgesRenderer.put();\n            this._emphasisEdgesRenderer = null;\n        }\n    }\n\n    _putPickRenderers() {\n        if (this._pickMeshRenderer) {\n            this._pickMeshRenderer.put();\n            this._pickMeshRenderer = null;\n        }\n        if (this._pickTriangleRenderer) {\n            this._pickTriangleRenderer.put();\n            this._pickTriangleRenderer = null;\n        }\n    }\n\n    _putOcclusionRenderer() {\n        if (this._occlusionRenderer) {\n            this._occlusionRenderer.put();\n            this._occlusionRenderer = null;\n        }\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Entity members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that Mesh implements {@link Entity}.\n     *\n     * @returns {Boolean}\n     */\n    get isEntity() {\n        return true;\n    }\n\n    /**\n     * Returns ````true```` if this Mesh represents a model.\n     *\n     * When this returns ````true````, the Mesh will be registered by {@link Mesh#id} in {@link Scene#models} and\n     * may also have a corresponding {@link MetaModel}.\n     *\n     * @type {Boolean}\n     */\n    get isModel() {\n        return this._isModel;\n    }\n\n    /**\n     * Returns ````true```` if this Mesh represents an object.\n     *\n     * When this returns ````true````, the Mesh will be registered by {@link Mesh#id} in {@link Scene#objects} and\n     * may also have a corresponding {@link MetaObject}.\n     *\n     * @type {Boolean}\n     */\n    get isObject() {\n        return this._isObject;\n    }\n\n    /**\n     * Gets the Mesh's World-space 3D axis-aligned bounding box.\n     *\n     * Represented by a six-element Float64Array containing the min/max extents of the\n     * axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * @type {Number[]}\n     */\n    get aabb() {\n        if (this._aabbDirty) {\n            this._updateAABB();\n        }\n        return this._aabb;\n    }\n\n    /**\n     * Center of the relative-to-center (RTC) coordinate system for this Mesh.\n     *\n     * When this is given, then {@link Mesh#matrix}, {@link Mesh#position} and {@link Mesh#geometry} are all assumed to be relative to this center position.\n     *\n     * @type {Float64Array}\n     */\n    set rtcCenter(rtcCenter) {\n        if (rtcCenter) {\n            if (!this._state.rtcCenter) {\n                this._state.rtcCenter = math.vec3();\n            }\n            this._state.rtcCenter.set(rtcCenter);\n            this._state.rtcCenterHash = rtcCenter.join();\n            this._setAABBDirty();\n            this.scene._aabbDirty = true;\n        } else {\n            if (this._state.rtcCenter) {\n                this._state.rtcCenter = null;\n                this._state.rtcCenterHash = null;\n                this._setAABBDirty();\n                this.scene._aabbDirty = true;\n            }\n        }\n    }\n\n    /**\n     * 3D origin of the Mesh's {@link Geometry}'s vertex positions.\n     *\n     * When this is defined, then the positions are RTC, which means that they are relative to this position.\n     *\n     * @type {Float64Array}\n     */\n    get rtcCenter() {\n        return this._state.rtcCenter;\n    }\n\n    /**\n     * The approximate number of triangles in this Mesh.\n     *\n     * @type {Number}\n     */\n    get numTriangles() {\n        return this._numTriangles;\n    }\n\n    /**\n     * Sets if this Mesh is visible.\n     *\n     * Only rendered when {@link Mesh#visible} is ````true```` and {@link Mesh#culled} is ````false````.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#visible} are both ````true```` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#visibleObjects}.\n     *\n     * @type {Boolean}\n     */\n    set visible(visible) {\n        visible = visible !== false;\n        this._state.visible = visible;\n        if (this._isObject) {\n            this.scene._objectVisibilityUpdated(this);\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is visible.\n     *\n     * Only rendered when {@link Mesh#visible} is ````true```` and {@link Mesh#culled} is ````false````.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#visible} are both ````true```` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#visibleObjects}.\n     *\n     * @type {Boolean}\n     */\n    get visible() {\n        return this._state.visible;\n    }\n\n    /**\n     * Sets if this Mesh is xrayed.\n     *\n     * XRayed appearance is configured by the {@link EmphasisMaterial} referenced by {@link Mesh#xrayMaterial}.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#xrayed} are both ````true``` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#xrayedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set xrayed(xrayed) {\n        xrayed = !!xrayed;\n        if (this._state.xrayed === xrayed) {\n            return;\n        }\n        this._state.xrayed = xrayed;\n        if (this._isObject) {\n            this.scene._objectXRayedUpdated(this);\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is xrayed.\n     *\n     * XRayed appearance is configured by the {@link EmphasisMaterial} referenced by {@link Mesh#xrayMaterial}.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#xrayed} are both ````true``` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#xrayedObjects}.\n     *\n     * @type {Boolean}\n     */\n    get xrayed() {\n        return this._state.xrayed;\n    }\n\n    /**\n     * Sets if this Mesh is highlighted.\n     *\n     * Highlighted appearance is configured by the {@link EmphasisMaterial} referenced by {@link Mesh#highlightMaterial}.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#highlighted} are both ````true```` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#highlightedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set highlighted(highlighted) {\n        highlighted = !!highlighted;\n        if (highlighted === this._state.highlighted) {\n            return;\n        }\n        this._state.highlighted = highlighted;\n        if (this._isObject) {\n            this.scene._objectHighlightedUpdated(this);\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is highlighted.\n     *\n     * Highlighted appearance is configured by the {@link EmphasisMaterial} referenced by {@link Mesh#highlightMaterial}.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#highlighted} are both ````true```` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#highlightedObjects}.\n     *\n     * @type {Boolean}\n     */\n    get highlighted() {\n        return this._state.highlighted;\n    }\n\n    /**\n     * Sets if this Mesh is selected.\n     *\n     * Selected appearance is configured by the {@link EmphasisMaterial} referenced by {@link Mesh#selectedMaterial}.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#selected} are both ````true``` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#selectedObjects}.\n     *\n     * @type {Boolean}\n     */\n    set selected(selected) {\n        selected = !!selected;\n        if (selected === this._state.selected) {\n            return;\n        }\n        this._state.selected = selected;\n        if (this._isObject) {\n            this.scene._objectSelectedUpdated(this);\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is selected.\n     *\n     * Selected appearance is configured by the {@link EmphasisMaterial} referenced by {@link Mesh#selectedMaterial}.\n     *\n     * When {@link Mesh#isObject} and {@link Mesh#selected} are both ````true``` the Mesh will be\n     * registered by {@link Mesh#id} in {@link Scene#selectedObjects}.\n     *\n     * @type {Boolean}\n     */\n    get selected() {\n        return this._state.selected;\n    }\n\n    /**\n     * Sets if this Mesh is edge-enhanced.\n     *\n     * Edge appearance is configured by the {@link EdgeMaterial} referenced by {@link Mesh#edgeMaterial}.\n     *\n     * @type {Boolean}\n     */\n    set edges(edges) {\n        edges = !!edges;\n        if (edges === this._state.edges) {\n            return;\n        }\n        this._state.edges = edges;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is edge-enhanced.\n     *\n     * Edge appearance is configured by the {@link EdgeMaterial} referenced by {@link Mesh#edgeMaterial}.\n     *\n     * @type {Boolean}\n     */\n    get edges() {\n        return this._state.edges;\n    }\n\n    /**\n     * Sets if this Mesh is culled.\n     *\n     * Only rendered when {@link Mesh#visible} is ````true```` and {@link Mesh#culled} is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set culled(value) {\n        this._state.culled = !!value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is culled.\n     *\n     * Only rendered when {@link Mesh#visible} is ````true```` and {@link Mesh#culled} is ````false````.\n     *\n     * @type {Boolean}\n     */\n    get culled() {\n        return this._state.culled;\n    }\n\n    /**\n     * Sets if this Mesh is clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#sectionPlanes}.\n     *\n     * @type {Boolean}\n     */\n    set clippable(value) {\n        value = value !== false;\n        if (this._state.clippable === value) {\n            return;\n        }\n        this._state.clippable = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh is clippable.\n     *\n     * Clipping is done by the {@link SectionPlane}s in {@link Scene#sectionPlanes}.\n     *\n     * @type {Boolean}\n     */\n    get clippable() {\n        return this._state.clippable;\n    }\n\n    /**\n     * Sets if this Mesh included in boundary calculations.\n     *\n     * @type {Boolean}\n     */\n    set collidable(value) {\n        value = value !== false;\n        if (value === this._state.collidable) {\n            return;\n        }\n        this._state.collidable = value;\n        this._setAABBDirty();\n        this.scene._aabbDirty = true;\n\n    }\n\n    /**\n     * Gets if this Mesh included in boundary calculations.\n     *\n     * @type {Boolean}\n     */\n    get collidable() {\n        return this._state.collidable;\n    }\n\n    /**\n     * Sets if this Mesh is pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    set pickable(value) {\n        value = value !== false;\n        if (this._state.pickable === value) {\n            return;\n        }\n        this._state.pickable = value;\n        // No need to trigger a render;\n        // state is only used when picking\n    }\n\n    /**\n     * Gets if this Mesh is pickable.\n     *\n     * Picking is done via calls to {@link Scene#pick}.\n     *\n     * @type {Boolean}\n     */\n    get pickable() {\n        return this._state.pickable;\n    }\n\n    /**\n     * Sets if this Mesh casts shadows.\n     *\n     * @type {Boolean}\n     */\n    set castsShadow(value) {\n        value = value !== false;\n        if (value === this._state.castsShadow) {\n            return;\n        }\n        this._state.castsShadow = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets if this Mesh casts shadows.\n     *\n     * @type {Boolean}\n     */\n    get castsShadow() {\n        return this._state.castsShadow;\n    }\n\n    /**\n     * Sets if this Mesh can have shadows cast upon it.\n     *\n     * @type {Boolean}\n     */\n    set receivesShadow(value) {\n        value = value !== false;\n        if (value === this._state.receivesShadow) {\n            return;\n        }\n        this._state.receivesShadow = value;\n        this._state.hash = value ? \"/mod/rs;\" : \"/mod;\";\n        this.fire(\"dirty\", this); // Now need to (re)compile objectRenderers to include/exclude shadow mapping\n    }\n\n    /**\n     * Gets if this Mesh can have shadows cast upon it.\n     *\n     * @type {Boolean}\n     */\n    get receivesShadow() {\n        return this._state.receivesShadow;\n    }\n\n    /**\n     * Gets if this Mesh can have Scalable Ambient Obscurance (SAO) applied to it.\n     *\n     * SAO is configured by {@link SAO}.\n     *\n     * @type {Boolean}\n     * @abstract\n     */\n    get saoEnabled() {\n        return false; // TODO: Support SAO on Meshes\n    }\n\n    /**\n     * Sets the RGB colorize color for this Mesh.\n     *\n     * Multiplies by rendered fragment colors.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    set colorize(value) {\n        let colorize = this._state.colorize;\n        if (!colorize) {\n            colorize = this._state.colorize = new Float32Array(4);\n            colorize[3] = 1;\n        }\n        if (value) {\n            colorize[0] = value[0];\n            colorize[1] = value[1];\n            colorize[2] = value[2];\n        } else {\n            colorize[0] = 1;\n            colorize[1] = 1;\n            colorize[2] = 1;\n        }\n        const colorized = (!!value);\n        this.scene._objectColorizeUpdated(this, colorized);\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB colorize color for this Mesh.\n     *\n     * Multiplies by rendered fragment colors.\n     *\n     * Each element of the color is in range ````[0..1]````.\n     *\n     * @type {Number[]}\n     */\n    get colorize() {\n        return this._state.colorize;\n    }\n\n    /**\n     * Sets the opacity factor for this Mesh.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * @type {Number}\n     */\n    set opacity(opacity) {\n        let colorize = this._state.colorize;\n        if (!colorize) {\n            colorize = this._state.colorize = new Float32Array(4);\n            colorize[0] = 1;\n            colorize[1] = 1;\n            colorize[2] = 1;\n        }\n        const opacityUpdated = (opacity !== null && opacity !== undefined);\n        colorize[3] = opacityUpdated ? opacity : 1.0;\n        this.scene._objectOpacityUpdated(this, opacityUpdated);\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the opacity factor for this Mesh.\n     *\n     * This is a factor in range ````[0..1]```` which multiplies by the rendered fragment alphas.\n     *\n     * @type {Number}\n     */\n    get opacity() {\n        return this._state.colorize[3];\n    }\n\n    /**\n     * Gets if this Mesh is transparent.\n     * @returns {Boolean}\n     */\n    get transparent() {\n        return this._material.alphaMode === 2 /* blend */ || this._state.colorize[3] < 1\n    }\n\n    /**\n     * Sets the Mesh's rendering order relative to other Meshes.\n     *\n     * Default value is ````0````.\n     *\n     * This can be set on multiple transparent Meshes, to make them render in a specific order for correct alpha blending.\n     *\n     * @type {Number}\n     */\n    set layer(value) {\n        // TODO: Only accept rendering layer in range [0...MAX_layer]\n        value = value || 0;\n        value = Math.round(value);\n        if (value === this._state.layer) {\n            return;\n        }\n        this._state.layer = value;\n        this._renderer.needStateSort();\n    }\n\n    /**\n     * Gets the Mesh's rendering order relative to other Meshes.\n     *\n     * Default value is ````0````.\n     *\n     * This can be set on multiple transparent Meshes, to make them render in a specific order for correct alpha blending.\n     *\n     * @type {Number}\n     */\n    get layer() {\n        return this._state.layer;\n    }\n\n    /**\n     * Gets if the Node's position is stationary.\n     *\n     * When true, will disable the effect of {@link Camera} translations for this Mesh, while still allowing it to rotate. This is useful for skyboxes.\n     *\n     * @type {Boolean}\n     */\n    get stationary() {\n        return this._state.stationary;\n    }\n\n    /**\n     * Gets the Node's billboarding behaviour.\n     *\n     * Options are:\n     * * ````\"none\"```` -  (default) - No billboarding.\n     * * ````\"spherical\"```` - Mesh is billboarded to face the viewpoint, rotating both vertically and horizontally.\n     * * ````\"cylindrical\"```` - Mesh is billboarded to face the viewpoint, rotating only about its vertically axis. Use this mode for things like trees on a landscape.\n     * @type {String}\n     */\n    get billboard() {\n        return this._state.billboard;\n    }\n\n    /**\n     * Sets the Mesh's 3D World-space offset.\n     *\n     * The offset dynamically translates the Mesh in World-space.\n     *\n     * Default value is ````[0, 0, 0]````.\n     *\n     * Provide a null or undefined value to reset to the default value.\n     *\n     * @type {Number[]}\n     */\n    set offset(value) {\n        this._state.offset.set(value || [0, 0, 0]);\n        this._setAABBDirty();\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Mesh's 3D World-space offset.\n     *\n     * Default value is ````[0,0,0]````.\n     *\n     * @type {Number[]}\n     */\n    get offset() {\n        return this._state.offset;\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Drawable members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Returns true to indicate that Mesh implements {@link Drawable}.\n     * @final\n     * @type {Boolean}\n     */\n    get isDrawable() {\n        return true;\n    }\n\n    /**\n     * Property with final value ````true```` to indicate that xeokit should render this Mesh in sorted order, relative to other Meshes.\n     *\n     * The sort order is determined by {@link Mesh#stateSortCompare}.\n     *\n     * Sorting is essential for rendering performance, so that xeokit is able to avoid applying runs of the same state changes to the GPU, ie. can collapse them.\n     *\n     * @type {Boolean}\n     */\n    get isStateSortable() {\n        return true;\n    }\n\n    /**\n     * Comparison function used by the renderer to determine the order in which xeokit should render the Mesh, relative to to other Meshes.\n     *\n     * xeokit requires this method because Mesh implements {@link Drawable}.\n     *\n     * Sorting is essential for rendering performance, so that xeokit is able to avoid needlessly applying runs of the same rendering state changes to the GPU, ie. can collapse them.\n     *\n     * @param {Mesh} mesh1\n     * @param {Mesh} mesh2\n     * @returns {number}\n     */\n    stateSortCompare(mesh1, mesh2) {\n        return (mesh1._state.layer - mesh2._state.layer)\n            || (mesh1._drawRenderer.id - mesh2._drawRenderer.id) // Program state\n            || (mesh1._material._state.id - mesh2._material._state.id) // Material state\n            || (mesh1._geometry._state.id - mesh2._geometry._state.id); // Geometry state\n    }\n\n    /** @private */\n    rebuildRenderFlags() {\n        this.renderFlags.reset();\n        if (!this._getActiveSectionPlanes()) {\n            this.renderFlags.culled = true;\n            return;\n        }\n        this.renderFlags.numLayers = 1;\n        this.renderFlags.numVisibleLayers = 1;\n        this.renderFlags.visibleLayers[0] = 0;\n        this._updateRenderFlags();\n    }\n\n    /**\n     * @private\n     */\n    _updateRenderFlags() {\n\n        const renderFlags = this.renderFlags;\n        const state = this._state;\n\n        if (state.xrayed) {\n            const xrayMaterial = this._xrayMaterial._state;\n            if (xrayMaterial.fill) {\n                if (xrayMaterial.fillAlpha < 1.0) {\n                    renderFlags.xrayedSilhouetteTransparent = true;\n                } else {\n                    renderFlags.xrayedSilhouetteOpaque = true;\n                }\n            }\n            if (xrayMaterial.edges) {\n                if (xrayMaterial.edgeAlpha < 1.0) {\n                    renderFlags.xrayedEdgesTransparent = true;\n                } else {\n                    renderFlags.xrayedEdgesOpaque = true;\n                }\n            }\n        } else {\n            const normalMaterial = this._material._state;\n            if (normalMaterial.alpha < 1.0 || state.colorize[3] < 1.0) {\n                renderFlags.colorTransparent = true;\n            } else {\n                renderFlags.colorOpaque = true;\n            }\n            if (state.edges) {\n                const edgeMaterial = this._edgeMaterial._state;\n                if (edgeMaterial.alpha < 1.0) {\n                    renderFlags.edgesTransparent = true;\n                } else {\n                    renderFlags.edgesOpaque = true;\n                }\n            }\n            if (state.selected) {\n                const selectedMaterial = this._selectedMaterial._state;\n                if (selectedMaterial.fill) {\n                    if (selectedMaterial.fillAlpha < 1.0) {\n                        renderFlags.selectedSilhouetteTransparent = true;\n                    } else {\n                        renderFlags.selectedSilhouetteOpaque = true;\n                    }\n                }\n                if (selectedMaterial.edges) {\n                    if (selectedMaterial.edgeAlpha < 1.0) {\n                        renderFlags.selectedEdgesTransparent = true;\n                    } else {\n                        renderFlags.selectedEdgesOpaque = true;\n                    }\n                }\n            } else if (state.highlighted) {\n                const highlightMaterial = this._highlightMaterial._state;\n                if (highlightMaterial.fill) {\n                    if (highlightMaterial.fillAlpha < 1.0) {\n                        renderFlags.highlightedSilhouetteTransparent = true;\n                    } else {\n                        renderFlags.highlightedSilhouetteOpaque = true;\n                    }\n                }\n                if (highlightMaterial.edges) {\n                    if (highlightMaterial.edgeAlpha < 1.0) {\n                        renderFlags.highlightedEdgesTransparent = true;\n                    } else {\n                        renderFlags.highlightedEdgesOpaque = true;\n                    }\n                }\n            }\n        }\n    }\n\n    _getActiveSectionPlanes() {\n\n        if (this._state.clippable) {\n\n            const sectionPlanes = this.scene._sectionPlanesState.sectionPlanes;\n            const numSectionPlanes = sectionPlanes.length;\n\n            if (numSectionPlanes > 0) {\n                for (let i = 0; i < numSectionPlanes; i++) {\n\n                    const sectionPlane = sectionPlanes[i];\n                    const renderFlags = this.renderFlags;\n\n                    if (!sectionPlane.active) {\n                        renderFlags.sectionPlanesActivePerLayer[i] = false;\n\n                    } else {\n\n                        if (this._state.rtcCenter) {\n\n                            const intersect = math.planeAABB3Intersect(sectionPlane.dir, sectionPlane.dist, this.aabb);\n                            const outside = (intersect === -1);\n\n                            if (outside) {\n                                return false;\n                            }\n\n                            const intersecting = (intersect === 0);\n                            renderFlags.sectionPlanesActivePerLayer[i] = intersecting;\n\n                        } else {\n                            renderFlags.sectionPlanesActivePerLayer[i] = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Defines the appearance of this Mesh when xrayed.\n     *\n     * Mesh is xrayed when {@link Mesh#xrayed} is ````true````.\n     *\n     * Set to {@link Scene#xrayMaterial} by default.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get xrayMaterial() {\n        return this._xrayMaterial;\n    }\n\n    /**\n     * Defines the appearance of this Mesh when highlighted.\n     *\n     * Mesh is xrayed when {@link Mesh#highlighted} is ````true````.\n     *\n     * Set to {@link Scene#highlightMaterial} by default.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get highlightMaterial() {\n        return this._highlightMaterial;\n    }\n\n    /**\n     * Defines the appearance of this Mesh when selected.\n     *\n     * Mesh is xrayed when {@link Mesh#selected} is ````true````.\n     *\n     * Set to {@link Scene#selectedMaterial} by default.\n     *\n     * @type {EmphasisMaterial}\n     */\n    get selectedMaterial() {\n        return this._selectedMaterial;\n    }\n\n    /**\n     * Defines the appearance of this Mesh when edges are enhanced.\n     *\n     * Mesh is xrayed when {@link Mesh#edges} is ````true````.\n     *\n     * Set to {@link Scene#edgeMaterial} by default.\n     *\n     * @type {EdgeMaterial}\n     */\n    get edgeMaterial() {\n        return this._edgeMaterial;\n    }\n\n    // ---------------------- NORMAL RENDERING -----------------------------------\n\n    /** @private  */\n    drawColorOpaque(frameCtx) {\n        if (this._drawRenderer || (this._drawRenderer = DrawRenderer.get(this))) {\n            this._drawRenderer.drawMesh(frameCtx, this);\n        }\n    }\n\n    /** @private  */\n    drawColorTransparent(frameCtx) {\n        if (this._drawRenderer || (this._drawRenderer = DrawRenderer.get(this))) {\n            this._drawRenderer.drawMesh(frameCtx, this);\n        }\n    }\n\n    // ---------------------- RENDERING SAO POST EFFECT TARGETS --------------\n\n    // TODO\n\n    // ---------------------- EMPHASIS RENDERING -----------------------------------\n\n    /** @private  */\n    drawSilhouetteXRayed(frameCtx) {\n        if (this._emphasisFillRenderer || (this._emphasisFillRenderer = EmphasisFillRenderer.get(this))) {\n            this._emphasisFillRenderer.drawMesh(frameCtx, this, 0); // 0 == xray\n        }\n    }\n\n    /** @private  */\n    drawSilhouetteHighlighted(frameCtx) {\n        if (this._emphasisFillRenderer || (this._emphasisFillRenderer = EmphasisFillRenderer.get(this))) {\n            this._emphasisFillRenderer.drawMesh(frameCtx, this, 1); // 1 == highlight\n        }\n    }\n\n    /** @private  */\n    drawSilhouetteSelected(frameCtx) {\n        if (this._emphasisFillRenderer || (this._emphasisFillRenderer = EmphasisFillRenderer.get(this))) {\n            this._emphasisFillRenderer.drawMesh(frameCtx, this, 2); // 2 == selected\n        }\n    }\n\n    // ---------------------- EDGES RENDERING -----------------------------------\n\n    /** @private  */\n    drawEdgesColorOpaque(frameCtx) {\n        if (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = EmphasisEdgesRenderer.get(this))) {\n            this._emphasisEdgesRenderer.drawMesh(frameCtx, this, 3); // 3 == edges\n        }\n    }\n\n    /** @private  */\n    drawEdgesColorTransparent(frameCtx) {\n        if (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = EmphasisEdgesRenderer.get(this))) {\n            this._emphasisEdgesRenderer.drawMesh(frameCtx, this, 3); // 3 == edges\n        }\n    }\n\n    /** @private  */\n    drawEdgesXRayed(frameCtx) {\n        if (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = EmphasisEdgesRenderer.get(this))) {\n            this._emphasisEdgesRenderer.drawMesh(frameCtx, this, 0); // 0 == xray\n        }\n    }\n\n    /** @private  */\n    drawEdgesHighlighted(frameCtx) {\n        if (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = EmphasisEdgesRenderer.get(this))) {\n            this._emphasisEdgesRenderer.drawMesh(frameCtx, this, 1); // 1 == highlight\n        }\n    }\n\n    /** @private  */\n    drawEdgesSelected(frameCtx) {\n        if (this._emphasisEdgesRenderer || (this._emphasisEdgesRenderer = EmphasisEdgesRenderer.get(this))) {\n            this._emphasisEdgesRenderer.drawMesh(frameCtx, this, 2); // 2 == selected\n        }\n    }\n\n    // ---------------------- OCCLUSION CULL RENDERING -----------------------------------\n\n    /** @private  */\n    drawOcclusion(frameCtx) {\n        if (this._occlusionRenderer || (this._occlusionRenderer = OcclusionRenderer.get(this))) {\n            this._occlusionRenderer.drawMesh(frameCtx, this);\n        }\n    }\n\n    // ---------------------- SHADOW BUFFER RENDERING -----------------------------------\n\n    /** @private  */\n    drawShadow(frameCtx) {\n        if (this._shadowRenderer || (this._shadowRenderer = ShadowRenderer.get(this))) {\n            this._shadowRenderer.drawMesh(frameCtx, this);\n        }\n    }\n\n    // ---------------------- PICKING RENDERING ----------------------------------\n\n    /** @private  */\n    drawPickMesh(frameCtx) {\n        if (this._pickMeshRenderer || (this._pickMeshRenderer = PickMeshRenderer.get(this))) {\n            this._pickMeshRenderer.drawMesh(frameCtx, this);\n        }\n    }\n\n    /** @private\n     */\n    canPickTriangle() {\n        return this._geometry.isReadableGeometry; // VBOGeometry does not support surface picking because it has no geometry data in browser memory\n    }\n\n    /** @private  */\n    drawPickTriangles(frameCtx) {\n        if (this._pickTriangleRenderer || (this._pickTriangleRenderer = PickTriangleRenderer.get(this))) {\n            this._pickTriangleRenderer.drawMesh(frameCtx, this);\n        }\n    }\n\n    /** @private */\n    pickTriangleSurface(pickViewMatrix, pickProjMatrix, pickResult) {\n        pickTriangleSurface(this, pickViewMatrix, pickProjMatrix, pickResult);\n    }\n\n    /** @private  */\n    drawPickVertices(frameCtx) {\n\n    }\n\n    /**\n     * @private\n     * @returns {PerformanceNode}\n     */\n    delegatePickedEntity() {\n        return this;\n    }\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Component members\n    //------------------------------------------------------------------------------------------------------------------\n\n    /**\n     * Destroys this Mesh.\n     */\n    destroy() {\n        super.destroy(); // xeokit.Object\n        this._putDrawRenderers();\n        this._putPickRenderers();\n        this._putOcclusionRenderer();\n        this.scene._renderer.putPickID(this._state.pickID); // TODO: somehow puch this down into xeokit framework?\n        if (this._isObject) {\n            this.scene._deregisterObject(this);\n            if (this._visible) {\n                this.scene._objectVisibilityUpdated(this, false);\n            }\n            if (this._xrayed) {\n                this.scene._objectXRayedUpdated(this, false);\n            }\n            if (this._selected) {\n                this.scene._objectSelectedUpdated(this, false);\n            }\n            if (this._highlighted) {\n                this.scene._objectHighlightedUpdated(this, false);\n            }\n            this.scene._objectColorizeUpdated(this, false);\n            this.scene._objectOpacityUpdated(this, false);\n            this.scene._objectOffsetUpdated(this, false);\n        }\n        if (this._isModel) {\n            this.scene._deregisterModel(this);\n        }\n        this.glRedraw();\n    }\n\n}\n\n\nconst pickTriangleSurface = (function () {\n\n    // Cached vars to avoid garbage collection\n\n    const localRayOrigin = math.vec3();\n    const localRayDir = math.vec3();\n    const positionA = math.vec3();\n    const positionB = math.vec3();\n    const positionC = math.vec3();\n    const triangleVertices = math.vec3();\n    const position = math.vec4();\n    const worldPos = math.vec3();\n    const viewPos = math.vec3();\n    const bary = math.vec3();\n    const normalA = math.vec3();\n    const normalB = math.vec3();\n    const normalC = math.vec3();\n    const uva = math.vec3();\n    const uvb = math.vec3();\n    const uvc = math.vec3();\n    const tempVec4a = math.vec4();\n    const tempVec4b = math.vec4();\n    const tempVec4c = math.vec4();\n    const tempVec3 = math.vec3();\n    const tempVec3b = math.vec3();\n    const tempVec3c = math.vec3();\n    const tempVec3d = math.vec3();\n    const tempVec3e = math.vec3();\n    const tempVec3f = math.vec3();\n    const tempVec3g = math.vec3();\n    const tempVec3h = math.vec3();\n    const tempVec3i = math.vec3();\n    const tempVec3j = math.vec3();\n    const tempVec3k = math.vec3();\n\n    return function (mesh, pickViewMatrix, pickProjMatrix, pickResult) {\n\n        var primIndex = pickResult.primIndex;\n\n        if (primIndex !== undefined && primIndex !== null && primIndex > -1) {\n\n            const geometry = mesh.geometry._state;\n            const scene = mesh.scene;\n            const camera = scene.camera;\n            const canvas = scene.canvas;\n\n            if (geometry.primitiveName === \"triangles\") {\n\n                // Triangle picked; this only happens when the\n                // Mesh has a Geometry that has primitives of type \"triangle\"\n\n                pickResult.primitive = \"triangle\";\n\n                // Get the World-space positions of the triangle's vertices\n\n                const i = primIndex; // Indicates the first triangle index in the indices array\n\n                const indices = geometry.indices; // Indices into geometry arrays, not into shared VertexBufs\n                const positions = geometry.positions;\n\n                let ia3;\n                let ib3;\n                let ic3;\n\n                if (indices) {\n\n                    var ia = indices[i + 0];\n                    var ib = indices[i + 1];\n                    var ic = indices[i + 2];\n\n                    triangleVertices[0] = ia;\n                    triangleVertices[1] = ib;\n                    triangleVertices[2] = ic;\n\n                    pickResult.indices = triangleVertices;\n\n                    ia3 = ia * 3;\n                    ib3 = ib * 3;\n                    ic3 = ic * 3;\n\n                } else {\n\n                    ia3 = i * 3;\n                    ib3 = ia3 + 3;\n                    ic3 = ib3 + 3;\n                }\n\n                positionA[0] = positions[ia3 + 0];\n                positionA[1] = positions[ia3 + 1];\n                positionA[2] = positions[ia3 + 2];\n\n                positionB[0] = positions[ib3 + 0];\n                positionB[1] = positions[ib3 + 1];\n                positionB[2] = positions[ib3 + 2];\n\n                positionC[0] = positions[ic3 + 0];\n                positionC[1] = positions[ic3 + 1];\n                positionC[2] = positions[ic3 + 2];\n\n                if (geometry.compressGeometry) {\n\n                    // Decompress vertex positions\n\n                    const positionsDecodeMatrix = geometry.positionsDecodeMatrix;\n                    if (positionsDecodeMatrix) {\n                        geometryCompressionUtils.decompressPosition(positionA, positionsDecodeMatrix, positionA);\n                        geometryCompressionUtils.decompressPosition(positionB, positionsDecodeMatrix, positionB);\n                        geometryCompressionUtils.decompressPosition(positionC, positionsDecodeMatrix, positionC);\n                    }\n                }\n\n                // Attempt to ray-pick the triangle in local space\n\n                let canvasPos;\n\n                if (pickResult.canvasPos) {\n                    canvasPos = pickResult.canvasPos;\n                    math.canvasPosToLocalRay(canvas.canvas, pickViewMatrix, pickProjMatrix, mesh.worldMatrix, canvasPos, localRayOrigin, localRayDir);\n\n                } else if (pickResult.origin && pickResult.direction) {\n                    math.worldRayToLocalRay(mesh.worldMatrix, pickResult.origin, pickResult.direction, localRayOrigin, localRayDir);\n                }\n\n                math.normalizeVec3(localRayDir);\n                math.rayPlaneIntersect(localRayOrigin, localRayDir, positionA, positionB, positionC, position);\n\n                // Get Local-space cartesian coordinates of the ray-triangle intersection\n\n                pickResult.localPos = position;\n                pickResult.position = position;\n\n                // Get interpolated World-space coordinates\n\n                // Need to transform homogeneous coords\n\n                tempVec4a[0] = position[0];\n                tempVec4a[1] = position[1];\n                tempVec4a[2] = position[2];\n                tempVec4a[3] = 1;\n\n                // Get World-space cartesian coordinates of the ray-triangle intersection\n\n                math.transformVec4(mesh.worldMatrix, tempVec4a, tempVec4b);\n\n                worldPos[0] = tempVec4b[0];\n                worldPos[1] = tempVec4b[1];\n                worldPos[2] = tempVec4b[2];\n\n                pickResult.worldPos = worldPos;\n\n                // Get View-space cartesian coordinates of the ray-triangle intersection\n\n                math.transformVec4(camera.matrix, tempVec4b, tempVec4c);\n\n                viewPos[0] = tempVec4c[0];\n                viewPos[1] = tempVec4c[1];\n                viewPos[2] = tempVec4c[2];\n\n                pickResult.viewPos = viewPos;\n\n                // Get barycentric coordinates of the ray-triangle intersection\n\n                math.cartesianToBarycentric(position, positionA, positionB, positionC, bary);\n\n                pickResult.bary = bary;\n\n                // Get interpolated normal vector\n\n                const normals = geometry.normals;\n\n                if (normals) {\n\n                    if (geometry.compressGeometry) {\n\n                        // Decompress vertex normals\n\n                        const ia2 = ia * 3;\n                        const ib2 = ib * 3;\n                        const ic2 = ic * 3;\n\n                        geometryCompressionUtils.decompressNormal(normals.subarray(ia2, ia2 + 2), normalA);\n                        geometryCompressionUtils.decompressNormal(normals.subarray(ib2, ib2 + 2), normalB);\n                        geometryCompressionUtils.decompressNormal(normals.subarray(ic2, ic2 + 2), normalC);\n\n                    } else {\n\n                        normalA[0] = normals[ia3];\n                        normalA[1] = normals[ia3 + 1];\n                        normalA[2] = normals[ia3 + 2];\n\n                        normalB[0] = normals[ib3];\n                        normalB[1] = normals[ib3 + 1];\n                        normalB[2] = normals[ib3 + 2];\n\n                        normalC[0] = normals[ic3];\n                        normalC[1] = normals[ic3 + 1];\n                        normalC[2] = normals[ic3 + 2];\n                    }\n\n                    const normal = math.addVec3(math.addVec3(\n                        math.mulVec3Scalar(normalA, bary[0], tempVec3),\n                        math.mulVec3Scalar(normalB, bary[1], tempVec3b), tempVec3c),\n                        math.mulVec3Scalar(normalC, bary[2], tempVec3d), tempVec3e);\n\n                    pickResult.worldNormal = math.normalizeVec3(math.transformVec3(mesh.worldNormalMatrix, normal, tempVec3f));\n                }\n\n                // Get interpolated UV coordinates\n\n                const uvs = geometry.uv;\n\n                if (uvs) {\n\n                    uva[0] = uvs[(ia * 2)];\n                    uva[1] = uvs[(ia * 2) + 1];\n\n                    uvb[0] = uvs[(ib * 2)];\n                    uvb[1] = uvs[(ib * 2) + 1];\n\n                    uvc[0] = uvs[(ic * 2)];\n                    uvc[1] = uvs[(ic * 2) + 1];\n\n                    if (geometry.compressGeometry) {\n\n                        // Decompress vertex UVs\n\n                        const uvDecodeMatrix = geometry.uvDecodeMatrix;\n                        if (uvDecodeMatrix) {\n                            geometryCompressionUtils.decompressUV(uva, uvDecodeMatrix, uva);\n                            geometryCompressionUtils.decompressUV(uvb, uvDecodeMatrix, uvb);\n                            geometryCompressionUtils.decompressUV(uvc, uvDecodeMatrix, uvc);\n                        }\n                    }\n\n                    pickResult.uv = math.addVec3(\n                        math.addVec3(\n                            math.mulVec2Scalar(uva, bary[0], tempVec3g),\n                            math.mulVec2Scalar(uvb, bary[1], tempVec3h), tempVec3i),\n                        math.mulVec2Scalar(uvc, bary[2], tempVec3j), tempVec3k);\n                }\n            }\n        }\n    }\n})();\n\nexport {Mesh};","import {Geometry} from './Geometry.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {ArrayBuf} from '../webgl/ArrayBuf.js';\nimport {math} from '../math/math.js';\nimport {stats} from '../stats.js';\nimport {WEBGL_INFO} from '../webglInfo.js';\nimport {buildEdgeIndices} from '../math/buildEdgeIndices.js';\nimport {geometryCompressionUtils} from '../math/geometryCompressionUtils.js';\n\nconst memoryStats = stats.memory;\nconst bigIndicesSupported = WEBGL_INFO.SUPPORTED_EXTENSIONS[\"OES_element_index_uint\"];\nconst IndexArrayType = bigIndicesSupported ? Uint32Array : Uint16Array;\nconst tempAABB = math.AABB3();\n\n/**\n * @desc A {@link Geometry} that keeps its geometry data solely in GPU memory, without retaining it in browser memory.\n *\n * VBOGeometry uses less memory than {@link ReadableGeometry}, which keeps its geometry data in both browser and GPU memory.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a VBOGeometry that defines a single triangle, plus a {@link PhongMaterial} with diffuse {@link Texture}:\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_VBOGeometry)]\n *\n * ````javascript\n * import {Viewer, Mesh, VBOGeometry, PhongMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *         canvasId: \"myCanvas\"\n *     });\n *\n * new Mesh(viewer.scene, {\n *         geometry: new VBOGeometry(viewer.scene, {\n *             primitive: \"triangles\",\n *             positions: [0.0, 3, 0.0, -3, -3, 0.0, 3, -3, 0.0],\n *             normals: [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0],\n *             uv: [0.0, 0.0, 0.5, 1.0, 1.0, 0.0],\n *             indices: [0, 1, 2]\n *         }),\n *         material: new PhongMaterial(viewer.scene, {\n *             diffuseMap: new Texture(viewer.scene, {\n *                 src: \"textures/diffuse/uvGrid2.jpg\"\n *             }),\n *             backfaces: true\n *         })\n *     });\n * ````\n */\nclass VBOGeometry extends Geometry {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"VBOGeometry\";\n    }\n\n    /**\n     * @private\n     * @returns {boolean}\n     */\n    get isVBOGeometry() {\n        return true;\n    }\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] Configs\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {String} [cfg.primitive=\"triangles\"]  The primitive type. Accepted values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n     * @param {Number[]} [cfg.positions]  Positions array.\n     * @param {Number[]} [cfg.normals]  Vertex normal vectors array.\n     * @param {Number[]} [cfg.uv]  UVs array.\n     * @param {Number[]} [cfg.colors]  Vertex colors.\n     * @param {Number[]} [cfg.indices]  Indices array.\n     * @param {Number} [cfg.edgeThreshold=10]  When autogenerating edges for supporting {@link Drawable#edges}, this indicates the threshold angle (in degrees) between the face normals of adjacent triangles below which the edge is discarded.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({ // Arrays for emphasis effects are got from xeokit.GeometryLite friend methods\n            compressGeometry: true,\n            primitive: null, // WebGL enum\n            primitiveName: null, // String\n            positionsDecodeMatrix: null, // Set when compressGeometry == true\n            uvDecodeMatrix: null, // Set when compressGeometry == true\n            positionsBuf: null,\n            normalsBuf: null,\n            colorsbuf: null,\n            uvBuf: null,\n            indicesBuf: null,\n            hash: \"\"\n        });\n\n        this._numTriangles = 0;\n\n        this._edgeThreshold = cfg.edgeThreshold || 10.0;\n        this._aabb = null;\n        this._obb = math.OBB3();\n\n        const state = this._state;\n        const gl = this.scene.canvas.gl;\n\n        cfg.primitive = cfg.primitive || \"triangles\";\n        switch (cfg.primitive) {\n            case \"points\":\n                state.primitive = gl.POINTS;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"lines\":\n                state.primitive = gl.LINES;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"line-loop\":\n                state.primitive = gl.LINE_LOOP;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"line-strip\":\n                state.primitive = gl.LINE_STRIP;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"triangles\":\n                state.primitive = gl.TRIANGLES;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"triangle-strip\":\n                state.primitive = gl.TRIANGLE_STRIP;\n                state.primitiveName = cfg.primitive;\n                break;\n            case \"triangle-fan\":\n                state.primitive = gl.TRIANGLE_FAN;\n                state.primitiveName = cfg.primitive;\n                break;\n            default:\n                this.error(\"Unsupported value for 'primitive': '\" + cfg.primitive +\n                    \"' - supported values are 'points', 'lines', 'line-loop', 'line-strip', 'triangles', \" +\n                    \"'triangle-strip' and 'triangle-fan'. Defaulting to 'triangles'.\");\n                state.primitive = gl.TRIANGLES;\n                state.primitiveName = cfg.primitive;\n        }\n\n        if (!cfg.positions) {\n            this.error(\"Config expected: positions\");\n            return; // TODO: Recover?\n        }\n\n        if (!cfg.indices) {\n            this.error(\"Config expected: indices\");\n            return; // TODO: Recover?\n        }\n\n        var positions;\n\n        {\n            const positionsDecodeMatrix = cfg.positionsDecodeMatrix;\n\n            if (positionsDecodeMatrix) {\n\n                // Compressed positions\n\n            } else {\n\n                // Uncompressed positions\n\n                const bounds = geometryCompressionUtils.getPositionsBounds(cfg.positions);\n                const result = geometryCompressionUtils.compressPositions(cfg.positions, bounds.min, bounds.max);\n                positions = result.quantized;\n                state.positionsDecodeMatrix = result.decodeMatrix;\n                state.positionsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, positions, positions.length, 3, gl.STATIC_DRAW);\n                memoryStats.positions += state.positionsBuf.numItems;\n                math.positions3ToAABB3(cfg.positions, this._aabb);\n                math.positions3ToAABB3(positions, tempAABB, state.positionsDecodeMatrix);\n                math.AABB3ToOBB3(tempAABB, this._obb);\n            }\n        }\n\n        if (cfg.colors) {\n            const colors = cfg.colors.constructor === Float32Array ? cfg.colors : new Float32Array(cfg.colors);\n            state.colorsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, colors, colors.length, 4, gl.STATIC_DRAW);\n            memoryStats.colors += state.colorsBuf.numItems;\n        }\n\n        if (cfg.uv) {\n            const bounds = geometryCompressionUtils.getUVBounds(cfg.uv);\n            const result = geometryCompressionUtils.compressUVs(cfg.uv, bounds.min, bounds.max);\n            const uv = result.quantized;\n            state.uvDecodeMatrix = result.decodeMatrix;\n            state.uvBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, uv, uv.length, 2, gl.STATIC_DRAW);\n            memoryStats.uvs += state.uvBuf.numItems;\n        }\n\n        if (cfg.normals) {\n            const normals = geometryCompressionUtils.compressNormals(cfg.normals);\n            let normalized = state.compressGeometry;\n            state.normalsBuf = new ArrayBuf(gl, gl.ARRAY_BUFFER, normals, normals.length, 3, gl.STATIC_DRAW, normalized);\n            memoryStats.normals += state.normalsBuf.numItems;\n        }\n\n        if (!bigIndicesSupported && cfg.indices.constructor === Uint32Array) {\n            this.error(\"This WebGL implementation does not support Uint32Array\");\n            return; // TODO: Recover?\n        }\n\n        {\n            const indices = (cfg.indices.constructor === Uint32Array || cfg.indices.constructor === Uint16Array) ? cfg.indices : new IndexArrayType(cfg.indices);\n            state.indicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, indices, indices.length, 1, gl.STATIC_DRAW);\n            memoryStats.indices += state.indicesBuf.numItems;\n            const edgeIndices = buildEdgeIndices(positions, indices, state.positionsDecodeMatrix, this._edgeThreshold);\n            this._edgeIndicesBuf = new ArrayBuf(gl, gl.ELEMENT_ARRAY_BUFFER, edgeIndices, edgeIndices.length, 1, gl.STATIC_DRAW);\n\n            if (this._state.primitiveName === \"triangles\") {\n                this._numTriangles = (cfg.indices.length / 3);\n            }\n        }\n\n        this._buildHash();\n\n        memoryStats.meshes++;\n    }\n\n    _buildHash() {\n        const state = this._state;\n        const hash = [\"/g\"];\n        hash.push(\"/\" + state.primitive + \";\");\n        if (state.positionsBuf) {\n            hash.push(\"p\");\n        }\n        if (state.colorsBuf) {\n            hash.push(\"c\");\n        }\n        if (state.normalsBuf || state.autoVertexNormals) {\n            hash.push(\"n\");\n        }\n        if (state.uvBuf) {\n            hash.push(\"u\");\n        }\n        hash.push(\"cp\"); // Always compressed\n        hash.push(\";\");\n        state.hash = hash.join(\"\");\n    }\n\n    _getEdgeIndices() {\n        return this._edgeIndicesBuf;\n    }\n\n    /**\n     * Gets the primitive type.\n     *\n     * Possible types are: 'points', 'lines', 'line-loop', 'line-strip', 'triangles', 'triangle-strip' and 'triangle-fan'.\n     *\n     * @type {String}\n     */\n    get primitive() {\n        return this._state.primitiveName;\n    }\n\n    /**\n     * Gets the local-space axis-aligned 3D boundary (AABB).\n     *\n     * The AABB is represented by a six-element Float64Array containing the min/max extents of the axis-aligned volume, ie. ````[xmin, ymin,zmin,xmax,ymax, zmax]````.\n     *\n     * @type {Number[]}\n     */\n    get aabb() {\n        return this._aabb;\n    }\n\n    /**\n     * Gets the local-space oriented 3D boundary (OBB).\n     *\n     * The OBB is represented by a 32-element Float64Array containing the eight vertices of the box, where each vertex is a homogeneous coordinate having [x,y,z,w] elements.\n     *\n     * @type {Number[]}\n     */\n    get obb() {\n        return this._obb;\n    }\n\n    /**\n     * Approximate number of triangles in this VBOGeometry.\n     *\n     * Will be zero if {@link VBOGeometry#primitive} is not 'triangles', 'triangle-strip' or 'triangle-fan'.\n     *\n     * @type {Number}\n     */\n    get numTriangles() {\n        return this._numTriangles;\n    }\n\n    /** @private */\n    _getState() {\n        return this._state;\n    }\n\n    /**\n     * Destroys this component.\n     */\n    destroy() {\n        super.destroy();\n        const state = this._state;\n        if (state.indicesBuf) {\n            state.indicesBuf.destroy();\n        }\n        if (state.positionsBuf) {\n            state.positionsBuf.destroy();\n        }\n        if (state.normalsBuf) {\n            state.normalsBuf.destroy();\n        }\n        if (state.uvBuf) {\n            state.uvBuf.destroy();\n        }\n        if (state.colorsBuf) {\n            state.colorsBuf.destroy();\n        }\n        if (this._edgeIndicesBuf) {\n            this._edgeIndicesBuf.destroy();\n        }\n        state.destroy();\n        memoryStats.meshes--;\n    }\n}\n\nexport {VBOGeometry};","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {math} from '../math/math.js';\n\nconst modes = {\"opaque\": 0, \"mask\": 1, \"blend\": 2};\nconst modeNames = [\"opaque\", \"mask\", \"blend\"];\n\n/**\n * @desc Configures the normal rendered appearance of {@link Mesh}es using the physically-accurate *metallic-roughness* shading model.\n *\n * * Useful for conductive materials, such as metal, but also appropriate for insulators.\n * * {@link SpecularMaterial} is best for insulators, such as wood, ceramics and plastic.\n * * {@link PhongMaterial} is appropriate for non-realistic objects.\n * * {@link LambertMaterial} is appropriate for high-detail models that need to render as efficiently as possible.\n *\n * ## Usage\n *\n * In the example below we'll create a {@link Mesh} with {@link MetallicMaterial} and {@link ReadableGeometry} loaded from OBJ.\n *\n * Note that in this example we're providing separate {@link Texture} for the {@link MetallicMaterial#metallic} and {@link MetallicMaterial#roughness}\n * channels, which allows us a little creative flexibility. Then, in the next example further down, we'll combine those channels\n * within the same {@link Texture} for efficiency.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#materials_MetallicMaterial)]\n *\n * ````javascript\n * import {Viewer, Mesh, loadOBJGeometry, ReadableGeometry, MetallicMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.scene.camera.eye = [0.57, 1.37, 1.14];\n * viewer.scene.camera.look = [0.04, 0.58, 0.00];\n * viewer.scene.camera.up = [-0.22, 0.84, -0.48];\n *\n * loadOBJGeometry(viewer.scene, {\n *      src: \"models/obj/fireHydrant/FireHydrantMesh.obj\"\n * })\n * .then(function (geometry) {\n *\n *      // Success\n *\n *      new Mesh(viewer.scene, {\n *\n *          geometry: new ReadableGeometry(viewer.scene, geometry),\n *\n *          material: new MetallicMaterial(viewer.scene, {\n *\n *              baseColor: [1, 1, 1],\n *              metallic: 1.0,\n *              roughness: 1.0,\n *\n *              baseColorMap: new Texture(viewer.scene, {\n *                  src: \"models/obj/fireHydrant/fire_hydrant_Base_Color.png\",\n *                  encoding: \"sRGB\"\n *              }),\n *              normalMap: new Texture(viewer.scene, {\n *                  src: \"models/obj/fireHydrant/fire_hydrant_Normal_OpenGL.png\"\n *              }),\n *              roughnessMap: new Texture(viewer.scene, {\n *                  src: \"models/obj/fireHydrant/fire_hydrant_Roughness.png\"\n *              }),\n *              metallicMap: new Texture(viewer.scene, {\n *                  src: \"models/obj/fireHydrant/fire_hydrant_Metallic.png\"\n *              }),\n *              occlusionMap: new Texture(viewer.scene, {\n *                  src: \"models/obj/fireHydrant/fire_hydrant_Mixed_AO.png\"\n *              }),\n *\n *              specularF0: 0.7\n *          })\n *      });\n * }, function () {\n *          // Error\n *      });\n * ````\n *\n * ## Background Theory\n *\n * For an introduction to physically-based rendering (PBR) concepts, try these articles:\n *\n * * Joe Wilson's [Basic Theory of Physically-Based Rendering](https://www.marmoset.co/posts/basic-theory-of-physically-based-rendering/)\n * * Jeff Russel's [Physically-based Rendering, and you can too!](https://www.marmoset.co/posts/physically-based-rendering-and-you-can-too/)\n * * Sebastien Legarde's [Adapting a physically-based shading model](http://seblagarde.wordpress.com/tag/physically-based-rendering/)\n *\n * ## MetallicMaterial Properties\n *\n * The following table summarizes MetallicMaterial properties:\n *\n * | Property | Type | Range | Default Value | Space | Description |\n * |:--------:|:----:|:-----:|:-------------:|:-----:|:-----------:|\n * | {@link MetallicMaterial#baseColor} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the base color of the material. |\n * | {@link MetallicMaterial#metallic} | Number | [0, 1] | 1 | linear | The metallic-ness the material (1 for metals, 0 for non-metals). |\n * | {@link MetallicMaterial#roughness} | Number | [0, 1] | 1 | linear | The roughness of the material surface. |\n * | {@link MetallicMaterial#specularF0} | Number | [0, 1] | 1 | linear | The specular Fresnel of the material surface. |\n * | {@link MetallicMaterial#emissive} | Array | [0, 1] for all components | [0,0,0] | linear | The RGB components of the emissive color of the material. |\n * | {@link MetallicMaterial#alpha} | Number | [0, 1] | 1 | linear | The transparency of the material surface (0 fully transparent, 1 fully opaque). |\n * | {@link MetallicMaterial#baseColorMap} | {@link Texture} |  | null | sRGB | Texture RGB components multiplying by {@link MetallicMaterial#baseColor}. If the fourth component (A) is present, it multiplies by {@link MetallicMaterial#alpha}. |\n * | {@link MetallicMaterial#metallicMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link MetallicMaterial#metallic}. |\n * | {@link MetallicMaterial#roughnessMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link MetallicMaterial#roughness}. |\n * | {@link MetallicMaterial#metallicRoughnessMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link MetallicMaterial#metallic} and second component multiplying by {@link MetallicMaterial#roughness}. |\n * | {@link MetallicMaterial#emissiveMap} | {@link Texture} |  | null | linear | Texture with RGB components multiplying by {@link MetallicMaterial#emissive}. |\n * | {@link MetallicMaterial#alphaMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link MetallicMaterial#alpha}. |\n * | {@link MetallicMaterial#occlusionMap} | {@link Texture} |  | null | linear | Ambient occlusion texture multiplying by surface's reflected diffuse and specular light. |\n * | {@link MetallicMaterial#normalMap} | {@link Texture} |  | null | linear | Tangent-space normal map. |\n * | {@link MetallicMaterial#alphaMode} | String | \"opaque\", \"blend\", \"mask\" | \"blend\" |  | Alpha blend mode. |\n * | {@link MetallicMaterial#alphaCutoff} | Number | [0..1] | 0.5 |  | Alpha cutoff value. |\n * | {@link MetallicMaterial#backfaces} | Boolean |  | false |  | Whether to render {@link ReadableGeometry} backfaces. |\n * | {@link MetallicMaterial#frontface} | String | \"ccw\", \"cw\" | \"ccw\" |  | The winding order for {@link ReadableGeometry} frontfaces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise. |\n *\n *\n * ## Combining Channels Within the Same Textures\n *\n * In the previous example we provided separate {@link Texture} for the {@link MetallicMaterial#metallic} and\n * {@link MetallicMaterial#roughness} channels, but we can combine those channels into the same {@link Texture} to\n * reduce download time, memory footprint and rendering time (and also for glTF compatibility).\n *\n * Here's the {@link Mesh} again, with our MetallicMaterial with those channels combined in the {@link MetallicMaterial#metallicRoughnessMap}\n * {@link Texture}, where the *R* component multiplies by {@link MetallicMaterial#metallic} and *G* multiplies\n * by {@link MetallicMaterial#roughness}.\n *\n * ````javascript\n * new Mesh(viewer.scene, {\n *\n *     geometry: geometry,\n *\n *     material: new MetallicMaterial(viewer.scene, {\n *\n *         baseColor: [1, 1, 1],\n *         metallic: 1.0,\n *         roughness: 1.0,\n *\n *         baseColorMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_Base_Color.png\",\n *             encoding: \"sRGB\"\n *         }),\n *         normalMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_Normal_OpenGL.png\"\n *         }),\n *         metallicRoughnessMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_MetallicRoughness.png\"\n *         }),\n *         metallicRoughnessMap : new Texture(viewer.scene, {                  // <<----------- Added\n *             src: \"models/obj/fireHydrant/fire_hydrant_MetallicRoughness.png\"  // R component multiplies by metallic\n *         }),                                                                   // G component multiplies by roughness\n *         occlusionMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_Mixed_AO.png\"\n *         }),\n *\n *         specularF0: 0.7\n *  })\n * ````\n *\n * Although not shown in this example, we can also texture {@link MetallicMaterial#alpha} with the *A* component of\n * {@link MetallicMaterial#baseColorMap}'s {@link Texture}, if required.\n *\n * ## Alpha Blending\n *\n * Let's make our {@link Mesh} transparent.\n *\n * We'll update the {@link MetallicMaterial#alpha} and {@link MetallicMaterial#alphaMode}, causing it to blend 50%\n * with the background:\n *\n * ````javascript\n * hydrant.material.alpha = 0.5;\n * hydrant.material.alphaMode = \"blend\";\n * ````\n *\n * ## Alpha Masking\n *\n * Let's apply an alpha mask to our {@link Mesh}.\n *\n * We'll configure an {@link MetallicMaterial#alphaMap} to multiply by {@link MetallicMaterial#alpha},\n * with {@link MetallicMaterial#alphaMode} and {@link MetallicMaterial#alphaCutoff} to treat it as an alpha mask:\n *\n * ````javascript\n * new Mesh(viewer.scene, {\n *\n *     geometry: geometry,\n *\n *     material: new MetallicMaterial(viewer.scene, {\n *\n *         baseColor: [1, 1, 1],\n *         metallic: 1.0,\n *         roughness: 1.0,\n *         alpha: 1.0,\n *         alphaMode : \"mask\",  // <<---------------- Added\n *         alphaCutoff : 0.2,   // <<---------------- Added\n *\n *         alphaMap : new Texture(viewer.scene{ // <<---------------- Added\n *              src: \"textures/alphaMap.jpg\"\n *         }),\n *         baseColorMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_Base_Color.png\",\n *             encoding: \"sRGB\"\n *         }),\n *         normalMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_Normal_OpenGL.png\"\n *         }),\n *         metallicRoughnessMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_MetallicRoughness.png\"\n *         }),\n *         metallicRoughnessMap : new Texture(viewer.scene, {                  // <<----------- Added\n *             src: \"models/obj/fireHydrant/fire_hydrant_MetallicRoughness.png\"  // R component multiplies by metallic\n *         }),                                                                   // G component multiplies by roughness\n *         occlusionMap: new Texture(viewer.scene, {\n *             src: \"models/obj/fireHydrant/fire_hydrant_Mixed_AO.png\"\n *         }),\n *\n *         specularF0: 0.7\n *  })\n * ````\n */\nclass MetallicMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"MetallicMaterial\";\n    }\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this MetallicMaterial as well.\n     * @param {*} [cfg] The MetallicMaterial configuration.\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number[]} [cfg.baseColor=[1,1,1]] RGB diffuse color of this MetallicMaterial. Multiplies by the RGB components of {@link MetallicMaterial#baseColorMap}.\n     * @param {Number} [cfg.metallic=1.0] Factor in the range ````[0..1]```` indicating how metallic this MetallicMaterial is.  ````1```` is metal, ````0```` is non-metal. Multiplies by the *R* component of {@link MetallicMaterial#metallicMap} and the *A* component of {@link MetallicMaterial#metallicRoughnessMap}.\n     * @param {Number} [cfg.roughness=1.0] Factor in the range ````[0..1]```` indicating the roughness of this MetallicMaterial.  ````0```` is fully smooth, ````1```` is fully rough. Multiplies by the *R* component of {@link MetallicMaterial#roughnessMap}.\n     * @param {Number} [cfg.specularF0=0.0] Factor in the range ````[0..1]```` indicating specular Fresnel.\n     * @param {Number[]} [cfg.emissive=[0,0,0]]  RGB emissive color of this MetallicMaterial. Multiplies by the RGB components of {@link MetallicMaterial#emissiveMap}.\n     * @param {Number} [cfg.alpha=1.0] Factor in the range ````[0..1]```` indicating the alpha of this MetallicMaterial.  Multiplies by the *R* component of {@link MetallicMaterial#alphaMap} and the *A* component,  if present, of {@link MetallicMaterial#baseColorMap}. The value of  {@link MetallicMaterial#alphaMode} indicates how alpha is interpreted when rendering.\n     * @param {Texture} [cfg.baseColorMap=undefined] RGBA {@link Texture} containing the diffuse color of this MetallicMaterial, with optional *A* component for alpha. The RGB components multiply by the {@link MetallicMaterial#baseColor} property, while the *A* component, if present, multiplies by the {@link MetallicMaterial#alpha} property.\n     * @param {Texture} [cfg.alphaMap=undefined] RGB {@link Texture} containing this MetallicMaterial's alpha in its *R* component. The *R* component multiplies by the {@link MetallicMaterial#alpha} property. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {Texture} [cfg.metallicMap=undefined] RGB {@link Texture} containing this MetallicMaterial's metallic factor in its *R* component. The *R* component multiplies by the {@link MetallicMaterial#metallic} property. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {Texture} [cfg.roughnessMap=undefined] RGB {@link Texture} containing this MetallicMaterial's roughness factor in its *R* component. The *R* component multiplies by the  {@link MetallicMaterial#roughness} property. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {Texture} [cfg.metallicRoughnessMap=undefined] RGB {@link Texture} containing this MetallicMaterial's metalness in its *R* component and roughness in its *G* component. Its *R* component multiplies by the {@link MetallicMaterial#metallic} property, while its *G* component multiplies by the {@link MetallicMaterial#roughness} property. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {Texture} [cfg.emissiveMap=undefined] RGB {@link Texture} containing the emissive color of this MetallicMaterial. Multiplies by the {@link MetallicMaterial#emissive} property. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {Texture} [cfg.occlusionMap=undefined] RGB ambient occlusion {@link Texture}. Within shaders, multiplies by the specular and diffuse light reflected by surfaces. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {Texture} [cfg.normalMap=undefined] RGB tangent-space normal {@link Texture}. Must be within the same {@link Scene} as this MetallicMaterial.\n     * @param {String} [cfg.alphaMode=\"opaque\"] The alpha blend mode, which specifies how alpha is to be interpreted. Accepted values are \"opaque\", \"blend\" and \"mask\". See the {@link MetallicMaterial#alphaMode} property for more info.\n     * @param {Number} [cfg.alphaCutoff=0.5] The alpha cutoff value. See the {@link MetallicMaterial#alphaCutoff} property for more info.\n     * @param {Boolean} [cfg.backfaces=false] Whether to render {@link ReadableGeometry} backfaces.\n     * @param {Boolean} [cfg.frontface=\"ccw\"] The winding order for {@link ReadableGeometry} front faces - ````\"cw\"```` for clockwise, or ````\"ccw\"```` for counter-clockwise.\n     * @param {Number} [cfg.lineWidth=1] Scalar that controls the width of lines for {@link ReadableGeometry} with {@link ReadableGeometry#primitive} set to \"lines\".\n     * @param {Number} [cfg.pointSize=1] Scalar that controls the size of points for {@link ReadableGeometry} with {@link ReadableGeometry#primitive} set to \"points\".\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"MetallicMaterial\",\n            baseColor: math.vec4([1.0, 1.0, 1.0]),\n            emissive: math.vec4([0.0, 0.0, 0.0]),\n            metallic: null,\n            roughness: null,\n            specularF0: null,\n            alpha: null,\n            alphaMode: null, // \"opaque\"\n            alphaCutoff: null,\n            lineWidth: null,\n            pointSize: null,\n            backfaces: null,\n            frontface: null, // Boolean for speed; true == \"ccw\", false == \"cw\"\n            hash: null\n        });\n\n        this.baseColor = cfg.baseColor;\n        this.metallic = cfg.metallic;\n        this.roughness = cfg.roughness;\n        this.specularF0 = cfg.specularF0;\n        this.emissive = cfg.emissive;\n        this.alpha = cfg.alpha;\n\n        if (cfg.baseColorMap) {\n            this._baseColorMap = this._checkComponent(\"Texture\", cfg.baseColorMap);\n        }\n        if (cfg.metallicMap) {\n            this._metallicMap = this._checkComponent(\"Texture\", cfg.metallicMap);\n\n        }\n        if (cfg.roughnessMap) {\n            this._roughnessMap = this._checkComponent(\"Texture\", cfg.roughnessMap);\n        }\n        if (cfg.metallicRoughnessMap) {\n            this._metallicRoughnessMap = this._checkComponent(\"Texture\", cfg.metallicRoughnessMap);\n        }\n        if (cfg.emissiveMap) {\n            this._emissiveMap = this._checkComponent(\"Texture\", cfg.emissiveMap);\n        }\n        if (cfg.occlusionMap) {\n            this._occlusionMap = this._checkComponent(\"Texture\", cfg.occlusionMap);\n        }\n        if (cfg.alphaMap) {\n            this._alphaMap = this._checkComponent(\"Texture\", cfg.alphaMap);\n        }\n        if (cfg.normalMap) {\n            this._normalMap = this._checkComponent(\"Texture\", cfg.normalMap);\n        }\n\n        this.alphaMode = cfg.alphaMode;\n        this.alphaCutoff = cfg.alphaCutoff;\n        this.backfaces = cfg.backfaces;\n        this.frontface = cfg.frontface;\n        this.lineWidth = cfg.lineWidth;\n        this.pointSize = cfg.pointSize;\n\n        this._makeHash();\n    }\n\n    _makeHash() {\n        const state = this._state;\n        const hash = [\"/met\"];\n        if (this._baseColorMap) {\n            hash.push(\"/bm\");\n            if (this._baseColorMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n            hash.push(\"/\" + this._baseColorMap._state.encoding);\n        }\n        if (this._metallicMap) {\n            hash.push(\"/mm\");\n            if (this._metallicMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._roughnessMap) {\n            hash.push(\"/rm\");\n            if (this._roughnessMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._metallicRoughnessMap) {\n            hash.push(\"/mrm\");\n            if (this._metallicRoughnessMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._emissiveMap) {\n            hash.push(\"/em\");\n            if (this._emissiveMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._occlusionMap) {\n            hash.push(\"/ocm\");\n            if (this._occlusionMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._alphaMap) {\n            hash.push(\"/am\");\n            if (this._alphaMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._normalMap) {\n            hash.push(\"/nm\");\n            if (this._normalMap._state.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        hash.push(\";\");\n        state.hash = hash.join(\"\");\n    }\n\n\n    /**\n     * Sets the RGB diffuse color.\n     *\n     * Multiplies by the RGB components of {@link MetallicMaterial#baseColorMap}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     * @type {Number[]}\n     */\n    set baseColor(value) {\n        let baseColor = this._state.baseColor;\n        if (!baseColor) {\n            baseColor = this._state.baseColor = new Float32Array(3);\n        } else if (value && baseColor[0] === value[0] && baseColor[1] === value[1] && baseColor[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            baseColor[0] = value[0];\n            baseColor[1] = value[1];\n            baseColor[2] = value[2];\n        } else {\n            baseColor[0] = 1;\n            baseColor[1] = 1;\n            baseColor[2] = 1;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB diffuse color.\n     *\n     * Multiplies by the RGB components of {@link MetallicMaterial#baseColorMap}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     * @type {Number[]}\n     */\n    get baseColor() {\n        return this._state.baseColor;\n    }\n\n\n    /**\n     * Gets the RGB {@link Texture} containing the diffuse color of this MetallicMaterial, with optional *A* component for alpha.\n     *\n     * The RGB components multiply by {@link MetallicMaterial#baseColor}, while the *A* component, if present, multiplies by {@link MetallicMaterial#alpha}.\n     *\n     * @type {Texture}\n     */\n    get baseColorMap() {\n        return this._baseColorMap;\n    }\n\n    /**\n     * Sets the metallic factor.\n     *\n     * This is in the range ````[0..1]```` and indicates how metallic this MetallicMaterial is.\n     *\n     * ````1```` is metal, ````0```` is non-metal.\n     *\n     * Multiplies by the *R* component of {@link MetallicMaterial#metallicMap} and the *A* component of {@link MetallicMaterial#metallicRoughnessMap}.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set metallic(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.metallic === value) {\n            return;\n        }\n        this._state.metallic = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the metallic factor.\n     *\n     * @type {Number}\n     */\n    get metallic() {\n        return this._state.metallic;\n    }\n\n    /**\n     * Gets the RGB {@link Texture} containing this MetallicMaterial's metallic factor in its *R* component.\n     *\n     * The *R* component multiplies by {@link MetallicMaterial#metallic}.\n     *\n     * @type {Texture}\n     */\n    get metallicMap() {\n        return this._attached.metallicMap;\n    }\n\n    /**\n     *  Sets the roughness factor.\n     *\n     *  This factor is in the range ````[0..1]````, where ````0```` is fully smooth,````1```` is fully rough.\n     *\n     * Multiplies by the *R* component of {@link MetallicMaterial#roughnessMap}.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set roughness(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.roughness === value) {\n            return;\n        }\n        this._state.roughness = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the roughness factor.\n     *\n     * @type {Number}\n     */\n    get roughness() {\n        return this._state.roughness;\n    }\n\n    /**\n     * Gets the RGB {@link Texture} containing this MetallicMaterial's roughness factor in its *R* component.\n     *\n     * The *R* component multiplies by {@link MetallicMaterial#roughness}.\n     *\n     * @type {Texture}\n     */\n    get roughnessMap() {\n        return this._attached.roughnessMap;\n    }\n\n    /**\n     * Gets the RGB {@link Texture} containing this MetallicMaterial's metalness in its *R* component and roughness in its *G* component.\n     *\n     * Its *B* component multiplies by the {@link MetallicMaterial#metallic} property, while its *G* component multiplies by the {@link MetallicMaterial#roughness} property.\n     *\n     * @type {Texture}\n     */\n    get metallicRoughnessMap() {\n        return this._attached.metallicRoughnessMap;\n    }\n\n    /**\n     * Sets the factor in the range [0..1] indicating specular Fresnel value.\n     *\n     * Default value is ````0.0````.\n     *\n     * @type {Number}\n     */\n    set specularF0(value) {\n        value = (value !== undefined && value !== null) ? value : 0.0;\n        if (this._state.specularF0 === value) {\n            return;\n        }\n        this._state.specularF0 = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the factor in the range [0..1] indicating specular Fresnel value.\n     *\n     * @type {Number}\n     */\n    get specularF0() {\n        return this._state.specularF0;\n    }\n\n    /**\n     * Sets the RGB emissive color.\n     *\n     * Multiplies by {@link MetallicMaterial#emissiveMap}.\n     *\n     * Default value is ````[0.0, 0.0, 0.0]````.\n     *\n     * @type {Number[]}\n     */\n    set emissive(value) {\n        let emissive = this._state.emissive;\n        if (!emissive) {\n            emissive = this._state.emissive = new Float32Array(3);\n        } else if (value && emissive[0] === value[0] && emissive[1] === value[1] && emissive[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            emissive[0] = value[0];\n            emissive[1] = value[1];\n            emissive[2] = value[2];\n        } else {\n            emissive[0] = 0;\n            emissive[1] = 0;\n            emissive[2] = 0;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB emissive color.\n     *\n     * @type {Number[]}\n     */\n    get emissive() {\n        return this._state.emissive;\n    }\n\n    /**\n     * Gets the RGB emissive map.\n     *\n     * Multiplies by {@link MetallicMaterial#emissive}.\n     *\n     * @type {Texture}\n     */\n    get emissiveMap() {\n        return this._attached.emissiveMap;\n    }\n\n    /**\n     * Gets the RGB ambient occlusion map.\n     *\n     * Multiplies by the specular and diffuse light reflected by surfaces.\n     *\n     * @type {Texture}\n     */\n    get occlusionMap() {\n        return this._attached.occlusionMap;\n    }\n\n    /**\n     * Sets factor in the range ````[0..1]```` that indicates the alpha value.\n     *\n     * Multiplies by the *R* component of {@link MetallicMaterial#alphaMap} and the *A* component, if present, of {@link MetallicMaterial#baseColorMap}.\n     *\n     * The value of {@link MetallicMaterial#alphaMode} indicates how alpha is interpreted when rendering.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set alpha(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.alpha === value) {\n            return;\n        }\n        this._state.alpha = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets factor in the range ````[0..1]```` that indicates the alpha value.\n     *\n     * @type {Number}\n     */\n    get alpha() {\n        return this._state.alpha;\n    }\n\n    /**\n     * Gets the RGB {@link Texture} containing this MetallicMaterial's alpha in its *R* component.\n     *\n     * The *R* component multiplies by the {@link MetallicMaterial#alpha} property.\n     *\n     * @type {Texture}\n     */\n    get alphaMap() {\n        return this._attached.alphaMap;\n    }\n\n    /**\n     * Gets the RGB tangent-space normal map {@link Texture}.\n     *\n     * @type {Texture}\n     */\n    get normalMap() {\n        return this._attached.normalMap;\n    }\n\n    /**\n     * Sets the alpha rendering mode.\n     *\n     * This specifies how alpha is interpreted. Alpha is the combined result of the {@link MetallicMaterial#alpha} and {@link MetallicMaterial#alphaMap} properties.\n     *\n     * Accepted values are:\n     *\n     * * \"opaque\" - The alpha value is ignored and the rendered output is fully opaque (default).\n     * * \"mask\" - The rendered output is either fully opaque or fully transparent depending on the alpha and {@link MetallicMaterial#alphaCutoff}.\n     * * \"blend\" - The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator).\n     *\n     * @type {String}\n     */\n    set alphaMode(alphaMode) {\n        alphaMode = alphaMode || \"opaque\";\n        let value = modes[alphaMode];\n        if (value === undefined) {\n            this.error(\"Unsupported value for 'alphaMode': \" + alphaMode + \" defaulting to 'opaque'\");\n            value = \"opaque\";\n        }\n        if (this._state.alphaMode === value) {\n            return;\n        }\n        this._state.alphaMode = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the alpha rendering mode.\n     *\n     * @type {String}\n     */\n    get alphaMode() {\n        return modeNames[this._state.alphaMode];\n    }\n\n    /**\n     * Sets the alpha cutoff value.\n     *\n     * Specifies the cutoff threshold when {@link MetallicMaterial#alphaMode} equals \"mask\". If the alpha is greater than or equal to this value then it is rendered as fully opaque, otherwise, it is rendered as fully transparent. A value greater than 1.0 will render the entire\n     * material as fully transparent. This value is ignored for other modes.\n     *\n     * Alpha is the combined result of the {@link MetallicMaterial#alpha} and {@link MetallicMaterial#alphaMap} properties.\n     *\n     * Default value is ````0.5````.\n     *\n     * @type {Number}\n     */\n    set alphaCutoff(alphaCutoff) {\n        if (alphaCutoff === null || alphaCutoff === undefined) {\n            alphaCutoff = 0.5;\n        }\n        if (this._state.alphaCutoff === alphaCutoff) {\n            return;\n        }\n        this._state.alphaCutoff = alphaCutoff;\n    }\n\n    /**\n     * Gets the alpha cutoff value.\n     *\n     * @type {Number}\n     */\n    get alphaCutoff() {\n        return this._state.alphaCutoff;\n    }\n\n    /**\n     * Sets whether backfaces are visible on attached {@link Mesh}es.\n     *\n     * The backfaces will belong to {@link ReadableGeometry} compoents that are also attached to the {@link Mesh}es.\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set backfaces(value) {\n        value = !!value;\n        if (this._state.backfaces === value) {\n            return;\n        }\n        this._state.backfaces = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether backfaces are visible on attached {@link Mesh}es.\n     *\n     * @type {Boolean}\n     */\n    get backfaces() {\n        return this._state.backfaces;\n    }\n\n    /**\n     * Sets the winding direction of front faces of {@link Geometry} of attached {@link Mesh}es.\n     *\n     * Default value is ````\"ccw\"````.\n     *\n     * @type {String}\n     */\n    set frontface(value) {\n        value = value !== \"cw\";\n        if (this._state.frontface === value) {\n            return;\n        }\n        this._state.frontface = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the winding direction of front faces of {@link Geometry} of attached {@link Mesh}es.\n*\n     * @type {String}\n     */\n    get frontface() {\n        return this._state.frontface ? \"ccw\" : \"cw\";\n    }\n\n    /**\n     * Sets the MetallicMaterial's line width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set lineWidth(value) {\n        this._state.lineWidth = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the MetallicMaterial's line width.\n     *\n     * @type {Number}\n     */\n    get lineWidth() {\n        return this._state.lineWidth;\n    }\n\n    /**\n     * Sets the MetallicMaterial's point size.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set pointSize(value) {\n        this._state.pointSize = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the MetallicMaterial's point size.\n     *\n     * @type {Number}\n     */\n    get pointSize() {\n        return this._state.pointSize;\n    }\n\n    /**\n     * Destroys this MetallicMaterial.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {MetallicMaterial};","import {Material} from './Material.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {math} from '../math/math.js';\n\nconst alphaModes = {\"opaque\": 0, \"mask\": 1, \"blend\": 2};\nconst alphaModeNames = [\"opaque\", \"mask\", \"blend\"];\n\n/**\n * @desc Configures the normal rendered appearance of {@link Mesh}es using the physically-accurate *specular-glossiness* shading model.\n *\n * * Useful for insulators, such as wood, ceramics and plastic.\n * * {@link MetallicMaterial} is best for conductive materials, such as metal.\n * * {@link PhongMaterial} is appropriate for non-realistic objects.\n * * {@link LambertMaterial} is appropriate for high-detail models that need to render as efficiently as possible.\n *\n * ## Usage\n *\n * In the example below we'll create a {@link Mesh} with a {@link buildTorusGeometry} and a SpecularMaterial.\n *\n * Note that in this example we're providing separate {@link Texture} for the {@link SpecularMaterial#specular} and {@link SpecularMaterial#glossiness}\n * channels, which allows us a little creative flexibility. Then, in the next example further down, we'll combine those channels\n * within the same {@link Texture} for efficiency.\n *\n * ````javascript\n * import {Viewer, Mesh, buildTorusGeometry, SpecularMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({ canvasId: \"myCanvas\" });\n *\n * const myMesh = new Mesh(viewer.scene,{\n *\n *      geometry: new ReadableGeometry(viewer.scene, buildTorusGeometry()),\n *\n *      material: new SpecularMaterial(viewer.scene,{\n *\n *          // Channels with default values, just to show them\n *\n *          diffuse: [1.0, 1.0, 1.0],\n *          specular: [1.0, 1.0, 1.0],\n *          glossiness: 1.0,\n *          emissive: [0.0, 0.0, 0.0]\n *          alpha: 1.0,\n *\n *          // Textures to multiply some of the channels\n *\n *          diffuseMap: new Texture(viewer.scene, { // RGB components multiply by diffuse\n *              src: \"textures/diffuse.jpg\"\n *          }),\n *          specularMap: new Texture(viewer.scene, { // RGB component multiplies by specular\n *              src: \"textures/specular.jpg\"\n *          }),\n *          glossinessMap: new Texture(viewer.scene, { // R component multiplies by glossiness\n *              src: \"textures/glossiness.jpg\"\n *          }),\n *          normalMap: new Texture(viewer.scene, {\n *              src: \"textures/normalMap.jpg\"\n *          })\n *      })\n * });\n * ````\n *\n * ## Combining Channels Within the Same Textures\n *\n *  In the previous example we provided separate {@link Texture} for the {@link SpecularMaterial#specular} and\n * {@link SpecularMaterial#glossiness} channels, but we can combine those channels into the same {@link Texture} to reduce\n * download time, memory footprint and rendering time (and also for glTF compatibility).\n *\n * Here's our SpecularMaterial again with those channels combined in the {@link SpecularMaterial#specularGlossinessMap}\n * {@link Texture}, where the *RGB* component multiplies by {@link SpecularMaterial#specular} and *A* multiplies by {@link SpecularMaterial#glossiness}.\n *\n * ````javascript\n * const myMesh = new Mesh(viewer.scene,{\n *\n *      geometry: new ReadableGeometry(viewer.scene, buildTorusGeometry()),\n *\n *      material: new SpecularMaterial(viewer.scene,{\n *\n *          // Channels with default values, just to show them\n *\n *          diffuse: [1.0, 1.0, 1.0],\n *          specular: [1.0, 1.0, 1.0],\n *          glossiness: 1.0,\n *          emissive: [0.0, 0.0, 0.0]\n *          alpha: 1.0,\n *\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse.jpg\"\n *          }),\n *          specularGlossinessMap: new Texture(viewer.scene, { // RGB multiplies by specular, A by glossiness\n *              src: \"textures/specularGlossiness.jpg\"\n *          }),\n *          normalMap: new Texture(viewer.scene, {\n *              src: \"textures/normalMap.jpg\"\n *          })\n *      })\n * });\n * ````\n *\n * Although not shown in this example, we can also texture {@link SpecularMaterial#alpha} with\n * the *A* component of {@link SpecularMaterial#diffuseMap}'s {@link Texture}, if required.\n *\n * ## Alpha Blending\n *\n * Let's make our {@link Mesh} transparent. We'll redefine {@link SpecularMaterial#alpha}\n * and {@link SpecularMaterial#alphaMode}, causing it to blend 50% with the background:\n *\n * ````javascript\n * const myMesh = new Mesh(viewer.scene,{\n *\n *      geometry: new ReadableGeometry(viewer.scene, buildTorusGeometry()),\n *\n *      material: new SpecularMaterial(viewer.scene,{\n *\n *          // Channels with default values, just to show them\n *\n *          diffuse: [1.0, 1.0, 1.0],\n *          specular: [1.0, 1.0, 1.0],\n *          glossiness: 1.0,\n *          emissive: [0.0, 0.0, 0.0]\n *          alpha: 0.5,         // <<----------- Changed\n *          alphaMode: \"blend\", // <<----------- Added\n *\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse.jpg\"\n *          }),\n *          specularGlossinessMap: new Texture(viewer.scene, { // RGB multiplies by specular, A by glossiness\n *              src: \"textures/specularGlossiness.jpg\"\n *          }),\n *          normalMap: new Texture(viewer.scene, {\n *              src: \"textures/normalMap.jpg\"\n *          })\n *      })\n * });\n * ````\n *\n * ## Alpha Masking\n *\n * Now let's make holes in our {@link Mesh}. We'll give its SpecularMaterial an {@link SpecularMaterial#alphaMap}\n * and configure {@link SpecularMaterial#alpha}, {@link SpecularMaterial#alphaMode},\n * and {@link SpecularMaterial#alphaCutoff} to treat it as an alpha mask:\n *\n * ````javascript\n * const myMesh = new Mesh(viewer.scene,{\n *\n *     geometry: buildTorusGeometry(viewer.scene, ReadableGeometry, {}),\n *\n *      material: new SpecularMaterial(viewer.scene, {\n *\n *          // Channels with default values, just to show them\n *\n *          diffuse: [1.0, 1.0, 1.0],\n *          specular: [1.0, 1.0, 1.0],\n *          glossiness: 1.0,\n *          emissive: [0.0, 0.0, 0.0]\n *          alpha: 1.0,         // <<----------- Changed\n *          alphaMode: \"mask\",  // <<----------- Changed\n *          alphaCutoff: 0.2,   // <<----------- Added\n *\n *          alphaMap: new Texture(viewer.scene, { // <<---------- Added\n *              src: \"textures/diffuse/crossGridColorMap.jpg\"\n *          }),\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse.jpg\"\n *          }),\n *          specularGlossinessMap: new Texture(viewer.scene, { // RGB multiplies by specular, A by glossiness\n *              src: \"textures/specularGlossiness.jpg\"\n *          }),\n *          normalMap: new Texture(viewer.scene, {\n *              src: \"textures/normalMap.jpg\"\n *          })\n *      })\n * });\n * ````\n *\n * ## Background Theory\n *\n * For an introduction to physically-based rendering (PBR) concepts, try these articles:\n *\n * * Joe Wilson's [Basic Theory of Physically-Based Rendering](https://www.marmoset.co/posts/basic-theory-of-physically-based-rendering/)\n * * Jeff Russel's [Physically-based Rendering, and you can too!](https://www.marmoset.co/posts/physically-based-rendering-and-you-can-too/)\n * * Sebastien Legarde's [Adapting a physically-based shading model](http://seblagarde.wordpress.com/tag/physically-based-rendering/)\n *\n * ## SpecularMaterial Properties\n *\n * The following table summarizes SpecularMaterial properties:\n *\n * | Property | Type | Range | Default Value | Space | Description |\n * |:--------:|:----:|:-----:|:-------------:|:-----:|:-----------:|\n * | {@link SpecularMaterial#diffuse} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the diffuse color of the material. |\n * | {@link SpecularMaterial#specular} | Array | [0, 1] for all components | [1,1,1,1] | linear | The RGB components of the specular color of the material. |\n * | {@link SpecularMaterial#glossiness} | Number | [0, 1] | 1 | linear | The glossiness the material. |\n * | {@link SpecularMaterial#specularF0} | Number | [0, 1] | 1 | linear | The specularF0 of the material surface. |\n * | {@link SpecularMaterial#emissive} | Array | [0, 1] for all components | [0,0,0] | linear | The RGB components of the emissive color of the material. |\n * | {@link SpecularMaterial#alpha} | Number | [0, 1] | 1 | linear | The transparency of the material surface (0 fully transparent, 1 fully opaque). |\n * | {@link SpecularMaterial#diffuseMap} | {@link Texture} |  | null | sRGB | Texture RGB components multiplying by {@link SpecularMaterial#diffuse}. If the fourth component (A) is present, it multiplies by {@link SpecularMaterial#alpha}. |\n * | {@link SpecularMaterial#specularMap} | {@link Texture} |  | null | sRGB | Texture RGB components multiplying by {@link SpecularMaterial#specular}. If the fourth component (A) is present, it multiplies by {@link SpecularMaterial#alpha}. |\n * | {@link SpecularMaterial#glossinessMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link SpecularMaterial#glossiness}. |\n * | {@link SpecularMaterial#specularGlossinessMap} | {@link Texture} |  | null | linear | Texture with first three components multiplying by {@link SpecularMaterial#specular} and fourth component multiplying by {@link SpecularMaterial#glossiness}. |\n * | {@link SpecularMaterial#emissiveMap} | {@link Texture} |  | null | linear | Texture with RGB components multiplying by {@link SpecularMaterial#emissive}. |\n * | {@link SpecularMaterial#alphaMap} | {@link Texture} |  | null | linear | Texture with first component multiplying by {@link SpecularMaterial#alpha}. |\n * | {@link SpecularMaterial#occlusionMap} | {@link Texture} |  | null | linear | Ambient occlusion texture multiplying by surface's reflected diffuse and specular light. |\n * | {@link SpecularMaterial#normalMap} | {@link Texture} |  | null | linear | Tangent-space normal map. |\n * | {@link SpecularMaterial#alphaMode} | String | \"opaque\", \"blend\", \"mask\" | \"blend\" |  | Alpha blend mode. |\n * | {@link SpecularMaterial#alphaCutoff} | Number | [0..1] | 0.5 |  | Alpha cutoff value. |\n * | {@link SpecularMaterial#backfaces} | Boolean |  | false |  | Whether to render {@link Geometry} backfaces. |\n * | {@link SpecularMaterial#frontface} | String | \"ccw\", \"cw\" | \"ccw\" |  | The winding order for {@link Geometry} frontfaces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise. |\n *\n */\nclass SpecularMaterial extends Material {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"SpecularMaterial\";\n    }\n\n    /**\n     *\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this component as well.\n     * @param {*} [cfg] The SpecularMaterial configuration\n     * @param {String} [cfg.id] Optional ID, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n     * @param {Number[]} [cfg.diffuse=[1,1,1]] RGB diffuse color of this SpecularMaterial. Multiplies by the RGB components of {@link SpecularMaterial#diffuseMap}.\n     * @param {Texture} [cfg.diffuseMap=undefined] RGBA {@link Texture} containing the diffuse color of this SpecularMaterial, with optional *A* component for alpha. The RGB components multiply by {@link SpecularMaterial#diffuse}, while the *A* component, if present, multiplies by {@link SpecularMaterial#alpha}.\n     * @param {Number} [cfg.specular=[1,1,1]] RGB specular color of this SpecularMaterial. Multiplies by the {@link SpecularMaterial#specularMap} and the *RGB* components of {@link SpecularMaterial#specularGlossinessMap}.\n     * @param {Texture} [cfg.specularMap=undefined] RGB texture containing the specular color of this SpecularMaterial. Multiplies by the {@link SpecularMaterial#specular} property. Must be within the same {@link Scene} as this SpecularMaterial.\n     * @param {Number} [cfg.glossiness=1.0] Factor in the range [0..1] indicating how glossy this SpecularMaterial is. 0 is no glossiness, 1 is full glossiness. Multiplies by the *R* component of {@link SpecularMaterial#glossinessMap} and the *A* component of {@link SpecularMaterial#specularGlossinessMap}.\n     * @param {Texture} [cfg.specularGlossinessMap=undefined] RGBA {@link Texture} containing this SpecularMaterial's specular color in its *RGB* component and glossiness in its *A* component. Its *RGB* components multiply by {@link SpecularMaterial#specular}, while its *A* component multiplies by {@link SpecularMaterial#glossiness}. Must be within the same {@link Scene} as this SpecularMaterial.\n     * @param {Number} [cfg.specularF0=0.0] Factor in the range 0..1 indicating how reflective this SpecularMaterial is.\n     * @param {Number[]} [cfg.emissive=[0,0,0]]  RGB emissive color of this SpecularMaterial. Multiplies by the RGB components of {@link SpecularMaterial#emissiveMap}.\n     * @param {Texture} [cfg.emissiveMap=undefined] RGB {@link Texture} containing the emissive color of this SpecularMaterial. Multiplies by the {@link SpecularMaterial#emissive} property. Must be within the same {@link Scene} as this SpecularMaterial.\n     * @param {Texture} [cfg.occlusionMap=undefined] RGB ambient occlusion {@link Texture}. Within shaders, multiplies by the specular and diffuse light reflected by surfaces. Must be within the same {@link Scene} as this SpecularMaterial.\n     * @param {Texture} [cfg.normalMap=undefined] {Texture} RGB tangent-space normal {@link Texture}. Must be within the same {@link Scene} as this SpecularMaterial.\n     * @param {Number} [cfg.alpha=1.0] Factor in the range 0..1 indicating how transparent this SpecularMaterial is. A value of 0.0 indicates fully transparent, 1.0 is fully opaque. Multiplies by the *R* component of {@link SpecularMaterial#alphaMap} and the *A* component, if present, of {@link SpecularMaterial#diffuseMap}.\n     * @param {Texture} [cfg.alphaMap=undefined] RGB {@link Texture} containing this SpecularMaterial's alpha in its *R* component. The *R* component multiplies by the {@link SpecularMaterial#alpha} property. Must be within the same {@link Scene} as this SpecularMaterial.\n     * @param {String} [cfg.alphaMode=\"opaque\"] The alpha blend mode - accepted values are \"opaque\", \"blend\" and \"mask\". See the {@link SpecularMaterial#alphaMode} property for more info.\n     * @param {Number} [cfg.alphaCutoff=0.5] The alpha cutoff value. See the {@link SpecularMaterial#alphaCutoff} property for more info.\n     * @param {Boolean} [cfg.backfaces=false] Whether to render {@link Geometry} backfaces.\n     * @param {Boolean} [cfg.frontface=\"ccw\"] The winding order for {@link Geometry} front faces - \"cw\" for clockwise, or \"ccw\" for counter-clockwise.\n     * @param {Number} [cfg.lineWidth=1] Scalar that controls the width of {@link Geometry lines.\n     * @param {Number} [cfg.pointSize=1] Scalar that controls the size of {@link Geometry} points.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            type: \"SpecularMaterial\",\n            diffuse: math.vec3([1.0, 1.0, 1.0]),\n            emissive: math.vec3([0.0, 0.0, 0.0]),\n            specular: math.vec3([1.0, 1.0, 1.0]),\n            glossiness: null,\n            specularF0: null,\n            alpha: null,\n            alphaMode: null,\n            alphaCutoff: null,\n            lineWidth: null,\n            pointSize: null,\n            backfaces: null,\n            frontface: null, // Boolean for speed; true == \"ccw\", false == \"cw\"\n            hash: null\n        });\n\n        this.diffuse = cfg.diffuse;\n        this.specular = cfg.specular;\n        this.glossiness = cfg.glossiness;\n        this.specularF0 = cfg.specularF0;\n        this.emissive = cfg.emissive;\n        this.alpha = cfg.alpha;\n\n        if (cfg.diffuseMap) {\n            this._diffuseMap = this._checkComponent(\"Texture\", cfg.diffuseMap);\n        }\n        if (cfg.emissiveMap) {\n            this._emissiveMap = this._checkComponent(\"Texture\", cfg.emissiveMap);\n        }\n        if (cfg.specularMap) {\n            this._specularMap = this._checkComponent(\"Texture\", cfg.specularMap);\n        }\n        if (cfg.glossinessMap) {\n            this._glossinessMap = this._checkComponent(\"Texture\", cfg.glossinessMap);\n        }\n        if (cfg.specularGlossinessMap) {\n            this._specularGlossinessMap = this._checkComponent(\"Texture\", cfg.specularGlossinessMap);\n        }\n        if (cfg.occlusionMap) {\n            this._occlusionMap = this._checkComponent(\"Texture\", cfg.occlusionMap);\n        }\n        if (cfg.alphaMap) {\n            this._alphaMap = this._checkComponent(\"Texture\", cfg.alphaMap);\n        }\n        if (cfg.normalMap) {\n            this._normalMap = this._checkComponent(\"Texture\", cfg.normalMap);\n        }\n\n        this.alphaMode = cfg.alphaMode;\n        this.alphaCutoff = cfg.alphaCutoff;\n        this.backfaces = cfg.backfaces;\n        this.frontface = cfg.frontface;\n\n        this.lineWidth = cfg.lineWidth;\n        this.pointSize = cfg.pointSize;\n\n        this._makeHash();\n    }\n\n    _makeHash() {\n        const state = this._state;\n        const hash = [\"/spe\"];\n        if (this._diffuseMap) {\n            hash.push(\"/dm\");\n            if (this._diffuseMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n            hash.push(\"/\" + this._diffuseMap.encoding);\n        }\n        if (this._emissiveMap) {\n            hash.push(\"/em\");\n            if (this._emissiveMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._glossinessMap) {\n            hash.push(\"/gm\");\n            if (this._glossinessMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._specularMap) {\n            hash.push(\"/sm\");\n            if (this._specularMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._specularGlossinessMap) {\n            hash.push(\"/sgm\");\n            if (this._specularGlossinessMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._occlusionMap) {\n            hash.push(\"/ocm\");\n            if (this._occlusionMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._normalMap) {\n            hash.push(\"/nm\");\n            if (this._normalMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        if (this._alphaMap) {\n            hash.push(\"/opm\");\n            if (this._alphaMap.hasMatrix) {\n                hash.push(\"/mat\");\n            }\n        }\n        hash.push(\";\");\n        state.hash = hash.join(\"\");\n    }\n\n    /**\n     * Sets the RGB diffuse color of this SpecularMaterial.\n     *\n     * Multiplies by the *RGB* components of {@link SpecularMaterial#diffuseMap}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     * @type {Number[]}\n     */\n    set diffuse(value) {\n        let diffuse = this._state.diffuse;\n        if (!diffuse) {\n            diffuse = this._state.diffuse = new Float32Array(3);\n        } else if (value && diffuse[0] === value[0] && diffuse[1] === value[1] && diffuse[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            diffuse[0] = value[0];\n            diffuse[1] = value[1];\n            diffuse[2] = value[2];\n        } else {\n            diffuse[0] = 1;\n            diffuse[1] = 1;\n            diffuse[2] = 1;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB diffuse color of this SpecularMaterial.\n     *\n     * @type {Number[]}\n     */\n    get diffuse() {\n        return this._state.diffuse;\n    }\n\n    /**\n     * Gets the RGB {@link Texture} containing the diffuse color of this SpecularMaterial, with optional *A* component for alpha.\n     *\n     * The *RGB* components multipliues by the {@link SpecularMaterial#diffuse} property, while the *A* component, if present, multiplies by the {@link SpecularMaterial#alpha} property.\n     *\n     * @type {Texture}\n     */\n    get diffuseMap() {\n        return this._diffuseMap;\n    }\n\n    /**\n     * Sets the RGB specular color of this SpecularMaterial.\n     *\n     * Multiplies by {@link SpecularMaterial#specularMap} and the *A* component of {@link SpecularMaterial#specularGlossinessMap}.\n     *\n     * Default value is ````[1.0, 1.0, 1.0]````.\n     *\n     * @type {Number[]}\n     */\n    set specular(value) {\n        let specular = this._state.specular;\n        if (!specular) {\n            specular = this._state.specular = new Float32Array(3);\n        } else if (value && specular[0] === value[0] && specular[1] === value[1] && specular[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            specular[0] = value[0];\n            specular[1] = value[1];\n            specular[2] = value[2];\n        } else {\n            specular[0] = 1;\n            specular[1] = 1;\n            specular[2] = 1;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB specular color of this SpecularMaterial.\n     *\n     * @type {Number[]}\n     */\n    get specular() {\n        return this._state.specular;\n    }\n\n    /**\n     * Gets the RGB texture containing the specular color of this SpecularMaterial.\n     *\n     * Multiplies by {@link SpecularMaterial#specular}.\n     *\n     * @type {Texture}\n     */\n    get specularMap() {\n        return this._specularMap;\n    }\n\n    /**\n     * Gets the RGBA texture containing this SpecularMaterial's specular color in its *RGB* components and glossiness in its *A* component.\n     *\n     * The *RGB* components multiplies {@link SpecularMaterial#specular}, while the *A* component multiplies by {@link SpecularMaterial#glossiness}.\n     *\n     * @type {Texture}\n     */\n    get specularGlossinessMap() {\n        return this._specularGlossinessMap;\n    }\n\n    /**\n     * Sets the Factor in the range [0..1] indicating how glossy this SpecularMaterial is.\n     *\n     * ````0```` is no glossiness, ````1```` is full glossiness.\n     *\n     * Multiplies by the *R* component of {@link SpecularMaterial#glossinessMap} and the *A* component of {@link SpecularMaterial#specularGlossinessMap}.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set glossiness(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.glossiness === value) {\n            return;\n        }\n        this._state.glossiness = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the Factor in the range ````[0..1]```` indicating how glossy this SpecularMaterial is.\n\n     * @type {Number}\n     */\n    get glossiness() {\n        return this._state.glossiness;\n    }\n\n    /**\n     * Gets the RGB texture containing this SpecularMaterial's glossiness in its *R* component.\n     *\n     * The *R* component multiplies by {@link SpecularMaterial#glossiness}.\n     ** @type {Texture}\n     */\n    get glossinessMap() {\n        return this._glossinessMap;\n    }\n\n    /**\n     * Sets the factor in the range ````[0..1]```` indicating amount of specular Fresnel.\n     *\n     * Default value is ````0.0````.\n     *\n     * @type {Number}\n     */\n    set specularF0(value) {\n        value = (value !== undefined && value !== null) ? value : 0.0;\n        if (this._state.specularF0 === value) {\n            return;\n        }\n        this._state.specularF0 = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the factor in the range ````[0..1]```` indicating amount of specular Fresnel.\n     *\n     * @type {Number}\n     */\n    get specularF0() {\n        return this._state.specularF0;\n    }\n\n    /**\n     * Sets the RGB emissive color of this SpecularMaterial.\n     *\n     * Multiplies by {@link SpecularMaterial#emissiveMap}.\n\n     * Default value is ````[0.0, 0.0, 0.0]````.\n     *\n     * @type {Number[]}\n     */\n    set emissive(value) {\n        let emissive = this._state.emissive;\n        if (!emissive) {\n            emissive = this._state.emissive = new Float32Array(3);\n        } else if (value && emissive[0] === value[0] && emissive[1] === value[1] && emissive[2] === value[2]) {\n            return;\n        }\n        if (value) {\n            emissive[0] = value[0];\n            emissive[1] = value[1];\n            emissive[2] = value[2];\n        } else {\n            emissive[0] = 0;\n            emissive[1] = 0;\n            emissive[2] = 0;\n        }\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the RGB emissive color of this SpecularMaterial.\n     *\n     * @type {Number[]}\n     */\n    get emissive() {\n        return this._state.emissive;\n    }\n\n    /**\n     * Gets the RGB texture containing the emissive color of this SpecularMaterial.\n     *\n     * Multiplies by {@link SpecularMaterial#emissive}.\n     *\n     * @type {Texture}\n     */\n    get emissiveMap() {\n        return this._emissiveMap;\n    }\n\n    /**\n     * Sets the factor in the range [0..1] indicating how transparent this SpecularMaterial is.\n     *\n     * A value of ````0.0```` is fully transparent, while ````1.0```` is fully opaque.\n     *\n     * Multiplies by the *R* component of {@link SpecularMaterial#alphaMap} and the *A* component, if present, of {@link SpecularMaterial#diffuseMap}.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set alpha(value) {\n        value = (value !== undefined && value !== null) ? value : 1.0;\n        if (this._state.alpha === value) {\n            return;\n        }\n        this._state.alpha = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the factor in the range [0..1] indicating how transparent this SpecularMaterial is.\n     *\n     * @type {Number}\n     */\n    get alpha() {\n        return this._state.alpha;\n    }\n\n    /**\n     * Gets the RGB {@link Texture} with alpha in its *R* component.\n     *\n     * The *R* component multiplies by the {@link SpecularMaterial#alpha} property.\n     *\n     * @type {Texture}\n     */\n    get alphaMap() {\n        return this._alphaMap;\n    }\n\n    /**\n     * Gets the RGB tangent-space normal {@link Texture} attached to this SpecularMaterial.\n     *\n     * @type {Texture}\n     */\n    get normalMap() {\n        return this._normalMap;\n    }\n\n    /**\n     * Gets the RGB ambient occlusion {@link Texture} attached to this SpecularMaterial.\n     *\n     * Multiplies by the specular and diffuse light reflected by surfaces.\n     *\n     * @type {Texture}\n     */\n    get occlusionMap() {\n        return this._occlusionMap;\n    }\n\n    /**\n     * Sets the alpha rendering mode.\n     *\n     * This governs how alpha is treated. Alpha is the combined result of the {@link SpecularMaterial#alpha} and {@link SpecularMaterial#alphaMap} properties.\n     *\n     * Accepted values are:\n     *\n     * * \"opaque\" - The alpha value is ignored and the rendered output is fully opaque (default).\n     * * \"mask\" - The rendered output is either fully opaque or fully transparent depending on the alpha value and the specified alpha cutoff value.\n     * * \"blend\" - The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator)\n     *\n     * @type {String}\n     */\n    set alphaMode(alphaMode) {\n        alphaMode = alphaMode || \"opaque\";\n        let value = alphaModes[alphaMode];\n        if (value === undefined) {\n            this.error(\"Unsupported value for 'alphaMode': \" + alphaMode + \" defaulting to 'opaque'\");\n            value = \"opaque\";\n        }\n        if (this._state.alphaMode === value) {\n            return;\n        }\n        this._state.alphaMode = value;\n        this.glRedraw();\n    }\n\n    get alphaMode() {\n        return alphaModeNames[this._state.alphaMode];\n    }\n\n    /**\n     * Sets the alpha cutoff value.\n     *\n     * Specifies the cutoff threshold when {@link SpecularMaterial#alphaMode} equals \"mask\". If the alpha is greater than or equal to this value then it is rendered as fully opaque, otherwise, it is rendered as fully transparent. A value greater than 1.0 will render the entire material as fully transparent. This value is ignored for other modes.\n     *\n     * Alpha is the combined result of the {@link SpecularMaterial#alpha} and {@link SpecularMaterial#alphaMap} properties.\n     *\n     * Default value is ````0.5````.\n     *\n     * @type {Number}\n     */\n    set alphaCutoff(alphaCutoff) {\n        if (alphaCutoff === null || alphaCutoff === undefined) {\n            alphaCutoff = 0.5;\n        }\n        if (this._state.alphaCutoff === alphaCutoff) {\n            return;\n        }\n        this._state.alphaCutoff = alphaCutoff;\n    }\n\n    /**\n     * Gets the alpha cutoff value.\n\n     * @type {Number}\n     */\n    get alphaCutoff() {\n        return this._state.alphaCutoff;\n    }\n\n    /**\n     * Sets whether backfaces are visible on attached {@link Mesh}es.\n     *\n     * The backfaces will belong to {@link ReadableGeometry} compoents that are also attached to the {@link Mesh}es.\n     *\n     * Default is ````false````.\n     *\n     * @type {Boolean}\n     */\n    set backfaces(value) {\n        value = !!value;\n        if (this._state.backfaces === value) {\n            return;\n        }\n        this._state.backfaces = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets whether backfaces are visible on attached {@link Mesh}es.\n     *\n     * @type {Boolean}\n     */\n    get backfaces() {\n        return this._state.backfaces;\n    }\n\n    /**\n     * Sets the winding direction of front faces of {@link Geometry} of attached {@link Mesh}es.\n     *\n     * Default value is ````\"ccw\"````.\n     *\n     * @type {String}\n     */\n    set frontface(value) {\n        value = value !== \"cw\";\n        if (this._state.frontface === value) {\n            return;\n        }\n        this._state.frontface = value;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the winding direction of front faces of {@link Geometry} of attached {@link Mesh}es.\n     *\n     * @type {String}\n     */\n    get frontface() {\n        return this._state.frontface ? \"ccw\" : \"cw\";\n    }\n\n    /**\n     * Sets the SpecularMaterial's line width.\n     *\n     * This is not supported by WebGL implementations based on DirectX [2019].\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set lineWidth(value) {\n        this._state.lineWidth = value || 1.0;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets the SpecularMaterial's line width.\n     *\n     * @type {Number}\n     */\n    get lineWidth() {\n        return this._state.lineWidth;\n    }\n\n    /**\n     * Sets the SpecularMaterial's point size.\n     *\n     * Default value is ````1.0````.\n     *\n     * @type {Number}\n     */\n    set pointSize(value) {\n        this._state.pointSize = value || 1;\n        this.glRedraw();\n    }\n\n    /**\n     * Sets the SpecularMaterial's point size.\n     *\n     * @type {Number}\n     */\n    get pointSize() {\n        return this._state.pointSize;\n    }\n\n    /**\n     * Destroys this SpecularMaterial.\n     */\n    destroy() {\n        super.destroy();\n        this._state.destroy();\n    }\n}\n\nexport {SpecularMaterial};","/**\n * @author xeolabs / https://github.com/xeolabs\n */\n\n/**\n * @desc Human-readable WebGL enumeration mappings.\n * @private\n */\nconst webglEnums = {\n    funcAdd: \"FUNC_ADD\",\n    funcSubtract: \"FUNC_SUBTRACT\",\n    funcReverseSubtract: \"FUNC_REVERSE_SUBTRACT\",\n    zero: \"ZERO\",\n    one: \"ONE\",\n    srcColor: \"SRC_COLOR\",\n    oneMinusSrcColor: \"ONE_MINUS_SRC_COLOR\",\n    dstColor: \"DST_COLOR\",\n    oneMinusDstColor: \"ONE_MINUS_DST_COLOR\",\n    srcAlpha: \"SRC_ALPHA\",\n    oneMinusSrcAlpha: \"ONE_MINUS_SRC_ALPHA\",\n    dstAlpha: \"DST_ALPHA\",\n    oneMinusDstAlpha: \"ONE_MINUS_DST_ALPHA\",\n    contantColor: \"CONSTANT_COLOR\",\n    oneMinusConstantColor: \"ONE_MINUS_CONSTANT_COLOR\",\n    constantAlpha: \"CONSTANT_ALPHA\",\n    oneMinusConstantAlpha: \"ONE_MINUS_CONSTANT_ALPHA\",\n    srcAlphaSaturate: \"SRC_ALPHA_SATURATE\",\n    front: \"FRONT\",\n    back: \"BACK\",\n    frontAndBack: \"FRONT_AND_BACK\",\n    never: \"NEVER\",\n    less: \"LESS\",\n    equal: \"EQUAL\",\n    lequal: \"LEQUAL\",\n    greater: \"GREATER\",\n    notequal: \"NOTEQUAL\",\n    gequal: \"GEQUAL\",\n    always: \"ALWAYS\",\n    cw: \"CW\",\n    ccw: \"CCW\",\n    linear: \"LINEAR\",\n    nearest: \"NEAREST\",\n    linearMipmapNearest: \"LINEAR_MIPMAP_NEAREST\",\n    nearestMipmapNearest: \"NEAREST_MIPMAP_NEAREST\",\n    nearestMipmapLinear: \"NEAREST_MIPMAP_LINEAR\",\n    linearMipmapLinear: \"LINEAR_MIPMAP_LINEAR\",\n    repeat: \"REPEAT\",\n    clampToEdge: \"CLAMP_TO_EDGE\",\n    mirroredRepeat: \"MIRRORED_REPEAT\",\n    alpha: \"ALPHA\",\n    rgb: \"RGB\",\n    rgba: \"RGBA\",\n    luminance: \"LUMINANCE\",\n    luminanceAlpha: \"LUMINANCE_ALPHA\",\n    textureBinding2D: \"TEXTURE_BINDING_2D\",\n    textureBindingCubeMap: \"TEXTURE_BINDING_CUBE_MAP\",\n    compareRToTexture: \"COMPARE_R_TO_TEXTURE\", // Hardware Shadowing Z-depth,\n    unsignedByte: \"UNSIGNED_BYTE\"\n};\n\nexport {webglEnums};","import {utils} from '../utils.js';\nimport {webglEnums} from './webglEnums.js';\n\nfunction getGLEnum(gl, name, defaultVal) {\n    if (name === undefined) {\n        return defaultVal;\n    }\n    const glName = webglEnums[name];\n    if (glName === undefined) {\n        return defaultVal;\n    }\n    return gl[glName];\n}\n\nconst color = new Uint8Array([0, 0, 0, 1]);\n\nfunction clampImageSize(image, numPixels) {\n    const n = image.width * image.height;\n    if (n > numPixels) {\n        const ratio = numPixels / n;\n        const width = image.width * ratio;\n        const height = image.height * ratio;\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = nextHighestPowerOfTwo(width);\n        canvas.height = nextHighestPowerOfTwo(height);\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n        image = canvas;\n    }\n    return image;\n}\n\nfunction ensureImageSizePowerOfTwo(image) {\n    if (!isPowerOfTwo(image.width) || !isPowerOfTwo(image.height)) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = nextHighestPowerOfTwo(image.width);\n        canvas.height = nextHighestPowerOfTwo(image.height);\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(image,\n            0, 0, image.width, image.height,\n            0, 0, canvas.width, canvas.height);\n        image = canvas;\n    }\n    return image;\n}\n\nfunction isPowerOfTwo(x) {\n    return (x & (x - 1)) === 0;\n}\n\nfunction nextHighestPowerOfTwo(x) {\n    --x;\n    for (let i = 1; i < 32; i <<= 1) {\n        x = x | x >> i;\n    }\n    return x + 1;\n}\n\n/**\n * @desc A low-level component that represents a 2D WebGL texture.\n *\n * @private\n */\nclass Texture2D {\n\n    constructor(gl, target) {\n        this.gl = gl;\n        this.target = target || gl.TEXTURE_2D;\n        this.texture = gl.createTexture();\n        this.setPreloadColor([0, 0, 0, 0]); // Prevents \"there is no texture bound to the unit 0\" error\n        this.allocated = true;\n    }\n\n    setPreloadColor(value) {\n\n        if (!value) {\n            color[0] = 0;\n            color[1] = 0;\n            color[2] = 0;\n            color[3] = 255;\n        } else {\n            color[0] = Math.floor(value[0] * 255);\n            color[1] = Math.floor(value[1] * 255);\n            color[2] = Math.floor(value[2] * 255);\n            color[3] = Math.floor((value[3] !== undefined ? value[3] : 1) * 255);\n        }\n\n        const gl = this.gl;\n\n        gl.bindTexture(this.target, this.texture);\n        gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\n        if (this.target === gl.TEXTURE_CUBE_MAP) {\n\n            const faces = [\n                gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n                gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n                gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n                gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n            ];\n\n            for (let i = 0, len = faces.length; i < len; i++) {\n                gl.texImage2D(faces[i], 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n            }\n\n        } else {\n            gl.texImage2D(this.target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n        }\n\n        gl.bindTexture(this.target, null);\n    }\n\n    setTarget(target) {\n        this.target = target || this.gl.TEXTURE_2D;\n    }\n\n    setImage(image, props) {\n        const gl = this.gl;\n        gl.bindTexture(this.target, this.texture);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, props.flipY);\n        if (this.target === gl.TEXTURE_CUBE_MAP) {\n            if (utils.isArray(image)) {\n                const images = image;\n                const faces = [\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n                    gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n                    gl.TEXTURE_CUBE_MAP_NEGATIVE_Z\n                ];\n                for (let i = 0, len = faces.length; i < len; i++) {\n                    gl.texImage2D(faces[i], 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, images[i]);\n                }\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        }\n        gl.bindTexture(this.target, null);\n    }\n\n    setProps(props) {\n        const gl = this.gl;\n        gl.bindTexture(this.target, this.texture);\n        if (props.minFilter) {\n            const minFilter = getGLEnum(gl, props.minFilter);\n            if (minFilter) {\n                gl.texParameteri(this.target, gl.TEXTURE_MIN_FILTER, minFilter);\n                if (minFilter === gl.NEAREST_MIPMAP_NEAREST ||\n                    minFilter === gl.LINEAR_MIPMAP_NEAREST ||\n                    minFilter === gl.NEAREST_MIPMAP_LINEAR ||\n                    minFilter === gl.LINEAR_MIPMAP_LINEAR) {\n\n                    gl.generateMipmap(this.target);\n                }\n            }\n        }\n        if (props.magFilter) {\n            const magFilter = getGLEnum(gl, props.magFilter);\n            if (magFilter) {\n                gl.texParameteri(this.target, gl.TEXTURE_MAG_FILTER, magFilter);\n            }\n        }\n        if (props.wrapS) {\n            const wrapS = getGLEnum(gl, props.wrapS);\n            if (wrapS) {\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_S, wrapS);\n            }\n        }\n        if (props.wrapT) {\n            const wrapT = getGLEnum(gl, props.wrapT);\n            if (wrapT) {\n                gl.texParameteri(this.target, gl.TEXTURE_WRAP_T, wrapT);\n            }\n        }\n        gl.bindTexture(this.target, null);\n    }\n\n    bind(unit) {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            const gl = this.gl;\n            gl.activeTexture(gl[\"TEXTURE\" + unit]);\n            gl.bindTexture(this.target, this.texture);\n            return true;\n        }\n        return false;\n    }\n\n    unbind(unit) {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            const gl = this.gl;\n            gl.activeTexture(gl[\"TEXTURE\" + unit]);\n            gl.bindTexture(this.target, null);\n        }\n    }\n\n    destroy() {\n        if (!this.allocated) {\n            return;\n        }\n        if (this.texture) {\n            this.gl.deleteTexture(this.texture);\n            this.texture = null;\n        }\n    }\n}\n\nexport {Texture2D};","import {Component} from '../Component.js';\nimport {RenderState} from '../webgl/RenderState.js';\nimport {Texture2D} from '../webgl/Texture2D.js';\nimport {math} from '../math/math.js';\nimport {stats} from '../stats.js';\n\nfunction ensureImageSizePowerOfTwo(image) {\n    if (!isPowerOfTwo(image.width) || !isPowerOfTwo(image.height)) {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = nextHighestPowerOfTwo(image.width);\n        canvas.height = nextHighestPowerOfTwo(image.height);\n        const ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(image,\n            0, 0, image.width, image.height,\n            0, 0, canvas.width, canvas.height);\n        image = canvas;\n    }\n    return image;\n}\n\nfunction isPowerOfTwo(x) {\n    return (x & (x - 1)) === 0;\n}\n\nfunction nextHighestPowerOfTwo(x) {\n    --x;\n    for (let i = 1; i < 32; i <<= 1) {\n        x = x | x >> i;\n    }\n    return x + 1;\n}\n\n/**\n * @desc A 2D texture map.\n *\n * * Textures are attached to {@link Material}s, which are attached to {@link Mesh}es.\n * * To create a Texture from an image file, set {@link Texture#src} to the image file path.\n * * To create a Texture from an HTMLImageElement, set the Texture's {@link Texture#image} to the HTMLImageElement.\n *\n * ## Usage\n *\n * In this example we have a Mesh with a {@link PhongMaterial} which applies diffuse {@link Texture}, and a {@link buildTorusGeometry} which builds a {@link ReadableGeometry}.\n *\n * Note that xeokit will ignore {@link PhongMaterial#diffuse} and {@link PhongMaterial#specular}, since we override those\n * with {@link PhongMaterial#diffuseMap} and {@link PhongMaterial#specularMap}. The {@link Texture} pixel colors directly\n * provide the diffuse and specular components for each fragment across the {@link ReadableGeometry} surface.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#materials_Texture)]\n *\n * ```` javascript\n * import {Viewer, Mesh, buildTorusGeometry,\n *      ReadableGeometry, PhongMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildTorusGeometry({\n *          center: [0, 0, 0],\n *          radius: 1.5,\n *          tube: 0.5,\n *          radialSegments: 32,\n *          tubeSegments: 24,\n *          arc: Math.PI * 2.0\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *          ambient: [0.9, 0.3, 0.9],\n *          shininess: 30,\n *          diffuseMap: new Texture(viewer.scene, {\n *              src: \"textures/diffuse/uvGrid2.jpg\"\n *          })\n *      })\n * });\n *````\n */\nclass Texture extends Component {\n\n    /**\n     @private\n     */\n    get type() {\n        return \"Texture\";\n    }\n\n    /**\n     * @constructor\n     * @param {Component} owner Owner component. When destroyed, the owner will destroy this Texture as well.\n     * @param {*} [cfg] Configs\n     * @param {String} [cfg.id] Optional ID for this Texture, unique among all components in the parent scene, generated automatically when omitted.\n     * @param {String} [cfg.src=null] Path to image file to load into this Texture. See the {@link Texture#src} property for more info.\n     * @param {HTMLImageElement} [cfg.image=null] HTML Image object to load into this Texture. See the {@link Texture#image} property for more info.\n     * @param {String} [cfg.minFilter=\"linearMipmapLinear\"] How the texture is sampled when a texel covers less than one pixel. See the {@link Texture#minFilter} property for more info.\n     * @param {String} [cfg.magFilter=\"linear\"] How the texture is sampled when a texel covers more than one pixel. See the {@link Texture#magFilter} property for more info.\n     * @param {String} [cfg.wrapS=\"repeat\"] Wrap parameter for texture coordinate *S*. See the {@link Texture#wrapS} property for more info.\n     * @param {String} [cfg.wrapT=\"repeat\"] Wrap parameter for texture coordinate *S*. See the {@link Texture#wrapT} property for more info.\n     * @param {Boolean} [cfg.flipY=false] Flips this Texture's source data along its vertical axis when true.\n     * @param {Number[]} [cfg.translate=[0,0]] 2D translation vector that will be added to texture's *S* and *T* coordinates.\n     * @param {Number[]} [cfg.scale=[1,1]] 2D scaling vector that will be applied to texture's *S* and *T* coordinates.\n     * @param {Number} [cfg.rotate=0] Rotation, in degrees, that will be applied to texture's *S* and *T* coordinates.\n     * @param  {String} [cfg.encoding=\"linear\"] Encoding format.  See the {@link Texture#encoding} property for more info.\n     */\n    constructor(owner, cfg = {}) {\n\n        super(owner, cfg);\n\n        this._state = new RenderState({\n            texture: new Texture2D(this.scene.canvas.gl),\n            matrix: math.identityMat4(),\n            hasMatrix: (cfg.translate && (cfg.translate[0] !== 0 || cfg.translate[1] !== 0)) || (!!cfg.rotate) || (cfg.scale && (cfg.scale[0] !== 0 || cfg.scale[1] !== 0)),\n            minFilter: this._checkMinFilter(cfg.minFilter),\n            magFilter: this._checkMagFilter(cfg.magFilter),\n            wrapS: this._checkWrapS(cfg.wrapS),\n            wrapT: this._checkWrapT(cfg.wrapT),\n            flipY: this._checkFlipY(cfg.flipY),\n            encoding: this._checkEncoding(cfg.encoding)\n        });\n\n        // Data source\n\n        this._src = null;\n        this._image = null;\n\n        // Transformation\n\n        this._translate = math.vec2([0, 0]);\n        this._scale = math.vec2([1, 1]);\n        this._rotate = math.vec2([0, 0]);\n\n        this._matrixDirty = false;\n\n        // Transform\n\n        this.translate = cfg.translate;\n        this.scale = cfg.scale;\n        this.rotate = cfg.rotate;\n\n        // Data source\n\n        if (cfg.src) {\n            this.src = cfg.src; // Image file\n        } else if (cfg.image) {\n            this.image = cfg.image; // Image object\n        }\n\n        stats.memory.textures++;\n    }\n\n    _checkMinFilter(value) {\n        value = value || \"linearMipmapLinear\";\n        if (value !== \"linear\" &&\n            value !== \"linearMipmapNearest\" &&\n            value !== \"linearMipmapLinear\" &&\n            value !== \"nearestMipmapLinear\" &&\n            value !== \"nearestMipmapNearest\") {\n            this.error(\"Unsupported value for 'minFilter': '\" + value +\n                \"' - supported values are 'linear', 'linearMipmapNearest', 'nearestMipmapNearest', \" +\n                \"'nearestMipmapLinear' and 'linearMipmapLinear'. Defaulting to 'linearMipmapLinear'.\");\n            value = \"linearMipmapLinear\";\n        }\n        return value;\n    }\n\n    _checkMagFilter(value) {\n        value = value || \"linear\";\n        if (value !== \"linear\" && value !== \"nearest\") {\n            this.error(\"Unsupported value for 'magFilter': '\" + value +\n                \"' - supported values are 'linear' and 'nearest'. Defaulting to 'linear'.\");\n            value = \"linear\";\n        }\n        return value;\n    }\n\n    _checkFilter(value) {\n        value = value || \"linear\";\n        if (value !== \"linear\" && value !== \"nearest\") {\n            this.error(\"Unsupported value for 'magFilter': '\" + value +\n                \"' - supported values are 'linear' and 'nearest'. Defaulting to 'linear'.\");\n            value = \"linear\";\n        }\n        return value;\n    }\n\n    _checkWrapS(value) {\n        value = value || \"repeat\";\n        if (value !== \"clampToEdge\" && value !== \"mirroredRepeat\" && value !== \"repeat\") {\n            this.error(\"Unsupported value for 'wrapS': '\" + value +\n                \"' - supported values are 'clampToEdge', 'mirroredRepeat' and 'repeat'. Defaulting to 'repeat'.\");\n            value = \"repeat\";\n        }\n        return value;\n    }\n\n    _checkWrapT(value) {\n        value = value || \"repeat\";\n        if (value !== \"clampToEdge\" && value !== \"mirroredRepeat\" && value !== \"repeat\") {\n            this.error(\"Unsupported value for 'wrapT': '\" + value +\n                \"' - supported values are 'clampToEdge', 'mirroredRepeat' and 'repeat'. Defaulting to 'repeat'.\");\n            value = \"repeat\";\n        }\n        return value;\n    }\n\n    _checkFlipY(value) {\n        return !!value;\n    }\n\n    _checkEncoding(value) {\n        value = value || \"linear\";\n        if (value !== \"linear\" && value !== \"sRGB\" && value !== \"gamma\") {\n            this.error(\"Unsupported value for 'encoding': '\" + value + \"' - supported values are 'linear', 'sRGB', 'gamma'. Defaulting to 'linear'.\");\n            value = \"linear\";\n        }\n        return value;\n    }\n\n    _webglContextRestored() {\n        this._state.texture = new Texture2D(this.scene.canvas.gl);\n        if (this._image) {\n            this.image = this._image;\n        } else if (this._src) {\n            this.src = this._src;\n        }\n    }\n\n    _update() {\n        const state = this._state;\n        if (this._matrixDirty) {\n            let matrix;\n            let t;\n            if (this._translate[0] !== 0 || this._translate[1] !== 0) {\n                matrix = math.translationMat4v([this._translate[0], this._translate[1], 0], this._state.matrix);\n            }\n            if (this._scale[0] !== 1 || this._scale[1] !== 1) {\n                t = math.scalingMat4v([this._scale[0], this._scale[1], 1]);\n                matrix = matrix ? math.mulMat4(matrix, t) : t;\n            }\n            if (this._rotate !== 0) {\n                t = math.rotationMat4v(this._rotate * 0.0174532925, [0, 0, 1]);\n                matrix = matrix ? math.mulMat4(matrix, t) : t;\n            }\n            if (matrix) {\n                state.matrix = matrix;\n            }\n            this._matrixDirty = false;\n        }\n        this.glRedraw();\n    }\n\n\n    /**\n     * Sets an HTML DOM Image object to source this Texture from.\n     *\n     * Sets {@link Texture#src} null.\n     *\n     * @type {HTMLImageElement}\n     */\n    set image(value) {\n        this._image = ensureImageSizePowerOfTwo(value);\n        this._image.crossOrigin = \"Anonymous\";\n        this._state.texture.setImage(this._image, this._state);\n        this._state.texture.setProps(this._state); // Generate mipmaps\n        this._src = null;\n        this.glRedraw();\n    }\n\n    /**\n     * Gets HTML DOM Image object this Texture is sourced from, if any.\n     *\n     * Returns null if not set.\n     *\n     * @type {HTMLImageElement}\n     */\n    get image() {\n        return this._image;\n    }\n\n    /**\n     * Sets path to an image file to source this Texture from.\n     *\n     * Sets {@link Texture#image} null.\n     *\n     * @type {String}\n     */\n    set src(src) {\n        this.scene.loading++;\n        this.scene.canvas.spinner.processes++;\n        const self = this;\n        let image = new Image();\n        image.onload = function () {\n            image = ensureImageSizePowerOfTwo(image);\n            //self._image = image; // For faster WebGL context restore - memory inefficient?\n            self._state.texture.setImage(image, self._state);\n            self._state.texture.setProps(self._state); // Generate mipmaps\n            self.scene.loading--;\n            self.glRedraw();\n            self.scene.canvas.spinner.processes--;\n        };\n        image.src = src;\n        this._src = src;\n        this._image = null;\n    }\n\n    /**\n     * Gets path to the image file this Texture from, if any.\n     *\n     * Returns null if not set.\n     *\n     * @type {String}\n     */\n    get src() {\n        return this._src;\n    }\n\n    /**\n     * Sets the 2D translation vector added to this Texture's *S* and *T* UV coordinates.\n     *\n     * Default value is ````[0, 0]````.\n     *\n     * @type {Number[]}\n     */\n    set translate(value) {\n        this._translate.set(value || [0, 0]);\n        this._matrixDirty = true;\n        this._needUpdate();\n    }\n\n    /**\n     * Gets the 2D translation vector added to this Texture's *S* and *T* UV coordinates.\n     *\n     * Default value is ````[0, 0]````.\n     *\n     * @type {Number[]}\n     */\n    get translate() {\n        return this._translate;\n    }\n\n    /**\n     * Sets the 2D scaling vector that will be applied to this Texture's *S* and *T* UV coordinates.\n     *\n     * Default value is ````[1, 1]````.\n     *\n     * @type {Number[]}\n     */\n    set scale(value) {\n        this._scale.set(value || [1, 1]);\n        this._matrixDirty = true;\n        this._needUpdate();\n    }\n\n    /**\n     * Gets the 2D scaling vector that will be applied to this Texture's *S* and *T* UV coordinates.\n     *\n     * Default value is ````[1, 1]````.\n     *\n     * @type {Number[]}\n     */\n    get scale() {\n        return this._scale;\n    }\n\n    /**\n     * Sets the rotation angles, in degrees, that will be applied to this Texture's *S* and *T* UV coordinates.\n     *\n     * Default value is ````0````.\n     *\n     * @type {Number}\n     */\n    set rotate(value) {\n        value = value || 0;\n        if (this._rotate === value) {\n            return;\n        }\n        this._rotate = value;\n        this._matrixDirty = true;\n        this._needUpdate();\n    }\n\n    /**\n     * Gets the rotation angles, in degrees, that will be applied to this Texture's *S* and *T* UV coordinates.\n     *\n     * Default value is ````0````.\n     *\n     * @type {Number}\n     */\n    get rotate() {\n        return this._rotate;\n    }\n\n    /**\n     * Gets how this Texture is sampled when a texel covers less than one pixel.\n     *\n     * Options are:\n     *\n     * * \"nearest\" - Uses the value of the texture element that is nearest\n     * (in Manhattan distance) to the center of the pixel being textured.\n     *\n     * * \"linear\" - Uses the weighted average of the four texture elements that are\n     * closest to the center of the pixel being textured.\n     *\n     * * \"nearestMipmapNearest\" - Chooses the mipmap that most closely matches the\n     * size of the pixel being textured and uses the \"nearest\" criterion (the texture\n     * element nearest to the center of the pixel) to produce a texture value.\n     *\n     * * \"linearMipmapNearest\" - Chooses the mipmap that most closely matches the size of\n     * the pixel being textured and uses the \"linear\" criterion (a weighted average of the\n     * four texture elements that are closest to the center of the pixel) to produce a\n     * texture value.\n     *\n     * * \"nearestMipmapLinear\" - Chooses the two mipmaps that most closely\n     * match the size of the pixel being textured and uses the \"nearest\" criterion\n     * (the texture element nearest to the center of the pixel) to produce a texture\n     * value from each mipmap. The final texture value is a weighted average of those two\n     * values.\n     *\n     * * \"linearMipmapLinear\" - (default) - Chooses the two mipmaps that most closely match the size\n     * of the pixel being textured and uses the \"linear\" criterion (a weighted average\n     * of the four texture elements that are closest to the center of the pixel) to\n     * produce a texture value from each mipmap. The final texture value is a weighted\n     * average of those two values.\n     *\n     * Default value is \"linearMipmapLinear\".\n     *\n     *  @type {String}\n     */\n    get minFilter() {\n        return this._state.minFilter;\n    }\n\n    /**\n     * Gets how this Texture is sampled when a texel covers more than one pixel.\n     *\n     * * \"nearest\" - Uses the value of the texture element that is nearest\n     * (in Manhattan distance) to the center of the pixel being textured.\n     * * \"linear\" - (default) - Uses the weighted average of the four texture elements that are\n     * closest to the center of the pixel being textured.\n     *\n     * Default value is \"linearMipmapLinear\".\n     *\n     * @type {String}\n     */\n    get magFilter() {\n        return this._state.magFilter;\n    }\n\n    /**\n     * Gets the wrap parameter for this Texture's *S* coordinate.\n     *\n     * Values can be:\n     *\n     * * \"clampToEdge\" -  causes *S* coordinates to be clamped to the size of the texture.\n     * * \"mirroredRepeat\" - causes the *S* coordinate to be set to the fractional part of the texture coordinate\n     * if the integer part of *S* is even; if the integer part of *S* is odd, then the *S* texture coordinate is\n     * set to *1 - frac ⁡ S* , where *frac ⁡ S* represents the fractional part of *S*.\n     * * \"repeat\" - (default) - causes the integer part of the *S* coordinate to be ignored; xeokit uses only the\n     * fractional part, thereby creating a repeating pattern.\n     *\n     * Default value is \"repeat\".\n     *\n     * @type {String}\n     */\n    get wrapS() {\n        return this._state.wrapS;\n    }\n\n    /**\n     * Gets the wrap parameter for this Texture's *T* coordinate.\n     *\n     * Values can be:\n     *\n     * * \"clampToEdge\" -  causes *S* coordinates to be clamped to the size of the texture.\n     *  * \"mirroredRepeat\" - causes the *S* coordinate to be set to the fractional part of the texture coordinate\n     * if the integer part of *S* is even; if the integer part of *S* is odd, then the *S* texture coordinate is\n     * set to *1 - frac ⁡ S* , where *frac ⁡ S* represents the fractional part of *S*.\n     * * \"repeat\" - (default) - causes the integer part of the *S* coordinate to be ignored; xeokit uses only the\n     * fractional part, thereby creating a repeating pattern.\n     *\n     * Default value is \"repeat\".\n     *\n     * @type {String}\n     */\n    get wrapT() {\n        return this._state.wrapT;\n    }\n\n    /**\n     * Gets if this Texture's source data is flipped along its vertical axis.\n     *\n     * @type {Boolean}\n     */\n    get flipY() {\n        return this._state.flipY;\n    }\n\n    /**\n     * Gets the Texture's encoding format.\n     *\n     * @type {String}\n     */\n    get encoding() {\n        return this._state.encoding;\n    }\n\n    /**\n     * Destroys this Texture\n     */\n    destroy() {\n        super.destroy();\n        if (this._state.texture) {\n            this._state.texture.destroy();\n        }\n        this._state.destroy();\n        stats.memory.textures--;\n    }\n}\n\nexport {Texture};","import {Mesh} from \"../../viewer/scene/mesh/Mesh.js\";\nimport {ReadableGeometry} from \"../../viewer/scene/geometry/ReadableGeometry.js\";\nimport {VBOGeometry} from \"../../viewer/scene/geometry/VBOGeometry.js\";\nimport {PhongMaterial} from \"../../viewer/scene/materials/PhongMaterial.js\";\nimport {MetallicMaterial} from \"../../viewer/scene/materials/MetallicMaterial.js\";\nimport {SpecularMaterial} from \"../../viewer/scene/materials/SpecularMaterial.js\";\nimport {Texture} from \"../../viewer/scene/materials/Texture.js\";\nimport {Node} from \"../../viewer/scene/nodes/Node.js\";\nimport {math} from \"../../viewer/scene/math/math.js\";\nimport {utils} from \"../../viewer/scene/utils.js\";\nimport {core} from \"../../viewer/scene/core.js\";\n\n/**\n * @private\n */\nclass GLTFSceneGraphLoader {\n\n    constructor(cfg) { // TODO: Loading options fallbacks on loader, eg. handleGLTFNode etc\n        cfg = cfg || {};\n    }\n\n    load(plugin, modelNode, src, options, ok, error) {\n        options = options || {};\n        var spinner = modelNode.scene.canvas.spinner;\n        spinner.processes++;\n        loadGLTF(plugin, modelNode, src, options, function () {\n                spinner.processes--;\n                core.scheduleTask(function () {\n                    modelNode.scene.fire(\"modelLoaded\", modelNode.id); // FIXME: Assumes listeners know order of these two events\n                    modelNode.fire(\"loaded\", true, false);\n                });\n                if (ok) {\n                    ok();\n                }\n            },\n            function (msg) {\n                spinner.processes--;\n                modelNode.error(msg);\n                if (error) {\n                    error(msg);\n                }\n                modelNode.fire(\"error\", msg);\n            });\n    }\n\n    parse(plugin, modelNode, gltf, options, ok, error) {\n        options = options || {};\n        var spinner = modelNode.scene.canvas.spinner;\n        spinner.processes++;\n        parseGLTF(plugin, gltf, \"\", options, modelNode, function () {\n                spinner.processes--;\n                modelNode.scene.fire(\"modelLoaded\", modelNode.id); // FIXME: Assumes listeners know order of these two events\n                modelNode.fire(\"loaded\", true, false);\n                if (ok) {\n                    ok();\n                }\n            },\n            function (msg) {\n                spinner.processes--;\n                modelNode.error(msg);\n                modelNode.fire(\"error\", msg);\n                if (error) {\n                    error(msg);\n                }\n            });\n    }\n}\n\n\nvar loadGLTF = (function () {\n    return function (plugin, modelNode, src, options, ok, error) {\n        plugin.dataSource.getGLTF(src, function (json) { // OK\n                options.basePath = getBasePath(src);\n                parseGLTF(plugin, json, src, options, modelNode, ok, error);\n            },\n            error);\n    };\n\n    function getBasePath(src) {\n        var i = src.lastIndexOf(\"/\");\n        return (i !== 0) ? src.substring(0, i + 1) : \"\";\n    }\n})();\n\nvar parseGLTF = (function () {\n\n    const WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    const WEBGL_TYPE_SIZES = {\n        'SCALAR': 1,\n        'VEC2': 2,\n        'VEC3': 3,\n        'VEC4': 4,\n        'MAT2': 4,\n        'MAT3': 9,\n        'MAT4': 16\n    };\n\n    return function (plugin, json, src, options, modelNode, ok) {\n        modelNode.clear();\n        var ctx = {\n            src: src,\n            loadBuffer: options.loadBuffer,\n            basePath: options.basePath,\n            prioritizeGLTFNode: options.prioritizeGLTFNode,\n            handleGLTFNode: options.handleGLTFNode,\n            ignoreMaterials: !!options.ignoreMaterials,\n            edgeThreshold: options.edgeThreshold,\n            readableGeometry: !!options.readableGeometry,\n            json: json,\n            scene: modelNode.scene,\n            plugin: plugin,\n            modelNode: modelNode,\n            modelNodeProps: {\n                visible: modelNode.visible,\n                culled: modelNode.culled,\n                xrayed: modelNode.xrayed,\n                highlighted: modelNode.highlighted,\n                selected: modelNode.selected,\n                outlined: modelNode.outlined,\n                clippable: modelNode.clippable,\n                pickable: modelNode.pickable,\n                collidable: modelNode.collidable,\n                castsShadow: modelNode.castsShadow,\n                receivesShadow: modelNode.receivesShadow,\n                colorize: modelNode.colorize,\n                opacity: modelNode.opacity,\n                edges: modelNode.edges\n            }\n        };\n\n        modelNode.scene.loading++; // Disables (re)compilation\n\n        loadBuffers(ctx, function () {\n\n            loadBufferViews(ctx);\n            loadAccessors(ctx);\n            loadTextures(ctx);\n            loadMaterials(ctx);\n            loadMeshes(ctx);\n            loadDefaultScene(ctx);\n\n            modelNode.scene.loading--; // Re-enables (re)compilation\n\n            ok();\n        });\n    };\n\n    function loadBuffers(ctx, ok) {\n        var buffers = ctx.json.buffers;\n        if (buffers) {\n            var numToLoad = buffers.length;\n            for (var i = 0, len = buffers.length; i < len; i++) {\n                loadBuffer(ctx, buffers[i], function () {\n                    if (--numToLoad === 0) {\n                        ok();\n                    }\n                }, function (msg) {\n                    ctx.plugin.error(msg);\n                    if (--numToLoad === 0) {\n                        ok();\n                    }\n                });\n            }\n        } else {\n            ok();\n        }\n    }\n\n    function loadBuffer(ctx, bufferInfo, ok, err) {\n        var uri = bufferInfo.uri;\n        if (uri) {\n            ctx.plugin.dataSource.getArrayBuffer(ctx.src, uri, function (data) {\n                    bufferInfo._buffer = data;\n                    ok();\n                },\n                err);\n        } else {\n            err('gltf/handleBuffer missing uri in ' + JSON.stringify(bufferInfo));\n        }\n    }\n\n    function loadBufferViews(ctx) {\n        var bufferViewsInfo = ctx.json.bufferViews;\n        if (bufferViewsInfo) {\n            for (var i = 0, len = bufferViewsInfo.length; i < len; i++) {\n                loadBufferView(ctx, bufferViewsInfo[i]);\n            }\n        }\n    }\n\n    function loadBufferView(ctx, bufferViewInfo) {\n\n        var buffer = ctx.json.buffers[bufferViewInfo.buffer];\n\n        bufferViewInfo._typedArray = null;\n\n        var byteLength = bufferViewInfo.byteLength || 0;\n        var byteOffset = bufferViewInfo.byteOffset || 0;\n\n        bufferViewInfo._buffer = buffer._buffer.slice(byteOffset, byteOffset + byteLength);\n    }\n\n    function loadAccessors(ctx) {\n        var accessorsInfo = ctx.json.accessors;\n        if (accessorsInfo) {\n            for (var i = 0, len = accessorsInfo.length; i < len; i++) {\n                loadAccessor(ctx, accessorsInfo[i]);\n            }\n        }\n    }\n\n    function loadAccessor(ctx, accessorInfo) {\n        var bufferViewInfo = ctx.json.bufferViews[accessorInfo.bufferView];\n        var itemSize = WEBGL_TYPE_SIZES[accessorInfo.type];\n        var TypedArray = WEBGL_COMPONENT_TYPES[accessorInfo.componentType];\n\n        // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n        var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n        var itemBytes = elementBytes * itemSize;\n\n        // The buffer is not interleaved if the stride is the item size in bytes.\n        if (accessorInfo.byteStride && accessorInfo.byteStride !== itemBytes) {\n\n        } else {\n            accessorInfo._typedArray = new TypedArray(bufferViewInfo._buffer, accessorInfo.byteOffset || 0, accessorInfo.count * itemSize);\n            accessorInfo._itemSize = itemSize;\n        }\n    }\n\n\n    function loadTextures(ctx) {\n        var texturesInfo = ctx.json.textures;\n        if (texturesInfo) {\n            for (var i = 0, len = texturesInfo.length; i < len; i++) {\n                loadTexture(ctx, texturesInfo[i]);\n            }\n        }\n    }\n\n    function loadTexture(ctx, textureInfo) {\n        textureInfo._texture = new Texture(ctx.modelNode, {\n            src: ctx.json.images[textureInfo.source].uri ? ctx.basePath + ctx.json.images[textureInfo.source].uri : undefined,\n            flipY: !!textureInfo.flipY,\n            encoding: \"sRGB\"\n        });\n    }\n\n    function loadMaterials(ctx) {\n        var materialsInfo = ctx.json.materials;\n        if (materialsInfo) {\n            var materialInfo;\n            var material;\n            for (var i = 0, len = materialsInfo.length; i < len; i++) {\n                materialInfo = materialsInfo[i];\n                material = loadMaterial(ctx, materialInfo);\n                materialInfo._material = material;\n            }\n        }\n    }\n\n    function loadMaterial(ctx, materialInfo) {\n\n        var json = ctx.json;\n        var cfg = {};\n        var textureInfo;\n\n        // Common attributes\n\n        var normalTexture = materialInfo.normalTexture;\n        if (normalTexture) {\n            textureInfo = json.textures[normalTexture.index];\n            if (textureInfo) {\n                cfg.normalMap = textureInfo._texture;\n                //cfg.normalMap.encoding = \"linear\";\n            }\n        }\n\n        var occlusionTexture = materialInfo.occlusionTexture;\n        if (occlusionTexture) {\n            textureInfo = json.textures[occlusionTexture.index];\n            if (textureInfo) {\n                cfg.occlusionMap = textureInfo._texture;\n            }\n        }\n\n        var emissiveTexture = materialInfo.emissiveTexture;\n        if (emissiveTexture) {\n            textureInfo = json.textures[emissiveTexture.index];\n            if (textureInfo) {\n                cfg.emissiveMap = textureInfo._texture;\n                //cfg.emissiveMap.encoding = \"sRGB\";\n            }\n        }\n\n        var emissiveFactor = materialInfo.emissiveFactor;\n        if (emissiveFactor) {\n            cfg.emissive = emissiveFactor;\n        }\n\n        cfg.backfaces = !!materialInfo.doubleSided;\n\n        var alphaMode = materialInfo.alphaMode;\n        switch (alphaMode) {\n            case \"NORMAL_OPAQUE\":\n                cfg.alphaMode = \"opaque\";\n                break;\n            case \"MASK\":\n                cfg.alphaMode = \"mask\";\n                break;\n            case \"BLEND\":\n                cfg.alphaMode = \"blend\";\n                break;\n            default:\n        }\n\n        var alphaCutoff = materialInfo.alphaCutoff;\n        if (alphaCutoff !== undefined) {\n            cfg.alphaCutoff = alphaCutoff;\n        }\n\n        var extensions = materialInfo.extensions;\n        if (extensions) {\n\n            // Specular PBR material\n\n            var specularPBR = extensions[\"KHR_materials_pbrSpecularGlossiness\"];\n            if (specularPBR) {\n\n                var diffuseFactor = specularPBR.diffuseFactor;\n                if (diffuseFactor !== null && diffuseFactor !== undefined) {\n                    cfg.diffuse = diffuseFactor.slice(0, 3);\n                    cfg.alpha = diffuseFactor[3];\n                }\n\n                var diffuseTexture = specularPBR.diffuseTexture;\n                if (diffuseTexture) {\n                    textureInfo = json.textures[diffuseTexture.index];\n                    if (textureInfo) {\n                        cfg.diffuseMap = textureInfo._texture;\n                        //cfg.diffuseMap.encoding = \"sRGB\";\n                    }\n                }\n\n                var specularFactor = specularPBR.specularFactor;\n                if (specularFactor !== null && specularFactor !== undefined) {\n                    cfg.specular = specularFactor.slice(0, 3);\n                }\n\n                var glossinessFactor = specularPBR.glossinessFactor;\n                if (glossinessFactor !== null && glossinessFactor !== undefined) {\n                    cfg.glossiness = glossinessFactor;\n                }\n\n                var specularGlossinessTexture = specularPBR.specularGlossinessTexture;\n                if (specularGlossinessTexture) {\n                    textureInfo = json.textures[specularGlossinessTexture.index];\n                    if (textureInfo) {\n                        cfg.specularGlossinessMap = textureInfo._texture;\n                        //cfg.specularGlossinessMap.encoding = \"linear\";\n                    }\n                }\n\n                return new SpecularMaterial(ctx.modelNode, cfg);\n            }\n\n            // Common Phong, Blinn, Lambert or Constant materials\n\n            var common = extensions[\"KHR_materials_common\"];\n            if (common) {\n\n                var technique = common.technique;\n                var values = common.values || {};\n\n                var blinn = technique === \"BLINN\";\n                var phong = technique === \"PHONG\";\n                var lambert = technique === \"LAMBERT\";\n                var constant = technique === \"CONSTANT\";\n\n                var shininess = values.shininess;\n                if ((blinn || phong) && shininess !== null && shininess !== undefined) {\n                    cfg.shininess = shininess;\n                } else {\n                    cfg.shininess = 0;\n                }\n                var texture;\n                var diffuse = values.diffuse;\n                if (diffuse && (blinn || phong || lambert)) {\n                    if (utils.isString(diffuse)) {\n                        texture = ctx.textures[diffuse];\n                        if (texture) {\n                            cfg.diffuseMap = texture;\n                            //  cfg.diffuseMap.encoding = \"sRGB\";\n                        }\n                    } else {\n                        cfg.diffuse = diffuse.slice(0, 3);\n                    }\n                } else {\n                    cfg.diffuse = [0, 0, 0];\n                }\n\n                var specular = values.specular;\n                if (specular && (blinn || phong)) {\n                    if (utils.isString(specular)) {\n                        texture = ctx.textures[specular];\n                        if (texture) {\n                            cfg.specularMap = texture;\n                        }\n                    } else {\n                        cfg.specular = specular.slice(0, 3);\n                    }\n                } else {\n                    cfg.specular = [0, 0, 0];\n                }\n\n                var emission = values.emission;\n                if (emission) {\n                    if (utils.isString(emission)) {\n                        texture = ctx.textures[emission];\n                        if (texture) {\n                            cfg.emissiveMap = texture;\n                        }\n                    } else {\n                        cfg.emissive = emission.slice(0, 3);\n                    }\n                } else {\n                    cfg.emissive = [0, 0, 0];\n                }\n\n                var transparency = values.transparency;\n                if (transparency !== null && transparency !== undefined) {\n                    cfg.alpha = transparency;\n                } else {\n                    cfg.alpha = 1.0;\n                }\n\n                var transparent = values.transparent;\n                if (transparent !== null && transparent !== undefined) {\n                    //cfg.transparent = transparent;\n                } else {\n                    //cfg.transparent = 1.0;\n                }\n\n                return new PhongMaterial(ctx.scene, cfg);\n            }\n        }\n\n        // Metallic PBR naterial\n\n        var metallicPBR = materialInfo.pbrMetallicRoughness;\n        if (metallicPBR) {\n\n            var baseColorFactor = metallicPBR.baseColorFactor;\n            if (baseColorFactor) {\n                cfg.baseColor = baseColorFactor.slice(0, 3);\n                cfg.alpha = baseColorFactor[3];\n            }\n\n            var baseColorTexture = metallicPBR.baseColorTexture;\n            if (baseColorTexture) {\n                textureInfo = json.textures[baseColorTexture.index];\n                if (textureInfo) {\n                    cfg.baseColorMap = textureInfo._texture;\n                    //cfg.baseColorMap.encoding = \"sRGB\";\n                }\n            }\n\n            var metallicFactor = metallicPBR.metallicFactor;\n            if (metallicFactor !== null && metallicFactor !== undefined) {\n                cfg.metallic = metallicFactor;\n            }\n\n            var roughnessFactor = metallicPBR.roughnessFactor;\n            if (roughnessFactor !== null && roughnessFactor !== undefined) {\n                cfg.roughness = roughnessFactor;\n            }\n\n            var metallicRoughnessTexture = metallicPBR.metallicRoughnessTexture;\n            if (metallicRoughnessTexture) {\n                textureInfo = json.textures[metallicRoughnessTexture.index];\n                if (textureInfo) {\n                    cfg.metallicRoughnessMap = textureInfo._texture;\n                    // cfg.metallicRoughnessMap.encoding = \"linear\";\n                }\n            }\n\n            return new MetallicMaterial(ctx.scene, cfg);\n        }\n\n        // Default material\n\n        return new PhongMaterial(ctx.scene, cfg);\n    }\n\n    // Extract diffuse/baseColor and alpha into RGBA Mesh 'colorize' property\n    function loadMaterialColorize(ctx, materialInfo) {\n\n        var json = ctx.json;\n        var colorize = new Float32Array([1, 1, 1, 1]);\n\n        var extensions = materialInfo.extensions;\n        if (extensions) {\n\n            // Specular PBR material\n\n            var specularPBR = extensions[\"KHR_materials_pbrSpecularGlossiness\"];\n            if (specularPBR) {\n                var diffuseFactor = specularPBR.diffuseFactor;\n                if (diffuseFactor !== null && diffuseFactor !== undefined) {\n                    colorize.set(diffuseFactor);\n                }\n            }\n\n            // Common Phong, Blinn, Lambert or Constant materials\n\n            var common = extensions[\"KHR_materials_common\"];\n            if (common) {\n\n                var technique = common.technique;\n                var values = common.values || {};\n\n                var blinn = technique === \"BLINN\";\n                var phong = technique === \"PHONG\";\n                var lambert = technique === \"LAMBERT\";\n                var constant = technique === \"CONSTANT\";\n\n                var diffuse = values.diffuse;\n                if (diffuse && (blinn || phong || lambert)) {\n                    if (!utils.isString(diffuse)) {\n                        colorize.set(diffuse);\n                    }\n                }\n\n                var transparency = values.transparency;\n                if (transparency !== null && transparency !== undefined) {\n                    colorize[3] = transparency;\n                }\n\n                var transparent = values.transparent;\n                if (transparent !== null && transparent !== undefined) {\n                    colorize[3] = transparent;\n                }\n            }\n        }\n\n        // Metallic PBR naterial\n\n        var metallicPBR = materialInfo.pbrMetallicRoughness;\n        if (metallicPBR) {\n            var baseColorFactor = metallicPBR.baseColorFactor;\n            if (baseColorFactor) {\n                colorize.set(baseColorFactor);\n            }\n        }\n\n        return colorize;\n    }\n\n    function loadMeshes(ctx) {\n        var meshes = ctx.json.meshes;\n        if (meshes) {\n            for (var i = 0, len = meshes.length; i < len; i++) {\n                loadMesh(ctx, meshes[i]);\n            }\n        }\n    }\n\n    function loadMesh(ctx, meshInfo) {\n        var json = ctx.json;\n        var mesh = [];\n        var primitivesInfo = meshInfo.primitives;\n        var materialIndex;\n        var materialInfo;\n        var accessorInfo;\n        var attributes;\n\n        if (primitivesInfo) {\n\n            var primitiveInfo;\n            var indicesIndex;\n            var positionsIndex;\n            var normalsIndex;\n            var uv0Index;\n            var geometryCfg;\n            var meshCfg;\n            var geometry;\n\n            for (var i = 0, len = primitivesInfo.length; i < len; i++) {\n\n                geometryCfg = {\n                    primitive: \"triangles\",\n                    compressGeometry: true,\n                    edgeThreshold: ctx.edgeThreshold\n                };\n\n                primitiveInfo = primitivesInfo[i];\n                indicesIndex = primitiveInfo.indices;\n\n                if (indicesIndex !== null && indicesIndex !== undefined) {\n                    accessorInfo = json.accessors[indicesIndex];\n                    geometryCfg.indices = accessorInfo._typedArray;\n                }\n\n                attributes = primitiveInfo.attributes;\n                if (!attributes) {\n                    continue;\n                }\n\n                positionsIndex = attributes.POSITION;\n\n                if (positionsIndex !== null && positionsIndex !== undefined) {\n                    accessorInfo = json.accessors[positionsIndex];\n                    geometryCfg.positions = accessorInfo._typedArray;\n                }\n\n                normalsIndex = attributes.NORMAL;\n\n                if (normalsIndex !== null && normalsIndex !== undefined) {\n                    accessorInfo = json.accessors[normalsIndex];\n                    geometryCfg.normals = accessorInfo._typedArray;\n                }\n\n                uv0Index = attributes.TEXCOORD_0;\n\n                if (uv0Index !== null && uv0Index !== undefined) {\n                    accessorInfo = json.accessors[uv0Index];\n                    geometryCfg.uv = accessorInfo._typedArray;\n                }\n\n                meshCfg = {};\n\n                if (ctx.readableGeometry) {\n                    geometry = new ReadableGeometry(ctx.modelNode, geometryCfg);\n                } else {\n                    geometry = new VBOGeometry(ctx.modelNode, geometryCfg);\n                }\n\n                meshCfg.geometry = geometry;\n\n                materialIndex = primitiveInfo.material;\n                if (materialIndex !== null && materialIndex !== undefined) {\n                    materialInfo = json.materials[materialIndex];\n                    if (materialInfo) {\n                        meshCfg.material = materialInfo._material;\n                    }\n                }\n\n                mesh.push(meshCfg);\n            }\n        }\n        meshInfo._mesh = mesh;\n    }\n\n    function loadDefaultScene(ctx) {\n        var json = ctx.json;\n        var scene = json.scene || 0;\n        var defaultSceneInfo = json.scenes[scene];\n        if (!defaultSceneInfo) {\n            error(ctx, \"glTF has no default scene\");\n            return;\n        }\n        loadScene(ctx, defaultSceneInfo);\n    }\n\n    function loadScene(ctx, sceneInfo) {\n        var nodes = sceneInfo.nodes;\n        if (!nodes) {\n            return;\n        }\n        var json = ctx.json;\n        var glTFNode;\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            glTFNode = json.nodes[nodes[i]];\n            if (!glTFNode) {\n                error(ctx, \"Node not found: \" + i);\n                continue;\n            }\n            loadNode(ctx, glTFNode, null, null);\n        }\n    }\n\n    function loadNode(ctx, glTFNode, matrix, parent) {\n\n        parent = parent || ctx.modelNode;\n\n        var createEntity;\n\n        if (ctx.prioritizeGLTFNode) {\n            const priority = ctx.prioritizeGLTFNode(ctx.modelNode.id, glTFNode);\n            if (priority === undefined || priority === null) {\n                return;\n            }\n        }\n\n        if (ctx.handleGLTFNode) {\n            var actions = {};\n            if (!ctx.handleGLTFNode(ctx.modelNode.id, glTFNode, actions)) {\n                return;\n            }\n            if (actions.createEntity) {\n                createEntity = actions.createEntity;\n            }\n        }\n\n        const json = ctx.json;\n        const modelNode = ctx.modelNode;\n        const hasChildNodes = glTFNode.children && glTFNode.children.length > 0;\n\n        var localMatrix;\n\n        if (glTFNode.matrix) {\n            localMatrix = glTFNode.matrix;\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, math.mat4());\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.translation) {\n            localMatrix = math.translationMat4v(glTFNode.translation);\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, localMatrix);\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.rotation) {\n            localMatrix = math.quaternionToMat4(glTFNode.rotation);\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, localMatrix);\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.scale) {\n            localMatrix = math.scalingMat4v(glTFNode.scale);\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, localMatrix);\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.mesh !== undefined) {\n\n            var meshInfo = json.meshes[glTFNode.mesh];\n\n            if (meshInfo) {\n\n                var meshesInfo = meshInfo._mesh;\n                var meshesInfoMesh;\n                var mesh;\n                var numMeshes = meshesInfo.length;\n\n                if (!createEntity && numMeshes > 0 && !hasChildNodes) {\n\n                    // Case 1: Not creating object, node has meshes, node has no child nodes\n\n                    for (var i = 0, len = numMeshes; i < len; i++) {\n                        meshesInfoMesh = meshesInfo[i];\n                        let meshCfg = {\n                            geometry: meshesInfoMesh.geometry,\n                            matrix: matrix\n                        };\n                        utils.apply(ctx.modelNodeProps, meshCfg);\n                        meshCfg.material = meshesInfoMesh.material;\n                        mesh = new Mesh(modelNode, meshCfg);\n                        parent.addChild(mesh, false); // Don't automatically inherit properties\n                    }\n                    return;\n                }\n\n                if (createEntity && numMeshes === 1 && !hasChildNodes) {\n\n                    // Case 2: Creating object, node has one mesh, node has no child nodes\n\n                    meshesInfoMesh = meshesInfo[0];\n                    let meshCfg = {\n                        geometry: meshesInfoMesh.geometry,\n                        matrix: matrix\n                    };\n                    utils.apply(ctx.modelNodeProps, meshCfg);\n                    meshCfg.material = meshesInfoMesh.material;\n                    utils.apply(createEntity, meshCfg);\n                    mesh = new Mesh(modelNode, meshCfg);\n                    parent.addChild(mesh, false); // Don't automatically inherit properties\n                    return;\n                }\n\n                if (createEntity && numMeshes > 0 && !hasChildNodes) {\n\n                    // Case 3: Creating object, node has meshes, node has no child nodes\n\n                    let nodeCfg = {\n                        matrix: matrix\n                    };\n                    utils.apply(ctx.modelNodeProps, nodeCfg);\n                    utils.apply(createEntity, nodeCfg);\n                    let childNode = new Node(modelNode, nodeCfg);\n                    parent.addChild(childNode, false);\n                    for (let i = 0, len = numMeshes; i < len; i++) {\n                        meshesInfoMesh = meshesInfo[i];\n                        let meshCfg = {\n                            geometry: meshesInfoMesh.geometry\n                        };\n                        utils.apply(ctx.modelNodeProps, meshCfg);\n                        meshCfg.material = meshesInfoMesh.material;\n                        utils.apply(createEntity, meshCfg);\n                        meshCfg.id = null; // Avoid ID clash with parent Node\n                        mesh = new Mesh(modelNode, meshCfg);\n                        childNode.addChild(mesh, false);\n                    }\n                    return;\n                }\n\n                if (!createEntity && numMeshes > 0 && hasChildNodes) {\n\n                    // Case 4: Not creating object, node has meshes, node has child nodes\n\n                    let nodeCfg = {\n                        matrix: matrix\n                    };\n                    utils.apply(ctx.modelNodeProps, nodeCfg);\n                    let childNode = new Node(modelNode, nodeCfg);\n                    parent.addChild(childNode, false);\n                    for (let i = 0, len = numMeshes; i < len; i++) {\n                        meshesInfoMesh = meshesInfo[i];\n                        let meshCfg = {\n                            geometry: meshesInfoMesh.geometry\n                        };\n                        utils.apply(nodeCfg, meshCfg);\n                        meshCfg.id = null; // Avoid ID clash with parent Node\n                        meshCfg.matrix = null; // Node has matrix\n                        meshCfg.material = meshesInfoMesh.material;\n                        mesh = new Mesh(modelNode, meshCfg);\n                        childNode.addChild(mesh, false);\n                    }\n                    matrix = null;\n                    parent = childNode;\n                }\n\n                if (createEntity && numMeshes === 0 && hasChildNodes) {\n\n                    // Case 5: Creating explicit object, node has meshes OR node has child nodes\n\n                    let nodeCfg = {\n                        matrix: matrix\n                    };\n                    utils.apply(ctx.modelNodeProps, nodeCfg);\n                    utils.apply(createEntity, nodeCfg);\n                    createEntity.matrix = matrix;\n                    let childNode = new Node(modelNode, nodeCfg);\n                    parent.addChild(childNode, false); // Don't automatically inherit properties\n                    matrix = null;\n                    parent = childNode;\n                }\n\n                if (createEntity && numMeshes > 0 || hasChildNodes) {\n\n                    // Case 6: Creating explicit object, node has meshes OR node has child nodes\n\n                    let nodeCfg = {\n                        matrix: matrix\n                    };\n                    utils.apply(ctx.modelNodeProps, nodeCfg);\n                    if (createEntity) {\n                        utils.apply(createEntity, nodeCfg);\n                    }\n                    let childNode = new Node(modelNode, nodeCfg);\n                    parent.addChild(childNode, false); // Don't automatically inherit properties\n                    for (let i = 0, len = numMeshes; i < len; i++) {\n                        meshesInfoMesh = meshesInfo[i];\n                        let meshCfg = {\n                            geometry: meshesInfoMesh.geometry\n                        };\n                        utils.apply(ctx.modelProps, meshCfg);\n                        meshCfg.material = meshesInfoMesh.material;\n                        if (createEntity) {\n                            utils.apply(createEntity, meshCfg);\n                        }\n                        meshCfg.id = null; // Avoid ID clash with parent Node\n                        mesh = new Mesh(modelNode, meshCfg);\n                        childNode.addChild(mesh, false); // Don't automatically inherit properties\n                    }\n                    matrix = null;\n                    parent = childNode;\n                }\n            }\n        }\n\n        if (glTFNode.children) {\n            var children = glTFNode.children;\n            var childNodeInfo;\n            var childNodeIdx;\n            for (let i = 0, len = children.length; i < len; i++) {\n                childNodeIdx = children[i];\n                childNodeInfo = json.nodes[childNodeIdx];\n                if (!childNodeInfo) {\n                    error(ctx, \"Node not found: \" + i);\n                    continue;\n                }\n                loadNode(ctx, childNodeInfo, matrix, parent);\n            }\n        }\n    }\n\n    function error(ctx, msg) {\n        ctx.plugin.error(msg);\n    }\n})();\n\nexport {GLTFSceneGraphLoader}\n","import {math} from \"../../viewer/scene/math/math.js\";\nimport {utils} from \"../../viewer/scene/utils.js\";\nimport {core} from \"../../viewer/scene/core.js\";\nimport {buildEdgeIndices} from '../../viewer/scene/math/buildEdgeIndices.js';\n\n/**\n * @private\n */\nclass GLTFPerformanceModelLoader {\n\n    constructor(cfg) { // TODO: Loading options fallbacks on loader, eg. handleGLTFNode etc\n        cfg = cfg || {};\n    }\n\n    load(plugin, performanceModel, src, options, ok, error) {\n        options = options || {};\n        loadGLTF(plugin, performanceModel, src, options, function () {\n                core.scheduleTask(function () {\n                    performanceModel.scene.fire(\"modelLoaded\", performanceModel.id); // FIXME: Assumes listeners know order of these two events\n                    performanceModel.fire(\"loaded\", true, false);\n                });\n                if (ok) {\n                    ok();\n                }\n            },\n            function (msg) {\n                plugin.error(msg);\n                if (error) {\n                    error(msg);\n                }\n                performanceModel.fire(\"error\", msg);\n            });\n    }\n\n    parse(plugin, performanceModel, gltf, options, ok, error) {\n        options = options || {};\n        parseGLTF(plugin, gltf, \"\", options, performanceModel, function () {\n                performanceModel.scene.fire(\"modelLoaded\", performanceModel.id); // FIXME: Assumes listeners know order of these two events\n                performanceModel.fire(\"loaded\", true, false);\n                if (ok) {\n                    ok();\n                }\n            },\n            function (msg) {\n                performanceModel.error(msg);\n                performanceModel.fire(\"error\", msg);\n                if (error) {\n                    error(msg);\n                }\n            });\n    }\n}\n\nconst INSTANCE_THRESHOLD = 1;\n\nconst loadGLTF = (function () {\n\n    return function (plugin, performanceModel, src, options, ok, error) {\n        const spinner = plugin.viewer.scene.canvas.spinner;\n        spinner.processes++;\n        plugin.dataSource.getGLTF(src, function (json) { // OK\n                spinner.processes--;\n                parseGLTF(plugin, json, src, options, performanceModel, ok, error);\n            },\n            error);\n    };\n\n    function getBasePath(src) {\n        const i = src.lastIndexOf(\"/\");\n        return (i !== 0) ? src.substring(0, i + 1) : \"\";\n    }\n})();\n\nconst parseGLTF = (function () {\n\n    const WEBGL_COMPONENT_TYPES = {\n        5120: Int8Array,\n        5121: Uint8Array,\n        5122: Int16Array,\n        5123: Uint16Array,\n        5125: Uint32Array,\n        5126: Float32Array\n    };\n\n    const WEBGL_TYPE_SIZES = {\n        'SCALAR': 1,\n        'VEC2': 2,\n        'VEC3': 3,\n        'VEC4': 4,\n        'MAT2': 4,\n        'MAT3': 9,\n        'MAT4': 16\n    };\n\n    return function (plugin, json, src, options, performanceModel, ok) {\n        const ctx = {\n            src: src,\n            loadBuffer: options.loadBuffer,\n            handleGLTFNode: options.handleGLTFNode,\n            json: json,\n            scene: performanceModel.scene,\n            plugin: plugin,\n            performanceModel: performanceModel,\n            geometryCreated: {},\n            numObjects: 0,\n            nodes: []\n        };\n        const spinner = plugin.viewer.scene.canvas.spinner;\n        spinner.processes++;\n        loadBuffers(ctx, function () {\n            loadBufferViews(ctx);\n            freeBuffers(ctx); // Don't need buffers once we've created views of them\n            loadMaterials(ctx);\n            spinner.processes--;\n            loadDefaultScene(ctx);\n            performanceModel.finalize();\n            ok();\n        });\n    };\n\n    function loadBuffers(ctx, ok) {\n        const buffers = ctx.json.buffers;\n        if (buffers) {\n            let numToLoad = buffers.length;\n            for (let i = 0, len = buffers.length; i < len; i++) {\n                loadBuffer(ctx, buffers[i], function () {\n                    if (--numToLoad === 0) {\n                        ok();\n                    }\n                }, function (msg) {\n                    ctx.plugin.error(msg);\n                    if (--numToLoad === 0) {\n                        ok();\n                    }\n                });\n            }\n        } else {\n            ok();\n        }\n    }\n\n    function loadBuffer(ctx, bufferInfo, ok, err) {\n        const uri = bufferInfo.uri;\n        if (uri) {\n            ctx.plugin.dataSource.getArrayBuffer(ctx.src, uri, function (data) {\n                    bufferInfo._buffer = data;\n                    ok();\n                },\n                err);\n        } else {\n            err('gltf/handleBuffer missing uri in ' + JSON.stringify(bufferInfo));\n        }\n    }\n\n    function loadBufferViews(ctx) {\n        const bufferViewsInfo = ctx.json.bufferViews;\n        if (bufferViewsInfo) {\n            for (let i = 0, len = bufferViewsInfo.length; i < len; i++) {\n                loadBufferView(ctx, bufferViewsInfo[i]);\n            }\n        }\n    }\n\n    function loadBufferView(ctx, bufferViewInfo) {\n        const buffer = ctx.json.buffers[bufferViewInfo.buffer];\n        bufferViewInfo._typedArray = null;\n        const byteLength = bufferViewInfo.byteLength || 0;\n        const byteOffset = bufferViewInfo.byteOffset || 0;\n        bufferViewInfo._buffer = buffer._buffer.slice(byteOffset, byteOffset + byteLength);\n    }\n\n    function freeBuffers(ctx) {\n        const buffers = ctx.json.buffers;\n        if (buffers) {\n            for (let i = 0, len = buffers.length; i < len; i++) {\n                buffers[i]._buffer = null;\n            }\n        }\n    }\n\n    function loadMaterials(ctx) {\n        const materialsInfo = ctx.json.materials;\n        if (materialsInfo) {\n            for (let i = 0, len = materialsInfo.length; i < len; i++) {\n                const materialInfo = materialsInfo[i];\n                const material = loadMaterialColorize(ctx, materialInfo);\n                materialInfo._rgbaColor = material;\n            }\n        }\n    }\n\n    function loadMaterialColorize(ctx, materialInfo) { // Substitute RGBA for material, to use fast flat shading instead\n        const colorize = new Float32Array([1, 1, 1, 1]);\n        const extensions = materialInfo.extensions;\n        if (extensions) {\n            const specularPBR = extensions[\"KHR_materials_pbrSpecularGlossiness\"];\n            if (specularPBR) {\n                const diffuseFactor = specularPBR.diffuseFactor;\n                if (diffuseFactor !== null && diffuseFactor !== undefined) {\n                    colorize.set(diffuseFactor);\n                }\n            }\n            const common = extensions[\"KHR_materials_common\"];\n            if (common) {\n                const technique = common.technique;\n                const values = common.values || {};\n                const blinn = technique === \"BLINN\";\n                const phong = technique === \"PHONG\";\n                const lambert = technique === \"LAMBERT\";\n                const diffuse = values.diffuse;\n                if (diffuse && (blinn || phong || lambert)) {\n                    if (!utils.isString(diffuse)) {\n                        colorize.set(diffuse);\n                    }\n                }\n                const transparency = values.transparency;\n                if (transparency !== null && transparency !== undefined) {\n                    colorize[3] = transparency;\n                }\n                const transparent = values.transparent;\n                if (transparent !== null && transparent !== undefined) {\n                    colorize[3] = transparent;\n                }\n            }\n        }\n        const metallicPBR = materialInfo.pbrMetallicRoughness;\n        if (metallicPBR) {\n            const baseColorFactor = metallicPBR.baseColorFactor;\n            if (baseColorFactor) {\n                colorize.set(baseColorFactor);\n            }\n        }\n        return colorize;\n    }\n\n    function loadDefaultScene(ctx) {\n        const json = ctx.json;\n        const scene = json.scene || 0;\n        const defaultSceneInfo = json.scenes[scene];\n        if (!defaultSceneInfo) {\n            error(ctx, \"glTF has no default scene\");\n            return;\n        }\n        preprocessScene(ctx, defaultSceneInfo);\n        loadScene(ctx, defaultSceneInfo);\n    }\n\n    function preprocessScene(ctx, sceneInfo) {\n        const nodes = sceneInfo.nodes;\n        if (!nodes) {\n            return;\n        }\n        const json = ctx.json;\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const glTFNode = json.nodes[nodes[i]];\n            if (!glTFNode) {\n                error(ctx, \"Node not found: \" + i);\n                continue;\n            }\n            countMeshUsage(ctx, i, glTFNode);\n        }\n    }\n\n    function loadScene(ctx, sceneInfo) {\n        const nodes = sceneInfo.nodes;\n        if (!nodes) {\n            return;\n        }\n        const json = ctx.json;\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const glTFNode = json.nodes[nodes[i]];\n            if (!glTFNode) {\n                error(ctx, \"Node not found: \" + i);\n                continue;\n            }\n            countMeshUsage(ctx, glTFNode);\n        }\n        ctx.plugin.viewer.scene.canvas.spinner.processes++;\n        for (let i = 0, len = nodes.length; i < len; i++) {\n            const glTFNode = json.nodes[nodes[i]];\n            loadNode(ctx, glTFNode, null);\n        }\n        ctx.plugin.viewer.scene.canvas.spinner.processes--;\n    }\n\n    function countMeshUsage(ctx, glTFNode) {\n        const json = ctx.json;\n        const mesh = glTFNode.mesh;\n        if (mesh !== undefined) {\n            const meshInfo = json.meshes[glTFNode.mesh];\n            if (meshInfo) {\n                meshInfo.instances = meshInfo.instances ? meshInfo.instances + 1 : 1;\n            }\n        }\n        if (glTFNode.children) {\n            const children = glTFNode.children;\n            for (let i = 0, len = children.length; i < len; i++) {\n                const childNodeIdx = children[i];\n                const childNodeInfo = json.nodes[childNodeIdx];\n                if (!childNodeInfo) {\n                    error(ctx, \"Node not found: \" + i);\n                    continue;\n                }\n                countMeshUsage(ctx, childNodeInfo);\n            }\n        }\n    }\n\n    function loadNode(ctx, glTFNode, matrix) {\n\n        const json = ctx.json;\n        let localMatrix;\n\n        if (glTFNode.matrix) {\n            localMatrix = glTFNode.matrix;\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, math.mat4());\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.translation) {\n            localMatrix = math.translationMat4v(glTFNode.translation);\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, math.mat4());\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.rotation) {\n            localMatrix = math.quaternionToMat4(glTFNode.rotation);\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, math.mat4());\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.scale) {\n            localMatrix = math.scalingMat4v(glTFNode.scale);\n            if (matrix) {\n                matrix = math.mulMat4(matrix, localMatrix, math.mat4());\n            } else {\n                matrix = localMatrix;\n            }\n        }\n\n        if (glTFNode.mesh !== undefined) {\n\n            const meshInfo = json.meshes[glTFNode.mesh];\n\n            if (meshInfo) {\n\n                let createEntity;\n\n                if (ctx.handleGLTFNode) {\n                    const actions = {};\n                    if (!ctx.handleGLTFNode(ctx.performanceModel.id, glTFNode, actions)) {\n                        return;\n                    }\n                    if (actions.createEntity) {\n                        createEntity = actions.createEntity;\n                    }\n                }\n\n                const performanceModel = ctx.performanceModel;\n                const worldMatrix = matrix ? matrix.slice() : math.identityMat4();\n                const numPrimitives = meshInfo.primitives.length;\n\n                if (numPrimitives > 0) {\n\n                    const meshIds = [];\n\n                    for (let i = 0; i < numPrimitives; i++) {\n                        const meshCfg = {\n                            id: performanceModel.id + \".\" + ctx.numObjects++,\n                            matrix: worldMatrix\n                        };\n                        const primitiveInfo = meshInfo.primitives[i];\n\n                        const materialIndex = primitiveInfo.material;\n                        let materialInfo;\n                        if (materialIndex !== null && materialIndex !== undefined) {\n                            materialInfo = json.materials[materialIndex];\n                        }\n                        if (materialInfo) {\n                            meshCfg.color = materialInfo._rgbaColor;\n                            meshCfg.opacity = materialInfo._rgbaColor[3];\n\n                        } else {\n                            meshCfg.color = new Float32Array([1.0, 1.0, 1.0]);\n                            meshCfg.opacity = 1.0;\n                        }\n\n                        if (createEntity) {\n                            if (createEntity.colorize) {\n                                meshCfg.color = createEntity.colorize;\n                            }\n                            if (createEntity.opacity !== undefined && createEntity.opacity !== null) {\n                                meshCfg.opacity = createEntity.opacity;\n                            }\n                        }\n\n                        if (meshInfo.instances > INSTANCE_THRESHOLD) {\n\n                            // Instancing\n\n                            const geometryId = performanceModel.id + \".\" + glTFNode.mesh + \".\" + i;\n                            if (!ctx.geometryCreated[geometryId]) {\n                                const geometryCfg = {\n                                    id: geometryId\n                                };\n                                loadPrimitiveGeometry(ctx, primitiveInfo, geometryCfg);\n                                performanceModel.createGeometry(geometryCfg);\n                                ctx.geometryCreated[geometryId] = true;\n                            }\n\n                            meshCfg.geometryId = geometryId;\n\n                            performanceModel.createMesh(meshCfg);\n                            meshIds.push(meshCfg.id);\n\n                        } else {\n\n                            // Batching\n\n                            loadPrimitiveGeometry(ctx, primitiveInfo, meshCfg);\n\n                            performanceModel.createMesh(meshCfg);\n                            meshIds.push(meshCfg.id);\n                        }\n                    }\n\n                    if (createEntity) {\n                        performanceModel.createEntity(utils.apply(createEntity, {\n                            meshIds: meshIds\n                        }));\n                    } else {\n                        performanceModel.createEntity({\n                            meshIds: meshIds\n                        });\n                    }\n                }\n            }\n        }\n\n        if (glTFNode.children) {\n            const children = glTFNode.children;\n            for (let i = 0, len = children.length; i < len; i++) {\n                const childNodeIdx = children[i];\n                const childNodeInfo = json.nodes[childNodeIdx];\n                if (!childNodeInfo) {\n                    error(ctx, \"Node not found: \" + i);\n                    continue;\n                }\n                loadNode(ctx, childNodeInfo, matrix);\n            }\n        }\n    }\n\n    function loadPrimitiveGeometry(ctx, primitiveInfo, geometryCfg) {\n        const attributes = primitiveInfo.attributes;\n        if (!attributes) {\n            return;\n        }\n        geometryCfg.primitive = \"triangles\";\n        const indicesIndex = primitiveInfo.indices;\n        if (indicesIndex !== null && indicesIndex !== undefined) {\n            const accessorInfo = ctx.json.accessors[indicesIndex];\n            geometryCfg.indices = loadAccessorTypedArray(ctx, accessorInfo);\n        }\n        const positionsIndex = attributes.POSITION;\n        if (positionsIndex !== null && positionsIndex !== undefined) {\n            const accessorInfo = ctx.json.accessors[positionsIndex];\n            geometryCfg.positions = loadAccessorTypedArray(ctx, accessorInfo);\n            //  scalePositionsArray(geometryCfg.positions);\n        }\n        const normalsIndex = attributes.NORMAL;\n        if (normalsIndex !== null && normalsIndex !== undefined) {\n            const accessorInfo = ctx.json.accessors[normalsIndex];\n            geometryCfg.normals = loadAccessorTypedArray(ctx, accessorInfo);\n        }\n        if (geometryCfg.indices) {\n            geometryCfg.edgeIndices = buildEdgeIndices(geometryCfg.positions, geometryCfg.indices, null, 10); // Save PerformanceModel from building edges\n        }\n    }\n\n    function loadAccessorTypedArray(ctx, accessorInfo) {\n        const bufferViewInfo = ctx.json.bufferViews[accessorInfo.bufferView];\n        const itemSize = WEBGL_TYPE_SIZES[accessorInfo.type];\n        const TypedArray = WEBGL_COMPONENT_TYPES[accessorInfo.componentType];\n        const elementBytes = TypedArray.BYTES_PER_ELEMENT; // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n        const itemBytes = elementBytes * itemSize;\n        if (accessorInfo.byteStride && accessorInfo.byteStride !== itemBytes) { // The buffer is not interleaved if the stride is the item size in bytes.\n            error(\"interleaved buffer!\"); // TODO\n        } else {\n            return new TypedArray(bufferViewInfo._buffer, accessorInfo.byteOffset || 0, accessorInfo.count * itemSize);\n        }\n    }\n\n    function error(ctx, msg) {\n        ctx.plugin.error(msg);\n    }\n})();\n\nexport {GLTFPerformanceModelLoader}\n","/**\n * @desc Default initial properties for {@link Entity}s loaded from models accompanied by metadata.\n *\n * When loading a model, plugins such as {@link XKTLoaderPlugin} create\n * a tree of {@link Entity}s that represent the model. These loaders can optionally load metadata, to create\n * a {@link MetaModel} corresponding to the root {@link Entity}, with a {@link MetaObject} corresponding to each\n * object {@link Entity} within the tree.\n *\n * @type {{String:Object}}\n */\nconst IFCObjectDefaults = {\n\n    IfcOpeningElement: {\n        pickable: false,\n        visible: false\n    },\n\n    IfcSpace: {\n        colorize: [0.137255, 0.403922, 0.870588],\n        pickable: false,\n        visible: false,\n        opacity: 0.4\n    },\n\n    IfcWindow: {\n        colorize: [0.137255, 0.403922, 0.870588],\n        opacity: 0.3\n    },\n\n    IfcPlate: {\n        colorize: [0.8470588235, 0.427450980392, 0, 0.5],\n        opacity: 0.3\n    },\n\n    DEFAULT: {\n    }\n};\n\nexport {IFCObjectDefaults}","import {utils} from \"../../viewer/scene/utils.js\";\n\n/**\n * Default data access strategy for {@link GLTFLoaderPlugin}.\n *\n * This just loads assets using XMLHttpRequest.\n */\nclass GLTFDefaultDataSource {\n\n    constructor() {\n    }\n\n    /**\n     * Gets metamodel JSON.\n     *\n     * @param {String|Number} metaModelSrc Identifies the metamodel JSON asset.\n     * @param {{Function(*)}} ok Fired on successful loading of the metamodel JSON asset.\n     * @param {{Function(*)}} error Fired on error while loading the metamodel JSON asset.\n     */\n    getMetaModel(metaModelSrc, ok, error) {\n        utils.loadJSON(metaModelSrc,\n            (json) => {\n                ok(json);\n            },\n            function (errMsg) {\n                error(errMsg);\n            });\n    }\n\n    /**\n     * Gets glTF JSON.\n     *\n     * @param {String|Number} glTFSrc Identifies the glTF JSON asset.\n     * @param {Function} ok Fired on successful loading of the glTF JSON asset.\n     * @param {Function} error Fired on error while loading the glTF JSON asset.\n     */\n    getGLTF(glTFSrc, ok, error) {\n        utils.loadJSON(glTFSrc,\n            (gltf) => {\n                ok(gltf);\n            },\n            function (errMsg) {\n                error(errMsg);\n            });\n    }\n\n    /**\n     * Gets glTF binary attachment.\n     *\n     * Note that this method requires the source of the glTF JSON asset. This is because the binary attachment\n     * source could be relative to the glTF source, IE. it may not be a global ID.\n     *\n     * @param {String|Number} glTFSrc Identifies the glTF JSON asset.\n     * @param {String|Number} binarySrc Identifies the glTF binary asset.\n     * @param {Function} ok Fired on successful loading of the glTF binary asset.\n     * @param {Function} error Fired on error while loading the glTF binary asset.\n     */\n    getArrayBuffer(glTFSrc, binarySrc, ok, error) {\n        loadArraybuffer(glTFSrc, binarySrc,\n            (arrayBuffer) => {\n                ok(arrayBuffer);\n            },\n            function (errMsg) {\n                error(errMsg);\n            });\n    }\n}\n\nfunction loadArraybuffer(glTFSrc, binarySrc, ok, err) {\n    // Check for data: URI\n    var defaultCallback = () => {\n    };\n    ok = ok || defaultCallback;\n    err = err || defaultCallback;\n    const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    const dataUriRegexResult = binarySrc.match(dataUriRegex);\n    if (dataUriRegexResult) { // Safari can't handle data URIs through XMLHttpRequest\n        const isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = window.decodeURIComponent(data);\n        if (isBase64) {\n            data = window.atob(data);\n        }\n        try {\n            const buffer = new ArrayBuffer(data.length);\n            const view = new Uint8Array(buffer);\n            for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n            }\n            window.setTimeout(function () {\n                ok(buffer);\n            }, 0);\n        } catch (error) {\n            window.setTimeout(function () {\n                err(error);\n            }, 0);\n        }\n    } else {\n        const basePath = getBasePath(glTFSrc);\n        const url = basePath + binarySrc;\n        const request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onreadystatechange = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    ok(request.response);\n                } else {\n                    err('loadArrayBuffer error : ' + request.response);\n                }\n            }\n        };\n        request.send(null);\n    }\n}\n\nfunction getBasePath(src) {\n    var i = src.lastIndexOf(\"/\");\n    return (i !== 0) ? src.substring(0, i + 1) : \"\";\n}\n\nexport {GLTFDefaultDataSource};","import {utils} from \"../../viewer/scene/utils.js\"\nimport {PerformanceModel} from \"../../viewer/scene/PerformanceModel/PerformanceModel.js\";\nimport {Node} from \"../../viewer/scene/nodes/Node.js\";\nimport {Plugin} from \"../../viewer/Plugin.js\";\nimport {GLTFSceneGraphLoader} from \"./GLTFSceneGraphLoader.js\";\nimport {GLTFPerformanceModelLoader} from \"./GLTFPerformanceModelLoader.js\";\nimport {IFCObjectDefaults} from \"../../viewer/metadata/IFCObjectDefaults.js\";\nimport {GLTFDefaultDataSource} from \"./GLTFDefaultDataSource.js\";\n\n/**\n * {@link Viewer} plugin that loads models from [glTF](https://www.khronos.org/gltf/).\n *\n * * Creates an {@link Entity} representing each model it loads, which will have {@link Entity#isModel} set ````true```` and will be registered by {@link Entity#id} in {@link Scene#models}.\n * * Creates an {@link Entity} for each object within the model, which is indicated by each glTF ````node```` that has a ````name```` attribute. Those Entities will have {@link Entity#isObject} set ````true```` and will be registered by {@link Entity#id} in {@link Scene#objects}.\n * * When loading, can set the World-space position, scale and rotation of each model within World space, along with initial properties for all the model's {@link Entity}s.\n *\n * ## Metadata\n *\n * GLTFLoaderPlugin can also load an accompanying JSON metadata file with each model, which creates a {@link MetaModel} corresponding\n * to the model {@link Entity} and a {@link MetaObject} corresponding to each object {@link Entity}.\n *\n * Each {@link MetaObject} has a {@link MetaObject#type}, which indicates the classification of its corresponding {@link Entity}. When loading\n * metadata, we can also provide GLTFLoaderPlugin with a custom lookup table of initial values to set on the properties of each type of {@link Entity}. By default, GLTFLoaderPlugin\n * uses its own map of default colors and visibilities for IFC element types.\n *\n * ## Quality Setting\n *\n * By default, GLTFLoaderPlugin will load a high-performance scene representation that's optimized for low memory usage and\n * optimal rendering. The high-performance representation renders large numbers of objects efficiently, using geometry\n * batching and instancing, with simple Lambertian shading that ignores any textures and realistic materials in the glTF.\n *\n * Specifying ````performance:false```` to {@link GLTFLoaderPlugin#load} will internally load a heavier scene\n * representation comprised of {@link Node}, {@link Mesh}, {@link Geometry}, {@link Material} and {@link Texture} components,\n * that will exactly preserve the materials specified in the glTF. Use this when you want to load a model for a realistic preview,\n * maybe using PBR etc.\n *\n * We tend to use the default ````performance:true```` setting for CAD and BIM models, where structure is more important that\n * surface appearance.\n *\n * Publically, GLTFLoaderPlugin creates the same {@link Entity}s for both levels of performance. Privately, however, it implements\n * {@link Entity}s using two different sets of concrete subtypes, for its two different internally-managed scene representations.\n *\n * ## Usage\n *\n * In the example below we'll load the Schependomlaan model from a [glTF file](http://xeokit.github.io/xeokit-sdk/examples/models/gltf/schependomlaan/), along\n * with an accompanying JSON [IFC metadata file](http://xeokit.github.io/xeokit-sdk/examples/metaModels/schependomlaan/).\n *\n * This will create a bunch of {@link Entity}s that represents the model and its objects, along with a {@link MetaModel} and {@link MetaObject}s\n * that hold their metadata.\n *\n * Since this model contains IFC types, the GLTFLoaderPlugin will set the initial colors of object {@link Entity}s according\n * to the standard IFC element colors in the GLTFModel's current map. Override that with your own map via property {@link GLTFLoaderPlugin#objectDefaults}.\n *\n * Read more about this example in the user guide on [Viewing BIM Models Offline](https://www.notion.so/xeokit/Viewing-an-IFC-Model-with-xeokit-c373e48bc4094ff5b6e5c5700ff580ee).\n *\n * We're leaving ````performance: true```` since our model has many objects and we're not interested in realistic rendering.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#BIMOffline_glTF_OTCConferenceCenter)]\n *\n * ````javascript\n * import {Viewer, GLTFLoaderPlugin} from \"xeokit-sdk.es.js\";\n *\n * //------------------------------------------------------------------------------------------------------------------\n * // 1. Create a Viewer,\n * // 2. Arrange the camera,\n * // 3. Tweak the selection material (tone it down a bit)\n * //------------------------------------------------------------------------------------------------------------------\n *\n * // 1\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\",\n *      transparent: true\n * });\n *\n * // 2\n * viewer.camera.orbitPitch(20);\n * viewer.camera.orbitYaw(-45);\n *\n * // 3\n * viewer.scene.selectedMaterial.fillAlpha = 0.1;\n *\n * //------------------------------------------------------------------------------------------------------------------\n * // 1. Create a glTF loader plugin,\n * // 2. Load a glTF building model and JSON IFC metadata\n * // 3. Emphasis the edges to make it look nice\n * //------------------------------------------------------------------------------------------------------------------\n *\n * // 1\n * const gltfLoader = new GLTFLoaderPlugin(viewer);\n *\n * // 2\n * var model = gltfLoader.load({                                    // Returns an Entity that represents the model\n *      id: \"myModel\",\n *      src: \"./models/gltf/OTCConferenceCenter/scene.gltf\",\n *      metaModelSrc: \"./models/gltf/OTCConferenceCenter/metaModel.json\",     // Creates a MetaModel (see below)\n *      edges: true,\n *      performance: true  // Load high-performance scene representation (default is false)\n * });\n *\n * model.on(\"loaded\", () => {\n *\n *      //--------------------------------------------------------------------------------------------------------------\n *      // 1. Find metadata on the third storey\n *      // 2. Select all the objects in the building's third storey\n *      // 3. Fit the camera to all the objects on the third storey\n *      //--------------------------------------------------------------------------------------------------------------\n *\n *      // 1\n *      const metaModel = viewer.metaScene.metaModels[\"myModel\"];       // MetaModel with ID \"myModel\"\n *      const metaObject\n *          = viewer.metaScene.metaObjects[\"0u4wgLe6n0ABVaiXyikbkA\"];   // MetaObject with ID \"0u4wgLe6n0ABVaiXyikbkA\"\n *\n *      const name = metaObject.name;                                   // \"01 eerste verdieping\"\n *      const type = metaObject.type;                                   // \"IfcBuildingStorey\"\n *      const parent = metaObject.parent;                               // MetaObject with type \"IfcBuilding\"\n *      const children = metaObject.children;                           // Array of child MetaObjects\n *      const objectId = metaObject.id;                                 // \"0u4wgLe6n0ABVaiXyikbkA\"\n *      const objectIds = viewer.metaScene.getObjectIDsInSubtree(objectId);   // IDs of leaf sub-objects\n *      const aabb = viewer.scene.getAABB(objectIds);                   // Axis-aligned boundary of the leaf sub-objects\n *\n *      // 2\n *      viewer.scene.setObjectsSelected(objectIds, true);\n *\n *      // 3\n *      viewer.cameraFlight.flyTo(aabb);\n * });\n *\n * // Find the model Entity by ID\n * model = viewer.scene.models[\"myModel\"];\n *\n * // Destroy the model\n * model.destroy();\n * ````\n *\n * ## Transforming\n *\n * We have the option to rotate, scale and translate each  *````.glTF````* model as we load it.\n *\n * This lets us load multiple models, or even multiple copies of the same model, and position them apart from each other.\n *\n * In the example below, we'll scale our model to half its size, rotate it 90 degrees about its local X-axis, then\n * translate it 100 units along its X axis.\n *\n * [[Run example](https://xeokit.github.io/xeokit-sdk/examples/#loading_glTF_Duplex_transform)]\n *\n * ````javascript\n * const model = gltfLoader.load({\n *      src: \"./models/gltf/Duplex/scene.gltf\",\n *      metaModelSrc: \"./models/gltf/Duplex/Duplex.json\",\n *      rotation: [90,0,0],\n *      scale: [0.5, 0.5, 0.5],\n *      position: [100, 0, 0]\n * });\n * ````\n *\n * ## Including and excluding IFC types\n *\n * We can also load only those objects that have the specified IFC types. In the example below, we'll load only the\n * objects that represent walls.\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#BIMOffline_glTF_includeTypes_PlanView)]\n *\n * ````javascript\n * const model = gltfLoader.load({\n *     id: \"myModel\",\n *      src: \"./models/gltf/OTCConferenceCenter/scene.gltf\",\n *      metaModelSrc: \"./models/gltf/OTCConferenceCenter/metaModel.json\",\n *      includeTypes: [\"IfcWallStandardCase\"]\n * });\n * ````\n *\n * We can also load only those objects that **don't** have the specified IFC types. In the example below, we'll load only the\n * objects that do not represent empty space.\n *\n * ````javascript\n * const model = gltfLoader.load({\n *     id: \"myModel\",\n *      src: \"./models/gltf/OTCConferenceCenter/scene.gltf\",\n *      metaModelSrc: \"./models/gltf/OTCConferenceCenter/metaModel.json\",\n *      excludeTypes: [\"IfcSpace\"]\n * });\n * ````\n * @class GLTFLoaderPlugin\n */\nclass GLTFLoaderPlugin extends Plugin {\n\n    /**\n     * @constructor\n     *\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg  Plugin configuration.\n     * @param {String} [cfg.id=\"GLTFLoader\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     * @param {Object} [cfg.objectDefaults] Map of initial default states for each loaded {@link Entity} that represents an object.  Default value is {@link IFCObjectDefaults}.\n     * @param {Object} [cfg.dataSource] A custom data source through which the GLTFLoaderPlugin can load metadata, glTF and binary attachments. Defaults to an instance of {@link GLTFDefaultDataSource}, which loads over HTTP.\n     */\n    constructor(viewer, cfg = {}) {\n\n        super(\"GLTFLoader\", viewer, cfg);\n\n        /**\n         * @private\n         */\n        this._sceneGraphLoader = new GLTFSceneGraphLoader(this, cfg);\n\n        /**\n         * @private\n         */\n        this._performanceModelLoader = new GLTFPerformanceModelLoader(this, cfg);\n\n        this.dataSource = cfg.dataSource;\n        this.objectDefaults = cfg.objectDefaults;\n    }\n\n    /**\n     * Sets a custom data source through which the GLTFLoaderPlugin can load metadata, glTF and binary attachments.\n     *\n     * Default value is {@link GLTFDefaultDataSource}, which loads via an XMLHttpRequest.\n     *\n     * @type {Object}\n     */\n    set dataSource(value) {\n        this._dataSource = value || new GLTFDefaultDataSource();\n    }\n\n    /**\n     * Gets the custom data source through which the GLTFLoaderPlugin can load metadata, glTF and binary attachments.\n     *\n     * Default value is {@link GLTFDefaultDataSource}, which loads via an XMLHttpRequest.\n     *\n     * @type {Object}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n\n    /**\n     * Sets map of initial default states for each loaded {@link Entity} that represents an object.\n     *\n     * Default value is {@link IFCObjectDefaults}.\n     *\n     * @type {{String: Object}}\n     */\n    set objectDefaults(value) {\n        this._objectDefaults = value || IFCObjectDefaults;\n    }\n\n    /**\n     * Gets map of initial default states for each loaded {@link Entity} that represents an object.\n     *\n     * Default value is {@link IFCObjectDefaults}.\n     *\n     * @type {{String: Object}}\n     */\n    get objectDefaults() {\n        return this._objectDefaults;\n    }\n\n    /**\n     * Loads a glTF model from a file into this GLTFLoaderPlugin's {@link Viewer}.\n     *\n     * @param {*} params Loading parameters.\n     * @param {String} [params.id] ID to assign to the root {@link Entity#id}, unique among all components in the Viewer's {@link Scene}, generated automatically by default.\n     * @param {String} [params.src] Path to a glTF file, as an alternative to the ````gltf```` parameter.\n     * @param {*} [params.gltf] glTF JSON, as an alternative to the ````src```` parameter.\n     * @param {String} [params.metaModelSrc] Path to an optional metadata file, as an alternative to the ````metaModelData```` parameter.\n     * @param {*} [params.metaModelData] JSON model metadata, as an alternative to the ````metaModelSrc```` parameter.\n     * @param {{String:Object}} [params.objectDefaults] Map of initial default states for each loaded {@link Entity} that represents an object. Default value is {@link IFCObjectDefaults}.\n     * @params {String[]} [params.includeTypes] When loading metadata, only loads objects that have {@link MetaObject}s with {@link MetaObject#type} values in this list.\n     * @params {String[]} [params.excludeTypes] When loading metadata, never loads objects that have {@link MetaObject}s with {@link MetaObject#type} values in this list.\n     * @param {Boolean} [params.edges=false] Whether or not xeokit renders the model with edges emphasized.\n     * @param {Number[]} [params.position=[0,0,0]] The model World-space 3D position.\n     * @param {Number[]} [params.scale=[1,1,1]] The model's World-space scale.\n     * @param {Number[]} [params.rotation=[0,0,0]] The model's World-space rotation, as Euler angles given in degrees, for each of the X, Y and Z axis.\n     * @param {Number[]} [params.matrix=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]] The model's world transform matrix. Overrides the position, scale and rotation parameters.\n     * @param {Boolean} [params.backfaces=false] When true, allows visible backfaces, wherever specified in the glTF. When false, ignores backfaces.\n     * @param {Number} [params.edgeThreshold=10] When xraying, highlighting, selecting or edging, this is the threshold angle between normals of adjacent triangles, below which their shared wireframe edge is not drawn.\n     * @params {Boolean} [params.performance=true] Set ````false```` to load all the materials and textures provided by the glTF file, otherwise leave ````true```` to load the default high-performance representation optimized for low memory usage and efficient rendering.\n     * @returns {Entity} Entity representing the model, which will have {@link Entity#isModel} set ````true```` and will be registered by {@link Entity#id} in {@link Scene#models}\n     */\n    load(params = {}) {\n\n        if (params.id && this.viewer.scene.components[params.id]) {\n            this.error(\"Component with this ID already exists in viewer: \" + params.id + \" - will autogenerate this ID\");\n            delete params.id;\n        }\n\n        const performance = params.performance !== false;\n\n        const model = performance\n\n            // PerformanceModel provides performance-oriented scene representation\n            // converting glTF materials to simple flat-shading without textures\n\n            ? new PerformanceModel(this.viewer.scene, utils.apply(params, {\n                isModel: true\n            }))\n\n            // Scene Node graph supports original glTF materials\n\n            : new Node(this.viewer.scene, utils.apply(params, {\n                isModel: true\n            }));\n\n        const modelId = model.id;  // In case ID was auto-generated\n\n        if (!params.src && !params.gltf) {\n            this.error(\"load() param expected: src or gltf\");\n            return model; // Return new empty model\n        }\n\n        const loader = performance ? this._performanceModelLoader : this._sceneGraphLoader;\n\n        if (params.metaModelSrc || params.metaModelData) {\n\n            const objectDefaults = params.objectDefaults || this._objectDefaults || IFCObjectDefaults;\n\n            const processMetaModelData = (metaModelData) => {\n\n                this.viewer.metaScene.createMetaModel(modelId, metaModelData, {\n                    includeTypes: params.includeTypes,\n                    excludeTypes: params.excludeTypes\n                });\n\n                this.viewer.scene.canvas.spinner.processes--;\n\n                var includeTypes;\n                if (params.includeTypes) {\n                    includeTypes = {};\n                    for (let i = 0, len = params.includeTypes.length; i < len; i++) {\n                        includeTypes[params.includeTypes[i]] = true;\n                    }\n                }\n\n                var excludeTypes;\n                if (params.excludeTypes) {\n                    excludeTypes = {};\n                    for (let i = 0, len = params.excludeTypes.length; i < len; i++) {\n                        includeTypes[params.excludeTypes[i]] = true;\n                    }\n                }\n\n                params.readableGeometry = false;\n\n                params.handleGLTFNode = (modelId, glTFNode, actions) => {\n\n                    const name = glTFNode.name;\n\n                    if (!name) {\n                        return true; // Continue descending this node subtree\n                    }\n\n                    const nodeId = name;\n                    const metaObject = this.viewer.metaScene.metaObjects[nodeId];\n                    const type = (metaObject ? metaObject.type : \"DEFAULT\") || \"DEFAULT\";\n\n                    actions.createEntity = {\n                        id: nodeId,\n                        isObject: true // Registers the Entity in Scene#objects\n                    };\n\n                    const props = objectDefaults[type];\n\n                    if (props) { // Set Entity's initial rendering state for recognized type\n\n                        if (props.visible === false) {\n                            actions.createEntity.visible = false;\n                        }\n\n                        if (props.colorize) {\n                            actions.createEntity.colorize = props.colorize;\n                        }\n\n                        if (props.pickable === false) {\n                            actions.createEntity.pickable = false;\n                        }\n\n                        if (props.opacity !== undefined && props.opacity !== null) {\n                            actions.createEntity.opacity = props.opacity;\n                        }\n                    }\n\n                    return true; // Continue descending this glTF node subtree\n                };\n\n                if (params.src) {\n                    loader.load(this, model, params.src, params);\n                } else {\n                    loader.parse(this, model, params.gltf, params);\n                }\n            };\n\n            if (params.metaModelSrc) {\n\n                const metaModelSrc = params.metaModelSrc;\n\n                this.viewer.scene.canvas.spinner.processes++;\n\n                this._dataSource.getMetaModel(metaModelSrc, (metaModelData) => {\n\n                    this.viewer.scene.canvas.spinner.processes--;\n\n                    processMetaModelData(metaModelData);\n\n                }, (errMsg) => {\n                    this.error(`load(): Failed to load model metadata for model '${modelId} from  '${metaModelSrc}' - ${errMsg}`);\n                    this.viewer.scene.canvas.spinner.processes--;\n                });\n\n            } else if (params.metaModelData) {\n\n                processMetaModelData(params.metaModelData);\n            }\n\n        } else {\n\n            params.handleGLTFNode = (modelId, glTFNode, actions) => {\n\n                const name = glTFNode.name;\n\n                if (!name) {\n                    return true; // Continue descending this node subtree\n                }\n\n                const id = name;\n\n                actions.createEntity = { // Create an Entity for this glTF scene node\n                    id: id,\n                    isObject: true // Registers the Entity in Scene#objects\n                };\n\n                return true; // Continue descending this glTF node subtree\n            };\n\n            if (params.src) {\n                loader.load(this, model, params.src, params);\n            } else {\n                loader.parse(this, model, params.gltf, params);\n            }\n        }\n\n        model.once(\"destroyed\", () => {\n            this.viewer.metaScene.destroyMetaModel(modelId);\n        });\n\n        return model;\n    }\n\n    /**\n     * Destroys this GLTFLoaderPlugin.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\n\nexport {GLTFLoaderPlugin}","import {utils} from '../../utils.js';\n\n/**\n * @desc Creates a cylinder-shaped {@link Geometry}.\n *\n * ## Usage\n *\n * Creating a {@link Mesh} with a cylinder-shaped {@link ReadableGeometry} :\n *\n * [[Run this example](http://xeokit.github.io/xeokit-sdk/examples/#geometry_builders_buildCylinderGeometry)]\n *\n * ````javascript\n *\n * import {Viewer, Mesh, buildCylinderGeometry, ReadableGeometry, PhongMaterial, Texture} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *      canvasId: \"myCanvas\"\n *  });\n *\n * viewer.camera.eye = [0, 0, 5];\n * viewer.camera.look = [0, 0, 0];\n * viewer.camera.up = [0, 1, 0];\n *\n * new Mesh(viewer.scene, {\n *      geometry: new ReadableGeometry(viewer.scene, buildCylinderGeometry({\n *          center: [0,0,0],\n *          radiusTop: 2.0,\n *          radiusBottom: 2.0,\n *          height: 5.0,\n *          radialSegments: 20,\n *          heightSegments: 1,\n *          openEnded: false\n *      }),\n *      material: new PhongMaterial(viewer.scene, {\n *         diffuseMap: new Texture(viewer.scene, {\n *             src: \"textures/diffuse/uvGrid2.jpg\"\n *         })\n *      })\n * });\n * ````\n *\n * @function buildCylinderGeometry\n * @param {*} [cfg] Configs\n * @param {String} [cfg.id] Optional ID for the {@link Geometry}, unique among all components in the parent {@link Scene}, generated automatically when omitted.\n * @param {Number[]} [cfg.center]  3D point indicating the center position.\n * @param {Number} [cfg.radiusTop=1]  Radius of top.\n * @param {Number} [cfg.radiusBottom=1]  Radius of bottom.\n * @param {Number} [cfg.height=1] Height.\n * @param {Number} [cfg.radialSegments=60]  Number of horizontal segments.\n * @param {Number} [cfg.heightSegments=1]  Number of vertical segments.\n * @param {Boolean} [cfg.openEnded=false]  Whether or not the cylinder has solid caps on the ends.\n * @returns {Object} Configuration for a {@link Geometry} subtype.\n */\nfunction buildCylinderGeometry(cfg = {}) {\n\n    let radiusTop = cfg.radiusTop || 1;\n    if (radiusTop < 0) {\n        console.error(\"negative radiusTop not allowed - will invert\");\n        radiusTop *= -1;\n    }\n\n    let radiusBottom = cfg.radiusBottom || 1;\n    if (radiusBottom < 0) {\n        console.error(\"negative radiusBottom not allowed - will invert\");\n        radiusBottom *= -1;\n    }\n\n    let height = cfg.height || 1;\n    if (height < 0) {\n        console.error(\"negative height not allowed - will invert\");\n        height *= -1;\n    }\n\n    let radialSegments = cfg.radialSegments || 32;\n    if (radialSegments < 0) {\n        console.error(\"negative radialSegments not allowed - will invert\");\n        radialSegments *= -1;\n    }\n    if (radialSegments < 3) {\n        radialSegments = 3;\n    }\n\n    let heightSegments = cfg.heightSegments || 1;\n    if (heightSegments < 0) {\n        console.error(\"negative heightSegments not allowed - will invert\");\n        heightSegments *= -1;\n    }\n    if (heightSegments < 1) {\n        heightSegments = 1;\n    }\n\n    const openEnded = !!cfg.openEnded;\n\n    let center = cfg.center;\n    const centerX = center ? center[0] : 0;\n    const centerY = center ? center[1] : 0;\n    const centerZ = center ? center[2] : 0;\n\n    const heightHalf = height / 2;\n    const heightLength = height / heightSegments;\n    const radialAngle = (2.0 * Math.PI / radialSegments);\n    const radialLength = 1.0 / radialSegments;\n    //var nextRadius = this._radiusBottom;\n    const radiusChange = (radiusTop - radiusBottom) / heightSegments;\n\n    const positions = [];\n    const normals = [];\n    const uvs = [];\n    const indices = [];\n\n    let h;\n    let i;\n\n    let x;\n    let z;\n\n    let currentRadius;\n    let currentHeight;\n\n    let first;\n    let second;\n\n    let startIndex;\n    let tu;\n    let tv;\n\n    // create vertices\n    const normalY = (90.0 - (Math.atan(height / (radiusBottom - radiusTop))) * 180 / Math.PI) / 90.0;\n\n    for (h = 0; h <= heightSegments; h++) {\n        currentRadius = radiusTop - h * radiusChange;\n        currentHeight = heightHalf - h * heightLength;\n\n        for (i = 0; i <= radialSegments; i++) {\n            x = Math.sin(i * radialAngle);\n            z = Math.cos(i * radialAngle);\n\n            normals.push(currentRadius * x);\n            normals.push(normalY); //todo\n            normals.push(currentRadius * z);\n\n            uvs.push((i * radialLength));\n            uvs.push(h * 1 / heightSegments);\n\n            positions.push((currentRadius * x) + centerX);\n            positions.push((currentHeight) + centerY);\n            positions.push((currentRadius * z) + centerZ);\n        }\n    }\n\n    // create faces\n    for (h = 0; h < heightSegments; h++) {\n        for (i = 0; i <= radialSegments; i++) {\n\n            first = h * (radialSegments + 1) + i;\n            second = first + radialSegments;\n\n            indices.push(first);\n            indices.push(second);\n            indices.push(second + 1);\n\n            indices.push(first);\n            indices.push(second + 1);\n            indices.push(first + 1);\n        }\n    }\n\n    // create top cap\n    if (!openEnded && radiusTop > 0) {\n        startIndex = (positions.length / 3);\n\n        // top center\n        normals.push(0.0);\n        normals.push(1.0);\n        normals.push(0.0);\n\n        uvs.push(0.5);\n        uvs.push(0.5);\n\n        positions.push(0 + centerX);\n        positions.push(heightHalf + centerY);\n        positions.push(0 + centerZ);\n\n        // top triangle fan\n        for (i = 0; i <= radialSegments; i++) {\n            x = Math.sin(i * radialAngle);\n            z = Math.cos(i * radialAngle);\n            tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;\n            tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;\n\n            normals.push(radiusTop * x);\n            normals.push(1.0);\n            normals.push(radiusTop * z);\n\n            uvs.push(tu);\n            uvs.push(tv);\n\n            positions.push((radiusTop * x) + centerX);\n            positions.push((heightHalf) + centerY);\n            positions.push((radiusTop * z) + centerZ);\n        }\n\n        for (i = 0; i < radialSegments; i++) {\n            center = startIndex;\n            first = startIndex + 1 + i;\n\n            indices.push(first);\n            indices.push(first + 1);\n            indices.push(center);\n        }\n    }\n\n    // create bottom cap\n    if (!openEnded && radiusBottom > 0) {\n\n        startIndex = (positions.length / 3);\n\n        // top center\n        normals.push(0.0);\n        normals.push(-1.0);\n        normals.push(0.0);\n\n        uvs.push(0.5);\n        uvs.push(0.5);\n\n        positions.push(0 + centerX);\n        positions.push(0 - heightHalf + centerY);\n        positions.push(0 + centerZ);\n\n        // top triangle fan\n        for (i = 0; i <= radialSegments; i++) {\n\n            x = Math.sin(i * radialAngle);\n            z = Math.cos(i * radialAngle);\n\n            tu = (0.5 * Math.sin(i * radialAngle)) + 0.5;\n            tv = (0.5 * Math.cos(i * radialAngle)) + 0.5;\n\n            normals.push(radiusBottom * x);\n            normals.push(-1.0);\n            normals.push(radiusBottom * z);\n\n            uvs.push(tu);\n            uvs.push(tv);\n\n            positions.push((radiusBottom * x) + centerX);\n            positions.push((0 - heightHalf) + centerY);\n            positions.push((radiusBottom * z) + centerZ);\n        }\n\n        for (i = 0; i < radialSegments; i++) {\n\n            center = startIndex;\n            first = startIndex + 1 + i;\n\n            indices.push(center);\n            indices.push(first + 1);\n            indices.push(first);\n        }\n    }\n\n    return utils.apply(cfg, {\n        positions: positions,\n        normals: normals,\n        uv: uvs,\n        indices: indices\n    });\n}\n\n\nexport {buildCylinderGeometry};\n","import {math} from \"../../viewer/scene/math/math.js\";\n\n/**\n * @private\n */\nfunction CubeTextureCanvas(viewer, cfg = {}) {\n\n    var axisLabels = false;\n\n    const cubeColor = \"lightgrey\";\n    const cubeHighlightColor = cfg.hoverColor || \"rgba(0,0,0,0.4)\";\n\n    var height = 500;\n    var width = height + (height / 3);\n    var scale = width / 24;\n\n    const facesZUp = [\n        {boundary: [6, 6, 6, 6], color: cfg.frontColor || cfg.color || \"#55FF55\"},\n        {boundary: [18, 6, 6, 6], color: cfg.backColor || cfg.color || \"#55FF55\"},\n        {boundary: [12, 6, 6, 6], color: cfg.leftColor || cfg.color || \"#FF5555\"},\n        {boundary: [0, 6, 6, 6], color: cfg.rightColor || cfg.color || \"#FF5555\"},\n        {boundary: [6, 0, 6, 6], color: cfg.topColor || cfg.color || \"#7777FF\"},\n        {boundary: [6, 12, 6, 6], color: cfg.bottomColor || cfg.color || \"#7777FF\"}\n    ];\n\n    const areasZUp = [\n        {label: \"front\", boundaries: [[7, 7, 4, 4]], dir: [0, 1, 0], up: [0, 0, 1]},\n        {label: \"back\", boundaries: [[19, 7, 4, 4]], dir: [0, -1, 0], up: [0, 0, 1]},\n        {label: \"right\", boundaries: [[13, 7, 4, 4]], dir: [-1, 0, 0], up: [0, 0, 1]},\n        {label: \"left\", boundaries: [[1, 7, 4, 4]], dir: [1, 0, 0], up: [0, 0, 1]},\n        {label: \"top\", boundaries: [[7, 1, 4, 4]], dir: [0, 0, -1], up: [0, 1, 0]},\n        {label: \"bottom\", boundaries: [[7, 13, 4, 4]], dir: [0, 0, 1], up: [0, -1, 0]},\n        {boundaries: [[7, 5, 4, 2]], dir: [0, 1, -1], up: [0, 1, 1]},\n        {boundaries: [[1, 6, 4, 1], [6, 1, 1, 4]], dir: [1, 0, -1], up: [1, 0, 1]},\n        {boundaries: [[7, 0, 4, 1], [19, 6, 4, 1]], dir: [0, -1, -1], up: [0, -1, 1]},\n        {boundaries: [[13, 6, 4, 1], [11, 1, 1, 4]], dir: [-1, 0, -1], up: [-1, 0, 1]},\n        {boundaries: [[7, 11, 4, 2]], dir: [0, 1, 1], up: [0, -1, 1]},\n        {boundaries: [[1, 11, 4, 1], [6, 13, 1, 4]], dir: [1, 0, 1], up: [-1, 0, 1]},\n        {boundaries: [[7, 17, 4, 1], [19, 11, 4, 1]], dir: [0, -1, 1], up: [0, 1, 1]},\n        {boundaries: [[13, 11, 4, 1], [11, 13, 1, 4]], dir: [-1, 0, 1], up: [1, 0, 1]},\n        {boundaries: [[5, 7, 2, 4]], dir: [1, 1, 0], up: [0, 0, 1]},\n        {boundaries: [[11, 7, 2, 4]], dir: [-1, 1, 0], up: [0, 0, 1]},\n        {boundaries: [[17, 7, 2, 4]], dir: [-1, -1, 0], up: [0, 0, 1]},\n        {boundaries: [[0, 7, 1, 4], [23, 7, 1, 4]], dir: [1, -1, 0], up: [0, 0, 1]},\n        {boundaries: [[5, 11, 2, 2]], dir: [1, 1, 1], up: [-1, -1, 1]},\n        {boundaries: [[23, 11, 1, 1], [6, 17, 1, 1], [0, 11, 1, 1]], dir: [1, -1, 1], up: [-1, 1, 1]},\n        {boundaries: [[5, 5, 2, 2]], dir: [1, 1, -1], up: [1, 1, 1]},\n        {boundaries: [[11, 17, 1, 1], [17, 11, 2, 1]], dir: [-1, -1, 1], up: [1, 1, 1]},\n        {boundaries: [[17, 6, 2, 1], [11, 0, 1, 1]], dir: [-1, -1, -1], up: [-1, -1, 1]},\n        {boundaries: [[11, 11, 2, 2]], dir: [-1, 1, 1], up: [1, -1, 1]},\n        {boundaries: [[0, 6, 1, 1], [6, 0, 1, 1], [23, 6, 1, 1]], dir: [1, -1, -1], up: [1, -1, 1]},\n        {boundaries: [[11, 5, 2, 2]], dir: [-1, 1, -1], up: [-1, 1, 1]}\n    ];\n\n    const facesYUp = [\n        {boundary: [6, 6, 6, 6], color: cfg.frontColor || cfg.color || \"#55FF55\"},\n        {boundary: [18, 6, 6, 6], color: cfg.backColor || cfg.color || \"#55FF55\"},\n        {boundary: [12, 6, 6, 6], color: cfg.leftColor || cfg.color || \"#FF5555\"},\n        {boundary: [0, 6, 6, 6], color: cfg.rightColor || cfg.color || \"#FF5555\"},\n        {boundary: [6, 0, 6, 6], color: cfg.topColor || cfg.color || \"#7777FF\"},\n        {boundary: [6, 12, 6, 6], color: cfg.bottomColor || cfg.color || \"#7777FF\"}\n    ];\n\n    const areasYUp = [\n        {label: \"front\", boundaries: [[7, 7, 4, 4]], dir: [0, 0, -1], up: [0, 1, 0]},\n        {label: \"back\", boundaries: [[19, 7, 4, 4]], dir: [0, 0, 1], up: [0, 1, 0]},\n        {label: \"right\", boundaries: [[13, 7, 4, 4]], dir: [-1, 0, 0], up: [0, 1, 0]},\n        {label: \"left\", boundaries: [[1, 7, 4, 4]], dir: [1, 0, 0], up: [0, 1, 0]},\n        {label: \"top\", boundaries: [[7, 1, 4, 4]], dir: [0, -1, 0], up: [0, 0, -1]},\n        {label: \"bottom\", boundaries: [[7, 13, 4, 4]], dir: [0, 1, 0], up: [0, 0, 1]},\n        {boundaries: [[7, 5, 4, 2]], dir: [0, -1, -1], up: [0, 1, -1]},\n        {boundaries: [[1, 6, 4, 1], [6, 1, 1, 4]], dir: [1, -1, 0], up: [1, 1, 0]},\n        {boundaries: [[7, 0, 4, 1], [19, 6, 4, 1]], dir: [0, -1, 1], up: [0, 1, 1]},\n        {boundaries: [[13, 6, 4, 1], [11, 1, 1, 4]], dir: [-1, -1, 0], up: [-1, 1, 0]},\n        {boundaries: [[7, 11, 4, 2]], dir: [0, 1, -1], up: [0, 1, 1]},\n        {boundaries: [[1, 11, 4, 1], [6, 13, 1, 4]], dir: [1, 1, 0], up: [-1, 1, 0]},\n        {boundaries: [[7, 17, 4, 1], [19, 11, 4, 1]], dir: [0, 1, 1], up: [0, 1, -1]},\n        {boundaries: [[13, 11, 4, 1], [11, 13, 1, 4]], dir: [-1, 1, 0], up: [1, 1, 0]},\n        {boundaries: [[5, 7, 2, 4]], dir: [1, 0, -1], up: [0, 1, 0]},\n        {boundaries: [[11, 7, 2, 4]], dir: [-1, 0, -1], up: [0, 1, 0]},\n        {boundaries: [[17, 7, 2, 4]], dir: [-1, 0, 1], up: [0, 1, 0]},\n        {boundaries: [[0, 7, 1, 4], [23, 7, 1, 4]], dir: [1, 0, 1], up: [0, 1, 0]},\n        {boundaries: [[5, 11, 2, 2]], dir: [1, 1, -1], up: [-1, 1, 1]},\n        {boundaries: [[23, 11, 1, 1], [6, 17, 1, 1], [0, 11, 1, 1]], dir: [1, 1, 1], up: [-1, 1, -1]},\n        {boundaries: [[5, 5, 2, 2]], dir: [1, -1, -1], up: [1, 1, -1]},\n        {boundaries: [[11, 17, 1, 1], [17, 11, 2, 1]], dir: [-1, 1, 1], up: [1, 1, -1]},\n        {boundaries: [[17, 6, 2, 1], [11, 0, 1, 1]], dir: [-1, -1, 1], up: [-1, 1, 1]},\n        {boundaries: [[11, 11, 2, 2]], dir: [-1, 1, -1], up: [1, 1, 1]},\n        {boundaries: [[0, 6, 1, 1], [6, 0, 1, 1], [23, 6, 1, 1]], dir: [1, -1, 1], up: [1, 1, 1]},\n        {boundaries: [[11, 5, 2, 2]], dir: [-1, -1, -1], up: [-1, 1, -1]}\n    ];\n\n    for (let i = 0, len = areasZUp.length; i < len; i++) {\n        math.normalizeVec3(areasZUp[i].dir, areasZUp[i].dir);\n        math.normalizeVec3(areasYUp[i].dir, areasYUp[i].dir);\n    }\n\n    var faces = facesYUp;\n    var areas = areasYUp;\n\n    this._textureCanvas = document.createElement('canvas');\n    this._textureCanvas.width = width;\n    this._textureCanvas.height = height;\n    this._textureCanvas.style.width = width + \"px\";\n    this._textureCanvas.style.height = height + \"px\";\n    this._textureCanvas.style.padding = \"0\";\n    this._textureCanvas.style.margin = \"0\";\n    this._textureCanvas.style.top = \"0\";\n    this._textureCanvas.style.background = cubeColor;\n    this._textureCanvas.style.position = \"absolute\";\n    this._textureCanvas.style.opacity = \"1.0\";\n    this._textureCanvas.style.visibility = \"hidden\";\n    this._textureCanvas.style[\"z-index\"] = 2000000;\n\n    const body = document.getElementsByTagName(\"body\")[0];\n    body.appendChild(this._textureCanvas);\n\n    const context = this._textureCanvas.getContext(\"2d\");\n\n    var zUp = false;\n\n    function paint() {\n\n        for (let i = 0, len = facesZUp.length; i < len; i++) {\n            const face = facesZUp[i];\n            const boundary = face.boundary;\n            const xmin = Math.round(boundary[0] * scale);\n            const ymin = Math.round(boundary[1] * scale);\n            const width = Math.round(boundary[2] * scale);\n            const height = Math.round(boundary[3] * scale);\n            context.fillStyle = face.color;\n            context.fillRect(xmin, ymin, width, height);\n        }\n\n        for (let i = 0, len = areas.length; i < len; i++) {\n            let xmin;\n            let ymin;\n            let width;\n            let height;\n            const area = areas[i];\n\n            const boundaries = area.boundaries;\n            for (var j = 0, lenj = boundaries.length; j < lenj; j++) {\n                const boundary = boundaries[j];\n                xmin = Math.round(boundary[0] * scale);\n                ymin = Math.round(boundary[1] * scale);\n                width = Math.round(boundary[2] * scale);\n                height = Math.round(boundary[3] * scale);\n                if (area.highlighted) {\n                    context.fillStyle = area.highlighted ? cubeHighlightColor : (area.color || cubeColor);\n                    context.fillRect(xmin, ymin, width, height);\n                }\n            }\n            if (area.label) {\n                context.fillStyle = \"black\";\n                context.font = '60px sans-serif';\n                context.textAlign = \"center\";\n                var xcenter = xmin + (width * 0.5);\n                var ycenter = ymin + (height * 0.7);\n                context.fillText(translateLabel(area.label), xcenter, ycenter, 80);\n            }\n        }\n    }\n\n    var translateLabel = (function () {\n        const dictionaries = {\n            \"yUp\": {\"front\": \"+Z\", \"back\": \"-Z\", \"right\": \"+X\", \"left\": \"-X\", \"top\": \"+Y\", \"bottom\": \"-Y\"},\n            \"en\": {\"front\": \"FRONT\", \"back\": \"BACK\", \"right\": \"RIGHT\", \"left\": \"LEFT\", \"top\": \"TOP\", \"bottom\": \"BOTTOM\"}\n        };\n        return function (key) {\n            var dictionary;\n            if (axisLabels) {\n                if (zUp) {\n                    dictionary = dictionaries[\"zUp\"];\n                } else {\n                    dictionary = dictionaries[\"yUp\"];\n                }\n            } else {\n                dictionary = dictionaries[viewer.language || \"en\"];\n            }\n            return dictionary ? (dictionary[key] || key) : key;\n        };\n    })();\n\n    this.setZUp = function () {\n        zUp = true;\n        faces = facesZUp;\n        areas = areasZUp;\n        this.clear();\n    };\n\n    this.setYUp = function () {\n        zUp = false;\n        faces = facesYUp;\n        areas = areasYUp;\n        this.clear();\n    };\n\n    this.clear = function () {\n        context.fillStyle = cubeColor;\n        context.fillRect(0, 0, width, height);\n        for (var i = 0, len = areas.length; i < len; i++) {\n            const area = areas[i];\n            area.highlighted = false;\n        }\n        paint();\n    };\n\n    this.getArea = function (uv) {\n        const s = uv[0] * width;\n        const t = height - (uv[1] * height); // Correct for our texture Y-flipping\n        for (var i = 0, len = areas.length; i < len; i++) {\n            const area = areas[i];\n            const boundaries = area.boundaries;\n            for (var j = 0, lenj = boundaries.length; j < lenj; j++) {\n                const boundary = boundaries[j];\n                if (s >= (boundary[0] * scale) && s <= ((boundary[0] + boundary[2]) * scale) && t >= (boundary[1] * scale) && t <= ((boundary[1] + boundary[3]) * scale)) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    this.setAreaHighlighted = function (areaId, highlighted) {\n        var area = areas[areaId];\n        if (!area) {\n            throw \"Area not found: \" + areaId;\n        }\n        area.highlighted = !!highlighted;\n        paint();\n    };\n\n    this.getAreaDir = function (areaId) {\n        var area = areas[areaId];\n        if (!area) {\n            throw \"Unknown area: \" + areaId;\n        }\n        return area.dir;\n    };\n\n    this.getAreaUp = function (areaId) {\n        var area = areas[areaId];\n        if (!area) {\n            throw \"Unknown area: \" + areaId;\n        }\n        return area.up;\n    };\n\n    this.getImage = function () {\n        return this._textureCanvas;\n    };\n\n    this.destroy = function () {\n        if (this._textureCanvas) {\n            this._textureCanvas.parentNode.removeChild(this._textureCanvas);\n            this._textureCanvas = null;\n        }\n    };\n\n    this.clear();\n}\n\nexport {CubeTextureCanvas};\n","import {Plugin} from \"../../viewer/Plugin.js\";\nimport {math} from \"../../viewer/scene/math/math.js\";\nimport {Scene} from \"../../viewer/scene/scene/Scene.js\";\nimport {DirLight} from \"./../../viewer/scene/lights/DirLight.js\";\nimport {Mesh} from \"./../../viewer/scene/mesh/Mesh.js\";\nimport {ReadableGeometry} from \"../../viewer/scene/geometry/ReadableGeometry.js\";\nimport {PhongMaterial} from \"../../viewer/scene/materials/PhongMaterial.js\";\nimport {Texture} from \"../../viewer/scene/materials/Texture.js\";\nimport {buildCylinderGeometry} from \"../../viewer/scene/geometry/builders/buildCylinderGeometry.js\";\nimport {CubeTextureCanvas} from \"./CubeTextureCanvas.js\";\n\n/**\n * {@link Viewer} plugin that lets us look at the entire {@link Scene} from along a chosen axis or diagonal.\n *\n *  [<img src=\"https://user-images.githubusercontent.com/83100/55674490-c93c2e00-58b5-11e9-8a28-eb08876947c0.gif\">](https://xeokit.github.io/xeokit-sdk/examples/#gizmos_NavCubePlugin)\n *\n * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#gizmos_NavCubePlugin)]\n *\n * ## Overview\n *\n * * Rotating the NavCube causes the Viewer's {@link Camera} to orbit its current\n * point-of-interest. Conversely, orbiting the Camera causes the NavCube to rotate accordingly.\n * * The faces of the NavCube are aligned with the Viewer's {@link Scene}'s World-space coordinate axis. Clicking on a face moves\n * the Camera to look at the entire Scene along the corresponding axis. Clicking on an edge or a corner looks at\n * the entire Scene along a diagonal.\n * * The NavCube can be configured to either jump or fly the Camera to each new position. We can configure how tightly the\n * NavCube fits the Scene to view, and when flying, we can configure how fast it flies. We can also configure whether the\n * NavCube fits all objects to view, or just the currently visible objects. See below for a usage example.\n * * Clicking the NavCube also sets {@link CameraControl#pivotPos} to the center of the fitted objects.\n *\n * ## Usage\n *\n * In the example below, we'll create a Viewer and add a NavCubePlugin, which will create a NavCube gizmo in the canvas\n * with the given ID. Then we'll use the {@link XKTLoaderPlugin} to load a model into the Viewer's Scene. We can then\n * use the NavCube to look at the model along each axis or diagonal.\n *\n * ````JavaScript\n * import {Viewer, XKTLoaderPlugin, NavCubePlugin} from \"xeokit-sdk.es.js\";\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [-3.93, 2.85, 27.01];\n * viewer.camera.look = [4.40, 3.72, 8.89];\n * viewer.camera.up = [-0.01, 0.99, 0.03];\n *\n * const navCube = new NavCubePlugin(viewer, {\n *\n *     canvasID: \"myNavCubeCanvas\",\n *\n *     visible: true,         // Initially visible (default)\n *\n *     cameraFly: true,       // Fly camera to each selected axis/diagonal\n *     cameraFitFOV: 45,      // How much field-of-view the scene takes once camera has fitted it to view\n *     cameraFlyDuration: 0.5,// How long (in seconds) camera takes to fly to each new axis/diagonal\n *\n *     fitVisible: false,     // Fit whole scene, including invisible objects (default)\n *\n *     synchProjection: false // Keep NavCube in perspective projection, even when camera switches to ortho (default)\n * });\n *\n * const xktLoader = new XKTLoaderPlugin(viewer);\n *\n * const model = xktLoader.load({\n *     id: \"myModel\",\n *     src: \"./models/xkt/Duplex.xkt\",\n *     edges: true\n * });\n * ````\n */\nclass NavCubePlugin extends Plugin {\n\n    /**\n     * @constructor\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg NavCubePlugin configuration.\n     * @param {String} [cfg.id=\"NavCube\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     * @param {String} [cfg.canvasId] ID of an existing HTML canvas to display the NavCube - either this or canvasElement is mandatory. When both values are given, the element reference is always preferred to the ID.\n     * @param {HTMLCanvasElement} [cfg.canvasElement] Reference of an existing HTML canvas to display the NavCube - either this or canvasId is mandatory. When both values are given, the element reference is always preferred to the ID.\n     * @param {Boolean} [cfg.visible=true] Initial visibility.\n     * @param {String} [cfg.cameraFly=true] Whether the {@link Camera} flies or jumps to each selected axis or diagonal.\n     * @param {String} [cfg.cameraFitFOV=45] How much of the field-of-view, in degrees, that the 3D scene should fill the {@link Canvas} when the {@link Camera} moves to an axis or diagonal.\n     * @param {String} [cfg.cameraFlyDuration=0.5] When flying the {@link Camera} to each new axis or diagonal, how long, in seconds, that the Camera takes to get there.\n     * @param {String} [cfg.color=\"lightgrey] Custom uniform color for the faces of the NavCube.\n     * @param {String} [cfg.frontColor=\"#55FF55\"] Custom color for the front face of the NavCube. Overrides ````color````.\n     * @param {String} [cfg.backColor=\"#55FF55\"] Custom color for the back face of the NavCube. Overrides ````color````.\n     * @param {String} [cfg.leftColor=\"#FF5555\"] Custom color for the left face of the NavCube. Overrides ````color````.\n     * @param {String} [cfg.rightColor=\"#FF5555\"] Custom color for the right face of the NavCube. Overrides ````color````.\n     * @param {String} [cfg.topColor=\"#5555FF\"] Custom color for the top face of the NavCube. Overrides ````color````.\n     * @param {String} [cfg.bottomColor=\"#5555FF\"] Custom color for the bottom face of the NavCube. Overrides ````color````.\n     * @param {String} [cfg.hoverColor=\"rgba(0,0,0,0.4)\"] Custom color for highlighting regions on the NavCube as we hover the pointer over them.\n     * @param {Boolean} [cfg.fitVisible=false] Sets whether the axis, corner and edge-aligned views will fit the\n     * view to the entire {@link Scene} or just to visible object-{@link Entity}s. Entitys are visible objects when {@link Entity#isObject} and {@link Entity#visible} are both ````true````.\n     * @param {Boolean} [cfg.synchProjection=false] Sets whether the NavCube switches between perspective and orthographic projections in synchrony with the {@link Camera}. When ````false````, the NavCube will always be rendered with perspective projection.\n     */\n    constructor(viewer, cfg = {}) {\n\n        super(\"NavCube\", viewer, cfg);\n\n        viewer.navCube = this;\n\n        var visible = true;\n\n        try {\n            this._navCubeScene = new Scene(viewer, {\n                canvasId: cfg.canvasId,\n                canvasElement: cfg.canvasElement,\n                transparent: true\n            });\n\n            this._navCubeCanvas = this._navCubeScene.canvas.canvas;\n\n            this._navCubeScene.input.keyboardEnabled = false; // Don't want keyboard input in the NavCube\n\n        } catch (error) {\n            this.error(error);\n            return;\n        }\n\n        const navCubeScene = this._navCubeScene;\n\n        navCubeScene.clearLights();\n\n        new DirLight(navCubeScene, {dir: [0.4, -0.4, 0.8], color: [0.8, 1.0, 1.0], intensity: 1.0, space: \"view\"});\n        new DirLight(navCubeScene, {dir: [-0.8, -0.3, -0.4], color: [0.8, 0.8, 0.8], intensity: 1.0, space: \"view\"});\n        new DirLight(navCubeScene, {dir: [0.8, -0.6, -0.8], color: [1.0, 1.0, 1.0], intensity: 1.0, space: \"view\"});\n\n        this._navCubeCamera = navCubeScene.camera;\n        this._navCubeCamera.ortho.scale = 7.0;\n        this._navCubeCamera.ortho.near = 0.1;\n        this._navCubeCamera.ortho.far = 2000;\n\n        this._zUp = Boolean(viewer.camera.zUp);\n\n        var self = this;\n\n        this._synchCamera = (function () {\n            var matrix = math.rotationMat4c(-90 * math.DEGTORAD, 1, 0, 0);\n            var eyeLookVec = math.vec3();\n            var eyeLookVecCube = math.vec3();\n            var upCube = math.vec3();\n            return function () {\n                var eye = viewer.camera.eye;\n                var look = viewer.camera.look;\n                var up = viewer.camera.up;\n                eyeLookVec = math.mulVec3Scalar(math.normalizeVec3(math.subVec3(eye, look, eyeLookVec)), 5);\n                if (self._zUp) { // +Z up\n                    math.transformVec3(matrix, eyeLookVec, eyeLookVecCube);\n                    math.transformVec3(matrix, up, upCube);\n                    self._navCubeCamera.look = [0, 0, 0];\n                    self._navCubeCamera.eye = math.transformVec3(matrix, eyeLookVec, eyeLookVecCube);\n                    self._navCubeCamera.up = math.transformPoint3(matrix, up, upCube);\n                } else { // +Y up\n                    self._navCubeCamera.look = [0, 0, 0];\n                    self._navCubeCamera.eye = eyeLookVec;\n                    self._navCubeCamera.up = up;\n                }\n            };\n        }());\n\n        this._cubeTextureCanvas = new CubeTextureCanvas(viewer, cfg);\n\n        this._cubeSampler = new Texture(navCubeScene, {\n            image: this._cubeTextureCanvas.getImage(),\n            flipY: true,\n            wrapS: \"clampToEdge\",\n            wrapT: \"clampToEdge\"\n        });\n\n        this._cubeMesh = new Mesh(navCubeScene, {\n            geometry: new ReadableGeometry(navCubeScene, {\n                primitive: \"triangles\",\n                normals: [\n                    0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n                    0, 1, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1,\n                    0, 0, -1, 0, 0, -1, 0, 0, -1\n                ],\n                positions: [\n                    1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 1, -1, -1,\n                    1, -1, -1, 1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1,\n                    1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, 1, -1\n                ],\n                uv: [\n                    0.5, 0.6666, 0.25, 0.6666, 0.25, 0.3333, 0.5, 0.3333, 0.5, 0.6666, 0.5, 0.3333, 0.75, 0.3333, 0.75, 0.6666,\n                    0.5, 0.6666, 0.5, 1, 0.25, 1, 0.25, 0.6666, 0.25, 0.6666, 0.0, 0.6666, 0.0, 0.3333, 0.25, 0.3333,\n                    0.25, 0, 0.50, 0, 0.50, 0.3333, 0.25, 0.3333, 0.75, 0.3333, 1.0, 0.3333, 1.0, 0.6666, 0.75, 0.6666\n                ],\n                indices: [\n                    0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16,\n                    18, 19, 20, 21, 22, 20, 22, 23\n                ]\n            }),\n            material: new PhongMaterial(navCubeScene, {\n                diffuse: [0.4, 0.4, 0.4],\n                specular: [0.4, 0.4, 0.4],\n                emissive: [.6, .6, .6],\n                diffuseMap: this._cubeSampler,\n                emissiveMap: this._cubeSampler\n            }),\n            visible: !!visible,\n            edges: true\n        });\n\n        this._shadow = new Mesh(navCubeScene, {\n            geometry: new ReadableGeometry(navCubeScene, buildCylinderGeometry({\n                center: [0, 0, 0],\n                radiusTop: 0.001,\n                radiusBottom: 1.4,\n                height: 0.01,\n                radialSegments: 20,\n                heightSegments: 1,\n                openEnded: true\n            })),\n            material: new PhongMaterial(navCubeScene, {\n                diffuse: [0.0, 0.0, 0.0], specular: [0, 0, 0], emissive: [0.0, 0.0, 0.0], alpha: 0.5\n            }),\n            position: [0, -1.5, 0],\n            visible: !!visible,\n            pickable: false,\n            backfaces: false\n        });\n\n        this._onCameraMatrix = viewer.camera.on(\"matrix\", this._synchCamera);\n        this._onCameraWorldAxis = viewer.camera.on(\"worldAxis\", () => {\n            if (viewer.camera.zUp) {\n                this._zUp = true;\n                this._cubeTextureCanvas.setZUp();\n                this._repaint();\n                this._synchCamera();\n            } else if (viewer.camera.yUp) {\n                this._zUp = false;\n                this._cubeTextureCanvas.setYUp();\n                this._repaint();\n                this._synchCamera();\n            }\n        });\n        this._onCameraFOV = viewer.camera.perspective.on(\"fov\", (fov) => {\n            if (this._synchProjection) {\n                this._navCubeCamera.perspective.fov = fov;\n            }\n        });\n        this._onCameraProjection = viewer.camera.on(\"projection\", (projection) => {\n            if (this._synchProjection) {\n                this._navCubeCamera.projection = projection;\n            }\n        });\n\n        var lastAreaId = -1;\n\n        function actionMove(posX, posY) {\n            var yawInc = (posX - lastX) * -sensitivity;\n            var pitchInc = (posY - lastY) * -sensitivity;\n            yaw -= yawInc;\n            pitch -= pitchInc;\n            if (minPitch !== undefined && pitch < minPitch) {\n                pitch = minPitch;\n            }\n            if (maxPitch !== undefined && pitch > maxPitch) {\n                pitch = maxPitch;\n            }\n            viewer.camera.orbitYaw(yawInc);\n            viewer.camera.orbitPitch(-pitchInc);\n            lastX = posX;\n            lastY = posY;\n        }\n\n        function getCoordsWithinElement(event) {\n            var coords = [0, 0];\n            if (!event) {\n                event = window.event;\n                coords[0] = event.x;\n                coords[1] = event.y;\n            } else {\n                var element = event.target;\n                var totalOffsetLeft = 0;\n                var totalOffsetTop = 0;\n                while (element.offsetParent) {\n                    totalOffsetLeft += element.offsetLeft;\n                    totalOffsetTop += element.offsetTop;\n                    element = element.offsetParent;\n                }\n                coords[0] = event.pageX - totalOffsetLeft;\n                coords[1] = event.pageY - totalOffsetTop;\n            }\n            return coords;\n        }\n\n        {\n            var downX = null;\n            var downY = null;\n            var down = false;\n            var over = false;\n\n            var yaw = 0;\n            var pitch = 0;\n            var minPitch = null;\n            var maxPitch = null;\n            var sensitivity = 0.5;\n\n            var lastX;\n            var lastY;\n            var dragging = false;\n\n            self._navCubeCanvas.addEventListener(\"mouseenter\", self._onMouseEnter = function (e) {\n                over = true;\n            });\n\n\n            self._navCubeCanvas.addEventListener(\"mouseleave\", self._onMouseLeave = function (e) {\n                over = false;\n            });\n\n            self._navCubeCanvas.addEventListener(\"mousedown\", self._onMouseDown = function (e) {\n                if (e.which !== 1) {\n                    return;\n                }\n                downX = e.x;\n                downY = e.y;\n                lastX = e.clientX;\n                lastY = e.clientY;\n                var canvasPos = getCoordsWithinElement(e);\n                var hit = navCubeScene.pick({\n                    canvasPos: canvasPos\n                });\n                if (hit) {\n                    down = true;\n\n                } else {\n                    down = false;\n                }\n            });\n\n            document.addEventListener(\"mouseup\", self._onMouseUp = function (e) {\n                if (e.which !== 1) {// Left button\n                    return;\n                }\n                down = false;\n                if (downX === null) {\n                    return;\n                }\n                var canvasPos = getCoordsWithinElement(e);\n                var hit = navCubeScene.pick({\n                    canvasPos: canvasPos,\n                    pickSurface: true\n                });\n                if (hit) {\n                    if (hit.uv) {\n                        var areaId = self._cubeTextureCanvas.getArea(hit.uv);\n                        if (areaId >= 0) {\n                            document.body.style.cursor = \"pointer\";\n                            if (lastAreaId >= 0) {\n                                self._cubeTextureCanvas.setAreaHighlighted(lastAreaId, false);\n                                self._repaint();\n                                lastAreaId = -1;\n                            }\n                            if (areaId >= 0) {\n                                self._cubeTextureCanvas.setAreaHighlighted(areaId, true);\n                                lastAreaId = areaId;\n                                self._repaint();\n                                if (e.x < (downX - 3) || e.x > (downX + 3) || e.y < (downY - 3) || e.y > (downY + 3)) {\n                                    return;\n                                }\n                                var dir = self._cubeTextureCanvas.getAreaDir(areaId);\n                                if (dir) {\n                                    var up = self._cubeTextureCanvas.getAreaUp(areaId);\n                                    flyTo(dir, up, function () {\n                                        if (lastAreaId >= 0) {\n                                            self._cubeTextureCanvas.setAreaHighlighted(lastAreaId, false);\n                                            self._repaint();\n                                            lastAreaId = -1;\n                                        }\n                                        var hit = navCubeScene.pick({\n                                            canvasPos: canvasPos,\n                                            pickSurface: true\n                                        });\n                                        if (hit) {\n                                            if (hit.uv) {\n                                                var areaId = self._cubeTextureCanvas.getArea(hit.uv);\n                                                if (areaId !== undefined) {\n                                                    document.body.style.cursor = \"pointer\";\n                                                    if (lastAreaId >= 0) {\n                                                        self._cubeTextureCanvas.setAreaHighlighted(lastAreaId, false);\n                                                        self._repaint();\n                                                        lastAreaId = -1;\n                                                    }\n                                                    if (areaId >= 0) {\n                                                        self._cubeTextureCanvas.setAreaHighlighted(areaId, true);\n                                                        lastAreaId = areaId;\n                                                        self._repaint();\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n\n            document.addEventListener(\"mousemove\", self._onMouseMove = function (e) {\n                if (lastAreaId >= 0) {\n                    self._cubeTextureCanvas.setAreaHighlighted(lastAreaId, false);\n                    self._repaint();\n                    lastAreaId = -1;\n                }\n                if (e.buttons === 1 && !down) {\n                    return;\n                }\n                if (down) {\n                    var posX = e.clientX;\n                    var posY = e.clientY;\n                    document.body.style.cursor = \"move\";\n                    actionMove(posX, posY);\n                    return;\n                }\n                if (!over) {\n                    return;\n                }\n                var canvasPos = getCoordsWithinElement(e);\n                var hit = navCubeScene.pick({\n                    canvasPos: canvasPos,\n                    pickSurface: true\n                });\n                if (hit) {\n                    if (hit.uv) {\n                        document.body.style.cursor = \"pointer\";\n                        var areaId = self._cubeTextureCanvas.getArea(hit.uv);\n                        if (areaId === lastAreaId) {\n                            return;\n                        }\n                        if (lastAreaId >= 0) {\n                            self._cubeTextureCanvas.setAreaHighlighted(lastAreaId, false);\n                        }\n                        if (areaId >= 0) {\n                            self._cubeTextureCanvas.setAreaHighlighted(areaId, true);\n                            self._repaint();\n                            lastAreaId = areaId;\n                        }\n                    }\n                } else {\n                    document.body.style.cursor = \"default\";\n                    if (lastAreaId >= 0) {\n                        self._cubeTextureCanvas.setAreaHighlighted(lastAreaId, false);\n                        self._repaint();\n                        lastAreaId = -1;\n                    }\n                }\n            });\n\n            var flyTo = (function () {\n                var center = math.vec3();\n                return function (dir, up, ok) {\n                    var aabb = self._fitVisible ? viewer.scene.getAABB(viewer.scene.visibleObjectIds) : viewer.scene.aabb;\n                    var diag = math.getAABB3Diag(aabb);\n                    math.getAABB3Center(aabb, center);\n                    var dist = Math.abs(diag / Math.tan(55.0 / 2));\n                    viewer.cameraControl.pivotPos = center;\n                    if (self._cameraFly) {\n                        viewer.cameraFlight.flyTo({\n                            look: center,\n                            eye: [center[0] - (dist * dir[0]), center[1] - (dist * dir[1]), center[2] - (dist * dir[2])],\n                            up: up || [0, 1, 0],\n                            orthoScale: diag * 1.3,\n                            fitFOV: self._cameraFitFOV,\n                            duration: self._cameraFlyDuration\n                        }, ok);\n                    } else {\n                        viewer.cameraFlight.jumpTo({\n                            look: center,\n                            eye: [center[0] - (dist * dir[0]), center[1] - (dist * dir[1]), center[2] - (dist * dir[2])],\n                            up: up || [0, 1, 0],\n                            orthoScale: diag * 1.3,\n                            fitFOV: self._cameraFitFOV\n                        }, ok);\n                    }\n                };\n            })();\n        }\n\n        this.setVisible(cfg.visible);\n        this.setCameraFitFOV(cfg.cameraFitFOV);\n        this.setCameraFly(cfg.cameraFly);\n        this.setCameraFlyDuration(cfg.cameraFlyDuration);\n        this.setFitVisible(cfg.fitVisible);\n        this.setSynchProjection(cfg.synchProjection);\n    }\n\n    send(name, value) {\n        switch (name) {\n            case \"language\":\n                this._cubeTextureCanvas.clear();\n                this._repaint(); // CubeTextureCanvas gets language from Viewer\n                break;\n        }\n    }\n\n    _repaint() {\n        const image = this._cubeTextureCanvas.getImage();\n        this._cubeMesh.material.diffuseMap.image = image;\n        this._cubeMesh.material.emissiveMap.image = image;\n    }\n\n    /**\n     * Sets if the NavCube is visible.\n     *\n     * @param {Boolean} visible Whether or not the NavCube is visible.\n     */\n    setVisible(visible = true) {\n        if (!this._navCubeCanvas) {\n            return;\n        }\n        this._cubeMesh.visible = visible;\n        this._shadow.visible = visible;\n        this._navCubeCanvas.style.visibility = visible ? \"visible\" : \"hidden\";\n    }\n\n    /**\n     * Gets if the NavCube is visible.\n     *\n     * @return {Boolean} True when the NavCube is visible.\n     */\n    getVisible() {\n        if (!this._navCubeCanvas) {\n            return false;\n        }\n        return this._cubeMesh.visible;\n    }\n\n\n    /**\n     * Sets whether the axis, corner and edge-aligned views will fit the\n     * view to the entire {@link Scene} or just to visible object-{@link Entity}s.\n     *\n     * Entitys are visible objects when {@link Entity#isObject} and {@link Entity#visible} are both ````true````.\n     *\n     * @param {Boolean} fitVisible Set ````true```` to fit only visible object-Entitys.\n     */\n    setFitVisible(fitVisible = false) {\n        this._fitVisible = fitVisible;\n    }\n\n    /**\n     * Gets whether the axis, corner and edge-aligned views will fit the\n     * view to the entire {@link Scene} or just to visible object-{@link Entity}s.\n     *\n     * Entitys are visible objects when {@link Entity#isObject} and {@link Entity#visible} are both ````true````.\n     *\n     * @return {Boolean} True when fitting only visible object-Entitys.\n     */\n    getFitVisible() {\n        return this._fitVisible;\n    }\n\n    /**\n     * Sets whether the {@link Camera} flies or jumps to each selected axis or diagonal.\n     *\n     * Default is ````true````, to fly.\n     *\n     * @param {Boolean} cameraFly Set ````true```` to fly, else ````false```` to jump.\n     */\n    setCameraFly(cameraFly = true) {\n        this._cameraFly = cameraFly;\n    }\n\n    /**\n     * Gets whether the {@link Camera} flies or jumps to each selected axis or diagonal.\n     *\n     * Default is ````true````, to fly.\n     *\n     * @returns {Boolean} Returns ````true```` to fly, else ````false```` to jump.\n     */\n    getCameraFly() {\n        return this._cameraFly;\n    }\n\n    /**\n     * Sets how much of the field-of-view, in degrees, that the {@link Scene} should\n     * fill the canvas when flying or jumping the {@link Camera} to each selected axis or diagonal.\n     *\n     * Default value is ````45````.\n     *\n     * @param {Number} cameraFitFOV New FOV value.\n     */\n    setCameraFitFOV(cameraFitFOV = 45) {\n        this._cameraFitFOV = cameraFitFOV;\n    }\n\n    /**\n     * Gets how much of the field-of-view, in degrees, that the {@link Scene} should\n     * fill the canvas when flying or jumping the {@link Camera} to each selected axis or diagonal.\n     *\n     * Default value is ````45````.\n     *\n     * @returns {Number} Current FOV value.\n     */\n    getCameraFitFOV() {\n        return this._cameraFitFOV;\n    }\n\n    /**\n     * When flying the {@link Camera} to each new axis or diagonal, sets how long, in seconds, that the Camera takes to get there.\n     *\n     * Default is ````0.5````.\n     *\n     * @param {Boolean} cameraFlyDuration Camera flight duration in seconds.\n     */\n    setCameraFlyDuration(cameraFlyDuration = 0.5) {\n        this._cameraFlyDuration = cameraFlyDuration;\n    }\n\n    /**\n     * When flying the {@link Camera} to each new axis or diagonal, gets how long, in seconds, that the Camera takes to get there.\n     *\n     * Default is ````0.5````.\n     *\n     * @returns {Boolean} Camera flight duration in seconds.\n     */\n    getCameraFlyDuration() {\n        return this._cameraFlyDuration;\n    }\n\n    /**\n     * Sets whether the NavCube switches between perspective and orthographic projections in synchrony with\n     * the {@link Camera}. When ````false````, the NavCube will always be rendered with perspective projection.\n     *\n     * @param {Boolean} synchProjection Set ````true```` to keep NavCube projection synchronized with {@link Camera#projection}.\n     */\n    setSynchProjection(synchProjection = false) {\n        this._synchProjection = synchProjection;\n    }\n\n    /**\n     * Gets whether the NavCube switches between perspective and orthographic projections in synchrony with\n     * the {@link Camera}. When ````false````, the NavCube will always be rendered with perspective projection.\n     *\n     * @return {Boolean} True when NavCube projection is synchronized with {@link Camera#projection}.\n     */\n    getSynchProjection() {\n        return this._synchProjection;\n    }\n\n    /**\n     * Destroys this NavCubePlugin.\n     *\n     * Does not destroy the canvas the NavCubePlugin was configured with.\n     */\n    destroy() {\n\n        if (this._navCubeCanvas) {\n\n            this.viewer.camera.off(this._onCameraMatrix);\n            this.viewer.camera.off(this._onCameraWorldAxis);\n            this.viewer.camera.perspective.off(this._onCameraFOV);\n            this.viewer.camera.off(this._onCameraProjection);\n\n            this._navCubeCanvas.removeEventListener(\"mouseenter\", this._onMouseEnter);\n            this._navCubeCanvas.removeEventListener(\"mouseleave\", this._onMouseLeave);\n            this._navCubeCanvas.removeEventListener(\"mousedown\", this._onMouseDown);\n\n            document.removeEventListener(\"mousemove\", this._onMouseMove);\n            document.removeEventListener(\"mouseup\", this._onMouseUp);\n\n            this._navCubeCanvas = null;\n            this._cubeTextureCanvas.destroy();\n            this._cubeTextureCanvas = null;\n\n            this._onMouseEnter = null;\n            this._onMouseLeave = null;\n            this._onMouseDown = null;\n            this._onMouseMove = null;\n            this._onMouseUp = null;\n        }\n\n        this._navCubeScene.destroy();\n        this._navCubeScene = null;\n        this._cubeMesh = null;\n        this._shadow = null;\n\n        super.destroy();\n    }\n}\n\nexport {NavCubePlugin};\n\n","import {math} from \"../../viewer/scene/math/math.js\";\n\nimport {buildCylinderGeometry} from \"../../viewer/scene/geometry/builders/buildCylinderGeometry.js\";\nimport {buildTorusGeometry} from \"../../viewer/scene/geometry/builders/buildTorusGeometry.js\";\n\nimport {ReadableGeometry} from \"../../viewer/scene/geometry/ReadableGeometry.js\";\nimport {PhongMaterial} from \"../../viewer/scene/materials/PhongMaterial.js\";\nimport {EmphasisMaterial} from \"../../viewer/scene/materials/EmphasisMaterial.js\";\nimport {Node} from \"../../viewer/scene/nodes/Node.js\";\nimport {Mesh} from \"../../viewer/scene/mesh/Mesh.js\";\nimport {buildSphereGeometry} from \"../../viewer/scene/geometry/builders/buildSphereGeometry.js\";\nimport {worldToRTCPos} from \"../../viewer/scene/math/rtcCoords.js\";\n\nconst zeroVec = new Float64Array([0, 0, 1]);\nconst quat = new Float64Array(4);\n\n/**\n * Controls a {@link SectionPlane} with mouse and touch input.\n *\n * @private\n */\nclass Control {\n\n    /** @private */\n    constructor(plugin) {\n\n        /**\n         * ID of this Control.\n         *\n         * SectionPlaneControls are mapped by this ID in {@link SectionPlanesPlugin#sectionPlaneControls}.\n         *\n         * @property id\n         * @type {String|Number}\n         */\n        this.id = null;\n\n        this._viewer = plugin.viewer;\n\n        this._visible = false;\n        this._pos = math.vec3(); // Full-precision position of the center of the Control\n        this._rtcCenter = math.vec3();\n        this._rtcPos = math.vec3();\n\n        this._baseDir = math.vec3(); // Saves direction of clip plane when we start dragging an arrow or ring.\n        this._rootNode = null; // Root of Node graph that represents this control in the 3D scene\n        this._displayMeshes = null; // Meshes that are always visible\n        this._affordanceMeshes = null; // Meshes displayed momentarily for affordance\n\n        this._ignoreNextSectionPlaneDirUpdate = false;\n\n        this._createNodes();\n        this._bindEvents();\n    }\n\n    /**\n     * Called by SectionPlanesPlugin to assign this Control to a SectionPlane.\n     * SectionPlanesPlugin keeps SectionPlaneControls in a reuse pool.\n     * Call with a null or undefined value to disconnect the Control ffrom whatever SectionPlane it was assigned to.\n     * @private\n     */\n    _setSectionPlane(sectionPlane) {\n        if (this._sectionPlane) {\n            this._sectionPlane.off(this._onSectionPlanePos);\n            this._sectionPlane.off(this._onSectionPlaneDir);\n            this._onSectionPlanePos = null;\n            this._onSectionPlaneDir = null;\n            this._sectionPlane = null;\n        }\n        if (sectionPlane) {\n            this.id = sectionPlane.id;\n            this._setPos(sectionPlane.pos);\n            this._setDir(sectionPlane.dir);\n            this._sectionPlane = sectionPlane;\n            this._onSectionPlanePos = sectionPlane.on(\"pos\", () => {\n                this._setPos(this._sectionPlane.pos);\n            });\n            this._onSectionPlaneDir = sectionPlane.on(\"dir\", () => {\n                if (!this._ignoreNextSectionPlaneDirUpdate) {\n                    this._setDir(this._sectionPlane.dir);\n                } else {\n                    this._ignoreNextSectionPlaneDirUpdate = false;\n                }\n            });\n        }\n    }\n\n    /**\n     * Gets the {@link SectionPlane} controlled by this Control.\n     * @returns {SectionPlane} The SectionPlane.\n     */\n    get sectionPlane() {\n        return this._sectionPlane;\n    }\n\n    /** @private */\n    _setPos(xyz) {\n\n        this._pos.set(xyz);\n\n        worldToRTCPos(this._pos, this._rtcCenter, this._rtcPos);\n\n        this._rootNode.rtcCenter = this._rtcCenter;\n        this._rootNode.position = this._rtcPos;\n    }\n\n    /** @private */\n    _setDir(xyz) {\n        this._baseDir.set(xyz);\n        this._rootNode.quaternion = math.vec3PairToQuaternion(zeroVec, xyz, quat);\n    }\n\n    _setSectionPlaneDir(dir) {\n        if (this._sectionPlane) {\n            this._ignoreNextSectionPlaneDirUpdate = true;\n            this._sectionPlane.dir = dir;\n        }\n    }\n\n    /**\n     * Sets if this Control is visible.\n     *\n     * @type {Boolean}\n     */\n    setVisible(visible = true) {\n        if (this._visible === visible) {\n            return;\n        }\n        this._visible = visible;\n        var id;\n        for (id in this._displayMeshes) {\n            if (this._displayMeshes.hasOwnProperty(id)) {\n                this._displayMeshes[id].visible = visible;\n            }\n        }\n        if (!visible) {\n            for (id in this._affordanceMeshes) {\n                if (this._affordanceMeshes.hasOwnProperty(id)) {\n                    this._affordanceMeshes[id].visible = visible;\n                }\n            }\n        }\n    }\n\n    /**\n     * Gets if this Control is visible.\n     *\n     * @type {Boolean}\n     */\n    getVisible() {\n        return this._visible;\n    }\n\n    /**\n     * Sets if this Control is culled. This is called by SectionPlanesPlugin to\n     * temporarily hide the Control while a snapshot is being taken by Viewer#getSnapshot().\n     * @param culled\n     */\n    setCulled(culled) {\n        var id;\n        for (id in this._displayMeshes) {\n            if (this._displayMeshes.hasOwnProperty(id)) {\n                this._displayMeshes[id].culled = culled;\n            }\n        }\n        if (!culled) {\n            for (id in this._affordanceMeshes) {\n                if (this._affordanceMeshes.hasOwnProperty(id)) {\n                    this._affordanceMeshes[id].culled = culled;\n                }\n            }\n        }\n    }\n\n    /**\n     * Builds the Entities that represent this Control.\n     * @private\n     */\n    _createNodes() {\n\n        const NO_STATE_INHERIT = false;\n        const scene = this._viewer.scene;\n        const radius = 1.0;\n        const handleTubeRadius = 0.06;\n        const hoopRadius = radius - 0.2;\n        const tubeRadius = 0.01;\n        const arrowRadius = 0.07;\n\n        this._rootNode = new Node(scene, {\n            position: [0, 0, 0],\n            scale: [5, 5, 5]\n        });\n\n        const rootNode = this._rootNode;\n\n        const shapes = {// Reusable geometries\n\n            arrowHead: new ReadableGeometry(rootNode, buildCylinderGeometry({\n                radiusTop: 0.001,\n                radiusBottom: arrowRadius,\n                radialSegments: 32,\n                heightSegments: 1,\n                height: 0.2,\n                openEnded: false\n            })),\n\n            arrowHeadBig: new ReadableGeometry(rootNode, buildCylinderGeometry({\n                radiusTop: 0.001,\n                radiusBottom: 0.09,\n                radialSegments: 32,\n                heightSegments: 1,\n                height: 0.25,\n                openEnded: false\n            })),\n\n            arrowHeadHandle: new ReadableGeometry(rootNode, buildCylinderGeometry({\n                radiusTop: 0.09,\n                radiusBottom: 0.09,\n                radialSegments: 8,\n                heightSegments: 1,\n                height: 0.37,\n                openEnded: false\n            })),\n\n            curve: new ReadableGeometry(rootNode, buildTorusGeometry({\n                radius: hoopRadius,\n                tube: tubeRadius,\n                radialSegments: 64,\n                tubeSegments: 14,\n                arc: (Math.PI * 2.0) / 4.0\n            })),\n\n            curveHandle: new ReadableGeometry(rootNode, buildTorusGeometry({\n                radius: hoopRadius,\n                tube: handleTubeRadius,\n                radialSegments: 64,\n                tubeSegments: 14,\n                arc: (Math.PI * 2.0) / 4.0\n            })),\n\n            hoop: new ReadableGeometry(rootNode, buildTorusGeometry({\n                radius: hoopRadius,\n                tube: tubeRadius,\n                radialSegments: 64,\n                tubeSegments: 8,\n                arc: (Math.PI * 2.0)\n            })),\n\n            axis: new ReadableGeometry(rootNode, buildCylinderGeometry({\n                radiusTop: tubeRadius,\n                radiusBottom: tubeRadius,\n                radialSegments: 20,\n                heightSegments: 1,\n                height: radius,\n                openEnded: false\n            })),\n\n            axisHandle: new ReadableGeometry(rootNode, buildCylinderGeometry({\n                radiusTop: 0.08,\n                radiusBottom: 0.08,\n                radialSegments: 20,\n                heightSegments: 1,\n                height: radius,\n                openEnded: false\n            }))\n        };\n\n        const materials = { // Reusable materials\n\n            pickable: new PhongMaterial(rootNode, { // Invisible material for pickable handles, which define a pickable 3D area\n                diffuse: [1, 1, 0],\n                alpha: 0, // Invisible\n                alphaMode: \"blend\"\n            }),\n\n            red: new PhongMaterial(rootNode, {\n                diffuse: [1, 0.0, 0.0],\n                emissive: [1, 0.0, 0.0],\n                ambient: [0.0, 0.0, 0.0],\n                specular: [.6, .6, .3],\n                shininess: 80,\n                lineWidth: 2\n            }),\n\n            highlightRed: new EmphasisMaterial(rootNode, { // Emphasis for red rotation affordance hoop\n                edges: false,\n                fill: true,\n                fillColor: [1, 0, 0],\n                fillAlpha: 0.6\n            }),\n\n            green: new PhongMaterial(rootNode, {\n                diffuse: [0.0, 1, 0.0],\n                emissive: [0.0, 1, 0.0],\n                ambient: [0.0, 0.0, 0.0],\n                specular: [.6, .6, .3],\n                shininess: 80,\n                lineWidth: 2\n            }),\n\n            highlightGreen: new EmphasisMaterial(rootNode, { // Emphasis for green rotation affordance hoop\n                edges: false,\n                fill: true,\n                fillColor: [0, 1, 0],\n                fillAlpha: 0.6\n            }),\n\n            blue: new PhongMaterial(rootNode, {\n                diffuse: [0.0, 0.0, 1],\n                emissive: [0.0, 0.0, 1],\n                ambient: [0.0, 0.0, 0.0],\n                specular: [.6, .6, .3],\n                shininess: 80,\n                lineWidth: 2\n            }),\n\n            highlightBlue: new EmphasisMaterial(rootNode, { // Emphasis for blue rotation affordance hoop\n                edges: false,\n                fill: true,\n                fillColor: [0, 0, 1],\n                fillAlpha: 0.2\n            }),\n\n            center: new PhongMaterial(rootNode, {\n                diffuse: [0.0, 0.0, 0.0],\n                emissive: [0, 0, 0],\n                ambient: [0.0, 0.0, 0.0],\n                specular: [.6, .6, .3],\n                shininess: 80\n            }),\n\n            highlightBall: new EmphasisMaterial(rootNode, {\n                edges: false,\n                fill: true,\n                fillColor: [0.5, 0.5, 0.5],\n                fillAlpha: 0.5,\n                vertices: false\n            }),\n\n            highlightPlane: new EmphasisMaterial(rootNode, {\n                edges: true,\n                edgeWidth: 3,\n                fill: false,\n                fillColor: [0.5, 0.5, .5],\n                fillAlpha: 0.5,\n                vertices: false\n            })\n        };\n\n        this._displayMeshes = {\n\n            plane: rootNode.addChild(new Mesh(rootNode, {\n                geometry: new ReadableGeometry(rootNode, {\n                    primitive: \"triangles\",\n                    positions: [\n                        0.5, 0.5, 0.0, 0.5, -0.5, 0.0, // 0\n                        -0.5, -0.5, 0.0, -0.5, 0.5, 0.0, // 1\n                        0.5, 0.5, -0.0, 0.5, -0.5, -0.0, // 2\n                        -0.5, -0.5, -0.0, -0.5, 0.5, -0.0 // 3\n                    ],\n                    indices: [0, 1, 2, 2, 3, 0]\n                }),\n                material: new PhongMaterial(rootNode, {\n                    emissive: [0, 0.0, 0],\n                    diffuse: [0, 0, 0],\n                    backfaces: true\n                }),\n                opacity: 0.6,\n                ghosted: true,\n                ghostMaterial: new EmphasisMaterial(rootNode, {\n                    edges: false,\n                    filled: true,\n                    fillColor: [1, 1, 0],\n                    edgeColor: [0, 0, 0],\n                    fillAlpha: 0.1,\n                    backfaces: true\n                }),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false,\n                scale: [2.4, 2.4, 1]\n            }), NO_STATE_INHERIT),\n\n            planeFrame: rootNode.addChild(new Mesh(rootNode, { // Visible frame\n                geometry: new ReadableGeometry(rootNode, buildTorusGeometry({\n                    center: [0, 0, 0],\n                    radius: 1.7,\n                    tube: tubeRadius * 2,\n                    radialSegments: 4,\n                    tubeSegments: 4,\n                    arc: Math.PI * 2.0\n                })),\n                material: new PhongMaterial(rootNode, {\n                    emissive: [0, 0, 0],\n                    diffuse: [0, 0, 0],\n                    specular: [0, 0, 0],\n                    shininess: 0\n                }),\n                //highlighted: true,\n                highlightMaterial: new EmphasisMaterial(rootNode, {\n                    edges: false,\n                    edgeColor: [0.0, 0.0, 0.0],\n                    filled: true,\n                    fillColor: [0.8, 0.8, 0.8],\n                    fillAlpha: 1.0\n                }),\n                pickable: false,\n                collidable: false,\n                clippable: false,\n                visible: false,\n                scale: [1, 1, .1],\n                rotation: [0, 0, 45]\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            xCurve: rootNode.addChild(new Mesh(rootNode, { // Red hoop about Y-axis\n                geometry: shapes.curve,\n                material: materials.red,\n                matrix: (function () {\n                    const rotate2 = math.rotationMat4v(90 * math.DEGTORAD, [0, 1, 0], math.identityMat4());\n                    const rotate1 = math.rotationMat4v(270 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate1, rotate2, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                backfaces: true,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xCurveHandle: rootNode.addChild(new Mesh(rootNode, { // Red hoop about Y-axis\n                geometry: shapes.curveHandle,\n                material: materials.pickable,\n                matrix: (function () {\n                    const rotate2 = math.rotationMat4v(90 * math.DEGTORAD, [0, 1, 0], math.identityMat4());\n                    const rotate1 = math.rotationMat4v(270 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate1, rotate2, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                backfaces: true,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xCurveArrow1: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.red,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0., -0.07, -0.8, math.identityMat4());\n                    const scale = math.scaleMat4v([0.6, 0.6, 0.6], math.identityMat4());\n                    const rotate = math.rotationMat4v(0 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(math.mulMat4(translate, scale, math.identityMat4()), rotate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xCurveArrow2: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.red,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0.0, -0.8, -0.07, math.identityMat4());\n                    const scale = math.scaleMat4v([0.6, 0.6, 0.6], math.identityMat4());\n                    const rotate = math.rotationMat4v(90 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(math.mulMat4(translate, scale, math.identityMat4()), rotate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            yCurve: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.curve,\n                material: materials.green,\n                rotation: [-90, 0, 0],\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                backfaces: true,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yCurveHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.curveHandle,\n                material: materials.pickable,\n                rotation: [-90, 0, 0],\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                backfaces: true,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yCurveArrow1: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.green,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0.07, 0, -0.8, math.identityMat4());\n                    const scale = math.scaleMat4v([0.6, 0.6, 0.6], math.identityMat4());\n                    const rotate = math.rotationMat4v(90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(math.mulMat4(translate, scale, math.identityMat4()), rotate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yCurveArrow2: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.green,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0.8, 0.0, -0.07, math.identityMat4());\n                    const scale = math.scaleMat4v([0.6, 0.6, 0.6], math.identityMat4());\n                    const rotate = math.rotationMat4v(90 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(math.mulMat4(translate, scale, math.identityMat4()), rotate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            zCurve: rootNode.addChild(new Mesh(rootNode, { // Blue hoop about Z-axis\n                geometry: shapes.curve,\n                material: materials.blue,\n                matrix: math.rotationMat4v(180 * math.DEGTORAD, [1, 0, 0], math.identityMat4()),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zCurveHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.curveHandle,\n                material: materials.pickable,\n                matrix: math.rotationMat4v(180 * math.DEGTORAD, [1, 0, 0], math.identityMat4()),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zCurveCurveArrow1: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.blue,\n                matrix: (function () {\n                    const translate = math.translateMat4c(.8, -0.07, 0, math.identityMat4());\n                    const scale = math.scaleMat4v([0.6, 0.6, 0.6], math.identityMat4());\n                    return math.mulMat4(translate, scale, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zCurveArrow2: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.blue,\n                matrix: (function () {\n                    const translate = math.translateMat4c(.05, -0.8, 0, math.identityMat4());\n                    const scale = math.scaleMat4v([0.6, 0.6, 0.6], math.identityMat4());\n                    const rotate = math.rotationMat4v(90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(math.mulMat4(translate, scale, math.identityMat4()), rotate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            center: rootNode.addChild(new Mesh(rootNode, {\n                geometry: new ReadableGeometry(rootNode, buildSphereGeometry({\n                    radius: 0.05\n                })),\n                material: materials.center,\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            xAxisArrow: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.red,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xAxisArrowHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHeadHandle,\n                material: materials.pickable,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xAxis: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.axis,\n                material: materials.red,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius / 2, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xAxisHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.axisHandle,\n                material: materials.pickable,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius / 2, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            yAxisArrow: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.green,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(180 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yAxisArrowHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHeadHandle,\n                material: materials.pickable,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(180 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false,\n                opacity: 0.2\n            }), NO_STATE_INHERIT),\n\n            yShaft: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.axis,\n                material: materials.green,\n                position: [0, -radius / 2, 0],\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yShaftHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.axisHandle,\n                material: materials.pickable,\n                position: [0, -radius / 2, 0],\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            //----------------------------------------------------------------------------------------------------------\n            //\n            //----------------------------------------------------------------------------------------------------------\n\n            zAxisArrow: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHead,\n                material: materials.blue,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0.8, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zAxisArrowHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHeadHandle,\n                material: materials.pickable,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0.8, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: true,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n\n            zShaft: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.axis,\n                material: materials.blue,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius / 2, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                clippable: false,\n                pickable: false,\n                collidable: true,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zAxisHandle: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.axisHandle,\n                material: materials.pickable,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius / 2, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                clippable: false,\n                pickable: true,\n                collidable: true,\n                visible: false\n            }), NO_STATE_INHERIT)\n        };\n\n        this._affordanceMeshes = {\n\n            planeFrame: rootNode.addChild(new Mesh(rootNode, {\n                geometry: new ReadableGeometry(rootNode, buildTorusGeometry({\n                    center: [0, 0, 0],\n                    radius: 2,\n                    tube: tubeRadius,\n                    radialSegments: 4,\n                    tubeSegments: 4,\n                    arc: Math.PI * 2.0\n                })),\n                material: new PhongMaterial(rootNode, {\n                    ambient: [1, 1, 1],\n                    diffuse: [0, 0, 0],\n                    emissive: [1, 1, 0]\n                }),\n                highlighted: true,\n                highlightMaterial: new EmphasisMaterial(rootNode, {\n                    edges: false,\n                    filled: true,\n                    fillColor: [1, 1, 0],\n                    fillAlpha: 1.0\n                }),\n                pickable: false,\n                collidable: false,\n                clippable: false,\n                visible: false,\n                scale: [1, 1, 1],\n                rotation: [0, 0, 45]\n            }), NO_STATE_INHERIT),\n\n            xHoop: rootNode.addChild(new Mesh(rootNode, { // Full\n                geometry: shapes.hoop,\n                material: materials.red,\n                highlighted: true,\n                highlightMaterial: materials.highlightRed,\n                matrix: (function () {\n                    const rotate2 = math.rotationMat4v(90 * math.DEGTORAD, [0, 1, 0], math.identityMat4());\n                    const rotate1 = math.rotationMat4v(270 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate1, rotate2, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yHoop: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.hoop,\n                material: materials.green,\n                highlighted: true,\n                highlightMaterial: materials.highlightGreen,\n                rotation: [-90, 0, 0],\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zHoop: rootNode.addChild(new Mesh(rootNode, { // Blue hoop about Z-axis\n                geometry: shapes.hoop,\n                material: materials.blue,\n                highlighted: true,\n                highlightMaterial: materials.highlightBlue,\n                matrix: math.rotationMat4v(180 * math.DEGTORAD, [1, 0, 0], math.identityMat4()),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                backfaces: true,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            xAxisArrow: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHeadBig,\n                material: materials.red,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0, 0, 1], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            yAxisArrow: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHeadBig,\n                material: materials.green,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(180 * math.DEGTORAD, [1, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT),\n\n            zAxisArrow: rootNode.addChild(new Mesh(rootNode, {\n                geometry: shapes.arrowHeadBig,\n                material: materials.blue,\n                matrix: (function () {\n                    const translate = math.translateMat4c(0, radius + .1, 0, math.identityMat4());\n                    const rotate = math.rotationMat4v(-90 * math.DEGTORAD, [0.8, 0, 0], math.identityMat4());\n                    return math.mulMat4(rotate, translate, math.identityMat4());\n                })(),\n                pickable: false,\n                collidable: true,\n                clippable: false,\n                visible: false\n            }), NO_STATE_INHERIT)\n        };\n    }\n\n    _bindEvents() {\n\n        const self = this;\n\n        var grabbed = false;\n\n        const DRAG_ACTIONS = {\n            none: -1,\n            xTranslate: 0,\n            yTranslate: 1,\n            zTranslate: 2,\n            xRotate: 3,\n            yRotate: 4,\n            zRotate: 5\n        };\n\n        const rootNode = this._rootNode;\n\n        var nextDragAction = null; // As we hover grabbed an arrow or hoop, self is the action we would do if we then dragged it.\n        var dragAction = null; // Action we're doing while we drag an arrow or hoop.\n        const lastCanvasPos = math.vec2();\n\n        const xBaseAxis = math.vec3([1, 0, 0]);\n        const yBaseAxis = math.vec3([0, 1, 0]);\n        const zBaseAxis = math.vec3([0, 0, 1]);\n\n        const canvas = this._viewer.scene.canvas.canvas;\n        const camera = this._viewer.camera;\n        const scene = this._viewer.scene;\n\n        { // Keep gizmo screen size constant\n\n            const tempVec3a = math.vec3([0, 0, 0]);\n\n            let distDirty = true;\n            let lastDist = -1;\n\n            this._onCameraViewMatrix = scene.camera.on(\"viewMatrix\", () => {\n                distDirty = true;\n            });\n\n            this._onCameraProjMatrix = scene.camera.on(\"projMatrix\", () => {\n                distDirty = true;\n            });\n\n            this._onSceneTick = scene.on(\"tick\", () => {\n\n                const dist = Math.abs(math.lenVec3(math.subVec3(scene.camera.eye, this._pos, tempVec3a)));\n\n                if (dist !== lastDist) {\n                    if (camera.projection === \"perspective\") {\n                        const worldSize = (Math.tan(camera.perspective.fov * math.DEGTORAD)) * dist;\n                        const size = 0.07 * worldSize;\n                        rootNode.scale = [size, size, size];\n                        lastDist = dist;\n                    }\n                }\n\n                if (camera.projection === \"ortho\") {\n                    const worldSize = camera.ortho.scale / 10;\n                    const size = worldSize;\n                    rootNode.scale = [size, size, size];\n                    lastDist = dist;\n                }\n            });\n        }\n\n        const getClickCoordsWithinElement = (function () {\n            const canvasPos = new Float64Array(2);\n            return function (event) {\n                if (!event) {\n                    event = window.event;\n                    canvasPos[0] = event.x;\n                    canvasPos[1] = event.y;\n                } else {\n                    var element = event.target;\n                    var totalOffsetLeft = 0;\n                    var totalOffsetTop = 0;\n\n                    while (element.offsetParent) {\n                        totalOffsetLeft += element.offsetLeft;\n                        totalOffsetTop += element.offsetTop;\n                        element = element.offsetParent;\n                    }\n                    canvasPos[0] = event.pageX - totalOffsetLeft;\n                    canvasPos[1] = event.pageY - totalOffsetTop;\n                }\n                return canvasPos;\n            };\n        })();\n\n        const localToWorldVec = (function () {\n            const mat = math.mat4();\n            return function (localVec, worldVec) {\n                math.quaternionToMat4(self._rootNode.quaternion, mat);\n                math.transformVec3(mat, localVec, worldVec);\n                math.normalizeVec3(worldVec);\n                return worldVec;\n            };\n        })();\n\n        var getTranslationPlane = (function () {\n            const planeNormal = math.vec3();\n            return function (worldAxis) {\n                const absX = Math.abs(worldAxis[0]);\n                if (absX > Math.abs(worldAxis[1]) && absX > Math.abs(worldAxis[2])) {\n                    math.cross3Vec3(worldAxis, [0, 1, 0], planeNormal);\n                } else {\n                    math.cross3Vec3(worldAxis, [1, 0, 0], planeNormal);\n                }\n                math.cross3Vec3(planeNormal, worldAxis, planeNormal);\n                math.normalizeVec3(planeNormal);\n                return planeNormal;\n            }\n        })();\n\n        const dragTranslateSectionPlane = (function () {\n            const p1 = math.vec3();\n            const p2 = math.vec3();\n            const worldAxis = math.vec4();\n            return function (baseAxis, fromMouse, toMouse) {\n                localToWorldVec(baseAxis, worldAxis);\n                const planeNormal = getTranslationPlane(worldAxis, fromMouse, toMouse);\n                getPointerPlaneIntersect(fromMouse, planeNormal, p1);\n                getPointerPlaneIntersect(toMouse, planeNormal, p2);\n                math.subVec3(p2, p1);\n                const dot = math.dotVec3(p2, worldAxis);\n                self._pos[0] += worldAxis[0] * dot;\n                self._pos[1] += worldAxis[1] * dot;\n                self._pos[2] += worldAxis[2] * dot;\n                self._rootNode.position = self._pos;\n                if (self._sectionPlane) {\n                    self._sectionPlane.pos = self._pos;\n                }\n            }\n        })();\n\n        var dragRotateSectionPlane = (function () {\n            const p1 = math.vec4();\n            const p2 = math.vec4();\n            const c = math.vec4();\n            const worldAxis = math.vec4();\n            return function (baseAxis, fromMouse, toMouse) {\n                localToWorldVec(baseAxis, worldAxis);\n                const hasData = getPointerPlaneIntersect(fromMouse, worldAxis, p1) && getPointerPlaneIntersect(toMouse, worldAxis, p2);\n                if (!hasData) { // Find intersections with view plane and project down to origin\n                    const planeNormal = getTranslationPlane(worldAxis, fromMouse, toMouse);\n                    getPointerPlaneIntersect(fromMouse, planeNormal, p1, 1); // Ensure plane moves closer to camera so angles become workable\n                    getPointerPlaneIntersect(toMouse, planeNormal, p2, 1);\n                    var dot = math.dotVec3(p1, worldAxis);\n                    p1[0] -= dot * worldAxis[0];\n                    p1[1] -= dot * worldAxis[1];\n                    p1[2] -= dot * worldAxis[2];\n                    dot = math.dotVec3(p2, worldAxis);\n                    p2[0] -= dot * worldAxis[0];\n                    p2[1] -= dot * worldAxis[1];\n                    p2[2] -= dot * worldAxis[2];\n                }\n                math.normalizeVec3(p1);\n                math.normalizeVec3(p2);\n                dot = math.dotVec3(p1, p2);\n                dot = math.clamp(dot, -1.0, 1.0); // Rounding errors cause dot to exceed allowed range\n                var incDegrees = Math.acos(dot) * math.RADTODEG;\n                math.cross3Vec3(p1, p2, c);\n                if (math.dotVec3(c, worldAxis) < 0.0) {\n                    incDegrees = -incDegrees;\n                }\n                self._rootNode.rotate(baseAxis, incDegrees);\n                rotateSectionPlane();\n            }\n        })();\n\n        var getPointerPlaneIntersect = (function () {\n            const dir = math.vec4([0, 0, 0, 1]);\n            const matrix = math.mat4();\n            return function (mouse, axis, dest, offset) {\n                offset = offset || 0;\n                dir[0] = mouse[0] / canvas.width * 2.0 - 1.0;\n                dir[1] = -(mouse[1] / canvas.height * 2.0 - 1.0);\n                dir[2] = 0.0;\n                dir[3] = 1.0;\n                math.mulMat4(camera.projMatrix, camera.viewMatrix, matrix); // Unproject norm device coords to view coords\n                math.inverseMat4(matrix);\n                math.transformVec4(matrix, dir, dir);\n                math.mulVec4Scalar(dir, 1.0 / dir[3]); // This is now point A on the ray in world space\n                var rayO = camera.eye; // The direction\n                math.subVec4(dir, rayO, dir);\n                const origin = self._sectionPlane.pos; // Plane origin:\n                var d = -math.dotVec3(origin, axis) - offset;\n                var dot = math.dotVec3(axis, dir);\n                if (Math.abs(dot) > 0.005) {\n                    var t = -(math.dotVec3(axis, rayO) + d) / dot;\n                    math.mulVec3Scalar(dir, t, dest);\n                    math.addVec3(dest, rayO);\n                    math.subVec3(dest, origin, dest);\n                    return true;\n                }\n                return false;\n            }\n        })();\n\n        const rotateSectionPlane = (function () {\n            const dir = math.vec3();\n            const mat = math.mat4();\n            return function () {\n                if (self.sectionPlane) {\n                    math.quaternionToMat4(rootNode.quaternion, mat);  // << ---\n                    math.transformVec3(mat, [0, 0, 1], dir);\n                    self._setSectionPlaneDir(dir);\n                }\n            };\n        })();\n\n        {\n            var mouseDownLeft;\n            var mouseDownMiddle;\n            var mouseDownRight;\n            var down = false;\n            var lastAffordanceMesh;\n\n            this._onCameraControlHover = this._viewer.cameraControl.on(\"hoverEnter\", (hit) => {\n                if (!this._visible) {\n                    return;\n                }\n                if (down) {\n                    return;\n                }\n                grabbed = false;\n                if (lastAffordanceMesh) {\n                    lastAffordanceMesh.visible = false;\n                }\n                var affordanceMesh;\n                const meshId = hit.entity.id;\n                switch (meshId) {\n\n                    case this._displayMeshes.xAxisArrowHandle.id:\n                        affordanceMesh = this._affordanceMeshes.xAxisArrow;\n                        nextDragAction = DRAG_ACTIONS.xTranslate;\n                        break;\n\n                    case this._displayMeshes.xAxisHandle.id:\n                        affordanceMesh = this._affordanceMeshes.xAxisArrow;\n                        nextDragAction = DRAG_ACTIONS.xTranslate;\n                        break;\n\n                    case this._displayMeshes.yAxisArrowHandle.id:\n                        affordanceMesh = this._affordanceMeshes.yAxisArrow;\n                        nextDragAction = DRAG_ACTIONS.yTranslate;\n                        break;\n\n                    case this._displayMeshes.yShaftHandle.id:\n                        affordanceMesh = this._affordanceMeshes.yAxisArrow;\n                        nextDragAction = DRAG_ACTIONS.yTranslate;\n                        break;\n\n                    case this._displayMeshes.zAxisArrowHandle.id:\n                        affordanceMesh = this._affordanceMeshes.zAxisArrow;\n                        nextDragAction = DRAG_ACTIONS.zTranslate;\n                        break;\n\n                    case this._displayMeshes.zAxisHandle.id:\n                        affordanceMesh = this._affordanceMeshes.zAxisArrow;\n                        nextDragAction = DRAG_ACTIONS.zTranslate;\n                        break;\n\n                    case this._displayMeshes.xCurveHandle.id:\n                        affordanceMesh = this._affordanceMeshes.xHoop;\n                        nextDragAction = DRAG_ACTIONS.xRotate;\n                        break;\n\n                    case this._displayMeshes.yCurveHandle.id:\n                        affordanceMesh = this._affordanceMeshes.yHoop;\n                        nextDragAction = DRAG_ACTIONS.yRotate;\n                        break;\n\n                    case this._displayMeshes.zCurveHandle.id:\n                        affordanceMesh = this._affordanceMeshes.zHoop;\n                        nextDragAction = DRAG_ACTIONS.zRotate;\n                        break;\n\n                    default:\n                        nextDragAction = DRAG_ACTIONS.none;\n                        return; // Not clicked an arrow or hoop\n                }\n                if (affordanceMesh) {\n                    affordanceMesh.visible = true;\n                }\n                lastAffordanceMesh = affordanceMesh;\n                grabbed = true;\n            });\n\n            this._onCameraControlHoverLeave = this._viewer.cameraControl.on(\"hoverOut\", (hit) => {\n                if (!this._visible) {\n                    return;\n                }\n                if (lastAffordanceMesh) {\n                    lastAffordanceMesh.visible = false;\n                }\n                lastAffordanceMesh = null;\n                nextDragAction = DRAG_ACTIONS.none;\n            });\n\n            canvas.addEventListener(\"mousedown\", this._canvasMouseDownListener = (e) => {\n                e.preventDefault();\n                if (!this._visible) {\n                    return;\n                }\n                if (!grabbed) {\n                    return;\n                }\n                this._viewer.cameraControl.pointerEnabled = false;\n                switch (e.which) {\n                    case 1: // Left button\n                        mouseDownLeft = true;\n                        down = true;\n                        var canvasPos = getClickCoordsWithinElement(e);\n                        dragAction = nextDragAction;\n                        lastCanvasPos[0] = canvasPos[0];\n                        lastCanvasPos[1] = canvasPos[1];\n                        break;\n\n                    default:\n                        break;\n                }\n            });\n\n            canvas.addEventListener(\"mousemove\", this._canvasMouseMoveListener = (e) => {\n                if (!this._visible) {\n                    return;\n                }\n                if (!down) {\n                    return;\n                }\n                var canvasPos = getClickCoordsWithinElement(e);\n                const x = canvasPos[0];\n                const y = canvasPos[1];\n\n                switch (dragAction) {\n                    case DRAG_ACTIONS.xTranslate:\n                        dragTranslateSectionPlane(xBaseAxis, lastCanvasPos, canvasPos);\n                        break;\n                    case DRAG_ACTIONS.yTranslate:\n                        dragTranslateSectionPlane(yBaseAxis, lastCanvasPos, canvasPos);\n                        break;\n                    case DRAG_ACTIONS.zTranslate:\n                        dragTranslateSectionPlane(zBaseAxis, lastCanvasPos, canvasPos);\n                        break;\n                    case DRAG_ACTIONS.xRotate:\n                        dragRotateSectionPlane(xBaseAxis, lastCanvasPos, canvasPos);\n                        break;\n                    case DRAG_ACTIONS.yRotate:\n                        dragRotateSectionPlane(yBaseAxis, lastCanvasPos, canvasPos);\n                        break;\n                    case DRAG_ACTIONS.zRotate:\n                        dragRotateSectionPlane(zBaseAxis, lastCanvasPos, canvasPos);\n                        break;\n                }\n\n                lastCanvasPos[0] = x;\n                lastCanvasPos[1] = y;\n            });\n\n            canvas.addEventListener(\"mouseup\", this._canvasMouseUpListener = (e) => {\n                if (!this._visible) {\n                    return;\n                }\n                this._viewer.cameraControl.pointerEnabled = true;\n                if (!down) {\n                    return;\n                }\n                switch (e.which) {\n                    case 1: // Left button\n                        mouseDownLeft = false;\n                        break;\n                    case 2: // Middle/both buttons\n                        mouseDownMiddle = false;\n                        break;\n                    case 3: // Right button\n                        mouseDownRight = false;\n                        break;\n                    default:\n                        break;\n                }\n                down = false;\n                grabbed = false;\n            });\n\n            canvas.addEventListener(\"wheel\", this._canvasWheelListener = (e) => {\n                if (!this._visible) {\n                    return;\n                }\n                var delta = Math.max(-1, Math.min(1, -e.deltaY * 40));\n                if (delta === 0) {\n                    return;\n                }\n            });\n        }\n    }\n\n    _destroy() {\n        this._unbindEvents();\n        this._destroyNodes();\n    }\n\n    _unbindEvents() {\n\n        const viewer = this._viewer;\n        const scene = viewer.scene;\n        const canvas = scene.canvas.canvas;\n        const camera = viewer.camera;\n        const cameraControl = viewer.cameraControl;\n\n        scene.off(this._onSceneTick);\n\n        canvas.removeEventListener(\"mousedown\", this._canvasMouseDownListener);\n        canvas.removeEventListener(\"mousemove\", this._canvasMouseMoveListener);\n        canvas.removeEventListener(\"mouseup\", this._canvasMouseUpListener);\n        canvas.removeEventListener(\"wheel\", this._canvasWheelListener);\n\n        camera.off(this._onCameraViewMatrix);\n        camera.off(this._onCameraProjMatrix);\n\n        cameraControl.off(this._onCameraControlHover);\n        cameraControl.off(this._onCameraControlHoverLeave);\n    }\n\n    _destroyNodes() {\n        this._setSectionPlane(null);\n        this._rootNode.destroy();\n        this._displayMeshes = {};\n        this._affordanceMeshes = {};\n    }\n}\n\nexport {Control};","import {math} from \"../../viewer/scene/math/math.js\";\nimport {Plugin} from \"../../viewer/Plugin.js\";\nimport {SectionPlane} from \"../../viewer/scene/sectionPlane/SectionPlane.js\";\nimport {Control} from \"./Control.js\";\nimport {Overview} from \"./Overview.js\";\n\nconst tempAABB = math.AABB3();\nconst tempVec3 = math.vec3();\n\n/**\n * SectionPlanesPlugin is a {@link Viewer} plugin that manages {@link SectionPlane}s.\n *\n * [<img src=\"https://user-images.githubusercontent.com/83100/57724962-406e9a00-768c-11e9-9f1f-3d178a3ec11f.gif\">](https://xeokit.github.io/xeokit-sdk/examples/#gizmos_SectionPlanesPlugin)\n *\n * [[Run this example](https://xeokit.github.io/xeokit-sdk/examples/#gizmos_SectionPlanesPlugin)]\n *\n * ## Overview\n *\n * * Use the SectionPlanesPlugin to\n * create and edit {@link SectionPlane}s to slice portions off your models and reveal internal structures.\n * * As shown in the screen capture above, SectionPlanesPlugin shows an overview of all your SectionPlanes (on the right, in\n * this example).\n * * Click a plane in the overview to activate a 3D control with which you can interactively\n * reposition its SectionPlane in the main canvas.\n *\n * ## Usage\n *\n * In the example below, we'll use a {@link GLTFLoaderPlugin} to load a model, and a SectionPlanesPlugin\n * to slice it open with two {@link SectionPlane}s. We'll show the overview in the bottom right of the Viewer\n * canvas. Finally, we'll programmatically activate the 3D editing control, so that we can use it to interactively\n * reposition our second SectionPlane.\n *\n * ````JavaScript\n * import {Viewer, GLTFLoaderPlugin, SectionPlanesPlugin} from \"xeokit-sdk.es.js\";\n *\n * // Create a Viewer and arrange its Camera\n *\n * const viewer = new Viewer({\n *     canvasId: \"myCanvas\"\n * });\n *\n * viewer.camera.eye = [-5.02, 2.22, 15.09];\n * viewer.camera.look = [4.97, 2.79, 9.89];\n * viewer.camera.up = [-0.05, 0.99, 0.02];\n *\n *\n * // Add a GLTFLoaderPlugin\n *\n * const gltfLoader = new GLTFLoaderPlugin(viewer);\n *\n * // Add a SectionPlanesPlugin, with overview visible\n *\n * const sectionPlanes = new SectionPlanesPlugin(viewer, {\n *     overviewCanvasID: \"myOverviewCanvas\",\n *     overviewVisible: true\n * });\n *\n * // Load a model\n *\n * const model = gltfLoader.load({\n *     id: \"myModel\",\n *     src: \"./models/gltf/schependomlaan/scene.gltf\"\n * });\n *\n * // Create a couple of section planes\n * // These will be shown in the overview\n *\n * sectionPlanes.createSectionPlane({\n *     id: \"mySectionPlane\",\n *     pos: [1.04, 1.95, 9.74],\n *     dir: [1.0, 0.0, 0.0]\n * });\n *\n * sectionPlanes.createSectionPlane({\n *     id: \"mySectionPlane2\",\n *     pos: [2.30, 4.46, 14.93],\n *     dir: [0.0, -0.09, -0.79]\n * });\n *\n * // Show the SectionPlanePlugin's 3D editing gizmo,\n * // to interactively reposition one of our SectionPlanes\n *\n * sectionPlanes.showControl(\"mySectionPlane2\");\n *\n * const mySectionPlane2 = sectionPlanes.sectionPlanes[\"mySectionPlane2\"];\n *\n * // Programmatically reposition one of our SectionPlanes\n * // This also updates its position as shown in the overview gizmo\n *\n * mySectionPlane2.pos = [11.0, 6.-, -12];\n * mySectionPlane2.dir = [0.4, 0.0, 0.5];\n * ````\n */\nclass SectionPlanesPlugin extends Plugin {\n\n    /**\n     * @constructor\n     * @param {Viewer} viewer The Viewer.\n     * @param {Object} cfg Plugin configuration.\n     * @param {String} [cfg.id=\"SectionPlanes\"] Optional ID for this plugin, so that we can find it within {@link Viewer#plugins}.\n     * @param {String} [cfg.overviewCanvasId] ID of a canvas element to display the overview.\n     * @param {String} [cfg.overviewVisible=true] Initial visibility of the overview canvas.\n     */\n    constructor(viewer, cfg = {}) {\n\n        super(\"SectionPlanes\", viewer);\n\n        this._freeControls = [];\n        this._sectionPlanes = viewer.scene.sectionPlanes;\n        this._controls = {};\n        this._shownControlId = null;\n\n        if (cfg.overviewCanvasId !== null && cfg.overviewCanvasId !== undefined) {\n\n            const overviewCanvas = document.getElementById(cfg.overviewCanvasId);\n\n            if (!overviewCanvas) {\n                this.warn(\"Can't find overview canvas: '\" + cfg.overviewCanvasId + \"' - will create plugin without overview\");\n\n            } else {\n\n                this._overview = new Overview(this, {\n                    overviewCanvas: overviewCanvas,\n                    visible: cfg.overviewVisible,\n\n                    onHoverEnterPlane: ((id) => {\n                        this._overview.setPlaneHighlighted(id, true);\n                    }),\n\n                    onHoverLeavePlane: ((id) => {\n                        this._overview.setPlaneHighlighted(id, false);\n                    }),\n\n                    onClickedPlane: ((id) => {\n                        if (this.getShownControl() === id) {\n                            this.hideControl();\n                            return;\n                        }\n                        this.showControl(id);\n                        const sectionPlane = this.sectionPlanes[id];\n                        const sectionPlanePos = sectionPlane.pos;\n                        tempAABB.set(this.viewer.scene.aabb);\n                        math.getAABB3Center(tempAABB, tempVec3);\n                        tempAABB[0] += sectionPlanePos[0] - tempVec3[0];\n                        tempAABB[1] += sectionPlanePos[1] - tempVec3[1];\n                        tempAABB[2] += sectionPlanePos[2] - tempVec3[2];\n                        tempAABB[3] += sectionPlanePos[0] - tempVec3[0];\n                        tempAABB[4] += sectionPlanePos[1] - tempVec3[1];\n                        tempAABB[5] += sectionPlanePos[2] - tempVec3[2];\n                        this.viewer.cameraFlight.flyTo({\n                            aabb: tempAABB,\n                            fitFOV: 65\n                        });\n                    }),\n\n                    onClickedNothing: (() => {\n                        this.hideControl();\n                    })\n                });\n            }\n        }\n\n        this._onSceneSectionPlaneCreated = viewer.scene.on(\"sectionPlaneCreated\", (sectionPlane) => {\n\n            // SectionPlane created, either via SectionPlanesPlugin#createSectionPlane(), or by directly\n            // instantiating a SectionPlane independently of SectionPlanesPlugin, which can be done\n            // by BCFViewpointsPlugin#loadViewpoint().\n\n            this._sectionPlaneCreated(sectionPlane);\n        });\n    }\n\n    /**\n     * Sets if the overview canvas is visible.\n     *\n     * @param {Boolean} visible Whether or not the overview canvas is visible.\n     */\n    setOverviewVisible(visible) {\n        if (this._overview) {\n            this._overview.setVisible(visible);\n        }\n    }\n\n    /**\n     * Gets if the overview canvas is visible.\n     *\n     * @return {Boolean} True when the overview canvas is visible.\n     */\n    getOverviewVisible() {\n        if (this._overview) {\n            return this._overview.getVisible();\n        }\n    }\n\n    /**\n     * Returns a map of the {@link SectionPlane}s created by this SectionPlanesPlugin.\n     *\n     * @returns {{String:SectionPlane}} A map containing the {@link SectionPlane}s, each mapped to its {@link SectionPlane#id}.\n     */\n    get sectionPlanes() {\n        return this._sectionPlanes;\n    }\n\n    /**\n     * Creates a {@link SectionPlane}.\n     *\n     * The {@link SectionPlane} will be registered by {@link SectionPlane#id} in {@link SectionPlanesPlugin#sectionPlanes}.\n     *\n     * @param {Object} params {@link SectionPlane} configuration.\n     * @param {String} [params.id] Unique ID to assign to the {@link SectionPlane}. Must be unique among all components in the {@link Viewer}'s {@link Scene}. Auto-generated when omitted.\n     * @param {Number[]} [params.pos=[0,0,0]] World-space position of the {@link SectionPlane}.\n     * @param {Number[]} [params.dir=[0,0,-1]] World-space vector indicating the orientation of the {@link SectionPlane}.\n     * @param {Boolean} [params.active=true] Whether the {@link SectionPlane} is initially active. Only clips while this is true.\n     * @returns {SectionPlane} The new {@link SectionPlane}.\n     */\n    createSectionPlane(params = {}) {\n\n        if (params.id !== undefined && params.id !== null && this.viewer.scene.components[params.id]) {\n            this.error(\"Viewer component with this ID already exists: \" + params.id);\n            delete params.id;\n        }\n\n        // Note that SectionPlane constructor fires \"sectionPlaneCreated\" on the Scene,\n        // which SectionPlanesPlugin handles and calls #_sectionPlaneCreated to create gizmo and add to overview canvas.\n\n        const sectionPlane = new SectionPlane(this.viewer.scene, {\n            id: params.id,\n            pos: params.pos,\n            dir: params.dir,\n            active: true || params.active\n        });\n        return sectionPlane;\n    }\n\n    _sectionPlaneCreated(sectionPlane) {\n        const control = (this._freeControls.length > 0) ? this._freeControls.pop() : new Control(this);\n        control._setSectionPlane(sectionPlane);\n        control.setVisible(false);\n        this._controls[sectionPlane.id] = control;\n        if (this._overview) {\n            this._overview.addSectionPlane(sectionPlane);\n        }\n        sectionPlane.once(\"destroyed\", () => {\n            this._sectionPlaneDestroyed(sectionPlane);\n        });\n    }\n\n    /**\n     * Inverts the direction of {@link SectionPlane#dir} on every existing SectionPlane.\n     *\n     * Inverts all SectionPlanes, including those that were not created with SectionPlanesPlugin.\n     */\n    flipSectionPlanes() {\n        const sectionPlanes = this.viewer.scene.sectionPlanes;\n        for (let id in sectionPlanes) {\n            const sectionPlane = sectionPlanes[id];\n            sectionPlane.flipDir();\n        }\n    }\n\n    /**\n     * Shows the 3D editing gizmo for a {@link SectionPlane}.\n     *\n     * @param {String} id ID of the {@link SectionPlane}.\n     */\n    showControl(id) {\n        const control = this._controls[id];\n        if (!control) {\n            this.error(\"Control not found: \" + id);\n            return;\n        }\n        this.hideControl();\n        control.setVisible(true);\n        if (this._overview) {\n            this._overview.setPlaneSelected(id, true);\n        }\n        this._shownControlId = id;\n    }\n\n    /**\n     * Gets the ID of the {@link SectionPlane} that the 3D editing gizmo is shown for.\n     *\n     * Returns ````null```` when the editing gizmo is not shown.\n     *\n     * @returns {String} ID of the the {@link SectionPlane} that the 3D editing gizmo is shown for, if shown, else ````null````.\n     */\n    getShownControl() {\n        return this._shownControlId;\n    }\n\n    /**\n     * Hides the 3D {@link SectionPlane} editing gizmo if shown.\n     */\n    hideControl() {\n        for (var id in this._controls) {\n            if (this._controls.hasOwnProperty(id)) {\n                this._controls[id].setVisible(false);\n                if (this._overview) {\n                    this._overview.setPlaneSelected(id, false);\n                }\n            }\n        }\n        this._shownControlId = null;\n    }\n\n    /**\n     * Destroys a {@link SectionPlane} created by this SectionPlanesPlugin.\n     *\n     * @param {String} id ID of the {@link SectionPlane}.\n     */\n    destroySectionPlane(id) {\n        var sectionPlane = this.viewer.scene.sectionPlanes[id];\n        if (!sectionPlane) {\n            this.error(\"SectionPlane not found: \" + id);\n            return;\n        }\n        this._sectionPlaneDestroyed(sectionPlane);\n        sectionPlane.destroy();\n\n        if (id === this._shownControlId) {\n            this._shownControlId = null;\n        }\n    }\n\n    _sectionPlaneDestroyed(sectionPlane) {\n        if (this._overview) {\n            this._overview.removeSectionPlane(sectionPlane);\n        }\n        const control = this._controls[sectionPlane.id];\n        if (!control) {\n            return;\n        }\n        control.setVisible(false);\n        control._setSectionPlane(null);\n        delete this._controls[sectionPlane.id];\n        this._freeControls.push(control);\n    }\n\n    /**\n     * Destroys all {@link SectionPlane}s created by this SectionPlanesPlugin.\n     */\n    clear() {\n        const ids = Object.keys(this._sectionPlanes);\n        for (var i = 0, len = ids.length; i < len; i++) {\n            this.destroySectionPlane(ids[i]);\n        }\n    }\n\n    /**\n     * @private\n     */\n    send(name, value) {\n        switch (name) {\n\n            case \"snapshotStarting\": // Viewer#getSnapshot() about to take snapshot - hide controls\n                for (let id in this._controls) {\n                    if (this._controls.hasOwnProperty(id)) {\n                        this._controls[id].setCulled(true);\n                    }\n                }\n                break;\n\n            case \"snapshotFinished\": // Viewer#getSnapshot() finished taking snapshot - show controls again\n                for (let id in this._controls) {\n                    if (this._controls.hasOwnProperty(id)) {\n                        this._controls[id].setCulled(false);\n                    }\n                }\n                break;\n\n            case \"clearSectionPlanes\":\n                this.clear();\n                break;\n        }\n    }\n\n    /**\n     * Destroys this SectionPlanesPlugin.\n     *\n     * Also destroys each {@link SectionPlane} created by this SectionPlanesPlugin.\n     *\n     * Does not destroy the canvas the SectionPlanesPlugin was configured with.\n     */\n    destroy() {\n        this.clear();\n        if (this._overview) {\n            this._overview.destroy();\n        }\n        this._destroyFreeControls();\n        super.destroy();\n    }\n\n    _destroyFreeControls() {\n        var control = this._freeControls.pop();\n        while (control) {\n            control._destroy();\n            control = this._freeControls.pop();\n        }\n        this.viewer.scene.off(this._onSceneSectionPlaneCreated);\n    }\n}\n\nexport {SectionPlanesPlugin}\n","import React, { Component } from 'react'\nimport { Viewer } from \"@xeokit/xeokit-sdk/src/viewer/Viewer\"\nimport { GLTFLoaderPlugin } from \"@xeokit/xeokit-sdk/src/plugins/GLTFLoaderPlugin/GLTFLoaderPlugin\"\nimport { NavCubePlugin } from \"@xeokit/xeokit-sdk/src/plugins/NavCubePlugin/NavCubePlugin\"\nimport { SectionPlanesPlugin } from \"@xeokit/xeokit-sdk/src/plugins/SectionPlanesPlugin/SectionPlanesPlugin\"\nimport PropTypes from 'prop-types'\n// import './layout.css'\n// import { v4 } from 'uuid'\n\nexport default class LBDviewer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n\n    componentDidMount() {\n        const viewer = this.setViewer()\n        // let extension = this.props.model.split('.')\n        //extension = extension[extension.length - 1]\n        let extension = \"gltf\"\n\n        let loader\n        loader = new GLTFLoaderPlugin(viewer);\n         // else if (extension.toLowerCase() === 'xkt') {\n        //     loader = new XKTLoaderPlugin(viewer)\n        //     modelProps.metaModelSrc = this.props.metaModel\n        // }\n\n        new NavCubePlugin(viewer, {\n            canvasId: \"myNavCubeCanvas\",\n            visible: true\n        });\n\n        // const sectionPlanes = new SectionPlanesPlugin(viewer, {\n        //     overviewCanvasId: \"mySectionPlanesOverviewCanvas\",\n        //     overviewVisible: true\n        // });\n\n        // sectionPlanes.createSectionPlane({\n        //     id: \"mySectionPlaneY\",\n        //     pos: [0, -3, 0],\n        //     dir: [1.0, 0.0, 0.0]\n        // });\n\n        // sectionPlanes.createSectionPlane({\n        //     id: \"mySectionPlaneZ\",\n        //     pos: [0, 3, 0],\n        //     dir: [0.0, -1, 0]\n        // });\n\n        // sectionPlanes.createSectionPlane({\n        //     id: \"mySectionPlaneX\",\n        //     pos: [0,0, 5],\n        //     dir: [0.0, 0, -1]\n        // });\n        this.props.models.forEach((src) => {\n            const modelProps = {\n                id: src,\n                src,\n                edges: true,\n                performance: true,\n            }\n            try {\n                const model = loader.load(modelProps);\n                model.on(\"loaded\", () => {\n                    viewer.cameraFlight.jumpTo(model)\n                })\n            } catch (error) {\n                console.log('error', error)\n            }\n\n        })\n\n        const scene = viewer.scene;\n        const camera = scene.camera;\n        camera.projection = this.props.projection || \"ortho\"\n\n        var lastEntity = null;\n\n        viewer.scene.input.on(\"mousemove\", (coords) => {\n\n            var hit = viewer.scene.pick({\n                canvasPos: coords\n            });\n            if (hit) {\n                if (!lastEntity || hit.entity.id !== lastEntity.id) {\n                    if (lastEntity) {\n                        lastEntity.opacity = this.state.lastOpacity;\n                    }\n                    lastEntity = hit.entity;\n                    this.setState({lastOpacity: hit.entity.opacity})\n\n                    hit.entity.opacity = 0.6;\n                }\n            } else {\n                if (lastEntity) {\n                    lastEntity.opacity = this.state.lastOpacity;\n                }\n            }\n        });\n\n        var lastEntityColorize = null;\n        var lastColorize = null;\n\n        viewer.cameraControl.on(\"picked\", async (pickResult) => {\n\n            if (!lastEntityColorize || pickResult.entity.id !== lastEntityColorize.id) {\n                if (pickResult.entity) {\n                    try {\n                        pickResult.entity.highlighted = 1\n                        // let ifcGuid\n                        // if (extension.toLowerCase() === 'gltf') {\n                        //     ifcGuid = this.getGuid(pickResult.entity.id)\n                        // } else if (extension.toLowerCase() === 'xkt') {\n                        //     ifcGuid = pickResult.entity.id\n                        // }\n\n                        // if (lastEntityColorize) {\n                        //     lastEntityColorize.colorize = lastColorize;\n                        // }\n\n                        let entities = this.state.viewer.scene.objects\n                        Object.keys(entities).forEach(ent => {\n                            if (entities[ent].id !== pickResult.entity.id) {\n                                entities[ent].highlighted = false\n                            }\n                        })\n\n                        // if (ifcGuid === \"0000000000000000000000\") {\n                            // this.setState({ selection: [pickResult.entity.id] })\n                            \n                            this.props.onSelect([pickResult.entity.id])\n                        // } else {\n                        //     // this.setState({ selection: [pickResult.entity.id] })\n                        //     this.props.onSelect([{guid: ifcGuid}])\n                        // }\n\n\n                    } catch (error) {\n                        this.setState({ selection: [] })\n\n                    }\n                }\n\n\n                // lastEntityColorize = pickResult.entity;\n                // lastColorize = pickResult.entity.colorize.slice();\n                // pickResult.entity.colorize = [0.0, 1.0, 0.0];\n            }\n        });\n\n        viewer.cameraControl.on(\"pickedNothing\", () => {\n            let entities = this.state.viewer.scene.objects\n            Object.keys(entities).forEach(ent => {\n                entities[ent].highlighted = false\n            })\n            this.setState({ selection: [] })\n            this.props.onSelect([])\n\n            // if (lastEntityColorize) {\n            //     lastEntityColorize.colorize = lastEntityColorize;\n            //     lastEntityColorize = null;\n            // }\n        });\n\n        this.setState({ viewer })\n    }\n\n    getGuid(gltfGuid){\n        var guidChars = [[\"0\", 10], [\"A\", 26], [\"a\", 26], [\"_\", 1], [\"$\", 1]].map(function (a) {\n            var li = [];\n            var st = a[0].charCodeAt(0);\n            var en = st + a[1];\n            for (var i = st; i < en; ++i) {\n                li.push(i);\n            }\n            return String.fromCharCode.apply(null, li);\n        }).join(\"\");\n\n        var b64 = function (v, len) {\n            var r = (!len || len == 4) ? [0, 6, 12, 18] : [0, 6];\n            return r.map(function (i) {\n                return guidChars.substr(parseInt(v / (1 << i)) % 64, 1)\n            }).reverse().join(\"\");\n        };\n\n        var compressGuid = function (g) {\n            g = g.replace(/-/g, \"\");\n            var bs = [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30].map(function (i) {\n                return parseInt(g.substr(i, 2), 16);\n            });\n            return b64(bs[0], 2) + [1, 4, 7, 10, 13].map(function (i) {\n                return b64((bs[i] << 16) + (bs[i + 1] << 8) + bs[i + 2]);\n            }).join(\"\");\n        };\n\n        let uncompressed = gltfGuid.split(\"-\")\n        let uncompressed_string = ''\n        uncompressed.forEach((p, id) => {\n            if (0 < id && id < uncompressed.length - 2) {\n                uncompressed_string += p + '-'\n            } else if (id === uncompressed.length - 2) {\n                uncompressed_string += p\n            }\n        })\n        const id = compressGuid(uncompressed_string)\n        return id\n    }\n\n\n    componentDidUpdate() {\n        let entities = this.state.viewer.scene.objects\n        const selection = this.props.selection\n\n        if (selection !== this.state.lastQueried) {\n            // selection.forEach(item => {\n            //     console.log('item', item)\n            //     console.log('entities.item', entities)\n            //     entities[item].highlighted = true\n            // })\n            Object.keys(entities).forEach(ent => {\n                if (selection.includes(entities[ent].id)) {\n                    entities[ent].highlighted = true\n                } else {\n                    entities[ent].highlighted = false\n                }})\n            // this.setState({ lastQueried: selection, selection})\n        }\n    }\n\n    setViewer() {\n        const viewer = new Viewer({\n            canvasId: \"myCanvas\",\n            transparent: true\n        })\n        return viewer\n    }\n\n    render() {\n        return (\n            <div className=\"modelContainer\" style={{ position: \"relative\"}}>\n                <canvas id=\"myCanvas\" style={{ width: \"100%\", height: this.props.height}}></canvas>\n                <canvas style={{height: \"200px\", width: \"200px\", position: \"absolute\", right: 0, bottom: 150}} className=\"navCube\" id=\"myNavCubeCanvas\"></canvas>\n                <canvas id=\"mySectionPlanesOverviewCanvas\" className=\"sections\"></canvas>\n            </div>\n        )\n    }\n}\n\nLBDviewer.propTypes = {\n    projection: PropTypes.oneOf(['ortho', 'perspective']),\n    height: PropTypes.number.isRequired,\n    models: PropTypes.array.isRequired,\n    metaModel: PropTypes.string,\n    ifcGuidHandler: PropTypes.func\n}\n\nLBDviewer.defaultProps = {\n    projection: \"ortho\",\n    ifcGuidHandler: (guid) => { console.log(guid) },\n    onSelect: (selection) => {console.log('guid', selection.guid)}\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param {object} defaultProps\n * @param {object} props\n * @returns {object} resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = _extends({}, props);\n  Object.keys(defaultProps).forEach(propName => {\n    if (propName.toString().match(/^(components|slots)$/)) {\n      output[propName] = _extends({}, defaultProps[propName], output[propName]);\n    } else if (propName.toString().match(/^(componentsProps|slotProps)$/)) {\n      const defaultSlotProps = defaultProps[propName] || {};\n      const slotProps = props[propName];\n      output[propName] = {};\n      if (!slotProps || !Object.keys(slotProps)) {\n        // Reduce the iteration if the slot props is empty\n        output[propName] = defaultSlotProps;\n      } else if (!defaultSlotProps || !Object.keys(defaultSlotProps)) {\n        // Reduce the iteration if the default slot props is empty\n        output[propName] = slotProps;\n      } else {\n        output[propName] = _extends({}, slotProps);\n        Object.keys(defaultSlotProps).forEach(slotPropName => {\n          output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n        });\n      }\n    } else if (output[propName] === undefined) {\n      output[propName] = defaultProps[propName];\n    }\n  });\n  return output;\n}","export default function composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        acc.push(getUtilityClass(key));\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/utils/macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe iff we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clamp(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return Math.min(Math.max(min, value), max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nexport const colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexport const private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clamp(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nexport function private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clamp(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nexport function private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return private_safeEmphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default isPropValid;\n","/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  tag.setAttribute('data-s', '');\n  return tag;\n}\n\nvar StyleSheet = /*#__PURE__*/function () {\n  // Using Node instead of HTMLElement since container may be a ShadowRoot\n  function StyleSheet(options) {\n    var _this = this;\n\n    this._insertTag = function (tag) {\n      var before;\n\n      if (_this.tags.length === 0) {\n        if (_this.insertionPoint) {\n          before = _this.insertionPoint.nextSibling;\n        } else if (_this.prepend) {\n          before = _this.container.firstChild;\n        } else {\n          before = _this.before;\n        }\n      } else {\n        before = _this.tags[_this.tags.length - 1].nextSibling;\n      }\n\n      _this.container.insertBefore(tag, before);\n\n      _this.tags.push(tag);\n    };\n\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.prepend = options.prepend;\n    this.insertionPoint = options.insertionPoint;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.hydrate = function hydrate(nodes) {\n    nodes.forEach(this._insertTag);\n  };\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      this._insertTag(createStyleElement(this));\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isImportRule = rule.charCodeAt(0) === 64 && rule.charCodeAt(1) === 105;\n\n      if (isImportRule && this._alreadyInsertedOrderInsensitiveRule) {\n        // this would only cause problem in speedy mode\n        // but we don't want enabling speedy to affect the observable behavior\n        // so we report this error at all times\n        console.error(\"You're attempting to insert the following rule:\\n\" + rule + '\\n\\n`@import` rules must be before all other types of rules in a stylesheet but other rules have already been inserted. Please ensure that `@import` rules are before all other rules.');\n      }\n      this._alreadyInsertedOrderInsensitiveRule = this._alreadyInsertedOrderInsensitiveRule || !isImportRule;\n    }\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n        sheet.insertRule(rule, sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production' && !/:(-moz-placeholder|-moz-focus-inner|-moz-focusring|-ms-input-placeholder|-moz-read-write|-moz-read-only|-ms-clear|-ms-expand|-ms-reveal){/.test(rule)) {\n          console.error(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode && tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._alreadyInsertedOrderInsensitiveRule = false;\n    }\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","/**\n * @param {number}\n * @return {number}\n */\nexport var abs = Math.abs\n\n/**\n * @param {number}\n * @return {string}\n */\nexport var from = String.fromCharCode\n\n/**\n * @param {object}\n * @return {object}\n */\nexport var assign = Object.assign\n\n/**\n * @param {string} value\n * @param {number} length\n * @return {number}\n */\nexport function hash (value, length) {\n\treturn charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0\n}\n\n/**\n * @param {string} value\n * @return {string}\n */\nexport function trim (value) {\n\treturn value.trim()\n}\n\n/**\n * @param {string} value\n * @param {RegExp} pattern\n * @return {string?}\n */\nexport function match (value, pattern) {\n\treturn (value = pattern.exec(value)) ? value[0] : value\n}\n\n/**\n * @param {string} value\n * @param {(string|RegExp)} pattern\n * @param {string} replacement\n * @return {string}\n */\nexport function replace (value, pattern, replacement) {\n\treturn value.replace(pattern, replacement)\n}\n\n/**\n * @param {string} value\n * @param {string} search\n * @return {number}\n */\nexport function indexof (value, search) {\n\treturn value.indexOf(search)\n}\n\n/**\n * @param {string} value\n * @param {number} index\n * @return {number}\n */\nexport function charat (value, index) {\n\treturn value.charCodeAt(index) | 0\n}\n\n/**\n * @param {string} value\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function substr (value, begin, end) {\n\treturn value.slice(begin, end)\n}\n\n/**\n * @param {string} value\n * @return {number}\n */\nexport function strlen (value) {\n\treturn value.length\n}\n\n/**\n * @param {any[]} value\n * @return {number}\n */\nexport function sizeof (value) {\n\treturn value.length\n}\n\n/**\n * @param {any} value\n * @param {any[]} array\n * @return {any}\n */\nexport function append (value, array) {\n\treturn array.push(value), value\n}\n\n/**\n * @param {string[]} array\n * @param {function} callback\n * @return {string}\n */\nexport function combine (array, callback) {\n\treturn array.map(callback).join('')\n}\n","import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n","export var MS = '-ms-'\nexport var MOZ = '-moz-'\nexport var WEBKIT = '-webkit-'\n\nexport var COMMENT = 'comm'\nexport var RULESET = 'rule'\nexport var DECLARATION = 'decl'\n\nexport var PAGE = '@page'\nexport var MEDIA = '@media'\nexport var IMPORT = '@import'\nexport var CHARSET = '@charset'\nexport var VIEWPORT = '@viewport'\nexport var SUPPORTS = '@supports'\nexport var DOCUMENT = '@document'\nexport var NAMESPACE = '@namespace'\nexport var KEYFRAMES = '@keyframes'\nexport var FONT_FACE = '@font-face'\nexport var COUNTER_STYLE = '@counter-style'\nexport var FONT_FEATURE_VALUES = '@font-feature-values'\n","import {IMPORT, COMMENT, RULESET, DECLARATION, KEYFRAMES} from './Enum.js'\nimport {strlen, sizeof} from './Utility.js'\n\n/**\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function serialize (children, callback) {\n\tvar output = ''\n\tvar length = sizeof(children)\n\n\tfor (var i = 0; i < length; i++)\n\t\toutput += callback(children[i], i, children, callback) || ''\n\n\treturn output\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n * @return {string}\n */\nexport function stringify (element, index, children, callback) {\n\tswitch (element.type) {\n\t\tcase IMPORT: case DECLARATION: return element.return = element.return || element.value\n\t\tcase COMMENT: return ''\n\t\tcase KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'\n\t\tcase RULESET: element.value = element.props.join(',')\n\t}\n\n\treturn strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''\n}\n","import {COMMENT, RULESET, DECLARATION} from './Enum.js'\nimport {abs, charat, trim, from, sizeof, strlen, substr, append, replace, indexof} from './Utility.js'\nimport {node, char, prev, next, peek, caret, alloc, dealloc, delimit, whitespace, escaping, identifier, commenter} from './Tokenizer.js'\n\n/**\n * @param {string} value\n * @return {object[]}\n */\nexport function compile (value) {\n\treturn dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {string[]} rule\n * @param {string[]} rules\n * @param {string[]} rulesets\n * @param {number[]} pseudo\n * @param {number[]} points\n * @param {string[]} declarations\n * @return {object}\n */\nexport function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n\tvar index = 0\n\tvar offset = 0\n\tvar length = pseudo\n\tvar atrule = 0\n\tvar property = 0\n\tvar previous = 0\n\tvar variable = 1\n\tvar scanning = 1\n\tvar ampersand = 1\n\tvar character = 0\n\tvar type = ''\n\tvar props = rules\n\tvar children = rulesets\n\tvar reference = rule\n\tvar characters = type\n\n\twhile (scanning)\n\t\tswitch (previous = character, character = next()) {\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (previous != 108 && charat(characters, length - 1) == 58) {\n\t\t\t\t\tif (indexof(characters += replace(delimit(character), '&', '&\\f'), '&\\f') != -1)\n\t\t\t\t\t\tampersand = -1\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t// \" ' [\n\t\t\tcase 34: case 39: case 91:\n\t\t\t\tcharacters += delimit(character)\n\t\t\t\tbreak\n\t\t\t// \\t \\n \\r \\s\n\t\t\tcase 9: case 10: case 13: case 32:\n\t\t\t\tcharacters += whitespace(previous)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tcharacters += escaping(caret() - 1, 7)\n\t\t\t\tcontinue\n\t\t\t// /\n\t\t\tcase 47:\n\t\t\t\tswitch (peek()) {\n\t\t\t\t\tcase 42: case 47:\n\t\t\t\t\t\tappend(comment(commenter(next(), caret()), root, parent), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcharacters += '/'\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t// {\n\t\t\tcase 123 * variable:\n\t\t\t\tpoints[index++] = strlen(characters) * ampersand\n\t\t\t// } ; \\0\n\t\t\tcase 125 * variable: case 59: case 0:\n\t\t\t\tswitch (character) {\n\t\t\t\t\t// \\0 }\n\t\t\t\t\tcase 0: case 125: scanning = 0\n\t\t\t\t\t// ;\n\t\t\t\t\tcase 59 + offset:\n\t\t\t\t\t\tif (property > 0 && (strlen(characters) - length))\n\t\t\t\t\t\t\tappend(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @ ;\n\t\t\t\t\tcase 59: characters += ';'\n\t\t\t\t\t// { rule/at-rule\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappend(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)\n\n\t\t\t\t\t\tif (character === 123)\n\t\t\t\t\t\t\tif (offset === 0)\n\t\t\t\t\t\t\t\tparse(characters, root, reference, reference, props, rulesets, length, points, children)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tswitch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {\n\t\t\t\t\t\t\t\t\t// d m s\n\t\t\t\t\t\t\t\t\tcase 100: case 109: case 115:\n\t\t\t\t\t\t\t\t\t\tparse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tparse(characters, reference, reference, reference, [''], children, 0, points, children)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tindex = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo\n\t\t\t\tbreak\n\t\t\t// :\n\t\t\tcase 58:\n\t\t\t\tlength = 1 + strlen(characters), property = previous\n\t\t\tdefault:\n\t\t\t\tif (variable < 1)\n\t\t\t\t\tif (character == 123)\n\t\t\t\t\t\t--variable\n\t\t\t\t\telse if (character == 125 && variable++ == 0 && prev() == 125)\n\t\t\t\t\t\tcontinue\n\n\t\t\t\tswitch (characters += from(character), character * variable) {\n\t\t\t\t\t// &\n\t\t\t\t\tcase 38:\n\t\t\t\t\t\tampersand = offset > 0 ? 1 : (characters += '\\f', -1)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// ,\n\t\t\t\t\tcase 44:\n\t\t\t\t\t\tpoints[index++] = (strlen(characters) - 1) * ampersand, ampersand = 1\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// @\n\t\t\t\t\tcase 64:\n\t\t\t\t\t\t// -\n\t\t\t\t\t\tif (peek() === 45)\n\t\t\t\t\t\t\tcharacters += delimit(next())\n\n\t\t\t\t\t\tatrule = peek(), offset = length = strlen(type = characters += identifier(caret())), character++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// -\n\t\t\t\t\tcase 45:\n\t\t\t\t\t\tif (previous === 45 && strlen(characters) == 2)\n\t\t\t\t\t\t\tvariable = 0\n\t\t\t\t}\n\t\t}\n\n\treturn rulesets\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} index\n * @param {number} offset\n * @param {string[]} rules\n * @param {number[]} points\n * @param {string} type\n * @param {string[]} props\n * @param {string[]} children\n * @param {number} length\n * @return {object}\n */\nexport function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {\n\tvar post = offset - 1\n\tvar rule = offset === 0 ? rules : ['']\n\tvar size = sizeof(rule)\n\n\tfor (var i = 0, j = 0, k = 0; i < index; ++i)\n\t\tfor (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n\t\t\tif (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\\f/g, rule[x])))\n\t\t\t\tprops[k++] = z\n\n\treturn node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)\n}\n\n/**\n * @param {number} value\n * @param {object} root\n * @param {object?} parent\n * @return {object}\n */\nexport function comment (value, root, parent) {\n\treturn node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)\n}\n\n/**\n * @param {string} value\n * @param {object} root\n * @param {object?} parent\n * @param {number} length\n * @return {object}\n */\nexport function declaration (value, root, parent, length) {\n\treturn node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)\n}\n","import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, RULESET, combine, match, serialize, copy, replace, WEBKIT, MOZ, MS, KEYFRAMES, DECLARATION, hash, charat, strlen, indexof, stringify, COMMENT, rulesheet, middleware, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = element.parent === children[0]; // in nested rules comments become children of the \"auto-inserted\" rule\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? children[0].children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\n/* eslint-disable no-fallthrough */\n\nfunction prefix(value, length) {\n  switch (hash(value, length)) {\n    // color-adjust\n    case 5103:\n      return WEBKIT + 'print-' + value + value;\n    // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n\n    case 5737:\n    case 4201:\n    case 3177:\n    case 3433:\n    case 1641:\n    case 4457:\n    case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break\n\n    case 5572:\n    case 6356:\n    case 5844:\n    case 3191:\n    case 6645:\n    case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,\n\n    case 6391:\n    case 5879:\n    case 5623:\n    case 6135:\n    case 4599:\n    case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)\n\n    case 4215:\n    case 6389:\n    case 5109:\n    case 5365:\n    case 5621:\n    case 3829:\n      return WEBKIT + value + value;\n    // appearance, user-select, transform, hyphens, text-size-adjust\n\n    case 5349:\n    case 4246:\n    case 4810:\n    case 6968:\n    case 2756:\n      return WEBKIT + value + MOZ + value + MS + value + value;\n    // flex, flex-direction\n\n    case 6828:\n    case 4268:\n      return WEBKIT + value + MS + value + value;\n    // order\n\n    case 6165:\n      return WEBKIT + value + MS + 'flex-' + value + value;\n    // align-items\n\n    case 5187:\n      return WEBKIT + value + replace(value, /(\\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value;\n    // align-self\n\n    case 5443:\n      return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value;\n    // align-content\n\n    case 4675:\n      return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value;\n    // flex-shrink\n\n    case 5548:\n      return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value;\n    // flex-basis\n\n    case 5292:\n      return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value;\n    // flex-grow\n\n    case 6060:\n      return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value;\n    // transition\n\n    case 4554:\n      return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value;\n    // cursor\n\n    case 6187:\n      return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value;\n    // background, background-image\n\n    case 5495:\n    case 3959:\n      return replace(value, /(image-set\\([^]*)/, WEBKIT + '$1' + '$`$1');\n    // justify-content\n\n    case 4968:\n      return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value;\n    // (margin|padding)-inline-(start|end)\n\n    case 4095:\n    case 3583:\n    case 4068:\n    case 2532:\n      return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value;\n    // (min|max)?(width|height|inline-size|block-size)\n\n    case 8116:\n    case 7059:\n    case 5753:\n    case 5535:\n    case 5445:\n    case 5701:\n    case 4933:\n    case 4677:\n    case 5533:\n    case 5789:\n    case 5021:\n    case 4765:\n      // stretch, max-content, min-content, fill-available\n      if (strlen(value) - 1 - length > 6) switch (charat(value, length + 1)) {\n        // (m)ax-content, (m)in-content\n        case 109:\n          // -\n          if (charat(value, length + 4) !== 45) break;\n        // (f)ill-available, (f)it-content\n\n        case 102:\n          return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value;\n        // (s)tretch\n\n        case 115:\n          return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value;\n      }\n      break;\n    // position: sticky\n\n    case 4949:\n      // (s)ticky?\n      if (charat(value, length + 1) !== 115) break;\n    // display: (flex|inline-flex)\n\n    case 6444:\n      switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {\n        // stic(k)y\n        case 107:\n          return replace(value, ':', ':' + WEBKIT) + value;\n        // (inline-)?fl(e)x\n\n        case 101:\n          return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value;\n      }\n\n      break;\n    // writing-mode\n\n    case 5936:\n      switch (charat(value, length + 11)) {\n        // vertical-l(r)\n        case 114:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb') + value;\n        // vertical-r(l)\n\n        case 108:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'tb-rl') + value;\n        // horizontal(-)tb\n\n        case 45:\n          return WEBKIT + value + MS + replace(value, /[svh]\\w+-[tblr]{2}/, 'lr') + value;\n      }\n\n      return WEBKIT + value + MS + value + value;\n  }\n\n  return value;\n}\n\nvar prefixer = function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element[\"return\"]) switch (element.type) {\n    case DECLARATION:\n      element[\"return\"] = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if ( key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport default createCache;\n","import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length, children)\n\t\t\t\t\treturn\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(var|attr|counters?|url|element|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar noComponentSelectorMessage = 'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.';\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error(noComponentSelectorMessage);\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error(noComponentSelectorMessage);\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","import * as React from 'react';\nimport { useLayoutEffect } from 'react';\n\nvar syncFallback = function syncFallback(create) {\n  return create();\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : false;\nvar useInsertionEffectAlwaysWithSyncFallback =  useInsertionEffect || syncFallback;\nvar useInsertionEffectWithLayoutFallback = useInsertionEffect || useLayoutEffect;\n\nexport { useInsertionEffectAlwaysWithSyncFallback, useInsertionEffectWithLayoutFallback };\n","import { createContext, useContext, forwardRef, createElement, Fragment } from 'react';\nimport createCache from '@emotion/cache';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport weakMemoize from '@emotion/weak-memoize';\nimport hoistNonReactStatics from '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nvar EmotionCacheContext = /* #__PURE__ */createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? /* #__PURE__ */createCache({\n  key: 'css'\n}) : null);\n\nif (process.env.NODE_ENV !== 'production') {\n  EmotionCacheContext.displayName = 'EmotionCacheContext';\n}\n\nvar CacheProvider = EmotionCacheContext.Provider;\nvar __unsafe_useEmotionCache = function useEmotionCache() {\n  return useContext(EmotionCacheContext);\n};\n\nvar withEmotionCache = function withEmotionCache(func) {\n  // $FlowFixMe\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    // the cache will never be null in the browser\n    var cache = useContext(EmotionCacheContext);\n    return func(props, cache, ref);\n  });\n};\n\nvar ThemeContext = /* #__PURE__ */createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'EmotionThemeContext';\n}\n\nvar useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\n\nvar getTheme = function getTheme(outerTheme, theme) {\n  if (typeof theme === 'function') {\n    var mergedTheme = theme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production' && (mergedTheme == null || typeof mergedTheme !== 'object' || Array.isArray(mergedTheme))) {\n      throw new Error('[ThemeProvider] Please return an object from your theme function, i.e. theme={() => ({})}!');\n    }\n\n    return mergedTheme;\n  }\n\n  if (process.env.NODE_ENV !== 'production' && (theme == null || typeof theme !== 'object' || Array.isArray(theme))) {\n    throw new Error('[ThemeProvider] Please make your theme prop a plain object');\n  }\n\n  return _extends({}, outerTheme, theme);\n};\n\nvar createCacheWithTheme = /* #__PURE__ */weakMemoize(function (outerTheme) {\n  return weakMemoize(function (theme) {\n    return getTheme(outerTheme, theme);\n  });\n});\nvar ThemeProvider = function ThemeProvider(props) {\n  var theme = useContext(ThemeContext);\n\n  if (props.theme !== theme) {\n    theme = createCacheWithTheme(theme)(props.theme);\n  }\n\n  return /*#__PURE__*/createElement(ThemeContext.Provider, {\n    value: theme\n  }, props.children);\n};\nfunction withTheme(Component) {\n  var componentName = Component.displayName || Component.name || 'Component';\n\n  var render = function render(props, ref) {\n    var theme = useContext(ThemeContext);\n    return /*#__PURE__*/createElement(Component, _extends({\n      theme: theme,\n      ref: ref\n    }, props));\n  }; // $FlowFixMe\n\n\n  var WithTheme = /*#__PURE__*/forwardRef(render);\n  WithTheme.displayName = \"WithTheme(\" + componentName + \")\";\n  return hoistNonReactStatics(WithTheme, Component);\n}\n\nvar getLastPart = function getLastPart(functionName) {\n  // The match may be something like 'Object.createEmotionProps' or\n  // 'Loader.prototype.render'\n  var parts = functionName.split('.');\n  return parts[parts.length - 1];\n};\n\nvar getFunctionNameFromStackTraceLine = function getFunctionNameFromStackTraceLine(line) {\n  // V8\n  var match = /^\\s+at\\s+([A-Za-z0-9$.]+)\\s/.exec(line);\n  if (match) return getLastPart(match[1]); // Safari / Firefox\n\n  match = /^([A-Za-z0-9$.]+)@/.exec(line);\n  if (match) return getLastPart(match[1]);\n  return undefined;\n};\n\nvar internalReactFunctionNames = /* #__PURE__ */new Set(['renderWithHooks', 'processChild', 'finishClassComponent', 'renderToString']); // These identifiers come from error stacks, so they have to be valid JS\n// identifiers, thus we only need to replace what is a valid character for JS,\n// but not for CSS.\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar getLabelFromStackTrace = function getLabelFromStackTrace(stackTrace) {\n  if (!stackTrace) return undefined;\n  var lines = stackTrace.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    var functionName = getFunctionNameFromStackTraceLine(lines[i]); // The first line of V8 stack traces is just \"Error\"\n\n    if (!functionName) continue; // If we reach one of these, we have gone too far and should quit\n\n    if (internalReactFunctionNames.has(functionName)) break; // The component name is the first function in the stack that starts with an\n    // uppercase letter\n\n    if (/^[A-Z]/.test(functionName)) return sanitizeIdentifier(functionName);\n  }\n\n  return undefined;\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/react' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // For performance, only call getLabelFromStackTrace in development and when\n  // the label hasn't already been computed\n\n  if (process.env.NODE_ENV !== 'production' && !!props.css && (typeof props.css !== 'object' || typeof props.css.name !== 'string' || props.css.name.indexOf('-') === -1)) {\n    var label = getLabelFromStackTrace(new Error().stack);\n    if (label) newProps[labelPropName] = label;\n  }\n\n  return newProps;\n};\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  var cssProp = props.css; // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var WrappedComponent = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles, undefined, useContext(ThemeContext));\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serialized: serialized,\n    isStringTag: typeof WrappedComponent === 'string'\n  }), /*#__PURE__*/createElement(WrappedComponent, newProps));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, __unsafe_useEmotionCache as _, ThemeProvider as a, withTheme as b, createEmotionProps as c, hasOwnProperty as h, useTheme as u, withEmotionCache as w };\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useContext, createElement, Fragment } from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { withEmotionCache, ThemeContext } from '@emotion/react';\nimport { getRegisteredStyles, registerStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar testOmitPropsOnStringTag = isPropValid;\n\nvar testOmitPropsOnComponent = function testOmitPropsOnComponent(key) {\n  return key !== 'theme';\n};\n\nvar getDefaultShouldForwardProp = function getDefaultShouldForwardProp(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96 ? testOmitPropsOnStringTag : testOmitPropsOnComponent;\n};\nvar composeShouldForwardProps = function composeShouldForwardProps(tag, options, isReal) {\n  var shouldForwardProp;\n\n  if (options) {\n    var optionsShouldForwardProp = options.shouldForwardProp;\n    shouldForwardProp = tag.__emotion_forwardProp && optionsShouldForwardProp ? function (propName) {\n      return tag.__emotion_forwardProp(propName) && optionsShouldForwardProp(propName);\n    } : optionsShouldForwardProp;\n  }\n\n  if (typeof shouldForwardProp !== 'function' && isReal) {\n    shouldForwardProp = tag.__emotion_forwardProp;\n  }\n\n  return shouldForwardProp;\n};\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serialized = _ref.serialized,\n      isStringTag = _ref.isStringTag;\n  registerStyles(cache, serialized, isStringTag);\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n    return insertStyles(cache, serialized, isStringTag);\n  });\n\n  return null;\n};\n\nvar createStyled = function createStyled(tag, options) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (tag === undefined) {\n      throw new Error('You are trying to create a styled element with an undefined component.\\nYou may have forgotten to import it.');\n    }\n  }\n\n  var isReal = tag.__emotion_real === tag;\n  var baseTag = isReal && tag.__emotion_base || tag;\n  var identifierName;\n  var targetClassName;\n\n  if (options !== undefined) {\n    identifierName = options.label;\n    targetClassName = options.target;\n  }\n\n  var shouldForwardProp = composeShouldForwardProps(tag, options, isReal);\n  var defaultShouldForwardProp = shouldForwardProp || getDefaultShouldForwardProp(baseTag);\n  var shouldUseAs = !defaultShouldForwardProp('as');\n  return function () {\n    var args = arguments;\n    var styles = isReal && tag.__emotion_styles !== undefined ? tag.__emotion_styles.slice(0) : [];\n\n    if (identifierName !== undefined) {\n      styles.push(\"label:\" + identifierName + \";\");\n    }\n\n    if (args[0] == null || args[0].raw === undefined) {\n      styles.push.apply(styles, args);\n    } else {\n      if (process.env.NODE_ENV !== 'production' && args[0][0] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles.push(args[0][0]);\n      var len = args.length;\n      var i = 1;\n\n      for (; i < len; i++) {\n        if (process.env.NODE_ENV !== 'production' && args[0][i] === undefined) {\n          console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n        }\n\n        styles.push(args[i], args[0][i]);\n      }\n    } // $FlowFixMe: we need to cast StatelessFunctionalComponent to our PrivateStyledComponent class\n\n\n    var Styled = withEmotionCache(function (props, cache, ref) {\n      var FinalTag = shouldUseAs && props.as || baseTag;\n      var className = '';\n      var classInterpolations = [];\n      var mergedProps = props;\n\n      if (props.theme == null) {\n        mergedProps = {};\n\n        for (var key in props) {\n          mergedProps[key] = props[key];\n        }\n\n        mergedProps.theme = useContext(ThemeContext);\n      }\n\n      if (typeof props.className === 'string') {\n        className = getRegisteredStyles(cache.registered, classInterpolations, props.className);\n      } else if (props.className != null) {\n        className = props.className + \" \";\n      }\n\n      var serialized = serializeStyles(styles.concat(classInterpolations), cache.registered, mergedProps);\n      className += cache.key + \"-\" + serialized.name;\n\n      if (targetClassName !== undefined) {\n        className += \" \" + targetClassName;\n      }\n\n      var finalShouldForwardProp = shouldUseAs && shouldForwardProp === undefined ? getDefaultShouldForwardProp(FinalTag) : defaultShouldForwardProp;\n      var newProps = {};\n\n      for (var _key in props) {\n        if (shouldUseAs && _key === 'as') continue;\n\n        if ( // $FlowFixMe\n        finalShouldForwardProp(_key)) {\n          newProps[_key] = props[_key];\n        }\n      }\n\n      newProps.className = className;\n      newProps.ref = ref;\n      return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n        cache: cache,\n        serialized: serialized,\n        isStringTag: typeof FinalTag === 'string'\n      }), /*#__PURE__*/createElement(FinalTag, newProps));\n    });\n    Styled.displayName = identifierName !== undefined ? identifierName : \"Styled(\" + (typeof baseTag === 'string' ? baseTag : baseTag.displayName || baseTag.name || 'Component') + \")\";\n    Styled.defaultProps = tag.defaultProps;\n    Styled.__emotion_real = Styled;\n    Styled.__emotion_base = baseTag;\n    Styled.__emotion_styles = styles;\n    Styled.__emotion_forwardProp = shouldForwardProp;\n    Object.defineProperty(Styled, 'toString', {\n      value: function value() {\n        if (targetClassName === undefined && process.env.NODE_ENV !== 'production') {\n          return 'NO_COMPONENT_SELECTOR';\n        } // $FlowFixMe: coerce undefined to string\n\n\n        return \".\" + targetClassName;\n      }\n    });\n\n    Styled.withComponent = function (nextTag, nextOptions) {\n      return createStyled(nextTag, _extends({}, options, nextOptions, {\n        shouldForwardProp: composeShouldForwardProps(Styled, nextOptions, true)\n      })).apply(void 0, styles);\n    };\n\n    return Styled;\n  };\n};\n\nexport default createStyled;\n","import '@babel/runtime/helpers/extends';\nimport 'react';\nimport '@emotion/is-prop-valid';\nimport createStyled from '../base/dist/emotion-styled-base.browser.esm.js';\nimport '@emotion/react';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n\nvar newStyled = createStyled.bind();\ntags.forEach(function (tagName) {\n  // $FlowFixMe: we can ignore this because its exposed type is defined by the CreateStyled type\n  newStyled[tagName] = newStyled(tagName);\n});\n\nexport default newStyled;\n","/**\n * @mui/styled-engine v5.11.11\n *\n * @license MIT\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* eslint-disable no-underscore-dangle */\nimport emStyled from '@emotion/styled';\nexport default function styled(tag, options) {\n  const stylesFactory = emStyled(tag, options);\n  if (process.env.NODE_ENV !== 'production') {\n    return (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n      if (styles.length === 0) {\n        console.error([`MUI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n      return stylesFactory(...styles);\n    };\n  }\n  return stylesFactory;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const internal_processStyles = (tag, processor) => {\n  // Emotion attaches all the styles as `__emotion_styles`.\n  // Ref: https://github.com/emotion-js/emotion/blob/16d971d0da229596d6bcc39d282ba9753c9ee7cf/packages/styled/src/base.js#L186\n  if (Array.isArray(tag.__emotion_styles)) {\n    tag.__emotion_styles = processor(tag.__emotion_styles);\n  }\n};\nexport { ThemeContext, keyframes, css } from '@emotion/react';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"values\", \"unit\", \"step\"];\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl'];\nconst sortBreakpointsValues = values => {\n  const breakpointsAsArray = Object.keys(values).map(key => ({\n    key,\n    val: values[key]\n  })) || [];\n  // Sort in ascending order\n  breakpointsAsArray.sort((breakpoint1, breakpoint2) => breakpoint1.val - breakpoint2.val);\n  return breakpointsAsArray.reduce((acc, obj) => {\n    return _extends({}, acc, {\n      [obj.key]: obj.val\n    });\n  }, {});\n};\n\n// Keep in mind that @media is inclusive by the CSS specification.\nexport default function createBreakpoints(breakpoints) {\n  const {\n      // The breakpoint **start** at this value.\n      // For instance with the first breakpoint xs: [xs, sm).\n      values = {\n        xs: 0,\n        // phone\n        sm: 600,\n        // tablet\n        md: 900,\n        // small laptop\n        lg: 1200,\n        // desktop\n        xl: 1536 // large screen\n      },\n\n      unit = 'px',\n      step = 5\n    } = breakpoints,\n    other = _objectWithoutPropertiesLoose(breakpoints, _excluded);\n  const sortedValues = sortBreakpointsValues(values);\n  const keys = Object.keys(sortedValues);\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n    return up(key);\n  }\n  function not(key) {\n    // handle first and last key separately, for better readability\n    const keyIndex = keys.indexOf(key);\n    if (keyIndex === 0) {\n      return up(keys[1]);\n    }\n    if (keyIndex === keys.length - 1) {\n      return down(keys[keyIndex]);\n    }\n    return between(key, keys[keys.indexOf(key) + 1]).replace('@media', '@media not all and');\n  }\n  return _extends({\n    keys,\n    values: sortedValues,\n    up,\n    down,\n    between,\n    only,\n    not,\n    unit\n  }, other);\n}","const shape = {\n  borderRadius: 4\n};\nexport default shape;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@mui/utils';\nimport merge from './merge';\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nexport const values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n};\n\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      // key is breakpoint\n      if (Object.keys(themeBreakpoints.values || values).indexOf(breakpoint) !== -1) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n      return acc;\n    }, {});\n  }\n  const output = styleFromPropValue(propValue);\n  return output;\n}\nfunction breakpoints(styleFunction) {\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction(_extends({\n          theme\n        }, props[key]));\n      }\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\n  var _breakpointsInput$key;\n  const breakpointsInOrder = (_breakpointsInput$key = breakpointsInput.keys) == null ? void 0 : _breakpointsInput$key.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n    return acc;\n  }, style);\n}\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\n\n// compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\nexport function computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== 'object') {\n    return {};\n  }\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n  return base;\n}\nexport function resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n    return acc;\n  }, {});\n}\nexport default breakpoints;","import _formatMuiErrorMessage from \"./formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`capitalize(string)\\` expects a string argument.` : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import { unstable_capitalize as capitalize } from '@mui/utils';\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nexport function getPath(obj, path, checkVars = true) {\n  if (!path || typeof path !== 'string') {\n    return null;\n  }\n\n  // Check if CSS variables are used\n  if (obj && obj.vars && checkVars) {\n    const val = `vars.${path}`.split('.').reduce((acc, item) => acc && acc[item] ? acc[item] : null, obj);\n    if (val != null) {\n      return val;\n    }\n  }\n  return path.split('.').reduce((acc, item) => {\n    if (acc && acc[item] != null) {\n      return acc[item];\n    }\n    return null;\n  }, obj);\n}\nexport function getStyleValue(themeMapping, transform, propValueFinal, userValue = propValueFinal) {\n  let value;\n  if (typeof themeMapping === 'function') {\n    value = themeMapping(propValueFinal);\n  } else if (Array.isArray(themeMapping)) {\n    value = themeMapping[propValueFinal] || userValue;\n  } else {\n    value = getPath(themeMapping, propValueFinal) || userValue;\n  }\n  if (transform) {\n    value = transform(value, userValue, themeMapping);\n  }\n  return value;\n}\nfunction style(options) {\n  const {\n    prop,\n    cssProperty = options.prop,\n    themeKey,\n    transform\n  } = options;\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    if (props[prop] == null) {\n      return null;\n    }\n    const propValue = props[prop];\n    const theme = props.theme;\n    const themeMapping = getPath(theme, themeKey) || {};\n    const styleFromPropValue = propValueFinal => {\n      let value = getStyleValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getStyleValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return handleBreakpoints(props, propValue, styleFromPropValue);\n  };\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? {\n    [prop]: responsivePropType\n  } : {};\n  fn.filterProps = [prop];\n  return fn;\n}\nexport default style;","import { deepmerge } from '@mui/utils';\nfunction merge(acc, item) {\n  if (!item) {\n    return acc;\n  }\n  return deepmerge(acc, item, {\n    clone: false // No need to clone deep, it's way faster.\n  });\n}\n\nexport default merge;","import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n};\n\n// memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nexport const marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nexport const paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var _getPath;\n  const themeSpacing = (_getPath = getPath(theme, themeKey, false)) != null ? _getPath : defaultValue;\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        }\n      }\n      return themeSpacing * abs;\n    };\n  }\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n      return themeSpacing[abs];\n    };\n  }\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n  return () => undefined;\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n  if (propValue >= 0) {\n    return transformed;\n  }\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n  return `-${transformed}`;\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","export default function memoize(fn) {\n  const cache = {};\n  return arg => {\n    if (cache[arg] === undefined) {\n      cache[arg] = fn(arg);\n    }\n    return cache[arg];\n  };\n}","import merge from './merge';\nfunction compose(...styles) {\n  const handlers = styles.reduce((acc, style) => {\n    style.filterProps.forEach(prop => {\n      acc[prop] = style;\n    });\n    return acc;\n  }, {});\n\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const fn = props => {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (handlers[prop]) {\n        return merge(acc, handlers[prop](props));\n      }\n      return acc;\n    }, {});\n  };\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce((acc, style) => Object.assign(acc, style.propTypes), {}) : {};\n  fn.filterProps = styles.reduce((acc, style) => acc.concat(style.filterProps), []);\n  return fn;\n}\nexport default compose;","import responsivePropType from './responsivePropType';\nimport style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\nexport function borderTransform(value) {\n  if (typeof value !== 'number') {\n    return value;\n  }\n  return `${value}px solid`;\n}\nexport const border = style({\n  prop: 'border',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderTop = style({\n  prop: 'borderTop',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderRight = style({\n  prop: 'borderRight',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderBottom = style({\n  prop: 'borderBottom',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderLeft = style({\n  prop: 'borderLeft',\n  themeKey: 'borders',\n  transform: borderTransform\n});\nexport const borderColor = style({\n  prop: 'borderColor',\n  themeKey: 'palette'\n});\nexport const borderTopColor = style({\n  prop: 'borderTopColor',\n  themeKey: 'palette'\n});\nexport const borderRightColor = style({\n  prop: 'borderRightColor',\n  themeKey: 'palette'\n});\nexport const borderBottomColor = style({\n  prop: 'borderBottomColor',\n  themeKey: 'palette'\n});\nexport const borderLeftColor = style({\n  prop: 'borderLeftColor',\n  themeKey: 'palette'\n});\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const borderRadius = props => {\n  if (props.borderRadius !== undefined && props.borderRadius !== null) {\n    const transformer = createUnaryUnit(props.theme, 'shape.borderRadius', 4, 'borderRadius');\n    const styleFromPropValue = propValue => ({\n      borderRadius: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.borderRadius, styleFromPropValue);\n  }\n  return null;\n};\nborderRadius.propTypes = process.env.NODE_ENV !== 'production' ? {\n  borderRadius: responsivePropType\n} : {};\nborderRadius.filterProps = ['borderRadius'];\nconst borders = compose(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);\nexport default borders;","import style from './style';\nimport compose from './compose';\nimport { createUnaryUnit, getValue } from './spacing';\nimport { handleBreakpoints } from './breakpoints';\nimport responsivePropType from './responsivePropType';\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const gap = props => {\n  if (props.gap !== undefined && props.gap !== null) {\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'gap');\n    const styleFromPropValue = propValue => ({\n      gap: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.gap, styleFromPropValue);\n  }\n  return null;\n};\ngap.propTypes = process.env.NODE_ENV !== 'production' ? {\n  gap: responsivePropType\n} : {};\ngap.filterProps = ['gap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const columnGap = props => {\n  if (props.columnGap !== undefined && props.columnGap !== null) {\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'columnGap');\n    const styleFromPropValue = propValue => ({\n      columnGap: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.columnGap, styleFromPropValue);\n  }\n  return null;\n};\ncolumnGap.propTypes = process.env.NODE_ENV !== 'production' ? {\n  columnGap: responsivePropType\n} : {};\ncolumnGap.filterProps = ['columnGap'];\n\n// false positive\n// eslint-disable-next-line react/function-component-definition\nexport const rowGap = props => {\n  if (props.rowGap !== undefined && props.rowGap !== null) {\n    const transformer = createUnaryUnit(props.theme, 'spacing', 8, 'rowGap');\n    const styleFromPropValue = propValue => ({\n      rowGap: getValue(transformer, propValue)\n    });\n    return handleBreakpoints(props, props.rowGap, styleFromPropValue);\n  }\n  return null;\n};\nrowGap.propTypes = process.env.NODE_ENV !== 'production' ? {\n  rowGap: responsivePropType\n} : {};\nrowGap.filterProps = ['rowGap'];\nexport const gridColumn = style({\n  prop: 'gridColumn'\n});\nexport const gridRow = style({\n  prop: 'gridRow'\n});\nexport const gridAutoFlow = style({\n  prop: 'gridAutoFlow'\n});\nexport const gridAutoColumns = style({\n  prop: 'gridAutoColumns'\n});\nexport const gridAutoRows = style({\n  prop: 'gridAutoRows'\n});\nexport const gridTemplateColumns = style({\n  prop: 'gridTemplateColumns'\n});\nexport const gridTemplateRows = style({\n  prop: 'gridTemplateRows'\n});\nexport const gridTemplateAreas = style({\n  prop: 'gridTemplateAreas'\n});\nexport const gridArea = style({\n  prop: 'gridArea'\n});\nconst grid = compose(gap, columnGap, rowGap, gridColumn, gridRow, gridAutoFlow, gridAutoColumns, gridAutoRows, gridTemplateColumns, gridTemplateRows, gridTemplateAreas, gridArea);\nexport default grid;","import style from './style';\nimport compose from './compose';\nexport function paletteTransform(value, userValue) {\n  if (userValue === 'grey') {\n    return userValue;\n  }\n  return value;\n}\nexport const color = style({\n  prop: 'color',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nexport const bgcolor = style({\n  prop: 'bgcolor',\n  cssProperty: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nexport const backgroundColor = style({\n  prop: 'backgroundColor',\n  themeKey: 'palette',\n  transform: paletteTransform\n});\nconst palette = compose(color, bgcolor, backgroundColor);\nexport default palette;","import style from './style';\nimport compose from './compose';\nimport { handleBreakpoints, values as breakpointsValues } from './breakpoints';\nexport function sizingTransform(value) {\n  return value <= 1 && value !== 0 ? `${value * 100}%` : value;\n}\nexport const width = style({\n  prop: 'width',\n  transform: sizingTransform\n});\nexport const maxWidth = props => {\n  if (props.maxWidth !== undefined && props.maxWidth !== null) {\n    const styleFromPropValue = propValue => {\n      var _props$theme, _props$theme$breakpoi, _props$theme$breakpoi2;\n      const breakpoint = ((_props$theme = props.theme) == null ? void 0 : (_props$theme$breakpoi = _props$theme.breakpoints) == null ? void 0 : (_props$theme$breakpoi2 = _props$theme$breakpoi.values) == null ? void 0 : _props$theme$breakpoi2[propValue]) || breakpointsValues[propValue];\n      return {\n        maxWidth: breakpoint || sizingTransform(propValue)\n      };\n    };\n    return handleBreakpoints(props, props.maxWidth, styleFromPropValue);\n  }\n  return null;\n};\nmaxWidth.filterProps = ['maxWidth'];\nexport const minWidth = style({\n  prop: 'minWidth',\n  transform: sizingTransform\n});\nexport const height = style({\n  prop: 'height',\n  transform: sizingTransform\n});\nexport const maxHeight = style({\n  prop: 'maxHeight',\n  transform: sizingTransform\n});\nexport const minHeight = style({\n  prop: 'minHeight',\n  transform: sizingTransform\n});\nexport const sizeWidth = style({\n  prop: 'size',\n  cssProperty: 'width',\n  transform: sizingTransform\n});\nexport const sizeHeight = style({\n  prop: 'size',\n  cssProperty: 'height',\n  transform: sizingTransform\n});\nexport const boxSizing = style({\n  prop: 'boxSizing'\n});\nconst sizing = compose(width, maxWidth, minWidth, height, maxHeight, minHeight, boxSizing);\nexport default sizing;","import { padding, margin } from '../spacing';\nimport { borderRadius, borderTransform } from '../borders';\nimport { gap, rowGap, columnGap } from '../cssGrid';\nimport { paletteTransform } from '../palette';\nimport { maxWidth, sizingTransform } from '../sizing';\nconst defaultSxConfig = {\n  // borders\n  border: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderTop: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderRight: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderBottom: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderLeft: {\n    themeKey: 'borders',\n    transform: borderTransform\n  },\n  borderColor: {\n    themeKey: 'palette'\n  },\n  borderTopColor: {\n    themeKey: 'palette'\n  },\n  borderRightColor: {\n    themeKey: 'palette'\n  },\n  borderBottomColor: {\n    themeKey: 'palette'\n  },\n  borderLeftColor: {\n    themeKey: 'palette'\n  },\n  borderRadius: {\n    themeKey: 'shape.borderRadius',\n    style: borderRadius\n  },\n  // palette\n  color: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  bgcolor: {\n    themeKey: 'palette',\n    cssProperty: 'backgroundColor',\n    transform: paletteTransform\n  },\n  backgroundColor: {\n    themeKey: 'palette',\n    transform: paletteTransform\n  },\n  // spacing\n  p: {\n    style: padding\n  },\n  pt: {\n    style: padding\n  },\n  pr: {\n    style: padding\n  },\n  pb: {\n    style: padding\n  },\n  pl: {\n    style: padding\n  },\n  px: {\n    style: padding\n  },\n  py: {\n    style: padding\n  },\n  padding: {\n    style: padding\n  },\n  paddingTop: {\n    style: padding\n  },\n  paddingRight: {\n    style: padding\n  },\n  paddingBottom: {\n    style: padding\n  },\n  paddingLeft: {\n    style: padding\n  },\n  paddingX: {\n    style: padding\n  },\n  paddingY: {\n    style: padding\n  },\n  paddingInline: {\n    style: padding\n  },\n  paddingInlineStart: {\n    style: padding\n  },\n  paddingInlineEnd: {\n    style: padding\n  },\n  paddingBlock: {\n    style: padding\n  },\n  paddingBlockStart: {\n    style: padding\n  },\n  paddingBlockEnd: {\n    style: padding\n  },\n  m: {\n    style: margin\n  },\n  mt: {\n    style: margin\n  },\n  mr: {\n    style: margin\n  },\n  mb: {\n    style: margin\n  },\n  ml: {\n    style: margin\n  },\n  mx: {\n    style: margin\n  },\n  my: {\n    style: margin\n  },\n  margin: {\n    style: margin\n  },\n  marginTop: {\n    style: margin\n  },\n  marginRight: {\n    style: margin\n  },\n  marginBottom: {\n    style: margin\n  },\n  marginLeft: {\n    style: margin\n  },\n  marginX: {\n    style: margin\n  },\n  marginY: {\n    style: margin\n  },\n  marginInline: {\n    style: margin\n  },\n  marginInlineStart: {\n    style: margin\n  },\n  marginInlineEnd: {\n    style: margin\n  },\n  marginBlock: {\n    style: margin\n  },\n  marginBlockStart: {\n    style: margin\n  },\n  marginBlockEnd: {\n    style: margin\n  },\n  // display\n  displayPrint: {\n    cssProperty: false,\n    transform: value => ({\n      '@media print': {\n        display: value\n      }\n    })\n  },\n  display: {},\n  overflow: {},\n  textOverflow: {},\n  visibility: {},\n  whiteSpace: {},\n  // flexbox\n  flexBasis: {},\n  flexDirection: {},\n  flexWrap: {},\n  justifyContent: {},\n  alignItems: {},\n  alignContent: {},\n  order: {},\n  flex: {},\n  flexGrow: {},\n  flexShrink: {},\n  alignSelf: {},\n  justifyItems: {},\n  justifySelf: {},\n  // grid\n  gap: {\n    style: gap\n  },\n  rowGap: {\n    style: rowGap\n  },\n  columnGap: {\n    style: columnGap\n  },\n  gridColumn: {},\n  gridRow: {},\n  gridAutoFlow: {},\n  gridAutoColumns: {},\n  gridAutoRows: {},\n  gridTemplateColumns: {},\n  gridTemplateRows: {},\n  gridTemplateAreas: {},\n  gridArea: {},\n  // positions\n  position: {},\n  zIndex: {\n    themeKey: 'zIndex'\n  },\n  top: {},\n  right: {},\n  bottom: {},\n  left: {},\n  // shadows\n  boxShadow: {\n    themeKey: 'shadows'\n  },\n  // sizing\n  width: {\n    transform: sizingTransform\n  },\n  maxWidth: {\n    style: maxWidth\n  },\n  minWidth: {\n    transform: sizingTransform\n  },\n  height: {\n    transform: sizingTransform\n  },\n  maxHeight: {\n    transform: sizingTransform\n  },\n  minHeight: {\n    transform: sizingTransform\n  },\n  boxSizing: {},\n  // typography\n  fontFamily: {\n    themeKey: 'typography'\n  },\n  fontSize: {\n    themeKey: 'typography'\n  },\n  fontStyle: {\n    themeKey: 'typography'\n  },\n  fontWeight: {\n    themeKey: 'typography'\n  },\n  letterSpacing: {},\n  textTransform: {},\n  lineHeight: {},\n  textAlign: {},\n  typography: {\n    cssProperty: false,\n    themeKey: 'typography'\n  }\n};\nexport default defaultSxConfig;","import { unstable_capitalize as capitalize } from '@mui/utils';\nimport merge from '../merge';\nimport { getPath, getStyleValue as getValue } from '../style';\nimport { handleBreakpoints, createEmptyBreakpointObject, removeUnusedBreakpoints } from '../breakpoints';\nimport defaultSxConfig from './defaultSxConfig';\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function unstable_createStyleFunctionSx() {\n  function getThemeValue(prop, val, theme, config) {\n    const props = {\n      [prop]: val,\n      theme\n    };\n    const options = config[prop];\n    if (!options) {\n      return {\n        [prop]: val\n      };\n    }\n    const {\n      cssProperty = prop,\n      themeKey,\n      transform,\n      style\n    } = options;\n    if (val == null) {\n      return null;\n    }\n    const themeMapping = getPath(theme, themeKey) || {};\n    if (style) {\n      return style(props);\n    }\n    const styleFromPropValue = propValueFinal => {\n      let value = getValue(themeMapping, transform, propValueFinal);\n      if (propValueFinal === value && typeof propValueFinal === 'string') {\n        // Haven't found value\n        value = getValue(themeMapping, transform, `${prop}${propValueFinal === 'default' ? '' : capitalize(propValueFinal)}`, propValueFinal);\n      }\n      if (cssProperty === false) {\n        return value;\n      }\n      return {\n        [cssProperty]: value\n      };\n    };\n    return handleBreakpoints(props, val, styleFromPropValue);\n  }\n  function styleFunctionSx(props) {\n    var _theme$unstable_sxCon;\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n\n    const config = (_theme$unstable_sxCon = theme.unstable_sxConfig) != null ? _theme$unstable_sxCon : defaultSxConfig;\n\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = createEmptyBreakpointObject(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (config[styleKey]) {\n              css = merge(css, getThemeValue(styleKey, value, theme, config));\n            } else {\n              const breakpointsValues = handleBreakpoints({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = merge(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = merge(css, getThemeValue(styleKey, value, theme, config));\n          }\n        }\n      });\n      return removeUnusedBreakpoints(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport styleFunctionSx from '../styleFunctionSx/styleFunctionSx';\nimport defaultSxConfig from '../styleFunctionSx/defaultSxConfig';\nfunction createTheme(options = {}, ...args) {\n  const {\n      breakpoints: breakpointsInput = {},\n      palette: paletteInput = {},\n      spacing: spacingInput,\n      shape: shapeInput = {}\n    } = options,\n    other = _objectWithoutPropertiesLoose(options, _excluded);\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: _extends({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: _extends({}, shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\nexport default createTheme;","import { createUnarySpacing } from '../spacing';\n/* tslint:enable:unified-signatures */\n\nexport default function createSpacing(spacingInput = 8) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  }\n\n  // Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons, can align to a 4dp grid.\n  // https://m2.material.io/design/layout/understanding-layout.html\n  const transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n  const spacing = (...argsInput) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n  spacing.mui = true;\n  return spacing;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\"];\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nfunction isEmpty(string) {\n  return string.length === 0;\n}\n\n/**\n * Generates string classKey based on the properties provided. It starts with the\n * variant if defined, and then it appends all other properties in alphabetical order.\n * @param {object} props - the properties for which the classKey should be created.\n */\nexport default function propsToClassKey(props) {\n  const {\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let classKey = variant || '';\n  Object.keys(other).sort().forEach(key => {\n    if (key === 'color') {\n      classKey += isEmpty(classKey) ? props[key] : capitalize(props[key]);\n    } else {\n      classKey += `${isEmpty(classKey) ? key : capitalize(key)}${capitalize(props[key].toString())}`;\n    }\n  });\n  return classKey;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"],\n  _excluded2 = [\"theme\"],\n  _excluded3 = [\"theme\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { getDisplayName } from '@mui/utils';\nimport createTheme from './createTheme';\nimport propsToClassKey from './propsToClassKey';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n  return null;\n};\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components, _theme$components$nam;\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  const themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n  return variantsStyles;\n};\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nexport default function createStyled(input = {}) {\n  const {\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n    return styleFunctionSx(_extends({}, props, {\n      theme\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        overridesResolver\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : componentSlot && componentSlot !== 'Root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n    if (componentSlot === 'Root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        return typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg ? _ref => {\n          let {\n              theme: themeInput\n            } = _ref,\n            other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n          return stylesArg(_extends({\n            theme: isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        } : stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          const styleOverrides = getStyleOverrides(componentName, theme);\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n          return null;\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      } else if (typeof styleArg === 'function' &&\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = _ref2 => {\n          let {\n              theme: themeInput\n            } = _ref2,\n            other = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n          return styleArg(_extends({\n            theme: isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        };\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${componentSlot || ''}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport default function createMixins(breakpoints, mixins) {\n  return _extends({\n    toolbar: {\n      minHeight: 56,\n      [breakpoints.up('xs')]: {\n        '@media (orientation: landscape)': {\n          minHeight: 48\n        }\n      },\n      [breakpoints.up('sm')]: {\n        minHeight: 64\n      }\n    }\n  }, mixins);\n}","const common = {\n  black: '#000',\n  white: '#fff'\n};\nexport default common;","const grey = {\n  50: '#fafafa',\n  100: '#f5f5f5',\n  200: '#eeeeee',\n  300: '#e0e0e0',\n  400: '#bdbdbd',\n  500: '#9e9e9e',\n  600: '#757575',\n  700: '#616161',\n  800: '#424242',\n  900: '#212121',\n  A100: '#f5f5f5',\n  A200: '#eeeeee',\n  A400: '#bdbdbd',\n  A700: '#616161'\n};\nexport default grey;","const purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","const red = {\n  50: '#ffebee',\n  100: '#ffcdd2',\n  200: '#ef9a9a',\n  300: '#e57373',\n  400: '#ef5350',\n  500: '#f44336',\n  600: '#e53935',\n  700: '#d32f2f',\n  800: '#c62828',\n  900: '#b71c1c',\n  A100: '#ff8a80',\n  A200: '#ff5252',\n  A400: '#ff1744',\n  A700: '#d50000'\n};\nexport default red;","const orange = {\n  50: '#fff3e0',\n  100: '#ffe0b2',\n  200: '#ffcc80',\n  300: '#ffb74d',\n  400: '#ffa726',\n  500: '#ff9800',\n  600: '#fb8c00',\n  700: '#f57c00',\n  800: '#ef6c00',\n  900: '#e65100',\n  A100: '#ffd180',\n  A200: '#ffab40',\n  A400: '#ff9100',\n  A700: '#ff6d00'\n};\nexport default orange;","const blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;","const lightBlue = {\n  50: '#e1f5fe',\n  100: '#b3e5fc',\n  200: '#81d4fa',\n  300: '#4fc3f7',\n  400: '#29b6f6',\n  500: '#03a9f4',\n  600: '#039be5',\n  700: '#0288d1',\n  800: '#0277bd',\n  900: '#01579b',\n  A100: '#80d8ff',\n  A200: '#40c4ff',\n  A400: '#00b0ff',\n  A700: '#0091ea'\n};\nexport default lightBlue;","const green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nexport default green;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nimport { deepmerge } from '@mui/utils';\nimport { darken, getContrastRatio, lighten } from '@mui/system';\nimport common from '../colors/common';\nimport grey from '../colors/grey';\nimport purple from '../colors/purple';\nimport red from '../colors/red';\nimport orange from '../colors/orange';\nimport blue from '../colors/blue';\nimport lightBlue from '../colors/lightBlue';\nimport green from '../colors/green';\nexport const light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: common.white,\n    default: common.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexport const dark = {\n  text: {\n    primary: common.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: common.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = lighten(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = darken(intent.main, tonalOffsetDark);\n    }\n  }\n}\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: blue[200],\n      light: blue[50],\n      dark: blue[400]\n    };\n  }\n  return {\n    main: blue[700],\n    light: blue[400],\n    dark: blue[800]\n  };\n}\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: purple[200],\n      light: purple[50],\n      dark: purple[400]\n    };\n  }\n  return {\n    main: purple[500],\n    light: purple[300],\n    dark: purple[700]\n  };\n}\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: red[500],\n      light: red[300],\n      dark: red[700]\n    };\n  }\n  return {\n    main: red[700],\n    light: red[400],\n    dark: red[800]\n  };\n}\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: lightBlue[400],\n      light: lightBlue[300],\n      dark: lightBlue[700]\n    };\n  }\n  return {\n    main: lightBlue[700],\n    light: lightBlue[500],\n    dark: lightBlue[900]\n  };\n}\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: green[400],\n      light: green[300],\n      dark: green[700]\n    };\n  }\n  return {\n    main: green[800],\n    light: green[500],\n    dark: green[900]\n  };\n}\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: orange[400],\n      light: orange[300],\n      dark: orange[700]\n    };\n  }\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: orange[500],\n    dark: orange[900]\n  };\n}\nexport default function createPalette(palette) {\n  const {\n      mode = 'light',\n      contrastThreshold = 3,\n      tonalOffset = 0.2\n    } = palette,\n    other = _objectWithoutPropertiesLoose(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode);\n\n  // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n  function getContrastText(background) {\n    const contrastText = getContrastRatio(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = getContrastRatio(background, contrastText);\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n    return contrastText;\n  }\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = _extends({}, color);\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : _formatMuiErrorMessage(11, name ? ` (${name})` : '', mainShade));\n    }\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : _formatMuiErrorMessage(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n    return color;\n  };\n  const modes = {\n    dark,\n    light\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n  const paletteOutput = deepmerge(_extends({\n    // A collection of common colors.\n    common: _extends({}, common),\n    // prevent mutable object.\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\nimport { deepmerge } from '@mui/utils';\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\n/**\n * @see @link{https://m2.material.io/design/typography/the-type-system.html}\n * @see @link{https://m2.material.io/design/typography/understanding-typography.html}\n */\nexport default function createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n    {\n      fontFamily = defaultFontFamily,\n      // The default font size of the Material Specification.\n      fontSize = 14,\n      // px\n      fontWeightLight = 300,\n      fontWeightRegular = 400,\n      fontWeightMedium = 500,\n      fontWeightBold = 700,\n      // Tell MUI what's the font-size on the html element.\n      // 16px is the default font-size used by browsers.\n      htmlFontSize = 16,\n      // Apply the CSS properties to all the variants.\n      allVariants,\n      pxToRem: pxToRem2\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n  const coef = fontSize / 14;\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => _extends({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return deepmerge(_extends({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n  });\n}","const shadowKeyUmbraOpacity = 0.2;\nconst shadowKeyPenumbraOpacity = 0.14;\nconst shadowAmbientShadowOpacity = 0.12;\nfunction createShadow(...px) {\n  return [`${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`, `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`, `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`].join(',');\n}\n\n// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss\nconst shadows = ['none', createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)];\nexport default shadows;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"duration\", \"easing\", \"delay\"];\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n\n// Follow https://m2.material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n  const constant = height / 36;\n\n  // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\nexport default function createTransitions(inputTransitions) {\n  const mergedEasing = _extends({}, easing, inputTransitions.easing);\n  const mergedDuration = _extends({}, duration, inputTransitions.duration);\n  const create = (props = ['all'], options = {}) => {\n    const {\n        duration: durationOption = mergedDuration.standard,\n        easing: easingOption = mergedEasing.easeInOut,\n        delay = 0\n      } = options,\n      other = _objectWithoutPropertiesLoose(options, _excluded);\n    if (process.env.NODE_ENV !== 'production') {\n      const isString = value => typeof value === 'string';\n      // IE11 support, replace with Number.isNaN\n      // eslint-disable-next-line no-restricted-globals\n      const isNumber = value => !isNaN(parseFloat(value));\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(`MUI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n      }\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n      if (Object.keys(other).length !== 0) {\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n      }\n    }\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n  return _extends({\n    getAutoHeightDuration,\n    create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}","// We need to centralize the zIndex definitions as they work\n// like global values in the browser.\nconst zIndex = {\n  mobileStepper: 1000,\n  fab: 1050,\n  speedDial: 1050,\n  appBar: 1100,\n  drawer: 1200,\n  modal: 1300,\n  snackbar: 1400,\n  tooltip: 1500\n};\nexport default zIndex;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"breakpoints\", \"mixins\", \"spacing\", \"palette\", \"transitions\", \"typography\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport { createTheme as systemCreateTheme, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport generateUtilityClass from '../generateUtilityClass';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport createTransitions from './createTransitions';\nimport zIndex from './zIndex';\nfunction createTheme(options = {}, ...args) {\n  const {\n      mixins: mixinsInput = {},\n      palette: paletteInput = {},\n      transitions: transitionsInput = {},\n      typography: typographyInput = {}\n    } = options,\n    other = _objectWithoutPropertiesLoose(options, _excluded);\n  if (options.vars) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`vars\\` is a private field used for CSS variables support.\nPlease use another name.` : _formatMuiErrorMessage(18));\n  }\n  const palette = createPalette(paletteInput);\n  const systemTheme = systemCreateTheme(options);\n  let muiTheme = deepmerge(systemTheme, {\n    mixins: createMixins(systemTheme.breakpoints, mixinsInput),\n    palette,\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\n    shadows: shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    transitions: createTransitions(transitionsInput),\n    zIndex: _extends({}, zIndex)\n  });\n  muiTheme = deepmerge(muiTheme, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.\n    const stateClasses = ['active', 'checked', 'completed', 'disabled', 'error', 'expanded', 'focused', 'focusVisible', 'required', 'selected'];\n    const traverse = (node, component) => {\n      let key;\n\n      // eslint-disable-next-line guard-for-in, no-restricted-syntax\n      for (key in node) {\n        const child = node[key];\n        if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            const stateClass = generateUtilityClass('', key);\n            console.error([`MUI: The \\`${component}\\` component increases ` + `the CSS specificity of the \\`${key}\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', `Instead, you need to use the '&.${stateClass}' syntax:`, JSON.stringify({\n              root: {\n                [`&.${stateClass}`]: child\n              }\n            }, null, 2), '', 'https://mui.com/r/state-classes-guide'].join('\\n'));\n          }\n          // Remove the style to prevent global conflicts.\n          node[key] = {};\n        }\n      }\n    };\n    Object.keys(muiTheme.components).forEach(component => {\n      const styleOverrides = muiTheme.components[component].styleOverrides;\n      if (styleOverrides && component.indexOf('Mui') === 0) {\n        traverse(styleOverrides, component);\n      }\n    });\n  }\n  muiTheme.unstable_sxConfig = _extends({}, defaultSxConfig, other == null ? void 0 : other.unstable_sxConfig);\n  muiTheme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return muiTheme;\n}\nlet warnedOnce = false;\nexport function createMuiTheme(...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['MUI: the createMuiTheme function was renamed to createTheme.', '', \"You should use `import { createTheme } from '@mui/material/styles'`\"].join('\\n'));\n    }\n  }\n  return createTheme(...args);\n}\nexport default createTheme;","import createTheme from './createTheme';\nconst defaultTheme = createTheme();\nexport default defaultTheme;","import { createStyled, shouldForwardProp } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport const rootShouldForwardProp = prop => shouldForwardProp(prop) && prop !== 'classes';\nexport const slotShouldForwardProp = shouldForwardProp;\nconst styled = createStyled({\n  defaultTheme,\n  rootShouldForwardProp\n});\nexport default styled;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import { useTheme as muiUseTheme } from '@mui/private-theming';\nfunction isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\nfunction useTheme(defaultTheme = null) {\n  const contextTheme = muiUseTheme();\n  return !contextTheme || isObjectEmpty(contextTheme) ? defaultTheme : contextTheme;\n}\nexport default useTheme;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","import createTheme from './createTheme';\nimport useThemeWithoutDefault from './useThemeWithoutDefault';\nexport const systemDefaultTheme = createTheme();\nfunction useTheme(defaultTheme = systemDefaultTheme) {\n  return useThemeWithoutDefault(defaultTheme);\n}\nexport default useTheme;","import getThemeProps from './getThemeProps';\nimport useTheme from '../useTheme';\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme\n}) {\n  const theme = useTheme(defaultTheme);\n  const mergedProps = getThemeProps({\n    theme,\n    name,\n    props\n  });\n  return mergedProps;\n}","import { internal_resolveProps as resolveProps } from '@mui/utils';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","import { useThemeProps as systemUseThemeProps } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nexport default function useThemeProps({\n  props,\n  name\n}) {\n  return systemUseThemeProps({\n    props,\n    name,\n    defaultTheme\n  });\n}","import { unstable_useForkRef as useForkRef } from '@mui/utils';\nexport default useForkRef;","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nexport default useEventCallback;","import * as React from 'react';\nimport useEnhancedEffect from './useEnhancedEffect';\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport default function useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n  if (node.isContentEditable) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  hadKeyboardEvent = true;\n}\n\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {\n    // Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  }\n\n  // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\nexport default function useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n    return false;\n  }\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}","import { unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nexport default useIsFocusVisible;","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import React from 'react';\nexport default React.createContext(null);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import { createElement, useContext, useRef, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext } from './emotion-element-6a883da9.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-6a883da9.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.10.6\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": \"./macro.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.10.6\",\n\t\t\"@emotion/cache\": \"^11.10.5\",\n\t\t\"@emotion/serialize\": \"^1.1.1\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.0\",\n\t\t\"@emotion/utils\": \"^1.2.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.0\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.10.6\",\n\t\t\"@emotion/css-prettifier\": \"1.1.1\",\n\t\t\"@emotion/server\": \"11.10.0\",\n\t\t\"@emotion/styled\": \"11.10.6\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": \"./macro.js\"\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n  React.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from '../ClassNameGenerator';\nconst globalStateClassesMapping = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  readOnly: 'readOnly',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClassesMapping[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTouchRippleUtilityClass(slot) {\n  return generateUtilityClass('MuiTouchRipple', slot);\n}\nconst touchRippleClasses = generateUtilityClasses('MuiTouchRipple', ['root', 'ripple', 'rippleVisible', 'ripplePulsate', 'child', 'childLeaving', 'childPulsate']);\nexport default touchRippleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"center\", \"classes\", \"className\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Ripple from './Ripple';\nimport touchRippleClasses from './touchRippleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n});\n\n// This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), touchRippleClasses.rippleVisible, enterKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.ripplePulsate, ({\n  theme\n}) => theme.transitions.duration.shorter, touchRippleClasses.child, touchRippleClasses.childLeaving, exitKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.childPulsate, pulsateKeyframe, ({\n  theme\n}) => theme.transitions.easing.easeInOut);\n\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n  const {\n      center: centerProp = false,\n      classes = {},\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]);\n\n  // Used to filter out mouse emulated events on mobile.\n  const ignoringMouseDown = React.useRef(false);\n  // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n  const startTimer = React.useRef(null);\n\n  // This is the hook called once the previous timeout is ready.\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb = () => {}) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n    } = options;\n    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n    if ((event == null ? void 0 : event.type) === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    };\n\n    // Get the size of the ripple\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);\n\n      // For some reason the animation is broken on Mobile Chrome if the size is even.\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    }\n\n    // Touche devices\n    if (event != null && event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        };\n        // Delay the execution of the ripple effect.\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current);\n\n    // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, _extends({\n    className: clsx(touchRippleClasses.root, classes.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonBaseUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonBase', slot);\n}\nconst buttonBaseClasses = generateUtilityClasses('MuiButtonBase', ['root', 'disabled', 'focusVisible']);\nexport default buttonBaseClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n  return composedClasses;\n};\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n  },\n\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n  const {\n      action,\n      centerRipple = false,\n      children,\n      className,\n      component = 'button',\n      disabled = false,\n      disableRipple = false,\n      disableTouchRipple = false,\n      focusRipple = false,\n      LinkComponent = 'a',\n      onBlur,\n      onClick,\n      onContextMenu,\n      onDragLeave,\n      onFocus,\n      onFocusVisible,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseLeave,\n      onMouseUp,\n      onTouchEnd,\n      onTouchMove,\n      onTouchStart,\n      tabIndex = 0,\n      TouchRippleProps,\n      touchRippleRef,\n      type\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n      const ignore = skipRippleAction;\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n  const buttonProps = {};\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","import { unstable_capitalize as capitalize } from '@mui/utils';\nexport default capitalize;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiButton', slot);\n}\nconst buttonClasses = generateUtilityClasses('MuiButton', ['root', 'text', 'textInherit', 'textPrimary', 'textSecondary', 'textSuccess', 'textError', 'textInfo', 'textWarning', 'outlined', 'outlinedInherit', 'outlinedPrimary', 'outlinedSecondary', 'outlinedSuccess', 'outlinedError', 'outlinedInfo', 'outlinedWarning', 'contained', 'containedInherit', 'containedPrimary', 'containedSecondary', 'containedSuccess', 'containedError', 'containedInfo', 'containedWarning', 'disableElevation', 'focusVisible', 'disabled', 'colorInherit', 'textSizeSmall', 'textSizeMedium', 'textSizeLarge', 'outlinedSizeSmall', 'outlinedSizeMedium', 'outlinedSizeLarge', 'containedSizeSmall', 'containedSizeMedium', 'containedSizeLarge', 'sizeMedium', 'sizeSmall', 'sizeLarge', 'fullWidth', 'startIcon', 'endIcon', 'iconSizeSmall', 'iconSizeMedium', 'iconSizeLarge']);\nexport default buttonClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst ButtonGroupContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  ButtonGroupContext.displayName = 'ButtonGroupContext';\n}\nexport default ButtonGroupContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"color\", \"component\", \"className\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { internal_resolveProps as resolveProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport buttonClasses, { getButtonUtilityClass } from './buttonClasses';\nimport ButtonGroupContext from '../ButtonGroup/ButtonGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    disableElevation,\n    fullWidth,\n    size,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `${variant}${capitalize(color)}`, `size${capitalize(size)}`, `${variant}Size${capitalize(size)}`, color === 'inherit' && 'colorInherit', disableElevation && 'disableElevation', fullWidth && 'fullWidth'],\n    label: ['label'],\n    startIcon: ['startIcon', `iconSize${capitalize(size)}`],\n    endIcon: ['endIcon', `iconSize${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst commonIconStyles = ownerState => _extends({}, ownerState.size === 'small' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 18\n  }\n}, ownerState.size === 'medium' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 20\n  }\n}, ownerState.size === 'large' && {\n  '& > *:nth-of-type(1)': {\n    fontSize: 22\n  }\n});\nconst ButtonRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color)}`], styles[`size${capitalize(ownerState.size)}`], styles[`${ownerState.variant}Size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, ownerState.disableElevation && styles.disableElevation, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n  return _extends({}, theme.typography.button, {\n    minWidth: 64,\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n      duration: theme.transitions.duration.short\n    }),\n    '&:hover': _extends({\n      textDecoration: 'none',\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n      border: `1px solid ${(theme.vars || theme).palette[ownerState.color].main}`,\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }, ownerState.variant === 'contained' && {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      boxShadow: (theme.vars || theme).shadows[4],\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: (theme.vars || theme).shadows[2],\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      }\n    }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n      }\n    }),\n    '&:active': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[8]\n    }),\n    [`&.${buttonClasses.focusVisible}`]: _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }),\n    [`&.${buttonClasses.disabled}`]: _extends({\n      color: (theme.vars || theme).palette.action.disabled\n    }, ownerState.variant === 'outlined' && {\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    }, ownerState.variant === 'contained' && {\n      color: (theme.vars || theme).palette.action.disabled,\n      boxShadow: (theme.vars || theme).shadows[0],\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    })\n  }, ownerState.variant === 'text' && {\n    padding: '6px 8px'\n  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.variant === 'outlined' && {\n    padding: '5px 15px',\n    border: '1px solid currentColor'\n  }, ownerState.variant === 'outlined' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    border: theme.vars ? `1px solid rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : `1px solid ${alpha(theme.palette[ownerState.color].main, 0.5)}`\n  }, ownerState.variant === 'contained' && {\n    color: theme.vars ?\n    // this is safe because grey does not change between default light/dark mode\n    theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    boxShadow: (theme.vars || theme).shadows[2]\n  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n    color: (theme.vars || theme).palette[ownerState.color].contrastText,\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit',\n    borderColor: 'currentColor'\n  }, ownerState.size === 'small' && ownerState.variant === 'text' && {\n    padding: '4px 5px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'text' && {\n    padding: '8px 11px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'outlined' && {\n    padding: '3px 9px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'outlined' && {\n    padding: '7px 21px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.size === 'small' && ownerState.variant === 'contained' && {\n    padding: '4px 10px',\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && ownerState.variant === 'contained' && {\n    padding: '8px 22px',\n    fontSize: theme.typography.pxToRem(15)\n  }, ownerState.fullWidth && {\n    width: '100%'\n  });\n}, ({\n  ownerState\n}) => ownerState.disableElevation && {\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.focusVisible}`]: {\n    boxShadow: 'none'\n  },\n  '&:active': {\n    boxShadow: 'none'\n  },\n  [`&.${buttonClasses.disabled}`]: {\n    boxShadow: 'none'\n  }\n});\nconst ButtonStartIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'StartIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.startIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: 8,\n  marginLeft: -4\n}, ownerState.size === 'small' && {\n  marginLeft: -2\n}, commonIconStyles(ownerState)));\nconst ButtonEndIcon = styled('span', {\n  name: 'MuiButton',\n  slot: 'EndIcon',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.endIcon, styles[`iconSize${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inherit',\n  marginRight: -4,\n  marginLeft: 8\n}, ownerState.size === 'small' && {\n  marginRight: -2\n}, commonIconStyles(ownerState)));\nconst Button = /*#__PURE__*/React.forwardRef(function Button(inProps, ref) {\n  // props priority: `inProps` > `contextProps` > `themeDefaultProps`\n  const contextProps = React.useContext(ButtonGroupContext);\n  const resolvedProps = resolveProps(contextProps, inProps);\n  const props = useThemeProps({\n    props: resolvedProps,\n    name: 'MuiButton'\n  });\n  const {\n      children,\n      color = 'primary',\n      component = 'button',\n      className,\n      disabled = false,\n      disableElevation = false,\n      disableFocusRipple = false,\n      endIcon: endIconProp,\n      focusVisibleClassName,\n      fullWidth = false,\n      size = 'medium',\n      startIcon: startIconProp,\n      type,\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    fullWidth,\n    size,\n    type,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const startIcon = startIconProp && /*#__PURE__*/_jsx(ButtonStartIcon, {\n    className: classes.startIcon,\n    ownerState: ownerState,\n    children: startIconProp\n  });\n  const endIcon = endIconProp && /*#__PURE__*/_jsx(ButtonEndIcon, {\n    className: classes.endIcon,\n    ownerState: ownerState,\n    children: endIconProp\n  });\n  return /*#__PURE__*/_jsxs(ButtonRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(contextProps.className, classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other, {\n    classes: classes,\n    children: [startIcon, children, endIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Button;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { unstable_useControlled as useControlled } from '@mui/utils';\nexport default useControlled;","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSvgIconUtilityClass(slot) {\n  return generateUtilityClass('MuiSvgIcon', slot);\n}\nconst svgIconClasses = generateUtilityClasses('MuiSvgIcon', ['root', 'colorPrimary', 'colorSecondary', 'colorAction', 'colorError', 'colorDisabled', 'fontSizeInherit', 'fontSizeSmall', 'fontSizeMedium', 'fontSizeLarge']);\nexport default svgIconClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\nconst SvgIconRoot = styled('svg', {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$transitions2$d, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette$ownerState$c2, _palette2, _palette2$action, _palette3, _palette3$action;\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fill: 'currentColor',\n    flexShrink: 0,\n    transition: (_theme$transitions = theme.transitions) == null ? void 0 : (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, 'fill', {\n      duration: (_theme$transitions2 = theme.transitions) == null ? void 0 : (_theme$transitions2$d = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2$d.shorter\n    }),\n    fontSize: {\n      inherit: 'inherit',\n      small: ((_theme$typography = theme.typography) == null ? void 0 : (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || '1.25rem',\n      medium: ((_theme$typography2 = theme.typography) == null ? void 0 : (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || '1.5rem',\n      large: ((_theme$typography3 = theme.typography) == null ? void 0 : (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || '2.1875rem'\n    }[ownerState.fontSize],\n    // TODO v5 deprecate, v6 remove for sx\n    color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null ? void 0 : (_palette$ownerState$c2 = _palette[ownerState.color]) == null ? void 0 : _palette$ownerState$c2.main) != null ? _palette$ownerState$c : {\n      action: (_palette2 = (theme.vars || theme).palette) == null ? void 0 : (_palette2$action = _palette2.action) == null ? void 0 : _palette2$action.active,\n      disabled: (_palette3 = (theme.vars || theme).palette) == null ? void 0 : (_palette3$action = _palette3.action) == null ? void 0 : _palette3$action.disabled,\n      inherit: undefined\n    }[ownerState.color]\n  };\n});\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n  const {\n      children,\n      className,\n      color = 'inherit',\n      component = 'svg',\n      fontSize = 'medium',\n      htmlColor,\n      inheritViewBox = false,\n      titleAccess,\n      viewBox = '0 0 24 24'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    instanceFontSize: inProps.fontSize,\n    inheritViewBox,\n    viewBox\n  });\n  const more = {};\n  if (!inheritViewBox) {\n    more.viewBox = viewBox;\n  }\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    focusable: \"false\",\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, more, other, {\n    ownerState: ownerState,\n    children: [children, titleAccess ? /*#__PURE__*/_jsx(\"title\", {\n      children: titleAccess\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n  /**\n   * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n   * prop will be ignored.\n   * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n   * `component`'s viewBox to the root node.\n   * @default false\n   */\n  inheritViewBox: PropTypes.bool,\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SvgIcon from '../SvgIcon';\n\n/**\n * Private module reserved for @mui packages.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return /*#__PURE__*/_jsx(SvgIcon, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref: ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import React, { useState, useEffect } from \"react\";\nimport Viewer from \"./Viewer\";\nimport { Button, FormGroup, FormControlLabel, Checkbox, ClickAwayListener } from '@mui/material'\n\nconst LBDviewer = (props) => {\n  const { piral } = props\n  const constants = piral.getData(\"CONSTANTS\")\n\n  const [models, setModels] = useState([])\n  const [dataset, setDataset] = useState(\"\")\n  const [selection, setSelection] = useState([])\n  const [height, setHeight] = useState(600)\n  const [associatedConcepts, setAssociatedConcepts] = useState({})\n  const [activeModels, setActiveModels] = useState([])\n\n  useEffect(() => {\n    const value = piral.getData(constants.SELECTED_CONCEPTS)\n    if (value) {\n      let sel = value.map(i => i.references).flat()\n      sel = sel.filter((ref) => activeModels.includes(ref.document)).map(i => i.identifier)\n      setSelection(sel)\n    }\n  }, [activeModels])\n\n  async function getModels() {\n    const results = await piral.getResourcesByContentType(piral, [\"https://www.iana.org/assignments/media-types/model/gltf+json\"])\n    console.log('results :>> ', results);\n    const m = results.map(a => a.distribution)\n    setModels(m)\n  }\n\n  piral.on('store-data', async ({ name, value }) => {\n    if (name === constants.SELECTED_CONCEPTS) {\n      console.log('value :>> ', value);\n      const subset = Object.keys(value).map(i => {\n        const item = value[i]\n        const gltfRefs = []\n        item.references.forEach(ref => {\n          if (activeModels.includes(ref.source)) gltfRefs.push(ref.value)\n        })\n        return gltfRefs\n      }).flat()\n\n      console.log('subset :>> ', subset);\n      // .map(item => item.identifier)\n      setSelection(subset)\n      // const results = await piral.getResourcesByContentType(project, \"https://www.iana.org/assignments/media-types/model/gltf+json\")\n      // const m = new Set(value.map(item => item.references.map(m => m.document)).flat().filter(i => results.map(a => a.resource.value).includes(i)))\n      // setModels(Array.from(m))\n    }\n  });\n\n  async function onSelect(sel) {\n    console.log('sel :>> ', sel);\n    const allReferences = []\n    const referenceRegistries = await piral.getReferenceRegistries(piral)\n    const sparql = piral.getData(constants.SPARQL_STORE)\n    let references = {}\n    for (const id of sel) {\n      const reference = await piral.findCollectionBySelector(referenceRegistries, undefined, sel, sparql)\n      references = { ...references, ...reference }\n    }\n    piral.setDataGlobal(constants.SELECTED_CONCEPTS, references)\n  }\n\n  function setActive(data, model) {\n    setActiveModels(prev => {\n      if (prev.includes(model)) {\n        return prev.filter(item => item != model)\n      } else {\n        return [...prev, model]\n      }\n    })\n    // setAssociatedConcepts(prev => {\n    //   if (Object.keys(prev).includes(model)) {\n    //     data = { ...prev }\n    //     delete data[model]\n    //     return data\n    //   } else {\n    //     return prev\n    //   }\n    // })\n  }\n\n  async function getAssociatedConcepts(model) {\n    const project = piral.getData(constants.ACTIVE_PROJECT)\n    const data = await piral.getAssociatedConcepts(model, project)\n    setAssociatedConcepts(prev => { return { ...prev, [model]: data } })\n  }\n\n  return (\n    <div>\n      <div>\n        <Button onClick={() => getModels()} >Get GlTF models in project</Button>\n      </div>\n      <FormGroup>\n        {(models.length) ? (\n          <div>\n            {/* <p>Active concepts were found in the following GLTF models. Open models?</p> */}\n            {models.map(model => {\n              return <FormControlLabel key={model} control={<Checkbox onChange={async (i) => { setActive(i, model)}} />} label={model} />\n            })}\n          </div>\n\n        ) : (\n          <></>\n        )}\n\n      </FormGroup>\n      {(activeModels.length) ? (\n        <div>\n          <Viewer\n            height={height}\n            models={activeModels}\n            projection={\"perspective\"}\n            onSelect={onSelect}\n            selection={selection}\n          />\n        </div>\n      ) : (\n        <div>\n          <p style={{ paddingTop: \"10%\" }}>No glTF models selected </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LBDviewer;\n","import * as React from 'react'\nimport { PiletApi } from 'consolid-shell'\nimport Viewer from './components/'\n\nconst App = (props) => {\n  const {piral}: {piral:PiletApi} = props\n  const constants = piral.getData('CONSTANTS')\n  \n  return (\n    <div id=\"viewer-module\">\n      {piral.getData(constants.ACTIVE_PROJECT) ? (\n      <Viewer {...props}/>\n      ) : (\n        <div>\n          <p>Please activate a project first</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App","import * as React from 'react';\nimport { PiletApi } from 'consolid-shell';\nimport App from './App'\n\n\n\nexport function setup(app: PiletApi) {\n  const constants = app.getData(\"CONSTANTS\")\n  const connect = app.makeState(app, constants)\n  const Module = connect(({ state, actions }) => app.withState(App, { app, state, actions }))\n  app.showNotification(`Hello from ${app.meta.name} component!`, {\n    autoClose: 2000,\n  });\n  app.registerTile(Module, {\n    initialColumns: app.meta[\"initialColumns\"],\n    initialRows: app.meta[\"initialRows\"],\n    resizable: true\n  })\n  app.registerExtension(app.meta[\"link\"], Module)\n  \n}\n"],"names":["reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","b","Symbol","for","c","d","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","assign","test1","String","test2","fromCharCode","map","join","test3","split","forEach","letter","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","s","call","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","ref","__self","__source","_owner","current","jsx","jsxs","resolveDirectory","rootDirLevel","meta","url","console","error","urlString","rootDirectoryLevel","document","createElement","href","pathname","numDirsProcessed","index","finalPath","slice","protocol","host","isInteger","Number","isFinite","Math","floor","__WEBPACK_EXTERNAL_MODULE__954__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__system_context__","getter","__esModule","definition","o","enumerable","get","obj","prop","toStringTag","value","autoPublicPath","Map","constructor","items","baseId","this","_lastUniqueId","addItem","item","id","findId","removeItem","stats","build","version","client","browser","navigator","userAgent","components","scenes","models","meshes","objects","memory","positions","colors","normals","uvs","indices","textures","transforms","materials","programs","frame","frameCount","fps","useProgram","bindTexture","bindArray","drawElements","drawArrays","tasksRun","tasksScheduled","guidChars","li","st","charCodeAt","en","push","apply","b64","len","substr","parseInt","reverse","xmlToJson","attributeRenamer","nodeType","TEXT_NODE","nodeValue","match","ELEMENT_NODE","DOCUMENT_NODE","json","nodeName","children","j","attributes","attribute","childNodes","clone","ob","JSON","parse","stringify","compressGuid","bs","findNodeOfType","_","timeout","dt","Promise","resolve","reject","setTimeout","httpRequest","args","xhr","XMLHttpRequest","open","method","onload","log","readyState","status","responseXML","statusText","send","loadJSON","ok","defaultCallback","_value","request","overrideMimeType","addEventListener","event","response","warn","loadArraybuffer","dataUriRegexResult","isBase64","data","window","decodeURIComponent","atob","buffer","ArrayBuffer","view","Uint8Array","responseType","onreadystatechange","queryString","query_string","vars","search","substring","pair","arr","isArray","isString","isNumeric","isNaN","parseFloat","isID","isSameComponent","c1","c2","isFunction","isObject","objectConstructor","copy","o2","apply2","applyIf","isEmptyObject","inQuotes","set","flattenParentChildHierarchy","root","list","visit","uuid","oid","parent","scenesRenderInfo","sceneIDMap","taskQueue","_head","_headLength","_tail","_index","_length","shift","unshift","tickEvent","sceneId","time","startTime","prevTime","deltaTime","taskBudget","fpsSamples","elapsedTime","lastTime","totalFPS","core","_superTypes","_addScene","scene","ticksPerOcclusionTest","ticksPerRender","renderCountdown","once","clear","destroy","scheduleTask","callback","scope","runTasks","until","Date","getTime","getNumTasks","now","newFPS","round","tasksBudget","fire","fireTickEvents","forceRender","renderInfo","occlusionTestCountdown","doOcclusionTest","renderScenes","requestAnimationFrame","FloatArrayType","Float64Array","tempMat1","tempMat2","tempVec4","MIN_DOUBLE","MAX_SAFE_INTEGER","MAX_DOUBLE","DEGTORAD","RADTODEG","unglobalizeObjectId","modelId","globalId","idx","indexOf","startsWith","globalizeObjectId","objectId","vec2","values","vec3","vec4","mat3","mat3ToMat4","mat4","mat4ToMat3","doublesToFloats","doubleVals","floatValsHigh","floatValsLow","floatPair","Float32Array","splitDouble","hi","low","createUUID","lut","toString","d0","random","d1","d2","d3","clamp","min","max","fmod","compareVec3","v1","v2","negateVec3","dest","negateVec4","addVec4","addVec4Scalar","addVec3","addVec3Scalar","subVec4","subVec3","subVec2","geometricMeanVec2","vectors","geometricMean","subVec4Scalar","subScalarVec4","mulVec4","mulVec4Scalar","mulVec3Scalar","mulVec2Scalar","divVec3","divVec4","divScalarVec3","divVec3Scalar","divVec4Scalar","divScalarVec4","dotVec4","cross3Vec4","u0","u1","u2","v0","cross3Vec3","x2","y2","z2","sqLenVec4","lenVec4","sqrt","dotVec3","dotVec2","sqLenVec3","sqLenVec2","lenVec3","distVec3","vec","lenVec2","distVec2","rcpVec3","normalizeVec4","normalizeVec3","normalizeVec2","angleVec3","theta","acos","vec3FromMat4Scale","tempVec3","vecToArray","trunc","Array","xyzArrayToObject","xyzObjectToArray","xyz","arry","dupMat4","mat4To3","m4s","setMat4ToZeroes","setMat4ToOnes","diagonalMat4v","diagonalMat4c","diagonalMat4s","identityMat4","mat","identityMat3","isIdentityMat4","negateMat4","addMat4","addMat4Scalar","addScalarMat4","subMat4","subMat4Scalar","subScalarMat4","mulMat4","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","mulMat3","mulMat4Scalar","mulMat4v4","v3","transposeMat4","m4","m14","m8","m13","m12","m9","transposeMat3","determinantMat4","inverseMat4","b04","b05","b06","b07","b08","b09","invDet","traceMat4","translationMat4v","translationMat3v","translationMat4c","translationMat4s","translateMat4v","translateMat4c","OLDtranslateMat4c","m15","m3","m7","m11","setMat4Translation","translation","rotationMat4v","anglerad","axis","ax","sin","cos","xy","yz","zx","xs","ys","zs","rotationMat4c","scalingMat4v","scalingMat3v","scalingMat4c","scaleMat4c","scaleMat4v","scalingMat4s","rotationTranslationMat4","xx","xz","yy","zz","wx","wy","wz","mat4ToEuler","order","m21","m22","m23","m31","m32","m33","asin","abs","atan2","composeMat4","position","quaternion","scale","quaternionToRotationMat4","decomposeMat4","matrix","sx","sy","sz","invSX","invSY","invSZ","mat4ToQuaternion","getColMat4","setRowMat4","lookAtMat4v","pos","up","posx","posy","posz","upx","upy","upz","targetx","targety","targetz","z0","z1","x0","x1","y0","y1","lookAtMat4c","orthoMat4c","left","right","bottom","top","near","far","rl","tb","fn","frustumMat4v","fmin","fmax","fmin4","fmax4","tempMat20","tempMat21","tempMat22","frustumMat4","perspectiveMat4","fovyrad","aspectratio","znear","zfar","pmin","pmax","tan","compareMat4","m1","m2","transformPoint3","transformPoint4","transformPoints3","points","points2","result","p0","p1","p2","pi","m0","m5","m6","m10","transformPositions3","transformPositions4","transformVec3","transformVec4","rotateVec3X","rotateVec3Y","rotateVec3Z","projectVec4","unprojectVec3","mat2","viewMat","projMat","lerpVec3","t1","t2","lerpMat4","flatten","leni","lenj","identityQuaternion","eulerToQuaternion","euler","c3","s1","s2","s3","trace","vec3PairToQuaternion","norm_u_norm_v","real_part","normalizeQuaternion","angleAxisToQuaternion","angleAxis","halfAngle","fsin","quaternionToEuler","mulQuaternions","p3","q0","q1","q2","q3","vec3ApplyQuaternion","qx","qy","qz","qw","ix","iy","iz","iw","quaternionToMat4","tx","ty","tz","twx","twy","twz","txx","txy","txz","tyy","tyz","tzz","conjugateQuaternion","inverseQuaternion","quaternionToAngleAxis","angle","AABB3","AABB2","OBB3","OBB2","Sphere3","transformOBB3","containsAABB3","aabb1","aabb2","getAABB3Diag","aabb","getAABB3DiagPoint","diagVec","xneg","xpos","yneg","ypos","zneg","zpos","getAABB3Area","getAABB3Center","getAABB2Center","collapseAABB3","AABB3ToOBB3","obb","positions3ToAABB3","positionsDecodeMatrix","xmin","ymin","zmin","xmax","ymax","zmax","decompressPosition","OBB3ToAABB3","points3ToAABB3","points3ToSphere3","sphere","numPoints","dist","radius","positions3ToSphere3","tempVec3a","tempVec3b","lenPositions","numPositions","OBB3ToSphere3","point","lenPoints","getSphere3Center","getPositionsCenter","center","xCenter","yCenter","zCenter","expandAABB3","expandAABB3Point3","expandAABB3Points3","collapseAABB2","point3AABB3Intersect","planeAABB3Intersect","dir","constant","OBB3ToAABB2","expandAABB2","expandAABB2Point2","AABB2ToCanvas","canvasWidth","canvasHeight","tangentQuadraticBezier","tangentQuadraticBezier3","tangentSpline","catmullRomInterpolate","b2p0","b2p1","b2p2","b2","b3p0","b3p1","b3p2","b3p3","b3","triangleNormal","normal","p1x","p1y","p1z","p2x","p2y","p2z","p3x","p3y","p3z","mag","rayTriangleIntersect","tempVec3c","tempVec3d","tempVec3e","origin","isect","edge1","edge2","pvec","det","tvec","qvec","rayPlaneIntersect","cartesianToBarycentric","cartesian","dot00","dot01","dot02","dot11","dot12","denom","invDenom","barycentricInsideTriangle","bary","barycentricToCartesian","mergeVertices","uv","positionsMap","indicesLookup","uniquePositions","uniqueNormals","uniqueUV","indices2","vx","vy","vz","precision","uvi","buildNormals","ab","ac","crossVec","nvecs","j0","j1","j2","count","normVec","buildTangents","tempVec3f","tempVec3g","tangents","subarray","uv0","uv1","uv2","deltaPos1","deltaPos2","deltaUV1","deltaUV2","tangent","addTo","buildPickTriangles","compressGeometry","numIndices","pickPositions","Uint16Array","pickColors","vi","primIndex","pvi","pci","faceToVertexNormals","options","smoothNormalsAngleThreshold","vertexMap","vertexNormals","vertexNormalAccum","acc","posi","vertices","numVerts","ii","jj","canvasPosToWorldRay","tempMat4b","tempMat4c","tempVec4a","tempVec4b","tempVec4c","tempVec4d","canvas","viewMatrix","projMatrix","canvasPos","worldRayOrigin","worldRayDir","pvMat","pvMatInverse","width","height","clipX","clipY","canvasPosToLocalRay","worldMatrix","localRayOrigin","localRayDir","worldRayToLocalRay","tempMat4","modelMatInverse","buildKDTree","KD_TREE_MAX_DEPTH","KD_TREE_MIN_TRIANGLES","dimLength","buildNode","triangles","depth","leaf","splitDim","POSITIVE_INFINITY","NEGATIVE_INFINITY","dim","mid","numLeft","numRight","i0","pi1","pi2","numTris","decodeMatrix","decompressPositions","decompressUV","decompressUVs","octDecodeVec2","oct","octDecodeVec2s","octs","buildEdgeIndices","indicesReverseLookup","weldedIndices","faces","numFaces","compa","compb","compc","cb","cross","edgeThreshold","pow","lenUniquePositions","weldVertices","ia","ib","ic","face","buildFaces","edgeIndices","thresholdDot","edges","index1","index2","edge","normal1","normal2","dot","largeIndex","faceIndex","face1","face2","Uint32Array","isComponent","owner","cfg","viewer","_renderer","_dontClear","dontClear","destroyed","_attached","_attachments","_subIdMap","_subIdEvents","_eventSubs","_eventSubsNum","_events","_eventCallDepth","_ownedComponents","_addComponent","_updateScheduled","_own","glRedraw","imageDirty","castsShadow","shadowsDirty","glResort","needStateSort","isType","forget","subs","sub","subId","on","off","self","hasSubs","message","_message","_attach","params","sceneDefault","sceneSingleton","recompiles","instances","types","id2","oldComponent","oldAttachment","onDetached","managingLifecycle","attachment","onAttached","subIdr","_checkComponent","expectedType","_checkComponent2","expectedTypes","_needUpdate","priority","_doUpdate","_update","_removeComponent","Spinner","super","_canvas","_element","_isCustom","elementId","getElementById","_adjustPosition","_createDefaultSpinner","processes","_injectDefaultCSS","style","innerHTML","parentElement","appendChild","defaultCSSNode","body","offsetLeft","clientWidth","offsetTop","clientHeight","_processes","prevValue","_destroy","parentNode","removeChild","WEBGL","SUPPORTED_EXTENSIONS","gl","getContext","antialias","ANTIALIAS","getContextAttributes","getShaderPrecisionFormat","FRAGMENT_SHADER","HIGH_FLOAT","FS_MAX_FLOAT_PRECISION","MEDIUM_FLOAT","DEPTH_BUFFER_BITS","getParameter","DEPTH_BITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_VARYING_VECTORS","getSupportedExtensions","ext","depthTexturesSupported","WEBGL_CONTEXT_NAMES","Canvas","_backgroundColor","backgroundColor","_backgroundColorFromAmbientLight","backgroundColorFromAmbientLight","webgl2","transparent","contextAttr","alpha","preserveDrawingBuffer","stencil","premultipliedAlpha","boundary","_initWebGL","_webglcontextlostListener","_webglContextLost","preventDefault","_webglcontextrestoredListener","_webglContextRestored","timeEnd","lastWindowWidth","lastWindowHeight","lastCanvasWidth","lastCanvasHeight","lastCanvasOffsetLeft","lastCanvasOffsetTop","lastParent","_tick","newWindowSize","innerWidth","innerHeight","newCanvasSize","newCanvasPos","_spinner","newWidth","newHeight","countPixels","pixels","spinnerElementId","_createCanvas","canvasId","getElementsByTagName","div","padding","margin","background","float","opacity","_getElementXY","scrollLeft","scrollTop","offsetParent","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","FASTEST","getExtension","FRAGMENT_SHADER_DERIVATIVE_HINT_OES","getSnapshot","readPixels","size","opaqueOnly","loseWebGLContext","loseContext","spinner","removeEventListener","createRTCViewMat","tempMat","rtcCenterWorld","rtcCenterView","rtcCenter","rtcViewMat","getPlaneRTCPos","rtcPlanePos","rtcCenterToPlaneDist","dirNormalized","FrameContext","_scene","_matPool","_matPoolNextFreeIndex","_rtcViewMats","_rtcPickViewMats","reset","lastProgramId","pbrEnabled","withSAO","backfaces","frontface","textureUnit","pass","shadowViewMatrix","shadowProjMatrix","pickViewMatrix","pickProjMatrix","pickZNear","pickZFar","pickInvisible","lineWidth","getRTCViewMatrix","rtcCenterHash","_getNewMat","camera","getRTCPickViewMatrix","rtcPickViewMat","pickViewMat","Canvas2Image","oCanvas","sc","saveAsBMP","saveAsPNG","saveAsJPEG","bHasImageData","bHasDataURL","bHasBase64","createBMP","oData","strHeader","iWidth","iHeight","iFileSize","iImageWidth","iImageHeight","iDataSize","aImgData","iOffsetX","iOffsetY","strPixelRow","strPixelData","aData","strData","btoa","encodeData","saveFile","makeDataURI","strMime","makeImageObject","strSource","oImgElement","src","scaleCanvas","flipy","oSaveCanvas","oSaveCtx","save","imageSmoothingEnabled","drawImage","restore","bReturnImg","toDataURL","getImageData","readCanvasData","strImgData","RenderBuffer","allocated","bound","_hasDepthTexture","depthTexture","setSize","webglContextRestored","bind","_touch","bindFramebuffer","FRAMEBUFFER","framebuf","drawingBufferWidth","drawingBufferHeight","deleteTexture","texture","deleteFramebuffer","deleteRenderbuffer","renderbuf","colorTexture","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","DEPTH_COMPONENT","UNSIGNED_INT","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","framebufferRenderbuffer","isFramebuffer","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","read","pickX","pickY","pix","readImage","imageDataCache","_getImageDataCache","pixelData","imageData","context","putImageData","imageWidth","imageHeight","format","image","bufferWidth","bufferHeight","_imageDataCache","createImageData","unbind","getTexture","_texture","renderBuffer","unit","activeTexture","hasDepthTexture","getDepthTexture","_depthTexture","_dethTexture","PickResult","entity","primitive","_canvasPos","Int16Array","_origin","_direction","_indices","Int32Array","_localPos","_worldPos","_viewPos","_bary","_worldNormal","_uv","_gotCanvasPos","_gotOrigin","direction","_gotDirection","_gotIndices","localPos","_gotLocalPos","worldPos","_gotWorldPos","viewPos","_gotViewPos","_gotBary","worldNormal","_gotWorldNormal","_gotUV","Shader","compiled","handle","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","isContextLost","lines","numberedLines","errors","getShaderInfoLog","Sampler","uniform1i","Attribute","_gl","bindArrayBuffer","arrayBuf","enableVertexAttribArray","vertexAttribPointer","itemSize","itemType","normalized","stride","offset","ids","joinSansComments","srcLines","line","charAt","logErrors","Program","init","linked","validated","uniforms","samplers","_vertexShader","VERTEX_SHADER","vertex","_fragmentShader","fragment","uName","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","SAMPLER_2D","SAMPLER_CUBE","numAttribs","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","getLocation","getAttribute","sampler","deleteProgram","deleteShader","ArrayBuf","numItems","usage","itemByteSize","Int8Array","BYTE","UNSIGNED_SHORT","SHORT","INT","FLOAT","dataLength","_allocate","_handle","createBuffer","bindBuffer","bufferData","setData","bufferSubData","deleteBuffer","OcclusionLayer","numMarkers","markers","markerList","markerIndices","positionsBuf","lenPositionsBuf","indicesBuf","sectionPlanesActive","culledBySectionPlanes","occlusionTestList","lenOcclusionTestList","aabbDirty","markerListDirty","positionsDirty","occlusionTestListDirty","addMarker","marker","markerWorldPosUpdated","removeMarker","update","_buildMarkerList","_buildPositions","vbosDirty","_buildAABB","_buildVBOs","_buildOcclusionTestList","_updateActiveSectionPlanes","lenIndices","ARRAY_BUFFER","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","perspective","lenPixels","_setVisible","canvasX","canvasY","visible","occludable","sectionPlanes","_sectionPlanesState","numSectionPlanes","sectionPlane","active","intersect","intersecting","MARKER_COLOR","OcclusionTester","_occlusionLayers","_occlusionLayersList","_occlusionLayersListDirty","_shaderSource","_program","_shaderSourceHash","_shaderSourceDirty","_programDirty","_markersToOcclusionLayersMap","_onCameraViewMatrix","_occlusionTestListDirty","_onCameraProjMatrix","_onCanvasBoundary","occlusionLayer","newOcclusionLayer","needOcclusionTest","bindRenderBuf","shaderSourceHash","getHash","_buildShaderSource","_buildProgram","_buildOcclusionLayersList","_readPixelBuf","numOcclusionLayers","_buildVertexShaderSource","_buildFragmentShaderSource","clipping","logarithmicDepthBufferEnabled","sectionPlanesState","program","_uViewMatrix","_uProjMatrix","_uSectionPlanes","_aPosition","_uLogDepthBufFC","drawMarkers","project","uniformMatrix4fv","_project","_state","logDepthBufFC","LN2","uniform1f","sectionPlaneIndex","sectionPlaneUniforms","uniform3fv","POINTS","markerR","markerG","markerB","color","unbindRenderBuf","tempVec2","SAOOcclusionRenderer","_numSamples","_programError","_aUV","_uDepthTexture","_uCameraNear","_uCameraFar","_uCameraProjectionMatrix","_uCameraInverseProjectionMatrix","_uScale","_uIntensity","_uBias","_uKernelRadius","_uMinResolution","_uRandomSeed","_uvBuf","_positionsBuf","_indicesBuf","depthRenderBuffer","_build","_getInverseProjectMat","projMatDirty","inverseProjectMat","sao","viewportWidth","viewportHeight","projectState","projectionMatrix","inverseProjectionMatrix","randomSeed","projection","viewport","clearColor","disable","DEPTH_TEST","BLEND","frontFace","CCW","_uPerspective","intensity","bias","kernelRadius","minResolution","uniform2fv","_uViewport","TRIANGLES","dirty","numSamples","_dirty","sampleOffsetsVert","createSampleOffsets","KERNEL_RADIUS","sampleOffsetsHor","sampleWeights","stdDev","weights","gaussian","createSampleWeights","tempVec2a","SAODepthLimitedBlurRenderer","_uOcclusionTexture","_uDepthCutoff","_uSampleOffsets","_uSampleWeights","occlusionRenderBuffer","enable","uniform1fv","occlusionTexture","exp","PI","uvIncrement","offsets","Renderer","frameCtx","canvasTransparent","alphaDepthMask","extensionHandles","pickIDs","drawableTypeInfo","drawables","drawableListDirty","stateSortDirty","saoDepthRenderBuffer","occlusionRenderBuffer1","occlusionRenderBuffer2","pickBuffer","snapshotBuffer","snapshotBound","saoOcclusionRenderer","saoDepthLimitedBlurRenderer","updateDrawlist","drawableInfo","drawableMap","drawableListPreCull","lenDrawableList","buildDrawableList","isStateSortable","sort","stateSortCompare","sortDrawableList","drawableList","drawable","rebuildRenderFlags","renderFlags","culled","cullDrawableList","drawShadowMap","light","shadowRenderBuf","getShadowRenderBuf","getShadowViewMatrix","getShadowProjMatrix","drawShadow","colorOpaque","_occlusionTester","webglContextLost","addDrawable","removeDrawable","getPickID","putPickID","pickID","lights","getAmbientColorAndIntensity","force","OES_element_index_uint","EXT_frag_depth","WEBGL_depth_texture","possible","CULL_FACE","depthMask","drawDepth","blur","drawSAOBuffers","_lightsState","drawShadowMaps","drawColor","draw","normalDrawSAOBin","normalEdgesOpaqueBin","normalFillTransparentBin","normalEdgesTransparentBin","xrayedFillOpaqueBin","xrayEdgesOpaqueBin","xrayedFillTransparentBin","xrayEdgesTransparentBin","highlightedFillOpaqueBin","highlightedEdgesOpaqueBin","highlightedFillTransparentBin","highlightedEdgesTransparentBin","selectedFillOpaqueBin","selectedEdgesOpaqueBin","selectedFillTransparentBin","selectedEdgesTransparentBin","ambientColorAndIntensity","saoPossible","normalDrawSAOBinLen","normalEdgesOpaqueBinLen","normalFillTransparentBinLen","normalEdgesTransparentBinLen","xrayedFillOpaqueBinLen","xrayEdgesOpaqueBinLen","xrayedFillTransparentBinLen","xrayEdgesTransparentBinLen","highlightedFillOpaqueBinLen","highlightedEdgesOpaqueBinLen","highlightedFillTransparentBinLen","highlightedEdgesTransparentBinLen","selectedFillOpaqueBinLen","selectedEdgesOpaqueBinLen","selectedFillTransparentBinLen","selectedEdgesTransparentBinLen","saoEnabled","drawColorOpaque","colorTransparent","xrayedSilhouetteTransparent","xrayedSilhouetteOpaque","highlightedSilhouetteTransparent","highlightedSilhouetteOpaque","selectedSilhouetteTransparent","selectedSilhouetteOpaque","edgesOpaque","edgesTransparent","selectedEdgesTransparent","selectedEdgesOpaque","xrayedEdgesTransparent","xrayedEdgesOpaque","highlightedEdgesTransparent","highlightedEdgesOpaque","drawEdgesColorOpaque","drawSilhouetteXRayed","drawEdgesXRayed","blendEquation","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","blendFunc","drawEdgesColorTransparent","drawColorTransparent","drawEdgesHighlighted","drawSilhouetteHighlighted","drawEdgesSelected","drawSilhouetteSelected","endTime","frameStats","renderTime","numTextureUnits","TEXTURE0","TEXTURE_CUBE_MAP","numVertexAttribs","disableVertexAttribArray","pick","tempMat4a","_pickResult","nearAndFar","pickResult","look","pickSurface","pickFrustumMatrix","pickable","includeEntityIds","excludeEntityIds","drawPickMesh","pickPickable","pickedEntity","delegatePickedEntity","canPickTriangle","drawPickTriangles","pickTriangle","pickTriangleSurface","canPickWorldPos","pickWorldPos","pickSurfaceNormal","drawPickNormals","pickWorldNormal","tempVec4e","drawPickDepths","screenZ","depthZ","bitShift","unpackDepth","world1","world2","drawOcclusion","beginSnapshot","renderSnapshot","readSnapshot","endSnapshot","Input","KEY_BACKSPACE","KEY_TAB","KEY_ENTER","KEY_SHIFT","KEY_CTRL","KEY_ALT","KEY_PAUSE_BREAK","KEY_CAPS_LOCK","KEY_ESCAPE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_LEFT_ARROW","KEY_UP_ARROW","KEY_RIGHT_ARROW","KEY_DOWN_ARROW","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","KEY_LEFT_WINDOW","KEY_RIGHT_WINDOW","KEY_SELECT_KEY","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SUBTRACT","KEY_DECIMAL_POINT","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_SEMI_COLON","KEY_EQUAL_SIGN","KEY_COMMA","KEY_DASH","KEY_PERIOD","KEY_FORWARD_SLASH","KEY_GRAVE_ACCENT","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_SINGLE_QUOTE","KEY_SPACE","altDown","ctrlDown","mouseDownLeft","mouseDownMiddle","mouseDownRight","keyDown","enabled","keyboardEnabled","mouseover","mouseCanvasPos","_bindEvents","_eventsBound","_keyDownListener","tagName","keyCode","shiftDown","_keyUpListener","_mouseEnterListener","_getMouseCanvasPos","_mouseLeaveListener","_mouseDownListener","which","focus","_mouseUpListener","_clickListener","_dblClickListener","_mouseMoveListener","_mouseWheelListener","delta","deltaY","passive","downX","downY","tolerance","orientationAngleLookup","orientation","orientationAngle","acceleration","accelerationIncludingGravity","orientationChangeEvent","deviceMotionEvent","rotationRate","interval","deviceOrientationEvent","beta","gamma","absolute","OrientationChangeEvent","_orientationchangedListener","screen","mozOrientation","msOrientation","DeviceMotionEvent","_deviceMotionListener","accel","accelGrav","DeviceOrientationEvent","_deviceOrientListener","_unbindEvents","totalOffsetLeft","totalOffsetTop","pageX","pageY","setEnabled","getEnabled","setKeyboardEnabled","getKeyboardEnabled","Viewport","autoBoundary","_autoBoundary","canvasBoundary","_onCanvasSize","_getState","Perspective","inverseMatrix","transposedMatrix","_inverseMatrixDirty","_transposedMatrixDirty","_fov","_canvasResized","fov","fovAxis","aspect","_fovAxis","unproject","screenPos","halfCanvasWidth","offsetWidth","halfCanvasHeight","offsetHeight","inverseViewMatrix","Ortho","halfSize","_scale","boundaryWidth","boundaryHeight","Frustum","_left","_right","_bottom","_top","CustomProjection","tempMatb","eyeLookVec","eyeLookVecNorm","eyeLookOffset","offsetEye","Camera","deviceMatrix","hasDeviceMatrix","normalMatrix","_perspective","_ortho","_frustum","_customProjection","_eye","_look","_up","_worldUp","_worldRight","_worldForward","eye","worldAxis","gimbalLock","constrainPitch","_projectionType","state","orbitYaw","angleInc","lookEyeVec","_gimbalLock","orbitPitch","_constrainPitch","eye2","yaw","look2","pitch","pan","zoom","lenLook","newLenLook","_worldAxis","worldUp","xUp","yUp","zUp","worldRight","worldForward","eyeLookDist","viewNormalMatrix","ortho","frustum","customProjection","Light","isLight","_shadowRenderBuf","_shadowViewMatrix","_shadowProjMatrix","_shadowViewMatrixDirty","_shadowProjMatrixDirty","space","_lightCreated","_lightDestroyed","AmbientLight","Geometry","isGeometry","createPositionsDecodeMatrix","translate","xwid","ywid","zwid","maxInt","compressPositions","quantized","multiplier","compressUVs","octEncodeVec3","xfunc","yfunc","tempx","tempy","geometryCompressionUtils","getPositionsBounds","MAX_VALUE","decompressAABB","getUVBounds","compressNormals","encoded","dec","best","currentCos","bestCos","decompressNormals","decompressNormal","memoryStats","bigIndicesSupported","IndexArrayType","tempAABB","isReadableGeometry","primitiveName","uvDecodeMatrix","normalsBuf","colorsbuf","uvBuf","hash","_numTriangles","_edgeThreshold","_edgeIndicesBuf","_pickTrianglePositionsBuf","_pickTriangleColorsBuf","_aabbDirty","_boundingSphere","_aabb","_obb","_obbDirty","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","bounds","_buildHash","colorsBuf","autoVertexNormals","_getEdgeIndices","_buildEdgeIndices","_getPickTrianglePositions","_buildPickTriangleVBOs","_getPickTriangleColors","arrays","_buildPickVertexVBOs","_sceneVertexBufs","_pickVertexPositionsBuf","_pickVertexColorsBuf","_decompressedPositions","newPositions","_setAABBDirty","_decompressedNormals","lenCompressed","lenDecompressed","newNormals","_decompressedUV","newUV","newColors","numTriangles","Material","alphaModes","alphaModeNames","ambient","diffuse","specular","emissive","shininess","reflectivity","alphaMode","alphaCutoff","pointSize","ambientMap","_ambientMap","diffuseMap","_diffuseMap","specularMap","_specularMap","emissiveMap","_emissiveMap","alphaMap","_alphaMap","reflectivityMap","_reflectivityMap","normalMap","_normalMap","occlusionMap","_occlusionMap","diffuseFresnel","_diffuseFresnel","specularFresnel","_specularFresnel","emissiveFresnel","_emissiveFresnel","alphaFresnel","_alphaFresnel","reflectivityFresnel","_reflectivityFresnel","_makeHash","hasMatrix","encoding","PRESETS","fill","fillColor","fillAlpha","edgeColor","edgeAlpha","edgeWidth","presets","_preset","preset","unitsInfo","meters","abbrev","metres","centimeters","centimetres","millimeters","millimetres","yards","feet","inches","Metrics","_units","units","worldToRealPos","realPos","realToWorldPos","SAO","ua","isSafari","toLowerCase","_supported","blendCutoff","blendFactor","supported","_enabled","_active","_kernelRadius","_intensity","_bias","_minResolution","_blur","_blendCutoff","_blendFactor","roundPoints","perspectivePoints","PointsMaterial","minPerspectivePointSize","maxPerspectivePointSize","_needRecompile","LinesMaterial","getEntityIDMap","entityIds","entityId","isEntity","canvasElement","HTMLCanvasElement","loading","_numObjects","visibleObjects","_numVisibleObjects","xrayedObjects","_numXRayedObjects","highlightedObjects","_numHighlightedObjects","selectedObjects","_numSelectedObjects","colorizedObjects","_numColorizedObjects","opacityObjects","_numOpacityObjects","offsetObjects","_numOffsetObjects","_modelIds","_objectIds","_visibleObjectIds","_xrayedObjectIds","_highlightedObjectIds","_selectedObjectIds","_colorizedObjectIds","_opacityObjectIds","_offsetObjectIds","_collidables","_compilables","lightMaps","reflectionMaps","realWorldOffset","alert","clippingCaps","hashParts","addSectionPlane","removeSectionPlane","splice","DEFAULT_AMBIENT","ambientColorIntensity","ambientLight","addLight","removeLight","addReflectionMap","removeReflectionMap","addLightMap","removeLightMap","input","metrics","passes","clearEachPass","gammaInput","gammaOutput","gammaFactor","_entityOffsetsEnabled","entityOffsetsEnabled","_logarithmicDepthBufferEnabled","_pbrEnabled","_initDefaults","_viewport","_camera","dummy","geometry","material","xrayMaterial","edgeMaterial","selectedMaterial","highlightMaterial","nextID","compile","isDrawable","_sectionPlaneCreated","_lightMapCreated","lightMap","_reflectionMapCreated","reflectionMap","_sectionPlaneDestroyed","_lightMapDestroyed","_reflectionMapDestroyed","_registerModel","_deregisterModel","_registerObject","_deregisterObject","_objectVisibilityUpdated","notify","_objectXRayedUpdated","xrayed","_objectHighlightedUpdated","highlighted","_objectSelectedUpdated","selected","_objectColorizeUpdated","colorized","_objectOpacityUpdated","opacityUpdated","_objectOffsetUpdated","_recompile","renderEvent","_passes","_clearEachPass","_saveAmbientColor","backgroundImage","_lastAmbientColor","modelIds","numObjects","objectIds","numVisibleObjects","visibleObjectIds","numXRayedObjects","xrayedObjectIds","numHighlightedObjects","highlightedObjectIds","numSelectedObjects","selectedObjectIds","numColorizedObjects","colorizedObjectIds","opacityObjectIds","offsetObjectIds","_ticksPerRender","_ticksPerOcclusionTest","xSize","ySize","zSize","centerX","centerY","centerZ","pointsMaterial","linesMaterial","_center","collidables","collidable","valid","collidableId","rayPick","includeEntities","include","excludeEntities","exclude","clearLights","clearSectionPlanes","getAABB","withObjects","setObjectsVisible","changed","setObjectsCollidable","setObjectsCulled","setObjectsSelected","setObjectsHighlighted","setObjectsXRayed","setObjectsEdges","setObjectsColorized","colorize","setObjectsOpacity","setObjectsPickable","setObjectsOffset","globalObjectId","newLook","newEye","newUp","newLookEyeVec","CameraFlightAnimation","_look1","_eye1","_up1","_look2","_eye2","_up2","_orthoScale1","_orthoScale2","_flying","_flyEyeLookUp","_flyingEye","_flyingLook","_callback","_callbackScope","_time1","_time2","easing","duration","fit","fitFOV","trail","flyTo","stop","_flyingEyeLookUp","flyToProjection","componentId","orthoScale","poi","aabbCenter","diag","_fitFOV","sca","_projection2","_projMatrix1","_projMatrix2","_duration","jumpTo","_jumpTo","_trail","_fit","stopping","tFlight","_ease","tProj","_easeOutExpo","_easeInCubic","static","cancel","PanController","dollyToCanvasPos","optionalTargetWorldPos","targetCanvasPos","dollyDelta","dolliedThroughSurface","eyeToWorldPosVec","unprojectedWorldPos","_unproject","moveVec","eyeTargetVec","lenEyeTargetVec","worldPos1","worldPos2","eyeLookMoveVec","transposedProjectMat","Pt3","Pt4","D","PivotController","configs","_configs","_pivotWorldPos","_cameraOffset","_azimuth","_polar","_radius","_pivotPosSet","_pivoting","_shown","_pivotViewPos","_pivotProjPos","_pivotCanvasPos","_cameraDirty","_onViewMatrix","_onProjMatrix","_onTick","updatePivotElement","getPivotPos","canvasAABB","canvasBoundingRect","getBoundingClientRect","_pivotElement","scrollX","scrollY","setPivotElement","pivotElement","startPivot","_cameraLookingDownwards","lookat","pivotPos","diff","forwardAxis","rightAxis","getPivoting","setPivotPos","setCanvasPivotPos","pivotShereRadius","eyeWorldPosVec","posOnSphere","continuePivot","yawInc","pitchInc","dx","dy","eyeLookLen","zAxis","showPivot","_hideTimeout","clearTimeout","visibility","hidePivot","endPivot","PickController","cameraControl","_cameraControl","oncontextmenu","schedulePickEntity","schedulePickSurface","pickCursorPos","picked","pickedSurface","_lastPickedEntityId","_needFireEvents","pointerEnabled","hasHoverSurfaceSubs","pickResultCanvasPos","fireEvents","pickedEntityId","MousePanRotateDollyHandler","controllers","states","updates","pickController","lastX","lastY","lastXDown","lastYDown","xRotateDelta","yRotateDelta","mouseDownPicked","pickedWorldPos","mouseMovedOnCanvasSinceLastWheel","setMousedownState","cursor","pointerCanvasPos","_documentKeyDownHandler","_documentKeyUpHandler","_mouseDownHandler","planView","panRightClick","_documentMouseMoveHandler","xPanDelta","yPanDelta","targetDistance","panDeltaX","panDeltaY","firstPerson","rotateDeltaY","dragRotationRate","rotateDeltaX","_canvasMouseMoveHandler","_documentMouseUpHandler","_mouseUpHandler","getCanvasPosFromEvent","removeProperty","_mouseEnterHandler","minElapsed","secsNowLast","_mouseWheelHandler","secsNow","performance","secsElapsed","normalizedDelta","mouseWheelDollyRate","followPointerDirty","tempCameraTarget","KeyboardAxisViewHandler","axisViewRight","_isKeyDownForAction","AXIS_VIEW_RIGHT","axisViewBack","AXIS_VIEW_BACK","axisViewLeft","AXIS_VIEW_LEFT","axisViewFront","AXIS_VIEW_FRONT","axisViewTop","AXIS_VIEW_TOP","axisViewBottom","AXIS_VIEW_BOTTOM","perspectiveDist","cameraFlight","followPointer","pivotController","MousePickHandler","_clicks","_timeout","leftDown","rightDown","flyCameraTo","hoverSubs","hoverOutSubs","hoverOffSubs","hoverSurfaceSubs","_canvasMouseDownHandler","mouseDownClientX","clientX","mouseDownClientY","clientY","mouseDownCursorX","mouseDownCursorY","smartPivot","_canvasMouseUpHandler","pickedSubs","pickedNothingSubs","pickedSurfaceSubs","doublePickedSubs","doublePickedSurfaceSubs","doublePickedNothingSubs","doublePickFlyTo","pickedEntityAABB","pickedEntityCenterPos","sceneAABB","sceneCenterPos","KeyboardPanRotateDollyHandler","keyDownMap","mouseMovedSinceLastKeyboardDolly","elapsedSecs","rotateYPos","ROTATE_Y_POS","rotateYNeg","ROTATE_Y_NEG","rotateXPos","ROTATE_X_POS","rotateXNeg","ROTATE_X_NEG","orbitDelta","keyboardRotationRate","dollyBackwards","DOLLY_BACKWARDS","dollyForwards","DOLLY_FORWARDS","keyboardDollyRate","panForwards","PAN_FORWARDS","panBackwards","PAN_BACKWARDS","panLeft","PAN_LEFT","panRight","PAN_RIGHT","panUp","PAN_UP","panDown","PAN_DOWN","panDelta","keyboardPanRate","panDeltaZ","EPSILON","CameraUpdater","panController","countDown","dollyDistFactor","followPointerWorldPos","cursorType","dollyProximityThreshold","dollyMinSpeed","dollyDeltaForDist","rotationInertia","verticalEye","verticalLook","constrainVertical","panInertia","dollyInertia","MouseMiscHandler","_mouseLeaveHandler","_mouseMoveHandler","TouchPanRotateAndDollyHandler","tapStartCanvasPos","tapCanvasPos0","tapCanvasPos1","touch0Vec","lastCanvasTouchPosList","numTouches","tapStartTime","waitForTick","_canvasTouchStartHandler","stopPropagation","touches","changedTouches","touchStartTime","_canvasTouchMoveHandler","touchPicked","touchPanRate","touch0","touch1","lastMiddleTouch","currentMiddleTouch","touchDelta","touchDollyRate","TouchPickHandler","activeTouches","tapStartPos","lastTapTime","_canvasTouchEndHandler","currentTime","CameraControl","_keyMap","tapInterval","doubleTapInterval","tapDistanceThreshold","keyboardLayout","navMode","_states","_updates","_controllers","_handlers","_cameraUpdater","keyMap","action","_reset","handler","dolyDelta","dollyToPointer","panToPointer","_destroyHandlers","_destroyControllers","controller","MetaModel","metaScene","projectId","revisionId","author","createdAt","creatingApplication","schema","rootMetaObject","getJSON","metaObjects","metaObject","metaObjectCfg","extId","MetaObject","metaModel","originalSystemId","properties","external","getObjectIDsInSubtree","withMetaObjectsInSubtree","getObjectIDsInSubtreeByType","mask","MetaScene","metaModels","metaObjectsByType","_typeCounts","createMetaModel","metaModelData","newObjects","excludeTypes","newObject","globalizeObjectIds","parentId","parentMetaObject","destroyMetaModel","_removeMetaModel","childMetaObject","getObjectIDsByType","includeTypes","includeMask","arrayToMap","excludeMask","Viewer","language","_plugins","msg","addPlugin","plugin","removePlugin","sendToPlugins","resetView","_snapshotBegun","needFinishSnapshot","includeGizmos","resize","saveWidth","saveHeight","saveCssWidth","saveCssHeight","imageDataURI","plugins","PerformanceMesh","model","layer","portionId","pickId","_layer","_portionId","_color","_colorize","_colorizing","_transparent","_finalize","entityFlags","initFlags","setVisible","_setColor","setColor","_setColorize","_setOpacity","newTransparent","changingTransparency","setTransparent","_setOffset","setOffset","_setHighlighted","setHighlighted","_setXRayed","setXRayed","_setSelected","setSelected","_setEdges","setEdges","_setClippable","setClippable","_setCollidable","setCollidable","_setPickable","flags","setPickable","_setCulled","setCulled","ENTITY_FLAGS","tempFloatRGB","tempIntRGB","PerformanceNode","_isObject","mesh","_flags","_offsetAABB","_offset","isModel","_getFlag","flag","clippable","lastOpacityQuantized","opacityQuantized","receivesShadow","batchingLayerScratchMemory","_uint8Arrays","_float32Arrays","_clear","getUInt8Array","uint8Array","getFloat32Array","float32Array","countUsers","RENDER_PASSES","TrianglesBatchingColorRenderer","_withSAO","_hash","_getHash","getValid","drawLayer","batchingLayer","renderPass","_bindProgram","_uRenderPass","_uViewNormalMatrix","_uWorldMatrix","_uWorldNormalMatrix","worldNormalMatrix","baseIndex","layerIndex","sectionPlanesActivePerLayer","rtcSectionPlanePos","_uPositionsDecodeMatrix","_aNormal","_aColor","_aFlags","flagsBuf","_aFlags2","flags2Buf","_aOffset","offsetsBuf","lightsState","_buildShader","_uLightAmbient","_uLightColor","_uLightDir","_uLightPos","_uLightAttenuation","_uSAOParams","uniform4fv","uniform4f","attenuation","_buildVertexShader","_buildFragmentShader","defaultColor","TrianglesBatchingSilhouetteRenderer","primitiveType","_uColor","TrianglesBatchingEdgesRenderer","edgeIndicesBuf","TrianglesBatchingEdgesColorRenderer","TrianglesBatchingPickMeshRenderer","_aPickColor","pickColorsBuf","_uPickInvisible","TrianglesBatchingPickDepthRenderer","_uPickZNear","_uPickZFar","TrianglesBatchingPickNormalsRenderer","TrianglesBatchingOcclusionRenderer","TrianglesBatchingDepthRenderer","TrianglesBatchingNormalsRenderer","TrianglesBatchingShadowRenderer","_uZFar","_uShadowViewMatrix","_uShadowProjMatrix","_lastLightId","TEXTURE_DECODE_FUNCS","TrianglesBatchingColorQualityRenderer","_aMetallicRoughness","metallicRoughnessBuf","_uGammaFactor","_uReflectionMap","_uLightMap","maxTextureUnits","TrianglesBatchingRenderers","_compile","_colorRenderer","_colorRendererWithSAO","_colorQualityRenderer","_colorQualityRendererWithSAO","_depthRenderer","_normalsRenderer","_silhouetteRenderer","_edgesRenderer","_edgesColorRenderer","_pickMeshRenderer","_pickDepthRenderer","_pickNormalsRenderer","_occlusionRenderer","_shadowRenderer","colorRenderer","colorRendererWithSAO","colorQualityRenderer","colorQualityRendererWithSAO","silhouetteRenderer","depthRenderer","normalsRenderer","edgesRenderer","edgesColorRenderer","pickMeshRenderer","pickNormalsRenderer","pickDepthRenderer","occlusionRenderer","shadowRenderer","cachdRenderers","TrianglesBatchingBuffer","maxGeometryBatchSize","maxVerts","maxIndices","metallicRoughness","flags2","quantizePositions","quantizedPositions","xMultiplier","yMultiplier","zMultiplier","octEncodeNormal","tempOBB3","TrianglesBatchingLayer","sortId","solid","_batchingRenderers","batchingRenderers","getBatchingRenderers","_buffer","_scratchMemory","scratchMemory","_numPortions","_numVisibleLayerPortions","_numTransparentLayerPortions","_numXRayedLayerPortions","_numSelectedLayerPortions","_numHighlightedLayerPortions","_numClippableLayerPortions","_numEdgesLayerPortions","_numPickableLayerPortions","_numCulledLayerPortions","_modelAABB","_portions","_finalized","_positionsDecodeMatrix","_preCompressed","canCreatePortion","createPortion","metallic","roughness","meshMatrix","worldAABB","pickColor","vertsIndex","positionsBase","lenNormals","compressedNormals","lenCompressedNormals","localNormal","transformAndOctEncodeNormals","metallicValue","roughnessValue","pickColorsBase","numPortions","finalize","DYNAMIC_DRAW","flagsLength","notNormalized","meshTransparent","numVisibleLayerPortions","numHighlightedLayerPortions","numXRayedLayerPortions","numSelectedLayerPortions","numClippableLayerPortions","numEdgesLayerPortions","numPickableLayerPortions","numCulledLayerPortions","numTransparentLayerPortions","_setFlags","_setFlags2","portionsIdx","firstColor","lenColor","tempArray","firstFlag","lenFlags","f0","f1","f2","f3","firstOffset","lenOffsets","_updateBackfaceCull","sectioned","drawNormals","indicessBuf","edgeIndicessBuf","TrianglesInstancingColorRenderer","instancingLayer","instanceExt","_instanceExt","_aModelMatrixCol0","modelMatrixCol0Buf","_aModelMatrixCol1","modelMatrixCol1Buf","_aModelMatrixCol2","modelMatrixCol2Buf","vertexAttribDivisorANGLE","_aModelNormalMatrixCol0","modelNormalMatrixCol0Buf","_aModelNormalMatrixCol1","modelNormalMatrixCol1Buf","_aModelNormalMatrixCol2","modelNormalMatrixCol2Buf","drawElementsInstancedANGLE","numInstances","TrianglesInstancingSilhouetteRenderer","TrianglesInstancingEdgesRenderer","TrianglesInstancingEdgesColorRenderer","TrianglesInstancingPickMeshRenderer","rtcPickViewMatrix","TrianglesInstancingPickDepthRenderer","TrianglesInstancingPickNormalsRenderer","TrianglesInstancingOcclusionRenderer","TrianglesInstancingDepthRenderer","TrianglesInstancingNormalsRenderer","TrianglesInstancingShadowRenderer","WEBGL_INFO","TrianglesInstancingColorQualityRenderer","TrianglesInstancingRenderers","cachedRenderers","tempUint8Vec4","tempVec3fa","TrianglesInstancingLayer","_instancingRenderers","instancingRenderers","getInstancingRenderers","stateCfg","preCompressed","localAABB","octEncodeNormals","_colors","_metallicRoughness","_pickColors","_offsets","_modelMatrixCol0","_modelMatrixCol1","_modelMatrixCol2","_modelNormalMatrixCol0","_modelNormalMatrixCol1","_modelNormalMatrixCol2","transposedMat","colorsLength","LinesBatchingColorRenderer","LinesBatchingSilhouetteRenderer","LinesBatchingRenderers","LinesBatchingBuffer","LinesBatchingLayer","LinesInstancingColorRenderer","LinesInstancingSilhouetteRenderer","LinesInstancingRenderers","LinesInstancingLayer","_linesInstancingRenderers","PointsBatchingColorRenderer","pointsBatchingLayer","_uPointSize","nearPlaneHeight","_uNearPlaneHeight","PointsBatchingSilhouetteRenderer","PointsBatchingPickMeshRenderer","PointsBatchingPickDepthRenderer","PointsBatchingOcclusionRenderer","PointsBatchingRenderers","PointsBatchingBuffer","PointsBatchingLayer","_pointsBatchingRenderers","renderers","getPointsBatchingRenderers","PointsInstancingColorRenderer","drawArraysInstancedANGLE","PointsInstancingSilhouetteRenderer","PointsInstancingPickMeshRenderer","PointsInstancingPickDepthRenderer","PointsInstancingOcclusionRenderer","PointsInstancingDepthRenderer","PointsInstancingShadowRenderer","PointsInstancingRenderers","PointsInstancingLayer","_pointsInstancingRenderers","getPointsInstancingRenderers","compressedColors","RenderFlags","visibleLayers","numLayers","numVisibleLayers","instancedArraysSupported","defaultScale","defaultPosition","defaultRotation","defaultQuaternion","PerformanceModel","_maxGeometryBatchSize","_layerList","_nodeList","_lastRTCCenter","_lastDecodeMatrix","_instancingLayers","_currentBatchingLayers","_meshes","_nodes","numGeometries","numEntities","_numLines","_numPoints","_position","_rotation","rotation","_quaternion","_worldMatrix","_worldNormalMatrix","_viewMatrix","_viewNormalMatrix","_viewMatrixDirty","_worldMatrixNonIdentity","_opacity","_saoEnabled","_isModel","isPerformanceModel","getPickViewMatrix","createGeometry","geometryId","createMesh","instancing","needNewBatchingLayers","prim","createEntity","meshIds","meshId","_visible","_pickable","_culled","_clippable","_collidable","_edges","_xrayed","_highlighted","_selected","_backfaces","entityList","_rebuildAABB","numLines","_castsShadow","_receivesShadow","drawable1","drawable2","_updateRenderFlagsVisibleLayers","_updateRenderFlags","_getActiveSectionPlanesForLayer","xAxis","yAxis","veca","vecb","identityMat","_parentNode","_children","_localMatrix","_localMatrixDirty","_worldMatrixDirty","addChild","inheritStates","isNode","_updateAABB","_rtcCenter","rgb","_setLocalMatrixDirty","_setWorldMatrixDirty","_buildWorldMatrix","localMatrix","_setSubtreeAABBsDirty","child","nodeId","isMesh","highlited","removeChildren","numChildren","rotate","rotateOnWorldAxis","rotateX","rotateY","rotateZ","distance","translateX","translateY","translateZ","tempChildList","DrawShaderSource","_material","geometryState","_geometry","billboard","stationary","quantizedGeometry","buildVertexLambert","buildFragmentLambert","meshState","texturing","_baseColorMap","_glossinessMap","_specularGlossinessMap","_metallicMap","_roughnessMap","_metallicRoughnessMap","hasTextures","hasNormals","getReceivesShadow","buildVertexDraw","materialState","phongMaterial","metallicMaterial","specularMaterial","baseColor","glossiness","specularF0","buildFragmentDraw","DrawRenderer","_useCount","drawRenderers","drawHash","renderer","put","drawMesh","_lastMaterialId","_baseTextureUnit","CW","_uMaterialAmbient","_uMaterialColor","_uMaterialEmissive","_uMaterialShininess","_uMaterialDiffuse","_uMaterialSpecular","_uAlphaModeCutoff","_uMaterialAmbientMap","_uMaterialAmbientMapMatrix","_uDiffuseMap","_uDiffuseMapMatrix","_uSpecularMap","_uSpecularMapMatrix","_uEmissiveMap","_uEmissiveMapMatrix","_uAlphaMap","_uAlphaMapMatrix","_uReflectivityMap","_uReflectivityMapMatrix","_uNormalMap","_uNormalMapMatrix","_uOcclusionMap","_uOcclusionMapMatrix","_uDiffuseFresnelEdgeBias","edgeBias","_uDiffuseFresnelCenterBias","centerBias","_uDiffuseFresnelEdgeColor","_uDiffuseFresnelCenterColor","centerColor","_uDiffuseFresnelPower","power","_uSpecularFresnelEdgeBias","_uSpecularFresnelCenterBias","_uSpecularFresnelEdgeColor","_uSpecularFresnelCenterColor","_uSpecularFresnelPower","_uAlphaFresnelEdgeBias","_uAlphaFresnelCenterBias","_uAlphaFresnelEdgeColor","_uAlphaFresnelCenterColor","_uAlphaFresnelPower","_uReflectivityFresnelEdgeBias","_uReflectivityFresnelCenterBias","_uReflectivityFresnelEdgeColor","_uReflectivityFresnelCenterColor","_uReflectivityFresnelPower","_uEmissiveFresnelEdgeBias","_uEmissiveFresnelCenterBias","_uEmissiveFresnelEdgeColor","_uEmissiveFresnelCenterColor","_uEmissiveFresnelPower","_uBaseColor","_uMaterialMetallic","_uMaterialRoughness","_uMaterialSpecularF0","baseColorMap","_uBaseColorMap","_uBaseColorMapMatrix","metallicMap","_uMetallicMap","_uMetallicMapMatrix","roughnessMap","_uRoughnessMap","_uRoughnessMapMatrix","metallicRoughnessMap","_uMetallicRoughnessMap","_uMetallicRoughnessMapMatrix","_uMaterialGlossiness","_uMaterialReflectivity","glossinessMap","_uGlossinessMap","_uGlossinessMapMatrix","specularGlossinessMap","_uSpecularGlossinessMap","_uSpecularGlossinessMapMatrix","_uModelMatrix","FALSE","_uModelNormalMatrix","_uClippable","_uColorize","lastColorize","_lastColorize","_uOffset","_lastGeometryId","_uUVDecodeMatrix","uniformMatrix3fv","_lastVertexBufsId","EmphasisFillShaderSource","buildVertex","buildFragment","EmphasisFillRenderer","xrayFillRenderers","mode","_xrayMaterial","_highlightMaterial","_selectedMaterial","_uFillColor","_lastIndicesBufId","EmphasisEdgesShaderSource","EmphasisEdgesRenderer","_edgeMaterial","_uEdgeColor","PickMeshShaderSource","PickMeshRenderer","_uPickColor","PickTriangleShaderSource","PickTriangleRenderer","OcclusionShaderSource","OcclusionRenderer","ShadowShaderSource","ShadowRenderer","combineGeometry","vertexBufs","indicesBufCombined","uSectionPlaneActive","uSectionPlanePos","uSectionPlaneDir","_checkBillboard","pickHash","_drawRenderer","_emphasisFillRenderer","_emphasisEdgesRenderer","_pickTriangleRenderer","_worldNormalMatrixDirty","_makeDrawHash","_putDrawRenderers","_makePickHash","_putPickRenderers","occlusionHash","_makeOcclusionHash","_putOcclusionRenderer","_buildWorldNormalMatrix","__localMatrix","mesh1","mesh2","_getActiveSectionPlanes","drawPickVertices","positionA","positionB","positionC","triangleVertices","normalA","normalB","normalC","uva","uvb","uvc","tempVec3h","tempVec3i","tempVec3j","tempVec3k","ia3","ib3","ic3","ia2","ib2","ic2","VBOGeometry","isVBOGeometry","modes","modeNames","MetallicMaterial","SpecularMaterial","webglEnums","funcAdd","funcSubtract","funcReverseSubtract","zero","one","srcColor","oneMinusSrcColor","dstColor","oneMinusDstColor","srcAlpha","oneMinusSrcAlpha","dstAlpha","oneMinusDstAlpha","contantColor","oneMinusConstantColor","constantAlpha","oneMinusConstantAlpha","srcAlphaSaturate","front","back","frontAndBack","never","less","equal","lequal","greater","notequal","gequal","always","cw","ccw","linear","nearest","linearMipmapNearest","nearestMipmapNearest","nearestMipmapLinear","linearMipmapLinear","repeat","clampToEdge","mirroredRepeat","rgba","luminance","luminanceAlpha","textureBinding2D","textureBindingCubeMap","compareRToTexture","unsignedByte","getGLEnum","defaultVal","glName","Texture2D","setPreloadColor","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","setTarget","setImage","pixelStorei","UNPACK_FLIP_Y_WEBGL","flipY","images","setProps","minFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","generateMipmap","magFilter","wrapS","wrapT","Texture","_checkMinFilter","_checkMagFilter","_checkWrapS","_checkWrapT","_checkFlipY","_checkEncoding","_src","_image","_translate","_rotate","_matrixDirty","_checkFilter","crossOrigin","Image","GLTFSceneGraphLoader","load","modelNode","loadGLTF","gltf","parseGLTF","dataSource","getGLTF","basePath","lastIndexOf","getBasePath","WEBGL_COMPONENT_TYPES","WEBGL_TYPE_SIZES","ctx","loadBuffer","prioritizeGLTFNode","handleGLTFNode","ignoreMaterials","readableGeometry","modelNodeProps","outlined","buffers","numToLoad","loadBuffers","bufferViewsInfo","bufferViews","loadBufferView","loadBufferViews","accessorsInfo","accessors","loadAccessor","loadAccessors","texturesInfo","loadTexture","loadTextures","materialInfo","materialsInfo","loadMaterial","loadMaterials","loadMesh","loadMeshes","defaultSceneInfo","sceneInfo","nodes","glTFNode","loadNode","loadScene","loadDefaultScene","bufferInfo","uri","getArrayBuffer","bufferViewInfo","_typedArray","byteLength","byteOffset","accessorInfo","bufferView","TypedArray","componentType","itemBytes","BYTES_PER_ELEMENT","byteStride","_itemSize","textureInfo","normalTexture","emissiveTexture","emissiveFactor","doubleSided","extensions","specularPBR","diffuseFactor","diffuseTexture","specularFactor","glossinessFactor","specularGlossinessTexture","common","technique","blinn","phong","lambert","emission","transparency","metallicPBR","pbrMetallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","meshInfo","materialIndex","primitivesInfo","primitives","primitiveInfo","indicesIndex","positionsIndex","normalsIndex","uv0Index","geometryCfg","meshCfg","POSITION","NORMAL","TEXCOORD_0","_mesh","actions","hasChildNodes","meshesInfoMesh","meshesInfo","numMeshes","nodeCfg","childNode","modelProps","childNodeInfo","childNodeIdx","GLTFPerformanceModelLoader","performanceModel","geometryCreated","freeBuffers","loadMaterialColorize","_rgbaColor","countMeshUsage","preprocessScene","numPrimitives","loadPrimitiveGeometry","loadAccessorTypedArray","IFCObjectDefaults","IfcOpeningElement","IfcSpace","IfcWindow","IfcPlate","DEFAULT","GLTFDefaultDataSource","getMetaModel","metaModelSrc","errMsg","glTFSrc","binarySrc","dataUriRegex","arrayBuffer","GLTFLoaderPlugin","_sceneGraphLoader","_performanceModelLoader","objectDefaults","_dataSource","_objectDefaults","loader","processMetaModelData","radiusTop","radiusBottom","radialSegments","heightSegments","openEnded","heightHalf","heightLength","radialAngle","radialLength","radiusChange","currentRadius","currentHeight","first","second","startIndex","tu","tv","normalY","atan","CubeTextureCanvas","cubeColor","cubeHighlightColor","hoverColor","facesZUp","frontColor","backColor","leftColor","rightColor","topColor","bottomColor","areasZUp","label","boundaries","facesYUp","areasYUp","areas","_textureCanvas","paint","fillStyle","fillRect","area","font","textAlign","xcenter","ycenter","fillText","translateLabel","dictionaries","dictionary","setZUp","setYUp","getArea","setAreaHighlighted","areaId","getAreaDir","getAreaUp","getImage","NavCubePlugin","navCube","_navCubeScene","_navCubeCanvas","navCubeScene","_navCubeCamera","_zUp","Boolean","_synchCamera","eyeLookVecCube","upCube","_cubeTextureCanvas","_cubeSampler","_cubeMesh","_shadow","_onCameraMatrix","_onCameraWorldAxis","_repaint","_onCameraFOV","_synchProjection","_onCameraProjection","lastAreaId","getCoordsWithinElement","coords","down","over","minPitch","maxPitch","sensitivity","_onMouseEnter","_onMouseLeave","_onMouseDown","hit","_onMouseUp","_onMouseMove","buttons","posX","posY","actionMove","_fitVisible","_cameraFly","_cameraFitFOV","_cameraFlyDuration","setCameraFitFOV","cameraFitFOV","setCameraFly","cameraFly","setCameraFlyDuration","cameraFlyDuration","setFitVisible","fitVisible","setSynchProjection","synchProjection","getVisible","getFitVisible","getCameraFly","getCameraFitFOV","getCameraFlyDuration","getSynchProjection","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","_typeof","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","pop","skipTempReset","prev","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_defineProperties","toPrimitive","res","_toPrimitive","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","LBDviewer","_Component","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","_this2","setViewer","lastEntity","lastOpacity","setState","_ref","_callee","entities","_context","ent","onSelect","selection","_x","gltfGuid","uncompressed","uncompressed_string","replace","lastQueried","includes","React","className","Component","_objectWithoutPropertiesLoose","excluded","sourceKeys","ifcGuidHandler","guid","resolveProps","output","defaultSlotProps","slotProps","slotPropName","composeClasses","slots","getUtilityClass","classes","slot","reduce","formatMuiErrorMessage","code","encodeURIComponent","decomposeColor","re","RegExp","hexToRgb","colorSpace","recomposeColor","getLuminance","hslToRgb","toFixed","darken","coefficient","lighten","cache","reactPropsRegex","test","StyleSheet","_insertTag","tag","before","tags","insertionPoint","nextSibling","prepend","container","firstChild","insertBefore","isSpeedy","speedy","ctr","nonce","_proto","hydrate","insert","rule","setAttribute","createTextNode","createStyleElement","sheet","styleSheets","ownerNode","sheetForTag","insertRule","cssRules","flush","trim","pattern","replacement","indexof","begin","end","column","character","characters","return","peek","caret","token","alloc","dealloc","delimit","delimiter","whitespace","escaping","commenter","identifier","COMMENT","IMPORT","rules","rulesets","pseudo","declarations","atrule","property","previous","variable","scanning","ampersand","reference","comment","declaration","ruleset","post","identifierWithPointTracking","getRules","parsed","toRules","fixedElements","WeakMap","compat","isImplicitRule","parentRules","removeLabel","defaultStylisPlugins","exec","ssrStyles","querySelectorAll","head","stylisPlugins","_insert","inserted","nodesToHydrate","attrib","currentSheet","collection","finalizingPlugins","serializer","selector","serialized","shouldCache","styles","registered","str","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","orphans","tabSize","widows","zIndex","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","hyphenateRegex","animationRegex","isCustomProperty","isProcessableValue","processStyleName","styleName","processStyleValue","handleInterpolation","mergedProps","interpolation","__emotion_styles","anim","_key","interpolated","_i","createStringFromObject","previousCursor","cached","labelPattern","stringMode","strings","raw","lastIndex","identifierName","useInsertionEffect","EmotionCacheContext","useLayoutEffect","createContext","HTMLElement","Provider","forwardRef","useContext","isStringTag","testOmitPropsOnStringTag","testOmitPropsOnComponent","getDefaultShouldForwardProp","composeShouldForwardProps","isReal","shouldForwardProp","optionsShouldForwardProp","__emotion_forwardProp","createStyled","targetClassName","__emotion_real","baseTag","__emotion_base","defaultShouldForwardProp","shouldUseAs","Styled","registeredStyles","classNames","rawClassName","FinalTag","as","classInterpolations","theme","finalShouldForwardProp","newProps","withComponent","nextTag","nextOptions","newStyled","internal_processStyles","processor","isPlainObject","deepClone","_excluded","sortBreakpointsValues","breakpointsAsArray","breakpoint1","breakpoint2","borderRadius","sm","md","lg","xl","defaultBreakpoints","handleBreakpoints","propValue","styleFromPropValue","themeBreakpoints","breakpoints","breakpoint","cssKey","createEmptyBreakpointObject","breakpointsInput","_breakpointsInput$key","removeUnusedBreakpoints","breakpointKeys","breakpointOutput","capitalize","toUpperCase","getPath","path","checkVars","getStyleValue","themeMapping","transform","propValueFinal","userValue","cssProperty","themeKey","filterProps","directions","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","marginKeys","paddingKeys","spacingKeys","createUnaryUnit","defaultValue","_getPath","themeSpacing","createUnarySpacing","getValue","transformer","transformed","resolveCssProperty","cssProperties","getStyleFromPropValue","spacing","handlers","borderTransform","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","gap","columnGap","rowGap","paletteTransform","sizingTransform","maxWidth","_props$theme","_props$theme$breakpoi","_props$theme$breakpoi2","minWidth","maxHeight","minHeight","bgcolor","pt","pr","pb","pl","px","py","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingInline","paddingInlineStart","paddingInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd","mt","mr","mb","ml","mx","my","marginTop","marginRight","marginBottom","marginLeft","marginInline","marginInlineStart","marginInlineEnd","marginBlock","marginBlockStart","marginBlockEnd","displayPrint","display","overflow","textOverflow","whiteSpace","flexBasis","flexDirection","flexWrap","justifyContent","alignItems","alignContent","alignSelf","justifyItems","justifySelf","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","boxShadow","boxSizing","fontFamily","fontSize","fontStyle","letterSpacing","textTransform","typography","styleFunctionSx","getThemeValue","config","_theme$unstable_sxCon","unstable_sxConfig","traverse","sxInput","sxObject","emptyBreakpoints","breakpointsKeys","css","styleKey","maybeFn","breakpointsValues","allKeys","union","Set","every","objectsHaveSameKeys","unstable_createStyleFunctionSx","palette","paletteInput","spacingInput","shapeInput","other","step","sortedValues","between","start","endIndex","only","not","keyIndex","createBreakpoints","mui","argsInput","argument","createSpacing","muiTheme","unstable_sx","isEmpty","propsToClassKey","variant","classKey","_excluded2","_excluded3","getStyleOverrides","styleOverrides","getVariantStyles","variants","variantsStyles","variantsResolver","_theme$components","_theme$components$nam","ownerState","themeVariants","themeVariant","isMatch","systemDefaultTheme","createMixins","toolbar","black","white","A100","A200","A400","A700","text","primary","secondary","disabled","divider","paper","default","hover","hoverOpacity","selectedOpacity","disabledBackground","disabledOpacity","focusOpacity","activatedOpacity","dark","icon","addLightOrDark","intent","shade","tonalOffset","tonalOffsetLight","tonalOffsetDark","main","createPalette","contrastThreshold","getDefaultPrimary","getDefaultSecondary","getDefaultError","getDefaultInfo","success","getDefaultSuccess","warning","getDefaultWarning","getContrastText","contrastText","foreground","lumA","lumB","getContrastRatio","augmentColor","mainShade","lightShade","darkShade","grey","caseAllCaps","defaultFontFamily","createTypography","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem","pxToRem2","coef","buildVariant","casing","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","shadowKeyUmbraOpacity","shadowKeyPenumbraOpacity","shadowAmbientShadowOpacity","createShadow","easeInOut","easeOut","easeIn","sharp","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","getAutoHeightDuration","createTransitions","inputTransitions","mergedEasing","mergedDuration","durationOption","easingOption","delay","animatedProp","mobileStepper","fab","speedDial","appBar","drawer","modal","snackbar","tooltip","mixinsInput","transitions","transitionsInput","typographyInput","systemTheme","shadows","rootShouldForwardProp","defaultTheme","slotShouldForwardProp","systemSx","__mui_systemSx","inputOptions","filter","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","shouldForwardPropOption","defaultStyledResolver","styled","muiStyledResolver","styleArg","expressions","expressionsWithDefaultTheme","stylesArg","themeInput","transformedStyleArg","resolvedStyleOverrides","entries","slotKey","slotStyle","numOfCustomFnsApplied","placeholders","_ref2","withConfig","contextTheme","useThemeWithoutDefault","useThemeProps","getThemeProps","refs","setRef","hadFocusVisibleRecentlyTimeout","hadKeyboardEvent","hadFocusVisibleRecently","inputTypesWhitelist","tel","email","password","date","month","week","datetime","handleKeyDown","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","visibilityState","isFocusVisible","matches","readOnly","isContentEditable","focusTriggersKeyboardModality","doc","ownerDocument","isFocusVisibleRef","onFocus","onBlur","getChildMapping","mapFn","Children","isValidElement","mapper","getProp","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","TransitionGroup","_React$Component","handleExited","contextValue","isMounting","firstRender","componentDidMount","mounted","componentWillUnmount","appear","currentChildMapping","_this$props","childFactory","TransitionGroupContext","_len","keyframes","insertable","pulsate","rippleX","rippleY","rippleSize","inProp","leaving","setLeaving","rippleClassName","ripple","rippleVisible","ripplePulsate","rippleStyles","childClassName","childLeaving","childPulsate","timeoutId","defaultGenerator","generate","configure","createClassNameGenerator","globalStateClassesMapping","checked","completed","expanded","focused","focusVisible","required","globalStatePrefix","globalStateClass","generateUtilityClasses","_t","_t2","_t3","_t4","enterKeyframe","exitKeyframe","pulsateKeyframe","TouchRippleRoot","pointerEvents","TouchRippleRipple","TouchRipple","inProps","centerProp","ripples","setRipples","rippleCallback","ignoringMouseDown","startTimer","startTimerCommit","startCommit","oldRipples","fakeElement","rect","sizeX","sizeY","getButtonBaseUtilityClass","ButtonBaseRoot","WebkitTapHighlightColor","outline","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","borderStyle","colorAdjust","ButtonBase","centerRipple","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onClick","onContextMenu","onDragLeave","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","buttonRef","rippleRef","handleRippleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","setFocusVisible","mountedState","setMountedState","enableTouchRipple","useRippleHandler","rippleAction","eventCallback","skipRippleAction","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","keydownRef","handleKeyUp","defaultPrevented","ComponentProp","buttonProps","role","handleRef","focusVisibleClassName","composedClasses","useUtilityClasses","getButtonUtilityClass","commonIconStyles","ButtonRoot","colorInherit","disableElevation","fullWidth","_theme$palette$getCon","_theme$palette","transition","primaryChannel","mainChannel","ButtonStartIcon","startIcon","ButtonEndIcon","endIcon","Button","contextProps","disableFocusRipple","endIconProp","startIconProp","getFormGroupUtilityClass","useFormControl","formControlState","muiFormControl","FormGroupRoot","row","splitProps","_props$theme$unstable","systemProps","otherProps","getTypographyUtilityClass","TypographyRoot","align","noWrap","gutterBottom","paragraph","defaultVariantMapping","inherit","colorTransformations","textPrimary","textSecondary","Typography","themeProps","transformDeprecatedColors","inSx","finalSx","extendSxProp","variantMapping","getFormControlLabelUtilityClasses","FormControlLabelRoot","labelPlacement","_slotProps$typography","componentsProps","control","disabledProp","disableTypography","labelProp","controlProps","fcs","typographySlotProps","controlled","defaultProp","isControlled","valueState","setValue","newValue","getSwitchBaseUtilityClass","SwitchBaseRoot","SwitchBaseInput","autoFocus","checkedProp","checkedIcon","defaultChecked","inputProps","inputRef","onChange","setCheckedState","hasLabelFor","nativeEvent","newChecked","getSvgIconUtilityClass","SvgIconRoot","_theme$transitions","_theme$transitions$cr","_theme$transitions2","_theme$transitions2$d","_theme$typography","_theme$typography$pxT","_theme$typography2","_theme$typography2$px","_theme$typography3","_theme$typography3$px","_palette$ownerState$c","_palette","_palette$ownerState$c2","_palette2","_palette2$action","_palette3","_palette3$action","small","medium","large","SvgIcon","htmlColor","inheritViewBox","titleAccess","viewBox","instanceFontSize","more","focusable","muiName","createSvgIcon","getCheckboxUtilityClass","CheckboxRoot","indeterminate","activeChannel","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","_asyncToGenerator","_slicedToArray","_arrayWithHoles","_s","_e","_r","_arr","_n","_d","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","arr2","piral","constants","getData","_useState2","useState","setModels","_useState4","_useState6","setSelection","_useState8","_useState10","_useState12","activeModels","setActiveModels","_getModels","_callee3","results","_context3","getResourcesByContentType","distribution","_onSelect","_callee4","sel","referenceRegistries","sparql","references","_iterator","_step","_context4","getReferenceRegistries","SPARQL_STORE","_createForOfIteratorHelper","findCollectionBySelector","_objectSpread","t0","setDataGlobal","SELECTED_CONCEPTS","setActive","_toConsumableArray","useEffect","flat","subset","gltfRefs","_x2","getModels","FormGroup","FormControlLabel","_ref3","_callee2","_context2","_x5","_x3","ACTIVE_PROJECT","setup","app","Module","makeState","connect","withState","App","showNotification","autoClose","registerTile","initialColumns","initialRows","resizable","registerExtension"],"sourceRoot":""}